{"version":3,"file":"focus-trap.umd.js","sources":["../index.js"],"sourcesContent":["import { tabbable, isFocusable } from 'tabbable';\n\nlet activeFocusDelay;\n\nconst activeFocusTraps = (function () {\n  const trapQueue = [];\n  return {\n    activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        const activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      const trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap(trap) {\n      const trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    },\n  };\n})();\n\nconst isSelectableInput = function (node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n};\n\nconst isEscapeEvent = function (e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\n\nconst isTabEvent = function (e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\nconst delay = function (fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nconst findIndex = function (arr, fn) {\n  let idx = -1;\n\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nconst valueOrHandler = function (value, ...params) {\n  return typeof value === 'function' ? value(...params) : value;\n};\n\nconst createFocusTrap = function (elements, userOptions) {\n  const doc = document;\n\n  const config = {\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    ...userOptions,\n  };\n\n  const state = {\n    // @type {Array<HTMLElement>}\n    containers: [],\n\n    // list of objects identifying the first and last tabbable nodes in all containers/groups in\n    //  the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{ container: HTMLElement, firstTabbableNode: HTMLElement|null, lastTabbableNode: HTMLElement|null }>}\n    tabbableGroups: [],\n\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n  };\n\n  let trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  const getOption = (configOverrideOptions, optionName, configOptionName) => {\n    return configOverrideOptions &&\n      configOverrideOptions[optionName] !== undefined\n      ? configOverrideOptions[optionName]\n      : config[configOptionName || optionName];\n  };\n\n  const containersContain = function (element) {\n    return state.containers.some((container) => container.contains(element));\n  };\n\n  const getNodeForOption = function (optionName) {\n    const optionValue = config[optionName];\n    if (!optionValue) {\n      return null;\n    }\n\n    let node = optionValue;\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error(`\\`${optionName}\\` refers to no known node`);\n      }\n    }\n\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error(`\\`${optionName}\\` did not return a node`);\n      }\n    }\n\n    return node;\n  };\n\n  const getInitialFocusNode = function () {\n    let node;\n\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (containersContain(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      const firstTabbableGroup = state.tabbableGroups[0];\n      const firstTabbableNode =\n        firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n      node = firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        'Your focus-trap needs to have at least one focusable element'\n      );\n    }\n\n    return node;\n  };\n\n  const updateTabbableNodes = function () {\n    state.tabbableGroups = state.containers\n      .map((container) => {\n        const tabbableNodes = tabbable(container);\n\n        if (tabbableNodes.length > 0) {\n          return {\n            container,\n            firstTabbableNode: tabbableNodes[0],\n            lastTabbableNode: tabbableNodes[tabbableNodes.length - 1],\n          };\n        }\n\n        return undefined;\n      })\n      .filter((group) => !!group); // remove groups with no tabbable nodes\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (\n      state.tabbableGroups.length <= 0 &&\n      !getNodeForOption('fallbackFocus')\n    ) {\n      throw new Error(\n        'Your focus-trap must have at least one container with at least one tabbable node in it at all times'\n      );\n    }\n  };\n\n  const tryFocus = function (node) {\n    if (node === doc.activeElement) {\n      return;\n    }\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({ preventScroll: !!config.preventScroll });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  const getReturnFocusNode = function (previousActiveElement) {\n    const node = getNodeForOption('setReturnFocus');\n\n    return node ? node : previousActiveElement;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  const checkPointerDown = function (e) {\n    if (containersContain(e.target)) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable(e.target),\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  const checkFocusIn = function (e) {\n    const targetContained = containersContain(e.target);\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || e.target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = e.target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  };\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  const checkTab = function (e) {\n    updateTabbableNodes();\n\n    let destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's tabbable\n      //  with tabIndex='-1' and was given initial focus\n      const containerIndex = findIndex(state.tabbableGroups, ({ container }) =>\n        container.contains(e.target)\n      );\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back in to...\n        if (e.shiftKey) {\n          // ...the last node in the last group\n          destinationNode =\n            state.tabbableGroups[state.tabbableGroups.length - 1]\n              .lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (e.shiftKey) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        let startOfGroupIndex = findIndex(\n          state.tabbableGroups,\n          ({ firstTabbableNode }) => e.target === firstTabbableNode\n        );\n\n        if (\n          startOfGroupIndex < 0 &&\n          state.tabbableGroups[containerIndex].container === e.target\n        ) {\n          // an exception case where the target is the container itself, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          const destinationGroupIndex =\n            startOfGroupIndex === 0\n              ? state.tabbableGroups.length - 1\n              : startOfGroupIndex - 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        let lastOfGroupIndex = findIndex(\n          state.tabbableGroups,\n          ({ lastTabbableNode }) => e.target === lastTabbableNode\n        );\n\n        if (\n          lastOfGroupIndex < 0 &&\n          state.tabbableGroups[containerIndex].container === e.target\n        ) {\n          // an exception case where the target is the container itself, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          const destinationGroupIndex =\n            lastOfGroupIndex === state.tabbableGroups.length - 1\n              ? 0\n              : lastOfGroupIndex + 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  const checkKey = function (e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n\n  const checkClick = function (e) {\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (containersContain(e.target)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  const addListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    activeFocusDelay = config.delayInitialFocus\n      ? delay(function () {\n          tryFocus(getInitialFocusNode());\n        })\n      : tryFocus(getInitialFocusNode());\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false,\n    });\n\n    return trap;\n  };\n\n  const removeListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      const onActivate = getOption(activateOptions, 'onActivate');\n      const onPostActivate = getOption(activateOptions, 'onPostActivate');\n      const checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      const finishActivation = () => {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(\n          finishActivation,\n          finishActivation\n        );\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n\n    deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      clearTimeout(activeFocusDelay);\n\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n\n      activeFocusTraps.deactivateTrap(trap);\n\n      const onDeactivate = getOption(deactivateOptions, 'onDeactivate');\n      const onPostDeactivate = getOption(deactivateOptions, 'onPostDeactivate');\n      const checkCanReturnFocus = getOption(\n        deactivateOptions,\n        'checkCanReturnFocus'\n      );\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      const returnFocus = getOption(\n        deactivateOptions,\n        'returnFocus',\n        'returnFocusOnDeactivate'\n      );\n\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(\n          getReturnFocusNode(state.nodeFocusedBeforeActivation)\n        ).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n\n    pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n\n      return this;\n    },\n\n    unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n\n      return this;\n    },\n\n    updateContainerElements(containerElements) {\n      const elementsAsArray = [].concat(containerElements).filter(Boolean);\n\n      state.containers = elementsAsArray.map((element) =>\n        typeof element === 'string' ? doc.querySelector(element) : element\n      );\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    },\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n\n  return trap;\n};\n\nexport { createFocusTrap };\n"],"names":["activeFocusDelay","activeFocusTraps","trapQueue","activateTrap","trap","length","activeTrap","pause","trapIndex","indexOf","push","splice","deactivateTrap","unpause","isSelectableInput","node","tagName","toLowerCase","select","isEscapeEvent","e","key","keyCode","isTabEvent","delay","fn","setTimeout","findIndex","arr","idx","every","value","i","valueOrHandler","params","createFocusTrap","elements","userOptions","doc","document","config","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","getOption","configOverrideOptions","optionName","configOptionName","undefined","containersContain","element","some","container","contains","getNodeForOption","optionValue","querySelector","Error","getInitialFocusNode","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","tabbableNodes","tabbable","lastTabbableNode","filter","group","tryFocus","focus","preventScroll","getReturnFocusNode","previousActiveElement","checkPointerDown","target","clickOutsideDeactivates","deactivate","returnFocus","isFocusable","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","stopImmediatePropagation","checkTab","destinationNode","containerIndex","shiftKey","startOfGroupIndex","destinationGroupIndex","destinationGroup","lastOfGroupIndex","checkKey","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","activate","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","concat","then","deactivateOptions","clearTimeout","onDeactivate","onPostDeactivate","checkCanReturnFocus","finishDeactivation","updateContainerElements","containerElements","elementsAsArray","Boolean"],"mappings":"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"}