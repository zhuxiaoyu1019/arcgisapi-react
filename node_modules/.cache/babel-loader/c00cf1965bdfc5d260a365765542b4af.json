{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as r } from \"../../../../chunks/tslib.es6.js\";\nimport { bindMultipassTerrainTexture as e } from \"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { bindProjectionMatrix as t, bindView as o } from \"../core/shaderLibrary/util/View.glsl.js\";\nimport { ReloadableShaderModule as i } from \"../core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as s } from \"../core/shaderTechnique/ShaderTechnique.js\";\nimport { ShaderTechniqueConfiguration as a, parameter as n } from \"../core/shaderTechnique/ShaderTechniqueConfiguration.js\";\nimport { Default3D as p } from \"../lib/DefaultVertexAttributeLocations.js\";\nimport { OITBlending as l, OITDepthTest as c, OITDepthWrite as m } from \"../lib/OrderIndependentTransparency.js\";\nimport { Program as d } from \"../lib/Program.js\";\nimport { C as h } from \"../../../../chunks/CheckerBoard.glsl.js\";\nimport { makePipelineState as u, defaultDepthWriteParams as f, defaultColorWriteParams as g, separateBlendingParams as b } from \"../../../webgl/renderState.js\";\n\nclass y extends s {\n  initializeProgram(r) {\n    const e = y.shader.get(),\n          t = this.configuration,\n          o = e.build({\n      OITEnabled: 0 === t.transparencyPassType,\n      multipassTerrainEnabled: t.multipassTerrainEnabled,\n      cullAboveGround: t.cullAboveGround\n    });\n    return new d(r.rctx, o, p);\n  }\n\n  bindPass(r, o) {\n    t(this.program, o.camera.projectionMatrix), this.program.setUniform2fv(\"size\", r.size), this.program.setUniform4fv(\"color1\", r.color1), this.program.setUniform4fv(\"color2\", r.color2), o.multipassTerrainEnabled && (this.program.setUniform2fv(\"cameraNearFar\", o.camera.nearFar), this.program.setUniform2fv(\"inverseViewport\", o.inverseViewport), e(this.program, o));\n  }\n\n  bindDraw(r) {\n    o(this.program, r);\n  }\n\n  setPipelineState(r) {\n    const e = this.configuration,\n          t = 3 === r,\n          o = 2 === r;\n    return u({\n      blending: e.transparent ? t ? v : l(r) : null,\n      depthTest: {\n        func: c(r)\n      },\n      depthWrite: t ? e.writeDepth && f : m(r),\n      colorWrite: g,\n      polygonOffset: t || o ? e.polygonOffset && T : {\n        factor: -1,\n        units: -25\n      }\n    });\n  }\n\n  initializePipeline() {\n    return this.setPipelineState(this.configuration.transparencyPassType);\n  }\n\n}\n\ny.shader = new i(h, () => import(\"./CheckerBoard.glsl.js\"));\nconst T = {\n  factor: 0,\n  units: -25\n},\n      v = b(770, 1, 771, 771);\n\nclass j extends a {\n  constructor() {\n    super(...arguments), this.transparent = !1, this.writeDepth = !0, this.polygonOffset = !1, this.transparencyPassType = 3, this.multipassTerrainEnabled = !1, this.cullAboveGround = !1;\n  }\n\n}\n\nr([n()], j.prototype, \"transparent\", void 0), r([n()], j.prototype, \"writeDepth\", void 0), r([n()], j.prototype, \"polygonOffset\", void 0), r([n({\n  count: 4\n})], j.prototype, \"transparencyPassType\", void 0), r([n()], j.prototype, \"multipassTerrainEnabled\", void 0), r([n()], j.prototype, \"cullAboveGround\", void 0);\nexport { y as CheckerBoardTechnique, j as CheckerBoardTechniqueConfiguration };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/shaders/CheckerBoardTechnique.js"],"names":["_","r","bindMultipassTerrainTexture","e","bindProjectionMatrix","t","bindView","o","ReloadableShaderModule","i","ShaderTechnique","s","ShaderTechniqueConfiguration","a","parameter","n","Default3D","p","OITBlending","l","OITDepthTest","c","OITDepthWrite","m","Program","d","C","h","makePipelineState","u","defaultDepthWriteParams","f","defaultColorWriteParams","g","separateBlendingParams","b","y","initializeProgram","shader","get","configuration","build","OITEnabled","transparencyPassType","multipassTerrainEnabled","cullAboveGround","rctx","bindPass","program","camera","projectionMatrix","setUniform2fv","size","setUniform4fv","color1","color2","nearFar","inverseViewport","bindDraw","setPipelineState","blending","transparent","v","depthTest","func","depthWrite","writeDepth","colorWrite","polygonOffset","T","factor","units","initializePipeline","j","constructor","arguments","prototype","count","CheckerBoardTechnique","CheckerBoardTechniqueConfiguration"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../../../../chunks/tslib.es6.js\";import{bindMultipassTerrainTexture as e}from\"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{bindProjectionMatrix as t,bindView as o}from\"../core/shaderLibrary/util/View.glsl.js\";import{ReloadableShaderModule as i}from\"../core/shaderTechnique/ReloadableShaderModule.js\";import{ShaderTechnique as s}from\"../core/shaderTechnique/ShaderTechnique.js\";import{ShaderTechniqueConfiguration as a,parameter as n}from\"../core/shaderTechnique/ShaderTechniqueConfiguration.js\";import{Default3D as p}from\"../lib/DefaultVertexAttributeLocations.js\";import{OITBlending as l,OITDepthTest as c,OITDepthWrite as m}from\"../lib/OrderIndependentTransparency.js\";import{Program as d}from\"../lib/Program.js\";import{C as h}from\"../../../../chunks/CheckerBoard.glsl.js\";import{makePipelineState as u,defaultDepthWriteParams as f,defaultColorWriteParams as g,separateBlendingParams as b}from\"../../../webgl/renderState.js\";class y extends s{initializeProgram(r){const e=y.shader.get(),t=this.configuration,o=e.build({OITEnabled:0===t.transparencyPassType,multipassTerrainEnabled:t.multipassTerrainEnabled,cullAboveGround:t.cullAboveGround});return new d(r.rctx,o,p)}bindPass(r,o){t(this.program,o.camera.projectionMatrix),this.program.setUniform2fv(\"size\",r.size),this.program.setUniform4fv(\"color1\",r.color1),this.program.setUniform4fv(\"color2\",r.color2),o.multipassTerrainEnabled&&(this.program.setUniform2fv(\"cameraNearFar\",o.camera.nearFar),this.program.setUniform2fv(\"inverseViewport\",o.inverseViewport),e(this.program,o))}bindDraw(r){o(this.program,r)}setPipelineState(r){const e=this.configuration,t=3===r,o=2===r;return u({blending:e.transparent?t?v:l(r):null,depthTest:{func:c(r)},depthWrite:t?e.writeDepth&&f:m(r),colorWrite:g,polygonOffset:t||o?e.polygonOffset&&T:{factor:-1,units:-25}})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}y.shader=new i(h,(()=>import(\"./CheckerBoard.glsl.js\")));const T={factor:0,units:-25},v=b(770,1,771,771);class j extends a{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}r([n()],j.prototype,\"transparent\",void 0),r([n()],j.prototype,\"writeDepth\",void 0),r([n()],j.prototype,\"polygonOffset\",void 0),r([n({count:4})],j.prototype,\"transparencyPassType\",void 0),r([n()],j.prototype,\"multipassTerrainEnabled\",void 0),r([n()],j.prototype,\"cullAboveGround\",void 0);export{y as CheckerBoardTechnique,j as CheckerBoardTechniqueConfiguration};\n"]},"metadata":{},"sourceType":"module"}