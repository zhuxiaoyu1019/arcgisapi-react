{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nclass e {\n  constructor(e) {\n    this.maxCount = e, this._nextIndex = 0, this.recycledIndices = [];\n  }\n\n  get activeCount() {\n    return this._nextIndex - this.recycledIndices.length;\n  }\n\n  get availableCount() {\n    return this.recycledIndices.length + this.maxCount - this._nextIndex;\n  }\n\n  acquire() {\n    return this.recycledIndices.length > 0 ? this.recycledIndices.pop() : this.availableCount ? this._nextIndex++ : void 0;\n  }\n\n  release(e) {\n    this.recycledIndices.push(e);\n  }\n\n}\n\nexport { e as SimpleIndexManager };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/SimpleIndexManager.js"],"names":["e","constructor","maxCount","_nextIndex","recycledIndices","activeCount","length","availableCount","acquire","pop","release","push","SimpleIndexManager"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,CAAN,CAAO;AAACC,EAAAA,WAAW,CAACD,CAAD,EAAG;AAAC,SAAKE,QAAL,GAAcF,CAAd,EAAgB,KAAKG,UAAL,GAAgB,CAAhC,EAAkC,KAAKC,eAAL,GAAqB,EAAvD;AAA0D;;AAAe,MAAXC,WAAW,GAAE;AAAC,WAAO,KAAKF,UAAL,GAAgB,KAAKC,eAAL,CAAqBE,MAA5C;AAAmD;;AAAkB,MAAdC,cAAc,GAAE;AAAC,WAAO,KAAKH,eAAL,CAAqBE,MAArB,GAA4B,KAAKJ,QAAjC,GAA0C,KAAKC,UAAtD;AAAiE;;AAAAK,EAAAA,OAAO,GAAE;AAAC,WAAO,KAAKJ,eAAL,CAAqBE,MAArB,GAA4B,CAA5B,GAA8B,KAAKF,eAAL,CAAqBK,GAArB,EAA9B,GAAyD,KAAKF,cAAL,GAAoB,KAAKJ,UAAL,EAApB,GAAsC,KAAK,CAA3G;AAA6G;;AAAAO,EAAAA,OAAO,CAACV,CAAD,EAAG;AAAC,SAAKI,eAAL,CAAqBO,IAArB,CAA0BX,CAA1B;AAA6B;;AAApY;;AAAqY,SAAOA,CAAC,IAAIY,kBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nclass e{constructor(e){this.maxCount=e,this._nextIndex=0,this.recycledIndices=[]}get activeCount(){return this._nextIndex-this.recycledIndices.length}get availableCount(){return this.recycledIndices.length+this.maxCount-this._nextIndex}acquire(){return this.recycledIndices.length>0?this.recycledIndices.pop():this.availableCount?this._nextIndex++:void 0}release(e){this.recycledIndices.push(e)}}export{e as SimpleIndexManager};\n"]},"metadata":{},"sourceType":"module"}