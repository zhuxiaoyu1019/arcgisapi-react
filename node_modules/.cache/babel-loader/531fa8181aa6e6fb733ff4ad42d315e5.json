{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { DisplayIdGenerator as t } from \"./displayIdUtils.js\";\nimport { StaticBitSet as e } from \"./StaticBitSet.js\";\n\nfunction s(t, e, s) {\n  if (!(t.length > e)) for (; t.length <= e;) t.push(s);\n}\n\nconst i = 2147483647,\n      n = 2147483648,\n      r = (t, e) => ((e ? n : 0) | t) >>> 0;\n\nclass u {\n  constructor() {\n    this._numerics = [], this._strings = [], this._idGenerator = new t(), this._allocatedSize = 256, this._bitsets = [], this._instanceIds = [], this._bounds = [];\n  }\n\n  createBitset() {\n    const t = this._bitsets.length;\n    return this._bitsets.push(e.create(this._allocatedSize, i)), t + 1;\n  }\n\n  getBitset(t) {\n    return this._bitsets[t - 1];\n  }\n\n  _expand() {\n    this._allocatedSize <<= 1;\n\n    for (const t of this._bitsets) t.resize(this._allocatedSize);\n  }\n\n  _ensureNumeric(t, e) {\n    this._numerics[t] || (this._numerics[t] = []);\n    s(this._numerics[t], e, 0);\n  }\n\n  _ensureInstanceId(t) {\n    s(this._instanceIds, t, 0);\n  }\n\n  _ensureString(t, e) {\n    this._strings[t] || (this._strings[t] = []);\n    s(this._strings[t], e, null);\n  }\n\n  createDisplayId(t = !1) {\n    const e = this._idGenerator.createId();\n\n    return e > this._allocatedSize && this._expand(), r(e, t);\n  }\n\n  releaseDisplayId(t) {\n    for (const e of this._bitsets) e.unset(t);\n\n    return this._idGenerator.releaseId(t & i);\n  }\n\n  getComputedNumeric(t, e) {\n    return this.getComputedNumericAtIndex(t & i, 0);\n  }\n\n  setComputedNumeric(t, e, s) {\n    return this.setComputedNumericAtIndex(t & i, s, 0);\n  }\n\n  getComputedString(t, e) {\n    return this.getComputedStringAtIndex(t & i, 0);\n  }\n\n  setComputedString(t, e, s) {\n    return this.setComputedStringAtIndex(t & i, 0, s);\n  }\n\n  getComputedNumericAtIndex(t, e) {\n    const s = t & i;\n    return this._ensureNumeric(e, s), this._numerics[e][s];\n  }\n\n  setComputedNumericAtIndex(t, e, s) {\n    const n = t & i;\n    this._ensureNumeric(e, n), this._numerics[e][n] = s;\n  }\n\n  getInstanceId(t) {\n    const e = t & i;\n    return this._ensureInstanceId(e), this._instanceIds[e];\n  }\n\n  setInstanceId(t, e) {\n    const s = t & i;\n    this._ensureInstanceId(s), this._instanceIds[s] = e;\n  }\n\n  getComputedStringAtIndex(t, e) {\n    const s = t & i;\n    return this._ensureString(e, s), this._strings[e][s];\n  }\n\n  setComputedStringAtIndex(t, e, s) {\n    const n = t & i;\n    this._ensureString(e, n), this._strings[e][n] = s;\n  }\n\n  getXMin(t) {\n    return this._bounds[4 * (t & i)];\n  }\n\n  getYMin(t) {\n    return this._bounds[4 * (t & i) + 1];\n  }\n\n  getXMax(t) {\n    return this._bounds[4 * (t & i) + 2];\n  }\n\n  getYMax(t) {\n    return this._bounds[4 * (t & i) + 3];\n  }\n\n  setBounds(t, e) {\n    const n = e.readHydratedGeometry();\n    if (!n || !n.coords.length) return !1;\n    let r = 1 / 0,\n        u = 1 / 0,\n        h = -1 / 0,\n        o = -1 / 0;\n    n.forEachVertex((t, e) => {\n      r = Math.min(r, t), u = Math.min(u, e), h = Math.max(h, t), o = Math.max(o, e);\n    });\n    const d = t & i;\n    return s(this._bounds, 4 * d + 4, 0), this._bounds[4 * d] = r, this._bounds[4 * d + 1] = u, this._bounds[4 * d + 2] = h, this._bounds[4 * d + 3] = o, !0;\n  }\n\n}\n\nexport { u as ComputedAttributeStorage };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/2d/layers/features/support/ComputedAttributeStorage.js"],"names":["DisplayIdGenerator","t","StaticBitSet","e","s","length","push","i","n","r","u","constructor","_numerics","_strings","_idGenerator","_allocatedSize","_bitsets","_instanceIds","_bounds","createBitset","create","getBitset","_expand","resize","_ensureNumeric","_ensureInstanceId","_ensureString","createDisplayId","createId","releaseDisplayId","unset","releaseId","getComputedNumeric","getComputedNumericAtIndex","setComputedNumeric","setComputedNumericAtIndex","getComputedString","getComputedStringAtIndex","setComputedString","setComputedStringAtIndex","getInstanceId","setInstanceId","getXMin","getYMin","getXMax","getYMax","setBounds","readHydratedGeometry","coords","h","o","forEachVertex","Math","min","max","d","ComputedAttributeStorage"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{DisplayIdGenerator as t}from\"./displayIdUtils.js\";import{StaticBitSet as e}from\"./StaticBitSet.js\";function s(t,e,s){if(!(t.length>e))for(;t.length<=e;)t.push(s)}const i=2147483647,n=2147483648,r=(t,e)=>((e?n:0)|t)>>>0;class u{constructor(){this._numerics=[],this._strings=[],this._idGenerator=new t,this._allocatedSize=256,this._bitsets=[],this._instanceIds=[],this._bounds=[]}createBitset(){const t=this._bitsets.length;return this._bitsets.push(e.create(this._allocatedSize,i)),t+1}getBitset(t){return this._bitsets[t-1]}_expand(){this._allocatedSize<<=1;for(const t of this._bitsets)t.resize(this._allocatedSize)}_ensureNumeric(t,e){this._numerics[t]||(this._numerics[t]=[]);s(this._numerics[t],e,0)}_ensureInstanceId(t){s(this._instanceIds,t,0)}_ensureString(t,e){this._strings[t]||(this._strings[t]=[]);s(this._strings[t],e,null)}createDisplayId(t=!1){const e=this._idGenerator.createId();return e>this._allocatedSize&&this._expand(),r(e,t)}releaseDisplayId(t){for(const e of this._bitsets)e.unset(t);return this._idGenerator.releaseId(t&i)}getComputedNumeric(t,e){return this.getComputedNumericAtIndex(t&i,0)}setComputedNumeric(t,e,s){return this.setComputedNumericAtIndex(t&i,s,0)}getComputedString(t,e){return this.getComputedStringAtIndex(t&i,0)}setComputedString(t,e,s){return this.setComputedStringAtIndex(t&i,0,s)}getComputedNumericAtIndex(t,e){const s=t&i;return this._ensureNumeric(e,s),this._numerics[e][s]}setComputedNumericAtIndex(t,e,s){const n=t&i;this._ensureNumeric(e,n),this._numerics[e][n]=s}getInstanceId(t){const e=t&i;return this._ensureInstanceId(e),this._instanceIds[e]}setInstanceId(t,e){const s=t&i;this._ensureInstanceId(s),this._instanceIds[s]=e}getComputedStringAtIndex(t,e){const s=t&i;return this._ensureString(e,s),this._strings[e][s]}setComputedStringAtIndex(t,e,s){const n=t&i;this._ensureString(e,n),this._strings[e][n]=s}getXMin(t){return this._bounds[4*(t&i)]}getYMin(t){return this._bounds[4*(t&i)+1]}getXMax(t){return this._bounds[4*(t&i)+2]}getYMax(t){return this._bounds[4*(t&i)+3]}setBounds(t,e){const n=e.readHydratedGeometry();if(!n||!n.coords.length)return!1;let r=1/0,u=1/0,h=-1/0,o=-1/0;n.forEachVertex(((t,e)=>{r=Math.min(r,t),u=Math.min(u,e),h=Math.max(h,t),o=Math.max(o,e)}));const d=t&i;return s(this._bounds,4*d+4,0),this._bounds[4*d]=r,this._bounds[4*d+1]=u,this._bounds[4*d+2]=h,this._bounds[4*d+3]=o,!0}}export{u as ComputedAttributeStorage};\n"]},"metadata":{},"sourceType":"module"}