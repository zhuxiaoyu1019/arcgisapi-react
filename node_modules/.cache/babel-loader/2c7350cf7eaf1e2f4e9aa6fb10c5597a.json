{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../../core/Error.js\";\nimport { isSome as n } from \"../../../core/maybe.js\";\nimport { isNumericField as t, numericTypes as l } from \"../../../layers/support/fieldUtils.js\";\n\nfunction o(e) {\n  const n = null != e.normalizationField || null != e.normalizationType,\n        t = null != e.minValue || null != e.maxValue,\n        l = !!e.sqlExpression && e.supportsSQLExpression;\n  return !n && !t && !l;\n}\n\nfunction i(e) {\n  const {\n    values: n,\n    supportsNullCount: t\n  } = e,\n        l = n.filter(e => null != e).length,\n        o = {\n    count: l\n  };\n  return t && (o.nullcount = n.length - l), o;\n}\n\nfunction r(e) {\n  const {\n    values: n,\n    useSampleStdDev: t,\n    supportsNullCount: l\n  } = e;\n  let o = Number.POSITIVE_INFINITY,\n      i = Number.NEGATIVE_INFINITY,\n      r = null,\n      u = null,\n      s = null,\n      a = null,\n      c = 0;\n  const f = null == e.minValue ? -1 / 0 : e.minValue,\n        d = null == e.maxValue ? 1 / 0 : e.maxValue;\n\n  for (const p of n) Number.isFinite(p) ? p >= f && p <= d && (r += p, o = Math.min(o, p), i = Math.max(i, p), c++) : \"string\" == typeof p && c++;\n\n  if (c && null != r) {\n    u = r / c;\n    let e = 0;\n\n    for (const t of n) Number.isFinite(t) && t >= f && t <= d && (e += (t - u) ** 2);\n\n    a = t ? c > 1 ? e / (c - 1) : 0 : c > 0 ? e / c : 0, s = Math.sqrt(a);\n  } else o = null, i = null;\n\n  const m = {\n    avg: u,\n    count: c,\n    max: i,\n    min: o,\n    stddev: s,\n    sum: r,\n    variance: a\n  };\n  return l && (m.nullcount = n.length - c), m;\n}\n\nfunction u(e, n) {\n  return n ? ([\"avg\", \"stddev\", \"variance\"].forEach(n => {\n    null != e[n] && (e[n] = Math.ceil(e[n]));\n  }), e) : e;\n}\n\nfunction s(e, n, t, l) {\n  let o = null;\n\n  switch (n) {\n    case \"log\":\n      0 !== e && (o = Math.log(e) * Math.LOG10E);\n      break;\n\n    case \"percent-of-total\":\n      Number.isFinite(l) && 0 !== l && (o = e / l * 100);\n      break;\n\n    case \"field\":\n      Number.isFinite(t) && 0 !== t && (o = e / t);\n      break;\n\n    case \"natural-log\":\n      e > 0 && (o = Math.log(e));\n      break;\n\n    case \"square-root\":\n      e > 0 && (o = e ** .5);\n  }\n\n  return o;\n}\n\nfunction a(e) {\n  const n = e.field,\n        t = e.normalizationType,\n        l = e.normalizationField;\n  let o;\n  return \"log\" === t ? o = \"(NOT \" + n + \" = 0)\" : \"field\" === t ? o = \"(NOT \" + l + \" = 0)\" : \"natural-log\" !== t && \"square-root\" !== t || (o = `(${n} > 0)`), o;\n}\n\nfunction c(n, t) {\n  return new e(n, t);\n}\n\nfunction f(e, n, t) {\n  const l = null != n ? e + \" >= \" + n : \"\",\n        o = null != t ? e + \" <= \" + t : \"\";\n  let i = \"\";\n  return i = l && o ? p(l, o) : l || o, i ? \"(\" + i + \")\" : \"\";\n}\n\nfunction d(e, n, t, l) {\n  let o = null;\n  return n ? n.name !== e.objectIdField && -1 !== l.indexOf(n.type) || (o = c(t, \"'field' should be one of these types: \" + l.join(\",\"))) : o = c(t, \"'field' is not defined in the layer schema\"), o;\n}\n\nfunction m(e, n, o) {\n  let i;\n  return n ? n.name !== e.objectIdField && t(n) || (i = c(o, \"'field' should be one of these numeric types: \" + l.join(\",\"))) : i = c(o, \"'field' is not defined in the layer schema\"), i;\n}\n\nfunction p(e, t) {\n  let l = n(e) ? e : \"\";\n  return n(t) && t && (l = l ? \"(\" + l + \") AND (\" + t + \")\" : t), l;\n}\n\nfunction h(e, n, t) {\n  const l = g({\n    layer: e,\n    fields: n\n  });\n  if (l.length) return c(t, \"Unknown fields: \" + l.join(\", \") + \". You can only use fields defined in the layer schema\");\n  const o = b({\n    layer: e,\n    fields: n\n  });\n  return o.length ? c(t, \"Unsupported fields: \" + o.join(\", \") + \". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true\") : void 0;\n}\n\nfunction g(e) {\n  const n = e.layer;\n  return e.fields.filter(e => !n.getField(e));\n}\n\nfunction b(e) {\n  const n = e.layer;\n  return e.fields.filter(e => {\n    const t = n.getFieldUsageInfo(e);\n    return !t || !t.supportsStatistics;\n  });\n}\n\nexport { r as calculateStatistics, i as calculateStringStatistics, c as createError, s as getNormalizedValue, f as getRangeExpr, a as getSQLFilterForNormalization, o as isNullCountSupported, p as mergeWhereClauses, u as processStatsResult, h as verifyBasicFieldValidity, d as verifyFieldType, m as verifyNumericField };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/smartMapping/statistics/support/utils.js"],"names":["e","isSome","n","isNumericField","t","numericTypes","l","o","normalizationField","normalizationType","minValue","maxValue","sqlExpression","supportsSQLExpression","i","values","supportsNullCount","filter","length","count","nullcount","r","useSampleStdDev","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","u","s","a","c","f","d","p","isFinite","Math","min","max","sqrt","m","avg","stddev","sum","variance","forEach","ceil","log","LOG10E","field","name","objectIdField","indexOf","type","join","h","g","layer","fields","b","getField","getFieldUsageInfo","supportsStatistics","calculateStatistics","calculateStringStatistics","createError","getNormalizedValue","getRangeExpr","getSQLFilterForNormalization","isNullCountSupported","mergeWhereClauses","processStatsResult","verifyBasicFieldValidity","verifyFieldType","verifyNumericField"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../../core/Error.js\";import{isSome as n}from\"../../../core/maybe.js\";import{isNumericField as t,numericTypes as l}from\"../../../layers/support/fieldUtils.js\";function o(e){const n=null!=e.normalizationField||null!=e.normalizationType,t=null!=e.minValue||null!=e.maxValue,l=!!e.sqlExpression&&e.supportsSQLExpression;return!n&&!t&&!l}function i(e){const{values:n,supportsNullCount:t}=e,l=n.filter((e=>null!=e)).length,o={count:l};return t&&(o.nullcount=n.length-l),o}function r(e){const{values:n,useSampleStdDev:t,supportsNullCount:l}=e;let o=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,r=null,u=null,s=null,a=null,c=0;const f=null==e.minValue?-1/0:e.minValue,d=null==e.maxValue?1/0:e.maxValue;for(const p of n)Number.isFinite(p)?p>=f&&p<=d&&(r+=p,o=Math.min(o,p),i=Math.max(i,p),c++):\"string\"==typeof p&&c++;if(c&&null!=r){u=r/c;let e=0;for(const t of n)Number.isFinite(t)&&t>=f&&t<=d&&(e+=(t-u)**2);a=t?c>1?e/(c-1):0:c>0?e/c:0,s=Math.sqrt(a)}else o=null,i=null;const m={avg:u,count:c,max:i,min:o,stddev:s,sum:r,variance:a};return l&&(m.nullcount=n.length-c),m}function u(e,n){return n?([\"avg\",\"stddev\",\"variance\"].forEach((n=>{null!=e[n]&&(e[n]=Math.ceil(e[n]))})),e):e}function s(e,n,t,l){let o=null;switch(n){case\"log\":0!==e&&(o=Math.log(e)*Math.LOG10E);break;case\"percent-of-total\":Number.isFinite(l)&&0!==l&&(o=e/l*100);break;case\"field\":Number.isFinite(t)&&0!==t&&(o=e/t);break;case\"natural-log\":e>0&&(o=Math.log(e));break;case\"square-root\":e>0&&(o=e**.5)}return o}function a(e){const n=e.field,t=e.normalizationType,l=e.normalizationField;let o;return\"log\"===t?o=\"(NOT \"+n+\" = 0)\":\"field\"===t?o=\"(NOT \"+l+\" = 0)\":\"natural-log\"!==t&&\"square-root\"!==t||(o=`(${n} > 0)`),o}function c(n,t){return new e(n,t)}function f(e,n,t){const l=null!=n?e+\" >= \"+n:\"\",o=null!=t?e+\" <= \"+t:\"\";let i=\"\";return i=l&&o?p(l,o):l||o,i?\"(\"+i+\")\":\"\"}function d(e,n,t,l){let o=null;return n?n.name!==e.objectIdField&&-1!==l.indexOf(n.type)||(o=c(t,\"'field' should be one of these types: \"+l.join(\",\"))):o=c(t,\"'field' is not defined in the layer schema\"),o}function m(e,n,o){let i;return n?n.name!==e.objectIdField&&t(n)||(i=c(o,\"'field' should be one of these numeric types: \"+l.join(\",\"))):i=c(o,\"'field' is not defined in the layer schema\"),i}function p(e,t){let l=n(e)?e:\"\";return n(t)&&t&&(l=l?\"(\"+l+\") AND (\"+t+\")\":t),l}function h(e,n,t){const l=g({layer:e,fields:n});if(l.length)return c(t,\"Unknown fields: \"+l.join(\", \")+\". You can only use fields defined in the layer schema\");const o=b({layer:e,fields:n});return o.length?c(t,\"Unsupported fields: \"+o.join(\", \")+\". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true\"):void 0}function g(e){const n=e.layer;return e.fields.filter((e=>!n.getField(e)))}function b(e){const n=e.layer;return e.fields.filter((e=>{const t=n.getFieldUsageInfo(e);return!t||!t.supportsStatistics}))}export{r as calculateStatistics,i as calculateStringStatistics,c as createError,s as getNormalizedValue,f as getRangeExpr,a as getSQLFilterForNormalization,o as isNullCountSupported,p as mergeWhereClauses,u as processStatsResult,h as verifyBasicFieldValidity,d as verifyFieldType,m as verifyNumericField};\n"]},"metadata":{},"sourceType":"module"}