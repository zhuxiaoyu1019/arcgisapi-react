{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { glsl as o } from \"../../../../core/shaderModules/interfaces.js\";\n\nfunction l(l) {\n  l.vertex.code.add(o`\n    vec4 decodeSymbolColor(vec4 symbolColor, out int colorMixMode) {\n      float symbolAlpha = 0.0;\n\n      const float maxTint = 85.0;\n      const float maxReplace = 170.0;\n      const float scaleAlpha = 3.0;\n\n      if (symbolColor.a > maxReplace) {\n        colorMixMode = ${o.int(1)};\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxReplace);\n      } else if (symbolColor.a > maxTint) {\n        colorMixMode = ${o.int(3)};\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxTint);\n      } else if (symbolColor.a > 0.0) {\n        colorMixMode = ${o.int(4)};\n        symbolAlpha = scaleAlpha * symbolColor.a;\n      } else {\n        colorMixMode = ${o.int(1)};\n        symbolAlpha = 0.0;\n      }\n\n      return vec4(symbolColor.r, symbolColor.g, symbolColor.b, symbolAlpha);\n    }\n  `);\n}\n\nexport { l as DecodeSymbolColor };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/shader/DecodeSymbolColor.glsl.js"],"names":["glsl","o","l","vertex","code","add","int","DecodeSymbolColor"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,8CAArB;;AAAoE,SAASC,CAAT,CAAWA,CAAX,EAAa;AAACA,EAAAA,CAAC,CAACC,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBJ,CAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyBA,CAAC,CAACK,GAAF,CAAM,CAAN,CAAS;AAClC;AACA;AACA,yBAAyBL,CAAC,CAACK,GAAF,CAAM,CAAN,CAAS;AAClC;AACA;AACA,yBAAyBL,CAAC,CAACK,GAAF,CAAM,CAAN,CAAS;AAClC;AACA;AACA,yBAAyBL,CAAC,CAACK,GAAF,CAAM,CAAN,CAAS;AAClC;AACA;AACA;AACA;AACA;AACA,GAxBkF;AAwB7E;;AAAA,SAAOJ,CAAC,IAAIK,iBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../../../../core/shaderModules/interfaces.js\";function l(l){l.vertex.code.add(o`\n    vec4 decodeSymbolColor(vec4 symbolColor, out int colorMixMode) {\n      float symbolAlpha = 0.0;\n\n      const float maxTint = 85.0;\n      const float maxReplace = 170.0;\n      const float scaleAlpha = 3.0;\n\n      if (symbolColor.a > maxReplace) {\n        colorMixMode = ${o.int(1)};\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxReplace);\n      } else if (symbolColor.a > maxTint) {\n        colorMixMode = ${o.int(3)};\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxTint);\n      } else if (symbolColor.a > 0.0) {\n        colorMixMode = ${o.int(4)};\n        symbolAlpha = scaleAlpha * symbolColor.a;\n      } else {\n        colorMixMode = ${o.int(1)};\n        symbolAlpha = 0.0;\n      }\n\n      return vec4(symbolColor.r, symbolColor.g, symbolColor.b, symbolAlpha);\n    }\n  `)}export{l as DecodeSymbolColor};\n"]},"metadata":{},"sourceType":"module"}