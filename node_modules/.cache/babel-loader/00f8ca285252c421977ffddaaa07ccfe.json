{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport r from \"../request.js\";\nimport { createQueryParamsHelper as e } from \"../core/queryUtils.js\";\nimport { normalizeCentralMeridian as t } from \"../geometry/support/normalizeUtils.js\";\nimport { collectGeometries as i, isInputGeometryZAware as a, fetchServiceDescription as s, dropZValuesOffInputGeometry as o } from \"./networkService.js\";\nimport { parseUrl as n } from \"./utils.js\";\nimport u from \"./support/ServiceAreaSolveResult.js\";\nconst l = e({\n  accumulateAttributes: {\n    name: \"accumulateAttributeNames\"\n  },\n  attributeParameterValues: !0,\n  defaultBreaks: !0,\n  facilities: !0,\n  outSpatialReference: {\n    name: \"outSR\",\n    getter: r => r.outSpatialReference.wkid\n  },\n  pointBarriers: {\n    name: \"barriers\"\n  },\n  polylineBarriers: !0,\n  polygonBarriers: !0,\n  restrictionAttributes: {\n    name: \"restrictionAttributeNames\"\n  },\n  returnPointBarriers: {\n    name: \"returnBarriers\"\n  },\n  travelMode: !0\n});\n\nasync function c(e, c, f) {\n  const p = [],\n        m = [],\n        B = {},\n        y = {},\n        h = n(e);\n  return c.facilities && c.facilities.features && i(c.facilities.features, m, \"facilities.features\", B), c.pointBarriers && c.pointBarriers.features && i(c.pointBarriers.features, m, \"pointBarriers.features\", B), c.polylineBarriers && c.polylineBarriers.features && i(c.polylineBarriers.features, m, \"polylineBarriers.features\", B), c.polygonBarriers && c.polygonBarriers.features && i(c.polygonBarriers.features, m, \"polygonBarriers.features\", B), t(m).then(r => {\n    for (const e in B) {\n      const t = B[e];\n      p.push(e), y[e] = r.slice(t[0], t[1]);\n    }\n\n    return a(y, p) ? s(h.path).catch(() => ({\n      dontCheck: !0\n    })) : Promise.resolve({\n      dontCheck: !0\n    });\n  }).then(e => {\n    (\"dontCheck\" in e ? e.dontCheck : e.hasZ) || o(y, p);\n\n    for (const r in y) y[r].forEach((e, t) => {\n      c.get(r)[t].geometry = e;\n    });\n\n    let t = {\n      query: { ...h.query,\n        f: \"json\",\n        ...l.toQueryParams(c)\n      }\n    };\n    return f && (t = { ...f,\n      ...t\n    }), r(`${h.path}/solveServiceArea`, t);\n  }).then(r => u.fromJSON(r.data));\n}\n\nexport { c as solve };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/rest/serviceArea.js"],"names":["r","createQueryParamsHelper","e","normalizeCentralMeridian","t","collectGeometries","i","isInputGeometryZAware","a","fetchServiceDescription","s","dropZValuesOffInputGeometry","o","parseUrl","n","u","l","accumulateAttributes","name","attributeParameterValues","defaultBreaks","facilities","outSpatialReference","getter","wkid","pointBarriers","polylineBarriers","polygonBarriers","restrictionAttributes","returnPointBarriers","travelMode","c","f","p","m","B","y","h","features","then","push","slice","path","catch","dontCheck","Promise","resolve","hasZ","forEach","get","geometry","query","toQueryParams","fromJSON","data","solve"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,eAAb;AAA6B,SAAOC,uBAAuB,IAAIC,CAAlC,QAAwC,uBAAxC;AAAgE,SAAOC,wBAAwB,IAAIC,CAAnC,QAAyC,uCAAzC;AAAiF,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,qBAAqB,IAAIC,CAAvD,EAAyDC,uBAAuB,IAAIC,CAApF,EAAsFC,2BAA2B,IAAIC,CAArH,QAA2H,qBAA3H;AAAiJ,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,YAAzB;AAAsC,OAAOC,CAAP,MAAa,qCAAb;AAAmD,MAAMC,CAAC,GAACd,CAAC,CAAC;AAACe,EAAAA,oBAAoB,EAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAtB;AAAwDC,EAAAA,wBAAwB,EAAC,CAAC,CAAlF;AAAoFC,EAAAA,aAAa,EAAC,CAAC,CAAnG;AAAqGC,EAAAA,UAAU,EAAC,CAAC,CAAjH;AAAmHC,EAAAA,mBAAmB,EAAC;AAACJ,IAAAA,IAAI,EAAC,OAAN;AAAcK,IAAAA,MAAM,EAACvB,CAAC,IAAEA,CAAC,CAACsB,mBAAF,CAAsBE;AAA9C,GAAvI;AAA2LC,EAAAA,aAAa,EAAC;AAACP,IAAAA,IAAI,EAAC;AAAN,GAAzM;AAA2NQ,EAAAA,gBAAgB,EAAC,CAAC,CAA7O;AAA+OC,EAAAA,eAAe,EAAC,CAAC,CAAhQ;AAAkQC,EAAAA,qBAAqB,EAAC;AAACV,IAAAA,IAAI,EAAC;AAAN,GAAxR;AAA2TW,EAAAA,mBAAmB,EAAC;AAACX,IAAAA,IAAI,EAAC;AAAN,GAA/U;AAAuWY,EAAAA,UAAU,EAAC,CAAC;AAAnX,CAAD,CAAT;;AAAiY,eAAeC,CAAf,CAAiB7B,CAAjB,EAAmB6B,CAAnB,EAAqBC,CAArB,EAAuB;AAAC,QAAMC,CAAC,GAAC,EAAR;AAAA,QAAWC,CAAC,GAAC,EAAb;AAAA,QAAgBC,CAAC,GAAC,EAAlB;AAAA,QAAqBC,CAAC,GAAC,EAAvB;AAAA,QAA0BC,CAAC,GAACvB,CAAC,CAACZ,CAAD,CAA7B;AAAiC,SAAO6B,CAAC,CAACV,UAAF,IAAcU,CAAC,CAACV,UAAF,CAAaiB,QAA3B,IAAqChC,CAAC,CAACyB,CAAC,CAACV,UAAF,CAAaiB,QAAd,EAAuBJ,CAAvB,EAAyB,qBAAzB,EAA+CC,CAA/C,CAAtC,EAAwFJ,CAAC,CAACN,aAAF,IAAiBM,CAAC,CAACN,aAAF,CAAgBa,QAAjC,IAA2ChC,CAAC,CAACyB,CAAC,CAACN,aAAF,CAAgBa,QAAjB,EAA0BJ,CAA1B,EAA4B,wBAA5B,EAAqDC,CAArD,CAApI,EAA4LJ,CAAC,CAACL,gBAAF,IAAoBK,CAAC,CAACL,gBAAF,CAAmBY,QAAvC,IAAiDhC,CAAC,CAACyB,CAAC,CAACL,gBAAF,CAAmBY,QAApB,EAA6BJ,CAA7B,EAA+B,2BAA/B,EAA2DC,CAA3D,CAA9O,EAA4SJ,CAAC,CAACJ,eAAF,IAAmBI,CAAC,CAACJ,eAAF,CAAkBW,QAArC,IAA+ChC,CAAC,CAACyB,CAAC,CAACJ,eAAF,CAAkBW,QAAnB,EAA4BJ,CAA5B,EAA8B,0BAA9B,EAAyDC,CAAzD,CAA5V,EAAwZ/B,CAAC,CAAC8B,CAAD,CAAD,CAAKK,IAAL,CAAWvC,CAAC,IAAE;AAAC,SAAI,MAAME,CAAV,IAAeiC,CAAf,EAAiB;AAAC,YAAM/B,CAAC,GAAC+B,CAAC,CAACjC,CAAD,CAAT;AAAa+B,MAAAA,CAAC,CAACO,IAAF,CAAOtC,CAAP,GAAUkC,CAAC,CAAClC,CAAD,CAAD,GAAKF,CAAC,CAACyC,KAAF,CAAQrC,CAAC,CAAC,CAAD,CAAT,EAAaA,CAAC,CAAC,CAAD,CAAd,CAAf;AAAkC;;AAAA,WAAOI,CAAC,CAAC4B,CAAD,EAAGH,CAAH,CAAD,GAAOvB,CAAC,CAAC2B,CAAC,CAACK,IAAH,CAAD,CAAUC,KAAV,CAAiB,OAAK;AAACC,MAAAA,SAAS,EAAC,CAAC;AAAZ,KAAL,CAAjB,CAAP,GAA+CC,OAAO,CAACC,OAAR,CAAgB;AAACF,MAAAA,SAAS,EAAC,CAAC;AAAZ,KAAhB,CAAtD;AAAsF,GAAtK,EAAyKL,IAAzK,CAA+KrC,CAAC,IAAE;AAAC,KAAC,eAAcA,CAAd,GAAgBA,CAAC,CAAC0C,SAAlB,GAA4B1C,CAAC,CAAC6C,IAA/B,KAAsCnC,CAAC,CAACwB,CAAD,EAAGH,CAAH,CAAvC;;AAA6C,SAAI,MAAMjC,CAAV,IAAeoC,CAAf,EAAiBA,CAAC,CAACpC,CAAD,CAAD,CAAKgD,OAAL,CAAc,CAAC9C,CAAD,EAAGE,CAAH,KAAO;AAAC2B,MAAAA,CAAC,CAACkB,GAAF,CAAMjD,CAAN,EAASI,CAAT,EAAY8C,QAAZ,GAAqBhD,CAArB;AAAuB,KAA7C;;AAAgD,QAAIE,CAAC,GAAC;AAAC+C,MAAAA,KAAK,EAAC,EAAC,GAAGd,CAAC,CAACc,KAAN;AAAYnB,QAAAA,CAAC,EAAC,MAAd;AAAqB,WAAGhB,CAAC,CAACoC,aAAF,CAAgBrB,CAAhB;AAAxB;AAAP,KAAN;AAA0D,WAAOC,CAAC,KAAG5B,CAAC,GAAC,EAAC,GAAG4B,CAAJ;AAAM,SAAG5B;AAAT,KAAL,CAAD,EAAmBJ,CAAC,CAAE,GAAEqC,CAAC,CAACK,IAAK,mBAAX,EAA8BtC,CAA9B,CAA3B;AAA4D,GAAvZ,EAA0ZmC,IAA1Z,CAAgavC,CAAC,IAAEe,CAAC,CAACsC,QAAF,CAAWrD,CAAC,CAACsD,IAAb,CAAna,CAA/Z;AAAu1B;;AAAA,SAAOvB,CAAC,IAAIwB,KAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport r from\"../request.js\";import{createQueryParamsHelper as e}from\"../core/queryUtils.js\";import{normalizeCentralMeridian as t}from\"../geometry/support/normalizeUtils.js\";import{collectGeometries as i,isInputGeometryZAware as a,fetchServiceDescription as s,dropZValuesOffInputGeometry as o}from\"./networkService.js\";import{parseUrl as n}from\"./utils.js\";import u from\"./support/ServiceAreaSolveResult.js\";const l=e({accumulateAttributes:{name:\"accumulateAttributeNames\"},attributeParameterValues:!0,defaultBreaks:!0,facilities:!0,outSpatialReference:{name:\"outSR\",getter:r=>r.outSpatialReference.wkid},pointBarriers:{name:\"barriers\"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:\"restrictionAttributeNames\"},returnPointBarriers:{name:\"returnBarriers\"},travelMode:!0});async function c(e,c,f){const p=[],m=[],B={},y={},h=n(e);return c.facilities&&c.facilities.features&&i(c.facilities.features,m,\"facilities.features\",B),c.pointBarriers&&c.pointBarriers.features&&i(c.pointBarriers.features,m,\"pointBarriers.features\",B),c.polylineBarriers&&c.polylineBarriers.features&&i(c.polylineBarriers.features,m,\"polylineBarriers.features\",B),c.polygonBarriers&&c.polygonBarriers.features&&i(c.polygonBarriers.features,m,\"polygonBarriers.features\",B),t(m).then((r=>{for(const e in B){const t=B[e];p.push(e),y[e]=r.slice(t[0],t[1])}return a(y,p)?s(h.path).catch((()=>({dontCheck:!0}))):Promise.resolve({dontCheck:!0})})).then((e=>{(\"dontCheck\"in e?e.dontCheck:e.hasZ)||o(y,p);for(const r in y)y[r].forEach(((e,t)=>{c.get(r)[t].geometry=e}));let t={query:{...h.query,f:\"json\",...l.toQueryParams(c)}};return f&&(t={...f,...t}),r(`${h.path}/solveServiceArea`,t)})).then((r=>u.fromJSON(r.data)))}export{c as solve};\n"]},"metadata":{},"sourceType":"module"}