{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { RgbaFloatEncoding as e } from \"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";\nimport { glsl as t } from \"../../../core/shaderModules/interfaces.js\";\nimport { EdgeUtil as a } from \"./EdgeUtil.glsl.js\";\nimport { UnpackAttributes as r } from \"./UnpackAttributes.glsl.js\";\n\nfunction u(u, s) {\n  const c = u.vertex;\n  u.include(r, s);\n  const l = u.fragment;\n\n  switch (a.usesSketchLogic(s) && (c.uniforms.add(\"uStrokesTextureScale\", \"vec2\"), c.uniforms.add(\"uStrokesLog2Resolution\", \"float\"), c.uniforms.add(\"uStrokeVariants\", \"float\"), u.varyings.add(\"vStrokeUV\", \"vec2\"), l.uniforms.add(\"uStrokesTexture\", \"sampler2D\"), l.uniforms.add(\"uStrokesNormalizationScale\", \"float\"), c.code.add(t`void calculateStyleOutputsSketch(float lineLength, UnpackedAttributes unpackedAttributes) {\nvec2 sidenessNorm = unpackedAttributes.sidenessNorm;\nfloat lineIndex = clamp(ceil(log2(lineLength)), 0.0, uStrokesLog2Resolution);\nvStrokeUV = vec2(exp2(lineIndex) * sidenessNorm.y, lineIndex * uStrokeVariants + variantStroke + 0.5) * uStrokesTextureScale;\nvStrokeUV.x += variantOffset;\n}`), u.fragment.include(e), l.code.add(t`float calculateLineOffsetSketch() {\nfloat offsetNorm = rgba2float(texture2D(uStrokesTexture, vStrokeUV));\nreturn (offsetNorm - 0.5) * uStrokesNormalizationScale;\n}\nfloat calculateLinePressureSketch() {\nreturn rgba2float(texture2D(uStrokesTexture, vStrokeUV + vec2(0.0, 0.5)));\n}`)), s.mode) {\n    case 0:\n      c.code.add(t`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes) {}`), l.code.add(t`float calculateLineOffset() {\nreturn 0.0;\n}\nfloat calculateLinePressure() {\nreturn 1.0;\n}`);\n      break;\n\n    case 1:\n      c.code.add(t`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}`), l.code.add(t`float calculateLineOffset() {\nreturn calculateLineOffsetSketch();\n}\nfloat calculateLinePressure() {\nreturn calculateLinePressureSketch();\n}`);\n      break;\n\n    case 2:\n      u.varyings.add(\"vType\", \"float\"), c.code.add(t`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\nvType = unpackedAttributes.type;\nif (unpackedAttributes.type <= 0.0) {\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}\n}`), l.code.add(t`float calculateLineOffset() {\nif (vType <= 0.0) {\nreturn calculateLineOffsetSketch();\n}\nelse {\nreturn 0.0;\n}\n}\nfloat calculateLinePressure() {\nif (vType <= 0.0) {\nreturn calculateLinePressureSketch();\n}\nelse {\nreturn 1.0;\n}\n}`);\n  }\n}\n\nexport { u as LineOffset };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js"],"names":["RgbaFloatEncoding","e","glsl","t","EdgeUtil","a","UnpackAttributes","r","u","s","c","vertex","include","l","fragment","usesSketchLogic","uniforms","add","varyings","code","mode","LineOffset"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,iBAAiB,IAAIC,CAA5B,QAAkC,4DAAlC;AAA+F,SAAOC,IAAI,IAAIC,CAAf,QAAqB,2CAArB;AAAiE,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,oBAAzB;AAA8C,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,4BAAjC;;AAA8D,SAASC,CAAT,CAAWA,CAAX,EAAaC,CAAb,EAAe;AAAC,QAAMC,CAAC,GAACF,CAAC,CAACG,MAAV;AAAiBH,EAAAA,CAAC,CAACI,OAAF,CAAUL,CAAV,EAAYE,CAAZ;AAAe,QAAMI,CAAC,GAACL,CAAC,CAACM,QAAV;;AAAmB,UAAOT,CAAC,CAACU,eAAF,CAAkBN,CAAlB,MAAuBC,CAAC,CAACM,QAAF,CAAWC,GAAX,CAAe,sBAAf,EAAsC,MAAtC,GAA8CP,CAAC,CAACM,QAAF,CAAWC,GAAX,CAAe,wBAAf,EAAwC,OAAxC,CAA9C,EAA+FP,CAAC,CAACM,QAAF,CAAWC,GAAX,CAAe,iBAAf,EAAiC,OAAjC,CAA/F,EAAyIT,CAAC,CAACU,QAAF,CAAWD,GAAX,CAAe,WAAf,EAA2B,MAA3B,CAAzI,EAA4KJ,CAAC,CAACG,QAAF,CAAWC,GAAX,CAAe,iBAAf,EAAiC,WAAjC,CAA5K,EAA0NJ,CAAC,CAACG,QAAF,CAAWC,GAAX,CAAe,4BAAf,EAA4C,OAA5C,CAA1N,EAA+QP,CAAC,CAACS,IAAF,CAAOF,GAAP,CAAWd,CAAE;AACzoB;AACA;AACA;AACA;AACA,EAL4nB,CAA/Q,EAKzWK,CAAC,CAACM,QAAF,CAAWF,OAAX,CAAmBX,CAAnB,CALyW,EAKnVY,CAAC,CAACM,IAAF,CAAOF,GAAP,CAAWd,CAAE;AACvC;AACA;AACA;AACA;AACA;AACA,EAN0B,CAL4T,GAWjVM,CAAC,CAACW,IAXwU;AAWlU,SAAK,CAAL;AAAOV,MAAAA,CAAC,CAACS,IAAF,CAAOF,GAAP,CAAWd,CAAE,sEAAb,GAAoFU,CAAC,CAACM,IAAF,CAAOF,GAAP,CAAWd,CAAE;AACrH;AACA;AACA;AACA;AACA,EALwG,CAApF;AAKhB;;AAAM,SAAK,CAAL;AAAOO,MAAAA,CAAC,CAACS,IAAF,CAAOF,GAAP,CAAWd,CAAE;AAC9B;AACA;AACA,EAHiB,GAGbU,CAAC,CAACM,IAAF,CAAOF,GAAP,CAAWd,CAAE;AACjB;AACA;AACA;AACA;AACA,EALI,CAHa;AAQb;;AAAM,SAAK,CAAL;AAAOK,MAAAA,CAAC,CAACU,QAAF,CAAWD,GAAX,CAAe,OAAf,EAAuB,OAAvB,GAAgCP,CAAC,CAACS,IAAF,CAAOF,GAAP,CAAWd,CAAE;AAC9D;AACA;AACA;AACA;AACA;AACA,EANiD,CAAhC,EAMbU,CAAC,CAACM,IAAF,CAAOF,GAAP,CAAWd,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAfI,CANa;AAxB8T;AA6C1U;;AAAA,SAAOK,CAAC,IAAIa,UAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{RgbaFloatEncoding as e}from\"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{glsl as t}from\"../../../core/shaderModules/interfaces.js\";import{EdgeUtil as a}from\"./EdgeUtil.glsl.js\";import{UnpackAttributes as r}from\"./UnpackAttributes.glsl.js\";function u(u,s){const c=u.vertex;u.include(r,s);const l=u.fragment;switch(a.usesSketchLogic(s)&&(c.uniforms.add(\"uStrokesTextureScale\",\"vec2\"),c.uniforms.add(\"uStrokesLog2Resolution\",\"float\"),c.uniforms.add(\"uStrokeVariants\",\"float\"),u.varyings.add(\"vStrokeUV\",\"vec2\"),l.uniforms.add(\"uStrokesTexture\",\"sampler2D\"),l.uniforms.add(\"uStrokesNormalizationScale\",\"float\"),c.code.add(t`void calculateStyleOutputsSketch(float lineLength, UnpackedAttributes unpackedAttributes) {\nvec2 sidenessNorm = unpackedAttributes.sidenessNorm;\nfloat lineIndex = clamp(ceil(log2(lineLength)), 0.0, uStrokesLog2Resolution);\nvStrokeUV = vec2(exp2(lineIndex) * sidenessNorm.y, lineIndex * uStrokeVariants + variantStroke + 0.5) * uStrokesTextureScale;\nvStrokeUV.x += variantOffset;\n}`),u.fragment.include(e),l.code.add(t`float calculateLineOffsetSketch() {\nfloat offsetNorm = rgba2float(texture2D(uStrokesTexture, vStrokeUV));\nreturn (offsetNorm - 0.5) * uStrokesNormalizationScale;\n}\nfloat calculateLinePressureSketch() {\nreturn rgba2float(texture2D(uStrokesTexture, vStrokeUV + vec2(0.0, 0.5)));\n}`)),s.mode){case 0:c.code.add(t`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes) {}`),l.code.add(t`float calculateLineOffset() {\nreturn 0.0;\n}\nfloat calculateLinePressure() {\nreturn 1.0;\n}`);break;case 1:c.code.add(t`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}`),l.code.add(t`float calculateLineOffset() {\nreturn calculateLineOffsetSketch();\n}\nfloat calculateLinePressure() {\nreturn calculateLinePressureSketch();\n}`);break;case 2:u.varyings.add(\"vType\",\"float\"),c.code.add(t`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\nvType = unpackedAttributes.type;\nif (unpackedAttributes.type <= 0.0) {\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}\n}`),l.code.add(t`float calculateLineOffset() {\nif (vType <= 0.0) {\nreturn calculateLineOffsetSketch();\n}\nelse {\nreturn 0.0;\n}\n}\nfloat calculateLinePressure() {\nif (vType <= 0.0) {\nreturn calculateLinePressureSketch();\n}\nelse {\nreturn 1.0;\n}\n}`)}}export{u as LineOffset};\n"]},"metadata":{},"sourceType":"module"}