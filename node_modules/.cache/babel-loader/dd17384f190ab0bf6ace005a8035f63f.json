{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Accessor.js\";\nimport r from \"../../../core/Handles.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/Logger.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport \"../../../core/mathUtils.js\";\nimport \"../../../geometry/support/ray.js\";\nimport \"../../../chunks/sphere.js\";\nimport \"../../../geometry/support/vectorStacks.js\";\nimport { applySurfaceCollisionConstraint as i } from \"../camera/constraintUtils/surfaceCollision.js\";\nimport \"../../../geometry/projectionEllipsoid.js\";\nimport { eyeWithinExtent as a } from \"../camera/intersectionUtils.js\";\nlet n = class extends t {\n  constructor(e) {\n    super(e), this.handles = new r();\n  }\n\n  initialize() {\n    this.handles.add(this.view.basemapTerrain.on(\"elevation-change\", e => this.handleElevationChangeEvent(e)));\n  }\n\n  destroy() {\n    this.handles && (this.handles.destroy(), this.handles = null);\n  }\n\n  handleElevationChangeEvent(e) {\n    if (this.view.state.cameraController) return;\n    const t = this.view.state.camera;\n    a(this.view, t, e.extent, e.spatialReference) && this.applyToCurrentCamera();\n  }\n\n  applyToCurrentCamera() {\n    this.view.state.updateCamera(e => {\n      i(this.view, e, 1);\n    });\n  }\n\n};\ne([s({\n  constructOnly: !0\n})], n.prototype, \"view\", void 0), n = e([o(\"esri.views.3d.state.ElevationCollisionConstraint\")], n);\nvar p = n;\nexport default p;\nexport { n as SurfaceCollisionConstraint };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/state/SurfaceCollisionConstraint.js"],"names":["_","e","t","r","property","s","subclass","o","applySurfaceCollisionConstraint","i","eyeWithinExtent","a","n","constructor","handles","initialize","add","view","basemapTerrain","on","handleElevationChangeEvent","destroy","state","cameraController","camera","extent","spatialReference","applyToCurrentCamera","updateCamera","constructOnly","prototype","p","SurfaceCollisionConstraint"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,8BAAlB;AAAiD,OAAOC,CAAP,MAAa,2BAAb;AAAyC,OAAOC,CAAP,MAAa,0BAAb;AAAwC,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,sDAAzB;AAAgF,OAAM,sBAAN;AAA6B,OAAM,6CAAN;AAAoD,OAAM,yBAAN;AAAgC,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,sDAAzB;AAAgF,OAAM,4BAAN;AAAmC,OAAM,kCAAN;AAAyC,OAAM,2BAAN;AAAkC,OAAM,2CAAN;AAAkD,SAAOC,+BAA+B,IAAIC,CAA1C,QAAgD,+CAAhD;AAAgG,OAAM,0CAAN;AAAiD,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,gCAAhC;AAAiE,IAAIC,CAAC,GAAC,cAAcV,CAAd,CAAe;AAACW,EAAAA,WAAW,CAACZ,CAAD,EAAG;AAAC,UAAMA,CAAN,GAAS,KAAKa,OAAL,GAAa,IAAIX,CAAJ,EAAtB;AAA4B;;AAAAY,EAAAA,UAAU,GAAE;AAAC,SAAKD,OAAL,CAAaE,GAAb,CAAiB,KAAKC,IAAL,CAAUC,cAAV,CAAyBC,EAAzB,CAA4B,kBAA5B,EAAgDlB,CAAC,IAAE,KAAKmB,0BAAL,CAAgCnB,CAAhC,CAAnD,CAAjB;AAA0G;;AAAAoB,EAAAA,OAAO,GAAE;AAAC,SAAKP,OAAL,KAAe,KAAKA,OAAL,CAAaO,OAAb,IAAuB,KAAKP,OAAL,GAAa,IAAnD;AAAyD;;AAAAM,EAAAA,0BAA0B,CAACnB,CAAD,EAAG;AAAC,QAAG,KAAKgB,IAAL,CAAUK,KAAV,CAAgBC,gBAAnB,EAAoC;AAAO,UAAMrB,CAAC,GAAC,KAAKe,IAAL,CAAUK,KAAV,CAAgBE,MAAxB;AAA+Bb,IAAAA,CAAC,CAAC,KAAKM,IAAN,EAAWf,CAAX,EAAaD,CAAC,CAACwB,MAAf,EAAsBxB,CAAC,CAACyB,gBAAxB,CAAD,IAA4C,KAAKC,oBAAL,EAA5C;AAAwE;;AAAAA,EAAAA,oBAAoB,GAAE;AAAC,SAAKV,IAAL,CAAUK,KAAV,CAAgBM,YAAhB,CAA8B3B,CAAC,IAAE;AAACQ,MAAAA,CAAC,CAAC,KAAKQ,IAAN,EAAWhB,CAAX,EAAa,CAAb,CAAD;AAAiB,KAAnD;AAAsD;;AAAne,CAArB;AAA0fA,CAAC,CAAC,CAACI,CAAC,CAAC;AAACwB,EAAAA,aAAa,EAAC,CAAC;AAAhB,CAAD,CAAF,CAAD,EAAyBjB,CAAC,CAACkB,SAA3B,EAAqC,MAArC,EAA4C,KAAK,CAAjD,CAAD,EAAqDlB,CAAC,GAACX,CAAC,CAAC,CAACM,CAAC,CAAC,kDAAD,CAAF,CAAD,EAAyDK,CAAzD,CAAxD;AAAoH,IAAImB,CAAC,GAACnB,CAAN;AAAQ,eAAemB,CAAf;AAAiB,SAAOnB,CAAC,IAAIoB,0BAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Accessor.js\";import r from\"../../../core/Handles.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/Logger.js\";import{subclass as o}from\"../../../core/accessorSupport/decorators/subclass.js\";import\"../../../core/mathUtils.js\";import\"../../../geometry/support/ray.js\";import\"../../../chunks/sphere.js\";import\"../../../geometry/support/vectorStacks.js\";import{applySurfaceCollisionConstraint as i}from\"../camera/constraintUtils/surfaceCollision.js\";import\"../../../geometry/projectionEllipsoid.js\";import{eyeWithinExtent as a}from\"../camera/intersectionUtils.js\";let n=class extends t{constructor(e){super(e),this.handles=new r}initialize(){this.handles.add(this.view.basemapTerrain.on(\"elevation-change\",(e=>this.handleElevationChangeEvent(e))))}destroy(){this.handles&&(this.handles.destroy(),this.handles=null)}handleElevationChangeEvent(e){if(this.view.state.cameraController)return;const t=this.view.state.camera;a(this.view,t,e.extent,e.spatialReference)&&this.applyToCurrentCamera()}applyToCurrentCamera(){this.view.state.updateCamera((e=>{i(this.view,e,1)}))}};e([s({constructOnly:!0})],n.prototype,\"view\",void 0),n=e([o(\"esri.views.3d.state.ElevationCollisionConstraint\")],n);var p=n;export default p;export{n as SurfaceCollisionConstraint};\n"]},"metadata":{},"sourceType":"module"}