{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { result as e, assertResult as t } from \"../../../../core/asyncUtils.js\";\nimport r from \"../../../../core/has.js\";\nimport { clone as i } from \"../../../../core/lang.js\";\nimport { isNone as o, isSome as n } from \"../../../../core/maybe.js\";\nimport { eachAlways as s, isAbortError as a } from \"../../../../core/promiseUtils.js\";\nimport { makeAbsolute as u } from \"../../../../core/urlUtils.js\";\nimport { readBinaryAttribute as l, createGeometryDescriptor as f } from \"./I3SBinaryReader.js\";\nimport { getMaterialAndTextures as d, getMaterialAndTexturesFromShared as c, selectEncoding as m } from \"./I3SMaterialUtil.js\";\n\nclass h {\n  constructor(e, t, r, i, o, n) {\n    if (this.streamDataController = t, this.logger = r, this.defaultGeometrySchema = i, this.requiredAttributes = o, this.options = n, this.logLayer = e, this.layerUrl = e.parsedUrl.path, this.geometryDefinitions = e.geometryDefinitions, e.materialDefinitions) {\n      const t = e.textureSetDefinitions;\n      this.materialAndTextures = e.materialDefinitions.map(e => d(t, e));\n    }\n  }\n\n  load(e, t, r) {\n    return this.streamDataController.request(e, t, r);\n  }\n\n  loadAttribute(e, t, r) {\n    const i = `${this.layerUrl}/nodes/${e.resources.attributes}/attributes/${t.key}/0`;\n    return this.load(i, \"binary\", r).then(e => l(t, e));\n  }\n\n  loadAttributes(e, t, r) {\n    return s(t.map(t => this.loadAttribute(e, t.attributeStorageInfo, r))).then(r => {\n      const i = {};\n\n      for (let o = 0; o < t.length; ++o) if (r[o].value) i[t[o].name] = r[o].value;else {\n        if (a(r[o].error)) throw r[o].error;\n        this.logger.error(\"#loadAttributes\", this.logLayer, `Failed to load attributeData for '${t[o].name}' on node '${e.id}'`, r[o].error);\n      }\n\n      return i;\n    });\n  }\n\n  async loadNodeData(r, i) {\n    const s = null != this.requiredAttributes && r.resources.attributes ? e(this.loadAttributes(r, this.requiredAttributes, i)) : null,\n          {\n      bufferDefinition: a,\n      bufferIndex: u\n    } = p(this.geometryDefinitions, r),\n          l = !!r.resources.geometry,\n          d = l ? e(this.loadGeometry(r.resources.geometry, u, i)) : null,\n          m = r.resources.hasSharedResource ? await this.loadShared(r, i) : null,\n          h = this.materialAndTextures && r.resources.materialDefinition >= 0 ? this.materialAndTextures[r.resources.materialDefinition] : null != m ? c(m) : null,\n          x = h && h.material,\n          A = h && h.textures,\n          $ = `${r.id}`,\n          w = !l && this.options.loadFeatureData,\n          T = w ? await this.loadFeatureData($, i) : null,\n          j = w ? y(T) : g(x),\n          I = o(j) && b(T),\n          U = null != A && A.length > 0 ? e(this.loadTextures(r, A, i)) : null;\n    let S = null,\n        q = null;\n\n    if (d) {\n      S = t(await d);\n      const e = D(this.defaultGeometrySchema, m);\n      q = f(a, e);\n    }\n\n    const v = U ? t(await U) : null,\n          P = s ? t(await s) : {},\n          k = P ? {\n      attributeData: P,\n      loadedAttributes: this.requiredAttributes\n    } : null;\n    return n(j) ? {\n      geometryData: j,\n      attributeDataInfo: k,\n      geometryBuffer: S,\n      geometryDescriptor: q,\n      requiredTextures: A,\n      textureData: v\n    } : n(I) ? {\n      pointData: I,\n      attributeDataInfo: k,\n      geometryBuffer: S,\n      geometryDescriptor: q,\n      requiredTextures: A,\n      textureData: v\n    } : Promise.reject();\n  }\n\n  static addAbsoluteHrefTexture(e, t) {\n    const r = e.textureDefinitions;\n    if (null != r) for (const i of Object.keys(r)) for (const e of r[i].images) Array.isArray(e.href) ? e.hrefConcat = e.href.map(e => u(e, t)) : e.hrefConcat = u(e.href, t);\n  }\n\n  static fixTextureEncodings(e) {\n    const t = e.textureDefinitions;\n    if (null != t) for (const r in t) {\n      const e = t[r];\n      if (Array.isArray(e.encoding)) for (let t = 0; t < e.encoding.length; t++) {\n        const r = e.encoding[t];\n        \"data:\" === r.substring(0, 5) && (e.encoding[t] = r.substring(5));\n      } else {\n        const t = e.encoding;\n        \"data:\" === t.substring(0, 5) && (e.encoding = t.substring(5));\n      }\n    }\n  }\n\n  loadShared(e, t) {\n    const r = `${this.layerUrl}/nodes/${e.resources.geometry}/shared`;\n    return this.load(r, \"json\", t).then(e => (h.fixTextureEncodings(e), h.addAbsoluteHrefTexture(e, r), e));\n  }\n\n  loadTexture(e, t, r, i, o, n) {\n    let s = !1;\n    return 4 === o || 1 === o || 2 === o ? this.load(e, \"binary\", n).then(e => ({\n      id: t,\n      usage: r,\n      data: e,\n      encoding: o,\n      downsampled: s\n    })) : this.load(e, \"image\", n).then(e => {\n      let n = e;\n      const a = 4096,\n            u = 2;\n\n      if (i && e.width * e.height >= a) {\n        const t = Math.ceil(e.width / u),\n              r = Math.ceil(e.height / u),\n              i = document.createElement(\"canvas\");\n        i.width = t, i.height = r;\n        i.getContext(\"2d\").drawImage(e, 0, 0, t, r), n = i, s = !0;\n      }\n\n      return {\n        id: t,\n        usage: r,\n        data: n,\n        encoding: o,\n        downsampled: s\n      };\n    });\n  }\n\n  loadTextures(e, t, r) {\n    const i = this.options.uncompressedTextureDownsamplingEnabled,\n          o = this.options.textureUsageMask;\n    return Promise.all(t.map(t => {\n      if (0 == (t.usage & o)) return null;\n      const n = m(t.encodings, this.options.textureEncodings);\n      if (null == n) return this.logger.error(\"#loadTextures\", this.logLayer, `No known encoding for texture found on node ${e.id}`), Promise.reject();\n      const s = e.resources.texture || e.id,\n            a = `${this.layerUrl}/nodes/${s}/textures/${n.name}`;\n      return this.loadTexture(a, t.id, t.usage, i, n.encoding, r);\n    }));\n  }\n\n  loadFeatureData(e, t) {\n    const r = `${this.layerUrl}/nodes/${e}/features/0`;\n    return this.load(r, \"json\", t);\n  }\n\n  loadGeometry(e, t, r) {\n    const i = `${this.layerUrl}/nodes/${e}/geometries/${t}`;\n    return this.load(i, \"binary\", r);\n  }\n\n}\n\nfunction g(e) {\n  return {\n    featureIds: [],\n    geometries: [{\n      type: \"ArrayBufferView\",\n      params: {\n        material: e\n      }\n    }],\n    featureDataPosition: [0, 0, 0]\n  };\n}\n\nfunction y(e) {\n  for (const t of e.featureData) {\n    const e = t.geometries;\n    if (null != e) for (const r of e) return {\n      featureIds: [t.id],\n      featureDataPosition: t.position,\n      geometries: [r]\n    };\n  }\n\n  return null;\n}\n\nfunction b(e) {\n  const t = new Array();\n\n  for (const r of e.featureData) null != r.position && t.push({\n    featureIds: [r.id],\n    featureDataPosition: r.position,\n    geometries: null\n  });\n\n  return t;\n}\n\nfunction D(e, t) {\n  if (!e || !t || !t.materialDefinitions) return e;\n  const r = Object.keys(t.materialDefinitions)[0];\n  return !t.materialDefinitions[r].params.vertexRegions && e.vertexAttributes.region && delete (e = i(e)).vertexAttributes.region, e;\n}\n\nfunction p(e, t) {\n  const i = {\n    bufferDefinition: null,\n    bufferIndex: 0\n  };\n  if (null == e || t.resources.geometryDefinition < 0) return i;\n  const o = t.resources.geometryDefinition >= 0 ? e[t.resources.geometryDefinition].geometryBuffers : null;\n  if (null == o) return i;\n\n  for (let n = 0; n < o.length; n++) {\n    const e = o[n];\n    if (null == e.compressedAttributes) i.bufferIndex = n, i.bufferDefinition = o[n];else if (\"draco\" === e.compressedAttributes.encoding && !r(\"disable-feature:i3s-draco\")) return i.bufferIndex = n, i.bufferDefinition = e, i;\n  }\n\n  return i;\n}\n\nexport default h;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/layers/i3s/I3SNodeLoader.js"],"names":["result","e","assertResult","t","r","clone","i","isNone","o","isSome","n","eachAlways","s","isAbortError","a","makeAbsolute","u","readBinaryAttribute","l","createGeometryDescriptor","f","getMaterialAndTextures","d","getMaterialAndTexturesFromShared","c","selectEncoding","m","h","constructor","streamDataController","logger","defaultGeometrySchema","requiredAttributes","options","logLayer","layerUrl","parsedUrl","path","geometryDefinitions","materialDefinitions","textureSetDefinitions","materialAndTextures","map","load","request","loadAttribute","resources","attributes","key","then","loadAttributes","attributeStorageInfo","length","value","name","error","id","loadNodeData","bufferDefinition","bufferIndex","p","geometry","loadGeometry","hasSharedResource","loadShared","materialDefinition","x","material","A","textures","$","w","loadFeatureData","T","j","y","g","I","b","U","loadTextures","S","q","D","v","P","k","attributeData","loadedAttributes","geometryData","attributeDataInfo","geometryBuffer","geometryDescriptor","requiredTextures","textureData","pointData","Promise","reject","addAbsoluteHrefTexture","textureDefinitions","Object","keys","images","Array","isArray","href","hrefConcat","fixTextureEncodings","encoding","substring","loadTexture","usage","data","downsampled","width","height","Math","ceil","document","createElement","getContext","drawImage","uncompressedTextureDownsamplingEnabled","textureUsageMask","all","encodings","textureEncodings","texture","featureIds","geometries","type","params","featureDataPosition","featureData","position","push","vertexRegions","vertexAttributes","region","geometryDefinition","geometryBuffers","compressedAttributes"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{result as e,assertResult as t}from\"../../../../core/asyncUtils.js\";import r from\"../../../../core/has.js\";import{clone as i}from\"../../../../core/lang.js\";import{isNone as o,isSome as n}from\"../../../../core/maybe.js\";import{eachAlways as s,isAbortError as a}from\"../../../../core/promiseUtils.js\";import{makeAbsolute as u}from\"../../../../core/urlUtils.js\";import{readBinaryAttribute as l,createGeometryDescriptor as f}from\"./I3SBinaryReader.js\";import{getMaterialAndTextures as d,getMaterialAndTexturesFromShared as c,selectEncoding as m}from\"./I3SMaterialUtil.js\";class h{constructor(e,t,r,i,o,n){if(this.streamDataController=t,this.logger=r,this.defaultGeometrySchema=i,this.requiredAttributes=o,this.options=n,this.logLayer=e,this.layerUrl=e.parsedUrl.path,this.geometryDefinitions=e.geometryDefinitions,e.materialDefinitions){const t=e.textureSetDefinitions;this.materialAndTextures=e.materialDefinitions.map((e=>d(t,e)))}}load(e,t,r){return this.streamDataController.request(e,t,r)}loadAttribute(e,t,r){const i=`${this.layerUrl}/nodes/${e.resources.attributes}/attributes/${t.key}/0`;return this.load(i,\"binary\",r).then((e=>l(t,e)))}loadAttributes(e,t,r){return s(t.map((t=>this.loadAttribute(e,t.attributeStorageInfo,r)))).then((r=>{const i={};for(let o=0;o<t.length;++o)if(r[o].value)i[t[o].name]=r[o].value;else{if(a(r[o].error))throw r[o].error;this.logger.error(\"#loadAttributes\",this.logLayer,`Failed to load attributeData for '${t[o].name}' on node '${e.id}'`,r[o].error)}return i}))}async loadNodeData(r,i){const s=null!=this.requiredAttributes&&r.resources.attributes?e(this.loadAttributes(r,this.requiredAttributes,i)):null,{bufferDefinition:a,bufferIndex:u}=p(this.geometryDefinitions,r),l=!!r.resources.geometry,d=l?e(this.loadGeometry(r.resources.geometry,u,i)):null,m=r.resources.hasSharedResource?await this.loadShared(r,i):null,h=this.materialAndTextures&&r.resources.materialDefinition>=0?this.materialAndTextures[r.resources.materialDefinition]:null!=m?c(m):null,x=h&&h.material,A=h&&h.textures,$=`${r.id}`,w=!l&&this.options.loadFeatureData,T=w?await this.loadFeatureData($,i):null,j=w?y(T):g(x),I=o(j)&&b(T),U=null!=A&&A.length>0?e(this.loadTextures(r,A,i)):null;let S=null,q=null;if(d){S=t(await d);const e=D(this.defaultGeometrySchema,m);q=f(a,e)}const v=U?t(await U):null,P=s?t(await s):{},k=P?{attributeData:P,loadedAttributes:this.requiredAttributes}:null;return n(j)?{geometryData:j,attributeDataInfo:k,geometryBuffer:S,geometryDescriptor:q,requiredTextures:A,textureData:v}:n(I)?{pointData:I,attributeDataInfo:k,geometryBuffer:S,geometryDescriptor:q,requiredTextures:A,textureData:v}:Promise.reject()}static addAbsoluteHrefTexture(e,t){const r=e.textureDefinitions;if(null!=r)for(const i of Object.keys(r))for(const e of r[i].images)Array.isArray(e.href)?e.hrefConcat=e.href.map((e=>u(e,t))):e.hrefConcat=u(e.href,t)}static fixTextureEncodings(e){const t=e.textureDefinitions;if(null!=t)for(const r in t){const e=t[r];if(Array.isArray(e.encoding))for(let t=0;t<e.encoding.length;t++){const r=e.encoding[t];\"data:\"===r.substring(0,5)&&(e.encoding[t]=r.substring(5))}else{const t=e.encoding;\"data:\"===t.substring(0,5)&&(e.encoding=t.substring(5))}}}loadShared(e,t){const r=`${this.layerUrl}/nodes/${e.resources.geometry}/shared`;return this.load(r,\"json\",t).then((e=>(h.fixTextureEncodings(e),h.addAbsoluteHrefTexture(e,r),e)))}loadTexture(e,t,r,i,o,n){let s=!1;return 4===o||1===o||2===o?this.load(e,\"binary\",n).then((e=>({id:t,usage:r,data:e,encoding:o,downsampled:s}))):this.load(e,\"image\",n).then((e=>{let n=e;const a=4096,u=2;if(i&&e.width*e.height>=a){const t=Math.ceil(e.width/u),r=Math.ceil(e.height/u),i=document.createElement(\"canvas\");i.width=t,i.height=r;i.getContext(\"2d\").drawImage(e,0,0,t,r),n=i,s=!0}return{id:t,usage:r,data:n,encoding:o,downsampled:s}}))}loadTextures(e,t,r){const i=this.options.uncompressedTextureDownsamplingEnabled,o=this.options.textureUsageMask;return Promise.all(t.map((t=>{if(0==(t.usage&o))return null;const n=m(t.encodings,this.options.textureEncodings);if(null==n)return this.logger.error(\"#loadTextures\",this.logLayer,`No known encoding for texture found on node ${e.id}`),Promise.reject();const s=e.resources.texture||e.id,a=`${this.layerUrl}/nodes/${s}/textures/${n.name}`;return this.loadTexture(a,t.id,t.usage,i,n.encoding,r)})))}loadFeatureData(e,t){const r=`${this.layerUrl}/nodes/${e}/features/0`;return this.load(r,\"json\",t)}loadGeometry(e,t,r){const i=`${this.layerUrl}/nodes/${e}/geometries/${t}`;return this.load(i,\"binary\",r)}}function g(e){return{featureIds:[],geometries:[{type:\"ArrayBufferView\",params:{material:e}}],featureDataPosition:[0,0,0]}}function y(e){for(const t of e.featureData){const e=t.geometries;if(null!=e)for(const r of e)return{featureIds:[t.id],featureDataPosition:t.position,geometries:[r]}}return null}function b(e){const t=new Array;for(const r of e.featureData)null!=r.position&&t.push({featureIds:[r.id],featureDataPosition:r.position,geometries:null});return t}function D(e,t){if(!e||!t||!t.materialDefinitions)return e;const r=Object.keys(t.materialDefinitions)[0];return!t.materialDefinitions[r].params.vertexRegions&&e.vertexAttributes.region&&delete(e=i(e)).vertexAttributes.region,e}function p(e,t){const i={bufferDefinition:null,bufferIndex:0};if(null==e||t.resources.geometryDefinition<0)return i;const o=t.resources.geometryDefinition>=0?e[t.resources.geometryDefinition].geometryBuffers:null;if(null==o)return i;for(let n=0;n<o.length;n++){const e=o[n];if(null==e.compressedAttributes)i.bufferIndex=n,i.bufferDefinition=o[n];else if(\"draco\"===e.compressedAttributes.encoding&&!r(\"disable-feature:i3s-draco\"))return i.bufferIndex=n,i.bufferDefinition=e,i}return i}export default h;\n"]},"metadata":{},"sourceType":"module"}