{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { pt2px as t } from \"../../core/screenUtils.js\";\n\nfunction e(t) {\n  return `rgb(${t.slice(0, 3).toString()})`;\n}\n\nfunction i(t) {\n  return `rgba(${t.slice(0, 3).toString()},${t[3]})`;\n}\n\nclass r {\n  constructor() {}\n\n  rasterizeText(t, r) {\n    this._textRasterizationCanvas || (this._textRasterizationCanvas = document.createElement(\"canvas\"));\n    const o = this._textRasterizationCanvas,\n          n = o.getContext(\"2d\");\n    this.setFontProperties(n, r), this.parameters = r, this.textLines = t.split(/\\r?\\n/), this.lineHeight = this.computeLineHeight();\n    const a = this.computeTextWidth(n, r),\n          h = this.lineHeight * this.textLines.length;\n    o.width = a, o.height = h, this.renderedLineHeight = Math.round(this.lineHeight * r.pixelRatio), this.renderedHaloSize = r.halo.size * r.pixelRatio, this.renderedWidth = a * r.pixelRatio, this.renderedHeight = h * r.pixelRatio, this.fillStyle = i(r.color), this.haloStyle = e(r.halo.color);\n    const l = this.renderedLineHeight,\n          d = this.renderedHaloSize;\n    this.setFontProperties(n, r);\n    const c = s(n.textAlign, this.renderedWidth) + d,\n          g = d;\n    let f = 0,\n        p = 0;\n    d > 0 && this.renderHalo(n, c, g, f, p, r), p += g, f += c;\n\n    for (const e of this.textLines) n.globalCompositeOperation = \"destination-out\", n.fillStyle = \"rgb(0, 0, 0)\", n.fillText(e, f, p), n.globalCompositeOperation = \"source-over\", n.fillStyle = this.fillStyle, n.fillText(e, f, p), p += l;\n\n    const u = n.getImageData(0, 0, this.renderedWidth, this.renderedHeight),\n          x = new Uint8Array(u.data);\n\n    if (r.premultiplyColors) {\n      let t;\n\n      for (let e = 0; e < x.length; e += 4) t = x[e + 3] / 255, x[e] = x[e] * t, x[e + 1] = x[e + 1] * t, x[e + 2] = x[e + 2] * t;\n    }\n\n    return {\n      size: [this.renderedWidth, this.renderedHeight],\n      image: new Uint32Array(x.buffer),\n      sdf: !1,\n      simplePattern: !1,\n      anchorX: 0,\n      anchorY: 0\n    };\n  }\n\n  renderHalo(t, e, i, r, s, o) {\n    const n = this.renderedWidth,\n          a = this.renderedHeight;\n    this._haloRasterizationCanvas || (this._haloRasterizationCanvas = document.createElement(\"canvas\")), this._haloRasterizationCanvas.width = n, this._haloRasterizationCanvas.height = a;\n    const h = this._haloRasterizationCanvas,\n          l = h.getContext(\"2d\");\n    l.clearRect(0, 0, n, a), this.setFontProperties(l, o), l.fillStyle = this.haloStyle, l.strokeStyle = this.haloStyle;\n    const d = this.renderedHaloSize < 3;\n    l.lineJoin = d ? \"miter\" : \"round\", d ? this.renderHaloEmulated(l, e, i) : this.renderHaloNative(l, e, i), t.globalAlpha = this.parameters.halo.color[3], t.drawImage(h, 0, 0, n, a, r, s, n, a), t.globalAlpha = 1;\n  }\n\n  renderHaloEmulated(t, e, i) {\n    const r = this.renderedLineHeight,\n          s = this.renderedHaloSize;\n\n    for (const n of this.textLines) {\n      for (const [r, a] of o) t.fillText(n, e + s * r, i + s * a);\n\n      i += r;\n    }\n  }\n\n  renderHaloNative(t, e, i) {\n    const r = this.renderedLineHeight,\n          s = this.renderedHaloSize;\n\n    for (const o of this.textLines) {\n      const n = 2 * s,\n            a = 5,\n            h = .1;\n\n      for (let r = 0; r < a; r++) {\n        const s = 1 - (a - 1) * h + r * h;\n        t.lineWidth = s * n, t.strokeText(o, e, i);\n      }\n\n      i += r;\n    }\n  }\n\n  setFontProperties(e, i) {\n    const r = i.font,\n          s = `${r.style} ${r.weight} ${t(i.size * i.pixelRatio)}px ${r.family}, sans-serif`;\n    let o;\n\n    switch (e.font = s, e.textBaseline = \"top\", i.horizontalAlignment) {\n      case \"left\":\n        o = \"left\";\n        break;\n\n      case \"right\":\n        o = \"right\";\n        break;\n\n      case \"center\":\n        o = \"center\";\n        break;\n\n      default:\n        o = \"left\";\n    }\n\n    e.textAlign = o;\n  }\n\n  computeTextWidth(t, e) {\n    let i = 0;\n\n    for (const s of this.textLines) i = Math.max(i, t.measureText(s).width);\n\n    const r = e.font;\n    return (\"italic\" === r.style || \"oblique\" === r.style || \"string\" == typeof r.weight && (\"bold\" === r.weight || \"bolder\" === r.weight) || \"number\" == typeof r.weight && r.weight > 600) && (i += .3 * t.measureText(\"A\").width), i += 2 * this.parameters.halo.size, Math.round(i);\n  }\n\n  computeLineHeight() {\n    const t = 1.275 * this.parameters.size;\n    return Math.round(t + 2 * this.parameters.halo.size);\n  }\n\n}\n\nfunction s(t, e) {\n  return \"center\" === t ? .5 * e : \"right\" === t ? e : 0;\n}\n\nconst o = [];\n{\n  const t = 16;\n\n  for (let e = 0; e < 360; e += 360 / t) o.push([Math.cos(Math.PI * e / 180), Math.sin(Math.PI * e / 180)]);\n}\nexport default r;\nexport { r as TextRasterizer };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/symbols/cim/TextRasterizer.js"],"names":["pt2px","t","e","slice","toString","i","r","constructor","rasterizeText","_textRasterizationCanvas","document","createElement","o","n","getContext","setFontProperties","parameters","textLines","split","lineHeight","computeLineHeight","a","computeTextWidth","h","length","width","height","renderedLineHeight","Math","round","pixelRatio","renderedHaloSize","halo","size","renderedWidth","renderedHeight","fillStyle","color","haloStyle","l","d","c","s","textAlign","g","f","p","renderHalo","globalCompositeOperation","fillText","u","getImageData","x","Uint8Array","data","premultiplyColors","image","Uint32Array","buffer","sdf","simplePattern","anchorX","anchorY","_haloRasterizationCanvas","clearRect","strokeStyle","lineJoin","renderHaloEmulated","renderHaloNative","globalAlpha","drawImage","lineWidth","strokeText","font","style","weight","family","textBaseline","horizontalAlignment","max","measureText","push","cos","PI","sin","TextRasterizer"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{pt2px as t}from\"../../core/screenUtils.js\";function e(t){return`rgb(${t.slice(0,3).toString()})`}function i(t){return`rgba(${t.slice(0,3).toString()},${t[3]})`}class r{constructor(){}rasterizeText(t,r){this._textRasterizationCanvas||(this._textRasterizationCanvas=document.createElement(\"canvas\"));const o=this._textRasterizationCanvas,n=o.getContext(\"2d\");this.setFontProperties(n,r),this.parameters=r,this.textLines=t.split(/\\r?\\n/),this.lineHeight=this.computeLineHeight();const a=this.computeTextWidth(n,r),h=this.lineHeight*this.textLines.length;o.width=a,o.height=h,this.renderedLineHeight=Math.round(this.lineHeight*r.pixelRatio),this.renderedHaloSize=r.halo.size*r.pixelRatio,this.renderedWidth=a*r.pixelRatio,this.renderedHeight=h*r.pixelRatio,this.fillStyle=i(r.color),this.haloStyle=e(r.halo.color);const l=this.renderedLineHeight,d=this.renderedHaloSize;this.setFontProperties(n,r);const c=s(n.textAlign,this.renderedWidth)+d,g=d;let f=0,p=0;d>0&&this.renderHalo(n,c,g,f,p,r),p+=g,f+=c;for(const e of this.textLines)n.globalCompositeOperation=\"destination-out\",n.fillStyle=\"rgb(0, 0, 0)\",n.fillText(e,f,p),n.globalCompositeOperation=\"source-over\",n.fillStyle=this.fillStyle,n.fillText(e,f,p),p+=l;const u=n.getImageData(0,0,this.renderedWidth,this.renderedHeight),x=new Uint8Array(u.data);if(r.premultiplyColors){let t;for(let e=0;e<x.length;e+=4)t=x[e+3]/255,x[e]=x[e]*t,x[e+1]=x[e+1]*t,x[e+2]=x[e+2]*t}return{size:[this.renderedWidth,this.renderedHeight],image:new Uint32Array(x.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}renderHalo(t,e,i,r,s,o){const n=this.renderedWidth,a=this.renderedHeight;this._haloRasterizationCanvas||(this._haloRasterizationCanvas=document.createElement(\"canvas\")),this._haloRasterizationCanvas.width=n,this._haloRasterizationCanvas.height=a;const h=this._haloRasterizationCanvas,l=h.getContext(\"2d\");l.clearRect(0,0,n,a),this.setFontProperties(l,o),l.fillStyle=this.haloStyle,l.strokeStyle=this.haloStyle;const d=this.renderedHaloSize<3;l.lineJoin=d?\"miter\":\"round\",d?this.renderHaloEmulated(l,e,i):this.renderHaloNative(l,e,i),t.globalAlpha=this.parameters.halo.color[3],t.drawImage(h,0,0,n,a,r,s,n,a),t.globalAlpha=1}renderHaloEmulated(t,e,i){const r=this.renderedLineHeight,s=this.renderedHaloSize;for(const n of this.textLines){for(const[r,a]of o)t.fillText(n,e+s*r,i+s*a);i+=r}}renderHaloNative(t,e,i){const r=this.renderedLineHeight,s=this.renderedHaloSize;for(const o of this.textLines){const n=2*s,a=5,h=.1;for(let r=0;r<a;r++){const s=1-(a-1)*h+r*h;t.lineWidth=s*n,t.strokeText(o,e,i)}i+=r}}setFontProperties(e,i){const r=i.font,s=`${r.style} ${r.weight} ${t(i.size*i.pixelRatio)}px ${r.family}, sans-serif`;let o;switch(e.font=s,e.textBaseline=\"top\",i.horizontalAlignment){case\"left\":o=\"left\";break;case\"right\":o=\"right\";break;case\"center\":o=\"center\";break;default:o=\"left\"}e.textAlign=o}computeTextWidth(t,e){let i=0;for(const s of this.textLines)i=Math.max(i,t.measureText(s).width);const r=e.font;return(\"italic\"===r.style||\"oblique\"===r.style||\"string\"==typeof r.weight&&(\"bold\"===r.weight||\"bolder\"===r.weight)||\"number\"==typeof r.weight&&r.weight>600)&&(i+=.3*t.measureText(\"A\").width),i+=2*this.parameters.halo.size,Math.round(i)}computeLineHeight(){const t=1.275*this.parameters.size;return Math.round(t+2*this.parameters.halo.size)}}function s(t,e){return\"center\"===t?.5*e:\"right\"===t?e:0}const o=[];{const t=16;for(let e=0;e<360;e+=360/t)o.push([Math.cos(Math.PI*e/180),Math.sin(Math.PI*e/180)])}export default r;export{r as TextRasterizer};\n"]},"metadata":{},"sourceType":"module"}