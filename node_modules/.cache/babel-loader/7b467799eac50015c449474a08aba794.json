{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../Color.js\";\nimport \"../../rasterRenderers.js\";\nimport { isSome as t, unwrap as n } from \"../../core/maybe.js\";\nimport { getMetersPerUnitForSR as r } from \"../../core/unitUtils.js\";\nimport l from \"../../layers/support/Field.js\";\nimport a from \"../../layers/support/RasterInfo.js\";\nimport o from \"./AuthoringInfo.js\";\nimport s from \"./ClassBreakInfo.js\";\nimport { PREDEFINED_JSON_COLOR_RAMPS as i, convertColorRampToColormap as u } from \"./colorRampUtils.js\";\nimport m from \"./UniqueValueInfo.js\";\nimport c from \"../../rest/support/AlgorithmicColorRamp.js\";\nimport f from \"../../rest/support/ClassBreaksDefinition.js\";\nimport { createGenerateRendererClassBreaks as d } from \"../../rest/support/generateRendererUtils.js\";\nimport p from \"../../rest/support/MultipartColorRamp.js\";\nimport b from \"../RasterStretchRenderer.js\";\nimport h from \"../UniqueValueRenderer.js\";\nimport v from \"../RasterColormapRenderer.js\";\nimport y from \"../RasterShadedReliefRenderer.js\";\nimport g from \"../ClassBreaksRenderer.js\";\nimport C from \"../VectorFieldRenderer.js\";\nconst w = .25,\n      x = p.fromJSON({\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [0, 0, 255],\n    toColor: [0, 255, 255]\n  }, {\n    fromColor: [0, 255, 255],\n    toColor: [255, 255, 0]\n  }, {\n    fromColor: [255, 255, 0],\n    toColor: [255, 0, 0]\n  }]\n}),\n      R = p.fromJSON(i[0]),\n      j = new Set([\"scientific\", \"standard-time\", \"vector-uv\", \"vector-magdir\", \"vector-u\", \"vector-v\", \"vector-magnitude\", \"vector-direction\"]);\n\nfunction M(e, n) {\n  const {\n    attributeTable: r,\n    colormap: l\n  } = e;\n\n  if (G(e)) {\n    const n = H(e);\n    if (t(n)) return n;\n  }\n\n  if (t(l)) {\n    const n = F(e);\n    if (t(n)) return n;\n  }\n\n  if (t(r)) {\n    const n = q(e);\n    if (t(n)) return n;\n  }\n\n  return I(e, n);\n}\n\nfunction T(e) {\n  const t = [\"raster-stretch\"];\n  return z(e) && t.push(\"raster-colormap\"), P(e) && t.push(\"unique-value\"), D(e) && t.push(\"class-breaks\"), A(e) && t.push(\"raster-shaded-relief\"), G(e) && t.push(\"vector-field\"), t;\n}\n\nfunction V(e, t, n) {\n  const r = [\"nearest\", \"bilinear\", \"cubic\", \"majority\"].find(e => e === (null == n ? void 0 : n.toLowerCase()));\n  if (\"Map\" === t) return null != r ? r : \"bilinear\";\n  if (\"standard-time\" === e.dataType) return null != r ? r : \"nearest\";\n  return \"thematic\" === e.dataType || e.attributeTable || e.colormap ? \"nearest\" === r || \"majority\" === r ? r : \"nearest\" : null != r ? r : \"bilinear\";\n}\n\nfunction I(e, r) {\n  var l, a, o, s;\n  e = k(e, null == r ? void 0 : r.variableName);\n  const {\n    bandCount: i\n  } = e;\n  let {\n    bandIds: u,\n    stretchType: m\n  } = r || {};\n  null != (l = u) && l.some(e => e >= i) && (u = null);\n  let c = n(e.statistics),\n      f = n(e.histograms);\n  var d;\n  i > 1 ? (u = null != (d = u) && d.length ? u : S(e), c = null == c ? null : u.map(e => c[e]), f = null == f ? null : u.map(e => f[e])) : u = [0];\n  null == m && (m = O(e));\n  let p = !1;\n\n  switch (m) {\n    case \"none\":\n      p = !1;\n      break;\n\n    case \"percent-clip\":\n      p = !(null != (a = f) && a.length);\n      break;\n\n    default:\n      p = !(null != (o = c) && o.length);\n  }\n\n  const {\n    dataType: h\n  } = e,\n        v = 1 === (null == (s = u) ? void 0 : s.length) && j.has(h) ? x : null,\n        y = new b({\n    stretchType: m,\n    dynamicRangeAdjustment: p,\n    colorRamp: v,\n    outputMin: 0,\n    outputMax: 255,\n    gamma: 1 === u.length ? [1] : [1, 1, 1],\n    useGamma: !1\n  });\n  return \"percent-clip\" === m ? y.maxPercent = y.minPercent = w : \"standard-deviation\" === m && (y.numberOfStandardDeviations = 2), !p && (t(e.multidimensionalInfo) || null != r && r.includeStatisticsInStretch) && (\"percent-clip\" === m ? y.histograms = f : \"min-max\" !== m && \"standard-deviation\" !== m || (y.statistics = c)), y;\n}\n\nfunction k(e, r) {\n  if (null == r) return e;\n  let l = n(e.statistics),\n      o = n(e.histograms);\n  const {\n    multidimensionalInfo: s\n  } = e;\n\n  if (r && t(s)) {\n    const {\n      statistics: e,\n      histograms: t\n    } = s.variables.find(e => e.name === r);\n    null != e && e.length && (l = e), null != t && t.length && (o = t);\n  }\n\n  return a.fromJSON({ ...e.toJSON(),\n    statistics: l,\n    histograms: o\n  });\n}\n\nfunction S(e) {\n  const t = e.bandCount;\n  if (1 === t) return null;\n  if (2 === t) return [0];\n  const n = e.keyProperties && e.keyProperties.BandProperties;\n  let r;\n\n  if (n && n.length === t) {\n    const {\n      red: e,\n      green: t,\n      blue: l,\n      nir: a\n    } = B(n);\n    null != e && null != t && null != l ? r = [e, t, l] : null != a && null != e && null != t && (r = [a, e, t]);\n  }\n\n  return !r && t >= 3 && (r = [0, 1, 2]), r;\n}\n\nfunction L(e, t) {\n  var n;\n  const r = e.keyProperties && e.keyProperties.BandProperties;\n  return (t = null != (n = t) && n.length ? t : Array.from(Array(e.bandCount).keys())).map(t => r && r.length === e.bandCount && r[t] && r[t].BandName || \"band_\" + (t + 1));\n}\n\nfunction B(e) {\n  const t = {};\n\n  for (let r = 0; r < e.length; r++) {\n    var n;\n    const l = e[r],\n          a = null == (n = l.BandName) ? void 0 : n.toLowerCase();\n    if (\"red\" === a) t.red = r;else if (\"green\" === a) t.green = r;else if (\"blue\" === a) t.blue = r;else if (\"nearinfrared\" === a || \"nearinfrared_1\" === a || \"nir\" === a) t.nir = r;else if (l.WavelengthMax && l.WavelengthMin) {\n      const e = l.WavelengthMin,\n            n = l.WavelengthMax;\n      null == t.blue && e >= 410 && e <= 480 && n >= 480 && n <= 540 ? t.blue = r : null == t.green && e >= 490 && e <= 560 && n >= 560 && n <= 610 ? t.green = r : null == t.red && e >= 595 && e <= 670 && n >= 660 && n <= 730 ? t.red = r : null == t.nir && e >= 700 && e <= 860 && n >= 800 && n <= 950 && (t.nir = r);\n    }\n  }\n\n  return t;\n}\n\nfunction O(e) {\n  let n = \"percent-clip\";\n  const {\n    pixelType: r,\n    dataType: l,\n    histograms: a,\n    statistics: o\n  } = e;\n  return \"u8\" !== r || \"processed\" !== l && t(a) && t(o) ? \"u8\" === r || \"elevation\" === l || j.has(l) ? n = \"min-max\" : t(a) ? n = \"percent-clip\" : t(o) && (n = \"min-max\", n = \"min-max\") : n = \"none\", n;\n}\n\nfunction q(n, r, l, a) {\n  if (!P(n, r)) return null;\n  const {\n    attributeTable: s,\n    statistics: i\n  } = n,\n        c = E(s, r),\n        f = N(s, \"red\"),\n        d = N(s, \"green\"),\n        p = N(s, \"blue\"),\n        b = new o(),\n        v = [],\n        y = new Set(),\n        g = !!(f && d && p);\n  if (t(s)) s.features.forEach(t => {\n    const n = t.attributes[c.name];\n\n    if (!y.has(t.attributes[c.name]) && null != n) {\n      y.add(n);\n      const r = g && (\"single\" === f.type || \"double\" === f.type) && (\"single\" === d.type || \"double\" === d.type) && (\"single\" === p.type || \"double\" === p.type) && !s.features.some(e => e.attributes[f.name] > 1 || e.attributes[d.name] > 1 || e.attributes[p.name] > 1) ? 255 : 1;\n      v.push(new m({\n        value: t.attributes[c.name],\n        label: t.attributes[c.name] + \"\",\n        symbol: {\n          type: \"simple-fill\",\n          style: \"solid\",\n          outline: null,\n          color: new e(g ? [t.attributes[f.name] * r, t.attributes[d.name] * r, t.attributes[p.name] * r, 1] : [0, 0, 0, 0])\n        }\n      }));\n    }\n  });else if (null != i && i[0]) for (let t = i[0].min; t <= i[0].max; t++) v.push(new m({\n    value: t,\n    label: t.toString(),\n    symbol: {\n      type: \"simple-fill\",\n      style: \"solid\",\n      outline: null,\n      color: new e([0, 0, 0, 0])\n    }\n  }));\n\n  if (v.sort((e, t) => e.value && \"string\" == typeof e.value.valueOf() ? 0 : e.value > t.value ? 1 : -1), !g) {\n    const t = u(R, v.length);\n    v.forEach((n, r) => n.symbol.color = new e(t[r].slice(1, 4))), b.colorRamp = R;\n  }\n\n  if (l || a) {\n    const t = l || u(a, v.length).map(e => e.slice(1));\n    v.forEach((n, r) => n.symbol.color = new e(t[r])), b.colorRamp = a;\n  }\n\n  return new h({\n    field: c.name,\n    uniqueValueInfos: v,\n    authoringInfo: b\n  });\n}\n\nfunction E(e, n) {\n  let r;\n  return t(e) ? (r = n ? e.fields.find(e => n.toLowerCase() === e.name.toLowerCase()) : e.fields.find(e => \"string\" === e.type && e.name.toLowerCase().indexOf(\"class\") > -1), r || (r = e.fields.find(e => \"string\" === e.type), r || (r = N(e, \"value\")))) : r = new l({\n    name: \"value\"\n  }), r;\n}\n\nfunction N(e, n) {\n  return t(e) ? e.fields.find(e => e.name.toLowerCase() === n) : null;\n}\n\nfunction P(e, n) {\n  const {\n    attributeTable: r,\n    bandCount: l\n  } = e;\n  if (!t(r) && W(e)) return !0;\n  if (!t(r) || l > 1) return !1;\n\n  if (n) {\n    if (null == r.fields.find(e => e.name.toLowerCase() === n.toLowerCase())) return !1;\n  }\n\n  return !0;\n}\n\nfunction z(e) {\n  const {\n    bandCount: n,\n    colormap: r\n  } = e;\n  return t(r) && r.length && 1 === n;\n}\n\nfunction F(e) {\n  if (!z(e)) return null;\n  let r;\n  const {\n    attributeTable: l,\n    colormap: a\n  } = e;\n\n  if (t(l)) {\n    const e = N(l, \"value\"),\n          t = E(l);\n    \"string\" === t.type && (r = {}, l.features.forEach(n => {\n      const l = n.attributes;\n      r[l[e.name]] = t ? l[t.name] : l[e.name];\n    }));\n  }\n\n  return v.createFromColormap(n(a), r);\n}\n\nfunction A(e) {\n  return \"elevation\" === e.dataType;\n}\n\nfunction U(e, t) {\n  var n;\n  if (!A(e)) return null;\n  const {\n    extent: l\n  } = e,\n        a = l.width * r(l.spatialReference);\n  return t = null != (n = t) ? n : \"multi-directional\", new y({\n    hillshadeType: t,\n    scalingType: a > 5e6 ? \"adjusted\" : \"none\"\n  });\n}\n\nfunction D(e) {\n  const {\n    attributeTable: n,\n    bandCount: r\n  } = e;\n  return 1 === r && (t(n) || t(e.histograms));\n}\n\nfunction J(e, n) {\n  e = k(e, null == n ? void 0 : n.variableName);\n  const {\n    attributeTable: r\n  } = e;\n  if (!D(e)) return null;\n  const l = t(e.histograms) ? e.histograms[0] : null,\n        a = (null == n ? void 0 : n.numClasses) || 5,\n        i = new o({\n    classificationMethod: null == n ? void 0 : n.classificationMethod,\n    colorRamp: null == n ? void 0 : n.colorRamp\n  });\n  let m = (null == n ? void 0 : n.field) || \"value\";\n  const c = [],\n        p = [],\n        b = 1e3;\n\n  if (t(r)) {\n    const e = r.fields.find(e => \"count\" === e.name.toLowerCase()),\n          t = r.fields.find(e => e.name.toLowerCase() === m.toLowerCase());\n    m = t.name;\n    const n = r.features.length;\n    let l = 0;\n    r.features.forEach(t => l += t.attributes[e.name] / n), r.features.forEach(r => {\n      const a = r.attributes[t.name],\n            o = r.attributes[e.name];\n\n      if (o > 0) {\n        p.push(o);\n        const e = Math.max(1, Math.round(o / n / l * b));\n\n        for (let t = 0; t < e; t++) c.push(a);\n      }\n    });\n  } else {\n    const {\n      pixelType: t\n    } = e,\n          n = (l.max - l.min) / l.size,\n          r = t.indexOf(\"s\") > -1 || t.indexOf(\"u\") > -1,\n          a = r && 1 === n ? Math.floor(l.min + .5) : l.min,\n          o = r && 1 === n ? Math.floor(l.max - .5) : l.max,\n          s = l.size;\n    let i = 0;\n    l.counts.forEach(e => i += e / s), l.counts.forEach((e, t) => {\n      if (e > 0) {\n        p.push(e);\n        const r = Math.max(1, Math.round(e / s / i * b)),\n              u = 0 === t ? a : t === s - 1 ? o : l.min + n * (t + .5);\n\n        for (let e = 0; e < r; e++) c.push(u);\n      }\n    });\n  }\n\n  const h = (null == n ? void 0 : n.classificationMethod) || \"natural-breaks\",\n        v = d({\n    values: c,\n    valueFrequency: p,\n    normalizationTotal: null,\n    definition: new f({\n      classificationMethod: h,\n      breakCount: a,\n      definedInterval: null == n ? void 0 : n.definedInterval\n    })\n  });\n  let y = null == n ? void 0 : n.colors;\n\n  if (!y) {\n    const e = (null == n ? void 0 : n.colorRamp) || x;\n    i.colorRamp = e;\n    const t = u(e, v.classBreaks.length, !0);\n    y = t.map(e => e.slice(1));\n  }\n\n  const C = v.classBreaks.map((e, t) => new s({\n    minValue: e.minValue,\n    maxValue: e.maxValue,\n    label: e.label,\n    symbol: {\n      type: \"simple-fill\",\n      color: y[t]\n    }\n  }));\n  return new g({\n    field: m,\n    classBreakInfos: C,\n    authoringInfo: i\n  });\n}\n\nfunction W(e) {\n  var t, n, r;\n  return [\"u8\", \"s8\"].indexOf(e.pixelType) > -1 && null != (null == (t = e.statistics) || null == (n = t[0]) ? void 0 : n.min) && null != (null == (r = e.statistics[0]) ? void 0 : r.max) && 1 === e.bandCount;\n}\n\nfunction _(t) {\n  const n = [];\n\n  for (let r = 0; r < t.length - 1; r++) n[r] = new c({\n    algorithm: \"hsv\",\n    fromColor: t[r],\n    toColor: t[r + 1] || new e({\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1\n    })\n  });\n\n  if (t.length > 2) {\n    return new p({\n      colorRamps: n\n    });\n  }\n\n  return n[0];\n}\n\nfunction G(e) {\n  var t;\n  const {\n    dataType: n\n  } = e;\n  return !(null != (t = e.storageInfo) && t.tileInfo) && (\"vector-uv\" === n || \"vector-magdir\" === n);\n}\n\nfunction H(e) {\n  if (!G(e)) return null;\n  let n;\n  var r, l;\n  t(e.statistics) && (n = [{\n    type: \"size\",\n    field: \"Magnitude\",\n    minSize: 10,\n    maxSize: 40,\n    minDataValue: null == (r = e.statistics[0]) ? void 0 : r.min,\n    maxDataValue: null == (l = e.statistics[0]) ? void 0 : l.max\n  }]);\n  const a = new C({\n    visualVariables: n\n  });\n  return a.visualVariables = [...a.sizeVariables, ...a.rotationVariables], a;\n}\n\nfunction K(e) {\n  var t;\n  return {\n    color: null == (t = e.symbolLayers[0].material) ? void 0 : t.color,\n    type: \"esriSFS\",\n    style: \"esriSFSSolid\"\n  };\n}\n\nfunction Q(e) {\n  if (\"uniqueValue\" === e.type) {\n    var t;\n    const n = e.uniqueValueInfos,\n          r = n[0].symbol;\n    return null != r && null != (t = r.symbolLayers) && t.length && (e.uniqueValueInfos = n.map(e => ({\n      value: e.value,\n      label: e.label,\n      symbol: e.symbol ? K(e.symbol) : null\n    }))), e;\n  }\n\n  if (\"classBreaks\" === e.type) {\n    var n;\n    const t = e.classBreakInfos,\n          r = t[0].symbol;\n    return null != r && null != (n = r.symbolLayers) && n.length && (e.classBreakInfos = t.map(e => ({\n      classMinValue: e.classMinValue,\n      classMaxValue: e.classMaxValue,\n      label: e.label,\n      symbol: e.symbol ? K(e.symbol) : null\n    }))), e;\n  }\n\n  return e;\n}\n\nexport { J as createClassBreaksRenderer, _ as createColorRamp, F as createColormapRenderer, M as createDefaultRenderer, U as createShadedReliefRenderer, I as createStretchRenderer, q as createUVRenderer, H as createVectorFieldRenderer, L as getBandNames, E as getClassField, S as getDefaultBandCombination, V as getDefaultInterpolation, T as getSupportedRendererTypes, B as getWellKnownBandIndexes, D as isClassBreaksSupported, z as isColormapRendererSupported, A as isShadedReliefRendererSupported, W as isSingleBand8BitRasterWithStats, P as isUVRendererSupported, G as isVectorFieldRendererSupported, Q as normalizeRendererJSON };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js"],"names":["e","isSome","t","unwrap","n","getMetersPerUnitForSR","r","l","a","o","s","PREDEFINED_JSON_COLOR_RAMPS","i","convertColorRampToColormap","u","m","c","f","createGenerateRendererClassBreaks","d","p","b","h","v","y","g","C","w","x","fromJSON","type","colorRamps","fromColor","toColor","R","j","Set","M","attributeTable","colormap","G","H","F","q","I","T","z","push","P","D","A","V","find","toLowerCase","dataType","k","variableName","bandCount","bandIds","stretchType","some","statistics","histograms","length","S","map","O","has","dynamicRangeAdjustment","colorRamp","outputMin","outputMax","gamma","useGamma","maxPercent","minPercent","numberOfStandardDeviations","multidimensionalInfo","includeStatisticsInStretch","variables","name","toJSON","keyProperties","BandProperties","red","green","blue","nir","B","L","Array","from","keys","BandName","WavelengthMax","WavelengthMin","pixelType","E","N","features","forEach","attributes","add","value","label","symbol","style","outline","color","min","max","toString","sort","valueOf","slice","field","uniqueValueInfos","authoringInfo","fields","indexOf","W","createFromColormap","U","extent","width","spatialReference","hillshadeType","scalingType","J","numClasses","classificationMethod","Math","round","size","floor","counts","values","valueFrequency","normalizationTotal","definition","breakCount","definedInterval","colors","classBreaks","minValue","maxValue","classBreakInfos","_","algorithm","storageInfo","tileInfo","minSize","maxSize","minDataValue","maxDataValue","visualVariables","sizeVariables","rotationVariables","K","symbolLayers","material","Q","classMinValue","classMaxValue","createClassBreaksRenderer","createColorRamp","createColormapRenderer","createDefaultRenderer","createShadedReliefRenderer","createStretchRenderer","createUVRenderer","createVectorFieldRenderer","getBandNames","getClassField","getDefaultBandCombination","getDefaultInterpolation","getSupportedRendererTypes","getWellKnownBandIndexes","isClassBreaksSupported","isColormapRendererSupported","isShadedReliefRendererSupported","isSingleBand8BitRasterWithStats","isUVRendererSupported","isVectorFieldRendererSupported","normalizeRendererJSON"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../Color.js\";import\"../../rasterRenderers.js\";import{isSome as t,unwrap as n}from\"../../core/maybe.js\";import{getMetersPerUnitForSR as r}from\"../../core/unitUtils.js\";import l from\"../../layers/support/Field.js\";import a from\"../../layers/support/RasterInfo.js\";import o from\"./AuthoringInfo.js\";import s from\"./ClassBreakInfo.js\";import{PREDEFINED_JSON_COLOR_RAMPS as i,convertColorRampToColormap as u}from\"./colorRampUtils.js\";import m from\"./UniqueValueInfo.js\";import c from\"../../rest/support/AlgorithmicColorRamp.js\";import f from\"../../rest/support/ClassBreaksDefinition.js\";import{createGenerateRendererClassBreaks as d}from\"../../rest/support/generateRendererUtils.js\";import p from\"../../rest/support/MultipartColorRamp.js\";import b from\"../RasterStretchRenderer.js\";import h from\"../UniqueValueRenderer.js\";import v from\"../RasterColormapRenderer.js\";import y from\"../RasterShadedReliefRenderer.js\";import g from\"../ClassBreaksRenderer.js\";import C from\"../VectorFieldRenderer.js\";const w=.25,x=p.fromJSON({type:\"multipart\",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),R=p.fromJSON(i[0]),j=new Set([\"scientific\",\"standard-time\",\"vector-uv\",\"vector-magdir\",\"vector-u\",\"vector-v\",\"vector-magnitude\",\"vector-direction\"]);function M(e,n){const{attributeTable:r,colormap:l}=e;if(G(e)){const n=H(e);if(t(n))return n}if(t(l)){const n=F(e);if(t(n))return n}if(t(r)){const n=q(e);if(t(n))return n}return I(e,n)}function T(e){const t=[\"raster-stretch\"];return z(e)&&t.push(\"raster-colormap\"),P(e)&&t.push(\"unique-value\"),D(e)&&t.push(\"class-breaks\"),A(e)&&t.push(\"raster-shaded-relief\"),G(e)&&t.push(\"vector-field\"),t}function V(e,t,n){const r=[\"nearest\",\"bilinear\",\"cubic\",\"majority\"].find((e=>e===(null==n?void 0:n.toLowerCase())));if(\"Map\"===t)return null!=r?r:\"bilinear\";if(\"standard-time\"===e.dataType)return null!=r?r:\"nearest\";return\"thematic\"===e.dataType||e.attributeTable||e.colormap?\"nearest\"===r||\"majority\"===r?r:\"nearest\":null!=r?r:\"bilinear\"}function I(e,r){var l,a,o,s;e=k(e,null==r?void 0:r.variableName);const{bandCount:i}=e;let{bandIds:u,stretchType:m}=r||{};null!=(l=u)&&l.some((e=>e>=i))&&(u=null);let c=n(e.statistics),f=n(e.histograms);var d;i>1?(u=null!=(d=u)&&d.length?u:S(e),c=null==c?null:u.map((e=>c[e])),f=null==f?null:u.map((e=>f[e]))):u=[0];null==m&&(m=O(e));let p=!1;switch(m){case\"none\":p=!1;break;case\"percent-clip\":p=!(null!=(a=f)&&a.length);break;default:p=!(null!=(o=c)&&o.length)}const{dataType:h}=e,v=1===(null==(s=u)?void 0:s.length)&&j.has(h)?x:null,y=new b({stretchType:m,dynamicRangeAdjustment:p,colorRamp:v,outputMin:0,outputMax:255,gamma:1===u.length?[1]:[1,1,1],useGamma:!1});return\"percent-clip\"===m?y.maxPercent=y.minPercent=w:\"standard-deviation\"===m&&(y.numberOfStandardDeviations=2),!p&&(t(e.multidimensionalInfo)||null!=r&&r.includeStatisticsInStretch)&&(\"percent-clip\"===m?y.histograms=f:\"min-max\"!==m&&\"standard-deviation\"!==m||(y.statistics=c)),y}function k(e,r){if(null==r)return e;let l=n(e.statistics),o=n(e.histograms);const{multidimensionalInfo:s}=e;if(r&&t(s)){const{statistics:e,histograms:t}=s.variables.find((e=>e.name===r));null!=e&&e.length&&(l=e),null!=t&&t.length&&(o=t)}return a.fromJSON({...e.toJSON(),statistics:l,histograms:o})}function S(e){const t=e.bandCount;if(1===t)return null;if(2===t)return[0];const n=e.keyProperties&&e.keyProperties.BandProperties;let r;if(n&&n.length===t){const{red:e,green:t,blue:l,nir:a}=B(n);null!=e&&null!=t&&null!=l?r=[e,t,l]:null!=a&&null!=e&&null!=t&&(r=[a,e,t])}return!r&&t>=3&&(r=[0,1,2]),r}function L(e,t){var n;const r=e.keyProperties&&e.keyProperties.BandProperties;return(t=null!=(n=t)&&n.length?t:Array.from(Array(e.bandCount).keys())).map((t=>r&&r.length===e.bandCount&&r[t]&&r[t].BandName||\"band_\"+(t+1)))}function B(e){const t={};for(let r=0;r<e.length;r++){var n;const l=e[r],a=null==(n=l.BandName)?void 0:n.toLowerCase();if(\"red\"===a)t.red=r;else if(\"green\"===a)t.green=r;else if(\"blue\"===a)t.blue=r;else if(\"nearinfrared\"===a||\"nearinfrared_1\"===a||\"nir\"===a)t.nir=r;else if(l.WavelengthMax&&l.WavelengthMin){const e=l.WavelengthMin,n=l.WavelengthMax;null==t.blue&&e>=410&&e<=480&&n>=480&&n<=540?t.blue=r:null==t.green&&e>=490&&e<=560&&n>=560&&n<=610?t.green=r:null==t.red&&e>=595&&e<=670&&n>=660&&n<=730?t.red=r:null==t.nir&&e>=700&&e<=860&&n>=800&&n<=950&&(t.nir=r)}}return t}function O(e){let n=\"percent-clip\";const{pixelType:r,dataType:l,histograms:a,statistics:o}=e;return\"u8\"!==r||\"processed\"!==l&&t(a)&&t(o)?\"u8\"===r||\"elevation\"===l||j.has(l)?n=\"min-max\":t(a)?n=\"percent-clip\":t(o)&&(n=\"min-max\",n=\"min-max\"):n=\"none\",n}function q(n,r,l,a){if(!P(n,r))return null;const{attributeTable:s,statistics:i}=n,c=E(s,r),f=N(s,\"red\"),d=N(s,\"green\"),p=N(s,\"blue\"),b=new o,v=[],y=new Set,g=!!(f&&d&&p);if(t(s))s.features.forEach((t=>{const n=t.attributes[c.name];if(!y.has(t.attributes[c.name])&&null!=n){y.add(n);const r=g&&(\"single\"===f.type||\"double\"===f.type)&&(\"single\"===d.type||\"double\"===d.type)&&(\"single\"===p.type||\"double\"===p.type)&&!s.features.some((e=>e.attributes[f.name]>1||e.attributes[d.name]>1||e.attributes[p.name]>1))?255:1;v.push(new m({value:t.attributes[c.name],label:t.attributes[c.name]+\"\",symbol:{type:\"simple-fill\",style:\"solid\",outline:null,color:new e(g?[t.attributes[f.name]*r,t.attributes[d.name]*r,t.attributes[p.name]*r,1]:[0,0,0,0])}}))}}));else if(null!=i&&i[0])for(let t=i[0].min;t<=i[0].max;t++)v.push(new m({value:t,label:t.toString(),symbol:{type:\"simple-fill\",style:\"solid\",outline:null,color:new e([0,0,0,0])}}));if(v.sort(((e,t)=>e.value&&\"string\"==typeof e.value.valueOf()?0:e.value>t.value?1:-1)),!g){const t=u(R,v.length);v.forEach(((n,r)=>n.symbol.color=new e(t[r].slice(1,4)))),b.colorRamp=R}if(l||a){const t=l||u(a,v.length).map((e=>e.slice(1)));v.forEach(((n,r)=>n.symbol.color=new e(t[r]))),b.colorRamp=a}return new h({field:c.name,uniqueValueInfos:v,authoringInfo:b})}function E(e,n){let r;return t(e)?(r=n?e.fields.find((e=>n.toLowerCase()===e.name.toLowerCase())):e.fields.find((e=>\"string\"===e.type&&e.name.toLowerCase().indexOf(\"class\")>-1)),r||(r=e.fields.find((e=>\"string\"===e.type)),r||(r=N(e,\"value\")))):r=new l({name:\"value\"}),r}function N(e,n){return t(e)?e.fields.find((e=>e.name.toLowerCase()===n)):null}function P(e,n){const{attributeTable:r,bandCount:l}=e;if(!t(r)&&W(e))return!0;if(!t(r)||l>1)return!1;if(n){if(null==r.fields.find((e=>e.name.toLowerCase()===n.toLowerCase())))return!1}return!0}function z(e){const{bandCount:n,colormap:r}=e;return t(r)&&r.length&&1===n}function F(e){if(!z(e))return null;let r;const{attributeTable:l,colormap:a}=e;if(t(l)){const e=N(l,\"value\"),t=E(l);\"string\"===t.type&&(r={},l.features.forEach((n=>{const l=n.attributes;r[l[e.name]]=t?l[t.name]:l[e.name]})))}return v.createFromColormap(n(a),r)}function A(e){return\"elevation\"===e.dataType}function U(e,t){var n;if(!A(e))return null;const{extent:l}=e,a=l.width*r(l.spatialReference);return t=null!=(n=t)?n:\"multi-directional\",new y({hillshadeType:t,scalingType:a>5e6?\"adjusted\":\"none\"})}function D(e){const{attributeTable:n,bandCount:r}=e;return 1===r&&(t(n)||t(e.histograms))}function J(e,n){e=k(e,null==n?void 0:n.variableName);const{attributeTable:r}=e;if(!D(e))return null;const l=t(e.histograms)?e.histograms[0]:null,a=(null==n?void 0:n.numClasses)||5,i=new o({classificationMethod:null==n?void 0:n.classificationMethod,colorRamp:null==n?void 0:n.colorRamp});let m=(null==n?void 0:n.field)||\"value\";const c=[],p=[],b=1e3;if(t(r)){const e=r.fields.find((e=>\"count\"===e.name.toLowerCase())),t=r.fields.find((e=>e.name.toLowerCase()===m.toLowerCase()));m=t.name;const n=r.features.length;let l=0;r.features.forEach((t=>l+=t.attributes[e.name]/n)),r.features.forEach((r=>{const a=r.attributes[t.name],o=r.attributes[e.name];if(o>0){p.push(o);const e=Math.max(1,Math.round(o/n/l*b));for(let t=0;t<e;t++)c.push(a)}}))}else{const{pixelType:t}=e,n=(l.max-l.min)/l.size,r=t.indexOf(\"s\")>-1||t.indexOf(\"u\")>-1,a=r&&1===n?Math.floor(l.min+.5):l.min,o=r&&1===n?Math.floor(l.max-.5):l.max,s=l.size;let i=0;l.counts.forEach((e=>i+=e/s)),l.counts.forEach(((e,t)=>{if(e>0){p.push(e);const r=Math.max(1,Math.round(e/s/i*b)),u=0===t?a:t===s-1?o:l.min+n*(t+.5);for(let e=0;e<r;e++)c.push(u)}}))}const h=(null==n?void 0:n.classificationMethod)||\"natural-breaks\",v=d({values:c,valueFrequency:p,normalizationTotal:null,definition:new f({classificationMethod:h,breakCount:a,definedInterval:null==n?void 0:n.definedInterval})});let y=null==n?void 0:n.colors;if(!y){const e=(null==n?void 0:n.colorRamp)||x;i.colorRamp=e;const t=u(e,v.classBreaks.length,!0);y=t.map((e=>e.slice(1)))}const C=v.classBreaks.map(((e,t)=>new s({minValue:e.minValue,maxValue:e.maxValue,label:e.label,symbol:{type:\"simple-fill\",color:y[t]}})));return new g({field:m,classBreakInfos:C,authoringInfo:i})}function W(e){var t,n,r;return[\"u8\",\"s8\"].indexOf(e.pixelType)>-1&&null!=(null==(t=e.statistics)||null==(n=t[0])?void 0:n.min)&&null!=(null==(r=e.statistics[0])?void 0:r.max)&&1===e.bandCount}function _(t){const n=[];for(let r=0;r<t.length-1;r++)n[r]=new c({algorithm:\"hsv\",fromColor:t[r],toColor:t[r+1]||new e({r:255,g:255,b:255,a:1})});if(t.length>2){return new p({colorRamps:n})}return n[0]}function G(e){var t;const{dataType:n}=e;return!(null!=(t=e.storageInfo)&&t.tileInfo)&&(\"vector-uv\"===n||\"vector-magdir\"===n)}function H(e){if(!G(e))return null;let n;var r,l;t(e.statistics)&&(n=[{type:\"size\",field:\"Magnitude\",minSize:10,maxSize:40,minDataValue:null==(r=e.statistics[0])?void 0:r.min,maxDataValue:null==(l=e.statistics[0])?void 0:l.max}]);const a=new C({visualVariables:n});return a.visualVariables=[...a.sizeVariables,...a.rotationVariables],a}function K(e){var t;return{color:null==(t=e.symbolLayers[0].material)?void 0:t.color,type:\"esriSFS\",style:\"esriSFSSolid\"}}function Q(e){if(\"uniqueValue\"===e.type){var t;const n=e.uniqueValueInfos,r=n[0].symbol;return null!=r&&null!=(t=r.symbolLayers)&&t.length&&(e.uniqueValueInfos=n.map((e=>({value:e.value,label:e.label,symbol:e.symbol?K(e.symbol):null})))),e}if(\"classBreaks\"===e.type){var n;const t=e.classBreakInfos,r=t[0].symbol;return null!=r&&null!=(n=r.symbolLayers)&&n.length&&(e.classBreakInfos=t.map((e=>({classMinValue:e.classMinValue,classMaxValue:e.classMaxValue,label:e.label,symbol:e.symbol?K(e.symbol):null})))),e}return e}export{J as createClassBreaksRenderer,_ as createColorRamp,F as createColormapRenderer,M as createDefaultRenderer,U as createShadedReliefRenderer,I as createStretchRenderer,q as createUVRenderer,H as createVectorFieldRenderer,L as getBandNames,E as getClassField,S as getDefaultBandCombination,V as getDefaultInterpolation,T as getSupportedRendererTypes,B as getWellKnownBandIndexes,D as isClassBreaksSupported,z as isColormapRendererSupported,A as isShadedReliefRendererSupported,W as isSingleBand8BitRasterWithStats,P as isUVRendererSupported,G as isVectorFieldRendererSupported,Q as normalizeRendererJSON};\n"]},"metadata":{},"sourceType":"module"}