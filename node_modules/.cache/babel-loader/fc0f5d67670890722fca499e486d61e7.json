{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isExtent as t, isPolygon as i } from \"../../../geometry/support/jsonUtils.js\";\nimport { CurveHelper as e, PIXEL_TOLERANCE as s } from \"../CurveHelper.js\";\n\nclass h {\n  static local() {\n    return null === h.instance && (h.instance = new h()), h.instance;\n  }\n\n  execute(t, i, e) {\n    return new n(t, i, e);\n  }\n\n}\n\nh.instance = null;\n\nclass n {\n  constructor(t, i, h) {\n    switch (this._inputGeometries = t, this._curveHelper = new e(), this._width = (void 0 !== i.width ? i.width : 2) * h, i.method) {\n      case \"Mitered\":\n      default:\n        this._method = \"Mitered\";\n        break;\n\n      case \"Bevelled\":\n        this._method = \"Bevelled\";\n        break;\n\n      case \"Rounded\":\n      case \"TrueBuffer\":\n        this._method = \"Rounded\";\n        break;\n\n      case \"Square\":\n        this._method = \"Square\";\n    }\n\n    this._option = i.option, this._offsetFlattenError = s * h;\n  }\n\n  next() {\n    let e = this._inputGeometries.next();\n\n    for (; e;) {\n      if (t(e) && this._width > 0) {\n        if (Math.min(e.xmax - e.xmin, e.ymax - e.ymin) - 2 * this._width < 0) return e;\n        const t = [];\n        return t.push([[e.xmin, e.ymin], [e.xmin, e.ymax], [e.xmax, e.ymax], [e.xmax, e.ymin], [e.xmin, e.ymin]]), t.push([[e.xmin + this._width, e.ymin + this._width], [e.xmax - this._width, e.ymin + this._width], [e.xmax - this._width, e.ymax - this._width], [e.xmin + this._width, e.ymax - this._width], [e.xmin + this._width, e.ymin + this._width]]), {\n          rings: t\n        };\n      }\n\n      if (i(e) && this._width > 0) {\n        const t = [];\n\n        for (const i of e.rings) {\n          const e = this._curveHelper.calculatePathLength(i),\n                s = this._curveHelper.offset(i, this._width, this._method, 4, this._offsetFlattenError);\n\n          s && (e < 0 && s.reverse(), t.push(s));\n        }\n\n        if (t.length) return {\n          rings: t\n        };\n      }\n\n      e = this._inputGeometries.next();\n    }\n\n    return null;\n  }\n\n}\n\nexport { h as EffectDonut };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/symbols/cim/effects/EffectDonut.js"],"names":["isExtent","t","isPolygon","i","CurveHelper","e","PIXEL_TOLERANCE","s","h","local","instance","execute","n","constructor","_inputGeometries","_curveHelper","_width","width","method","_method","_option","option","_offsetFlattenError","next","Math","min","xmax","xmin","ymax","ymin","push","rings","calculatePathLength","offset","reverse","length","EffectDonut"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isExtent as t,isPolygon as i}from\"../../../geometry/support/jsonUtils.js\";import{CurveHelper as e,PIXEL_TOLERANCE as s}from\"../CurveHelper.js\";class h{static local(){return null===h.instance&&(h.instance=new h),h.instance}execute(t,i,e){return new n(t,i,e)}}h.instance=null;class n{constructor(t,i,h){switch(this._inputGeometries=t,this._curveHelper=new e,this._width=(void 0!==i.width?i.width:2)*h,i.method){case\"Mitered\":default:this._method=\"Mitered\";break;case\"Bevelled\":this._method=\"Bevelled\";break;case\"Rounded\":case\"TrueBuffer\":this._method=\"Rounded\";break;case\"Square\":this._method=\"Square\"}this._option=i.option,this._offsetFlattenError=s*h}next(){let e=this._inputGeometries.next();for(;e;){if(t(e)&&this._width>0){if(Math.min(e.xmax-e.xmin,e.ymax-e.ymin)-2*this._width<0)return e;const t=[];return t.push([[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]),t.push([[e.xmin+this._width,e.ymin+this._width],[e.xmax-this._width,e.ymin+this._width],[e.xmax-this._width,e.ymax-this._width],[e.xmin+this._width,e.ymax-this._width],[e.xmin+this._width,e.ymin+this._width]]),{rings:t}}if(i(e)&&this._width>0){const t=[];for(const i of e.rings){const e=this._curveHelper.calculatePathLength(i),s=this._curveHelper.offset(i,this._width,this._method,4,this._offsetFlattenError);s&&(e<0&&s.reverse(),t.push(s))}if(t.length)return{rings:t}}e=this._inputGeometries.next()}return null}}export{h as EffectDonut};\n"]},"metadata":{},"sourceType":"module"}