{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../../../request.js\";\nimport t from \"../../../../core/Error.js\";\nimport { getJsonType as i } from \"../../../../geometry/support/jsonUtils.js\";\nimport { WGS84 as s, equals as r } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport { convertFromGeometry as n, convertToGeometry as o, convertFromFeatures as a, convertToFeature as l, convertFromFeature as d } from \"../../featureConversionUtils.js\";\nimport u from \"../../data/FeatureStore.js\";\nimport { project as p, checkProjectionSupport as y } from \"../../data/projectionSupport.js\";\nimport f from \"../../data/QueryEngine.js\";\nimport { validateGeoJSON as m, inferLayerProperties as c, createOptimizedFeatures as h } from \"./geojson.js\";\nimport { createDrawingInfo as g, createDefaultTemplate as I, createDefaultAttributesFunction as F } from \"../support/clientSideDefaults.js\";\nimport { loadGeometryEngineForSimplify as b, mixAttributes as j, createFeatureEditSuccessResult as _, createFeatureEditErrorResult as E, simplify as T } from \"../support/sourceUtils.js\";\nimport q from \"../../../support/FieldsIndex.js\";\nimport { kebabDict as x } from \"../../../support/fieldType.js\";\nimport { getFieldDefaultValue as w } from \"../../../support/fieldUtils.js\";\nconst R = {\n  hasAttachments: !1,\n  capabilities: \"query, editing, create, delete, update\",\n  useStandardizedQueries: !0,\n  supportsCoordinatesQuantization: !0,\n  supportsReturningQueryGeometry: !0,\n  advancedQueryCapabilities: {\n    supportsQueryAttachments: !1,\n    supportsStatistics: !0,\n    supportsPercentileStatistics: !0,\n    supportsReturningGeometryCentroid: !0,\n    supportsQueryWithDistance: !0,\n    supportsDistinct: !0,\n    supportsReturningQueryExtent: !0,\n    supportsReturningGeometryProperties: !1,\n    supportsHavingClause: !0,\n    supportsOrderBy: !0,\n    supportsPagination: !0,\n    supportsQueryWithResultType: !1,\n    supportsSqlExpression: !0,\n    supportsDisjointSpatialRel: !0\n  }\n};\n\nclass D {\n  constructor() {\n    this._queryEngine = null;\n  }\n\n  destroy() {\n    this._queryEngine && this._queryEngine && this._queryEngine.destroy(), this._queryEngine = this._requiredFields = this._fieldsIndex = this._createDefaultAttributes = null;\n  }\n\n  async load(i) {\n    const a = [];\n    await this._checkProjection(i.spatialReference);\n    let l = null;\n\n    if (i.url) {\n      l = (await e(i.url, {\n        responseType: \"json\"\n      })).data, await m(l);\n    }\n\n    const d = c(l, {\n      geometryType: i.geometryType\n    }),\n          y = i.fields || d.fields || [],\n          b = null != i.hasZ ? i.hasZ : d.hasZ,\n          j = d.geometryType,\n          _ = i.objectIdField || (\"number\" === d.objectIdFieldType ? d.objectIdFieldName : \"OBJECTID\") || \"OBJECTID\",\n          E = i.spatialReference || s;\n\n    let T = i.timeInfo;\n    if (!j) throw new t(\"geojson-layer:missing-property\", \"geometryType not set and couldn't be inferred from the provided features\");\n\n    if (\"string\" === d.objectIdFieldType && a.push({\n      name: \"geojson-layer:unsupported-id-type\",\n      message: \"Feature ids are of type string and can't be honored.\"\n    }), y === d.fields && d.unknownFields.length > 0 && a.push({\n      name: \"geojson-layer:unknown-field-types\",\n      message: \"Some fields types couldn't be inferred from the features and were dropped\",\n      details: {\n        unknownFields: d.unknownFields\n      }\n    }), _) {\n      let e = null;\n      y.some(t => t.name === _ && (e = t, !0)) ? (e.type = \"esriFieldTypeOID\", e.editable = !1, e.nullable = !1) : y.unshift({\n        alias: _,\n        name: _,\n        type: \"esriFieldTypeOID\",\n        editable: !1,\n        nullable: !1\n      });\n    }\n\n    for (const e of y) {\n      if (null == e.name && (e.name = e.alias), null == e.alias && (e.alias = e.name), !e.name) throw new t(\"geojson-layer:invalid-field-name\", \"field name is missing\", {\n        field: e\n      });\n      if (e.name === _ && (e.type = \"esriFieldTypeOID\"), -1 === x.jsonValues.indexOf(e.type)) throw new t(\"geojson-layer:invalid-field-type\", `invalid type for field \"${e.name}\"`, {\n        field: e\n      });\n    }\n\n    const D = {};\n    this._requiredFields = [];\n\n    for (const e of y) if (\"esriFieldTypeOID\" !== e.type && \"esriFieldTypeGlobalID\" !== e.type) {\n      e.editable = null == e.editable || !!e.editable, e.nullable = null == e.nullable || !!e.nullable;\n      const t = w(e);\n      e.nullable || void 0 !== t ? D[e.name] = t : this._requiredFields.push(e);\n    }\n\n    if (this._fieldsIndex = new q(y), T) {\n      if (T.startTimeField) {\n        const e = this._fieldsIndex.get(T.startTimeField);\n\n        e ? (T.startTimeField = e.name, e.type = \"esriFieldTypeDate\") : T.startTimeField = null;\n      }\n\n      if (T.endTimeField) {\n        const e = this._fieldsIndex.get(T.endTimeField);\n\n        e ? (T.endTimeField = e.name, e.type = \"esriFieldTypeDate\") : T.endTimeField = null;\n      }\n\n      if (T.trackIdField) {\n        const e = this._fieldsIndex.get(T.trackIdField);\n\n        e ? T.trackIdField = e.name : (T.trackIdField = null, a.push({\n          name: \"geojson-layer:invalid-timeInfo-trackIdField\",\n          message: \"trackIdField is missing\",\n          details: {\n            timeInfo: T\n          }\n        }));\n      }\n\n      T.startTimeField || T.endTimeField || (a.push({\n        name: \"geojson-layer:invalid-timeInfo\",\n        message: \"startTimeField and endTimeField are missing\",\n        details: {\n          timeInfo: T\n        }\n      }), T = null);\n    }\n\n    const O = {\n      warnings: a,\n      featureErrors: [],\n      layerDefinition: { ...R,\n        drawingInfo: g(j),\n        templates: I(D),\n        extent: null,\n        geometryType: j,\n        objectIdField: _,\n        fields: y,\n        hasZ: !!b,\n        timeInfo: T\n      }\n    };\n    this._queryEngine = new f({\n      fields: y,\n      geometryType: j,\n      hasM: !1,\n      hasZ: b,\n      objectIdField: _,\n      spatialReference: E,\n      timeInfo: T,\n      featureStore: new u({\n        geometryType: j,\n        hasM: !1,\n        hasZ: b\n      }),\n      cacheSpatialQueries: !0\n    }), this._createDefaultAttributes = F(D, _), this._nextObjectId = d.maxObjectId + 1;\n    const S = h(l, {\n      geometryType: j,\n      hasZ: b,\n      objectIdField: \"number\" === d.objectIdFieldType ? _ : null\n    });\n    if (!r(E, s)) for (const e of S) e.geometry && (e.geometry = n(p(o(e.geometry, j, b, !1), s, E)));\n    return this._loadInitialFeatures(O, S), O;\n  }\n\n  async applyEdits(e) {\n    const {\n      spatialReference: t,\n      geometryType: i\n    } = this._queryEngine;\n    return await Promise.all([b(t, i), y(e.adds, t), y(e.updates, t)]), this._applyEdits(e);\n  }\n\n  queryFeatures(e = {}, t = {}) {\n    return this._queryEngine.executeQuery(e, t.signal);\n  }\n\n  queryFeatureCount(e = {}, t = {}) {\n    return this._queryEngine.executeQueryForCount(e, t.signal);\n  }\n\n  queryObjectIds(e = {}, t = {}) {\n    return this._queryEngine.executeQueryForIds(e, t.signal);\n  }\n\n  queryExtent(e = {}, t = {}) {\n    return this._queryEngine.executeQueryForExtent(e, t.signal);\n  }\n\n  querySnapping(e, t = {}) {\n    return this._queryEngine.executeQueryForSnapping(e, t.signal);\n  }\n\n  _loadInitialFeatures(e, t) {\n    const {\n      featureStore: i,\n      objectIdField: s\n    } = this._queryEngine,\n          r = [];\n\n    for (const n of t) {\n      const t = this._createDefaultAttributes(),\n            i = j(this._fieldsIndex, t, n.attributes, this._requiredFields, !0, e.warnings);\n\n      i ? e.featureErrors.push(i) : (this._assignObjectId(t, n.attributes, !0), n.attributes = t, n.objectId = t[s], r.push(n));\n    }\n\n    if (i.addMany(r), e.layerDefinition.extent = this._queryEngine.fullExtent, e.layerDefinition.timeInfo) {\n      const {\n        start: t,\n        end: i\n      } = this._queryEngine.timeExtent;\n      e.layerDefinition.timeInfo.timeExtent = [t, i];\n    }\n\n    return e;\n  }\n\n  _applyEdits(e) {\n    const {\n      adds: t,\n      updates: i,\n      deletes: s\n    } = e,\n          r = {\n      addResults: [],\n      deleteResults: [],\n      updateResults: [],\n      uidToObjectId: {}\n    };\n\n    if (t && t.length && this._applyAddEdits(r, t), i && i.length && this._applyUpdateEdits(r, i), s && s.length) {\n      for (const e of s) r.deleteResults.push(_(e));\n\n      this._queryEngine.featureStore.removeManyById(s);\n    }\n\n    return {\n      fullExtent: this._queryEngine.fullExtent,\n      timeExtent: this._queryEngine.timeExtent,\n      featureEditResults: r\n    };\n  }\n\n  _applyAddEdits(e, t) {\n    const {\n      addResults: s\n    } = e,\n          {\n      geometryType: r,\n      hasM: n,\n      hasZ: o,\n      objectIdField: l,\n      spatialReference: d,\n      featureStore: u\n    } = this._queryEngine,\n          y = [];\n\n    for (const a of t) {\n      if (a.geometry && r !== i(a.geometry)) {\n        s.push(E(\"Incorrect geometry type.\"));\n        continue;\n      }\n\n      const t = this._createDefaultAttributes(),\n            n = j(this._fieldsIndex, t, a.attributes, this._requiredFields);\n\n      if (n) s.push(n);else {\n        if (this._assignObjectId(t, a.attributes), a.attributes = t, null != a.uid) {\n          const t = a.attributes[l];\n          e.uidToObjectId[a.uid] = t;\n        }\n\n        a.geometry && (a.geometry = p(T(a.geometry, d), a.geometry.spatialReference, d)), y.push(a), s.push(_(a.attributes[l]));\n      }\n    }\n\n    u.addMany(a([], y, r, o, n, l));\n  }\n\n  _applyUpdateEdits({\n    updateResults: e\n  }, t) {\n    const {\n      geometryType: s,\n      hasM: r,\n      hasZ: n,\n      objectIdField: o,\n      spatialReference: a,\n      featureStore: u\n    } = this._queryEngine;\n\n    for (const y of t) {\n      const {\n        attributes: t,\n        geometry: f\n      } = y,\n            m = t && t[o];\n\n      if (null == m) {\n        e.push(E(`Identifier field ${o} missing`));\n        continue;\n      }\n\n      if (!u.has(m)) {\n        e.push(E(`Feature with object id ${m} missing`));\n        continue;\n      }\n\n      const c = l(u.getFeature(m), s, n, r);\n\n      if (f) {\n        if (s !== i(f)) {\n          e.push(E(\"Incorrect geometry type.\"));\n          continue;\n        }\n\n        c.geometry = p(T(f, a), f.spatialReference, a);\n      }\n\n      if (t) {\n        const i = j(this._fieldsIndex, c.attributes, t, this._requiredFields);\n\n        if (i) {\n          e.push(i);\n          continue;\n        }\n      }\n\n      u.add(d(c, s, n, r, o)), e.push(_(m));\n    }\n  }\n\n  _assignObjectId(e, t, i = !1) {\n    const s = this._queryEngine.objectIdField;\n    i && isFinite(t[s]) ? e[s] = t[s] : e[s] = this._nextObjectId++;\n  }\n\n  async _checkProjection(e) {\n    try {\n      await y(s, e);\n    } catch {\n      throw new t(\"geojson-layer\", \"Projection not supported\");\n    }\n  }\n\n}\n\nexport default D;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js"],"names":["e","t","getJsonType","i","WGS84","s","equals","r","convertFromGeometry","n","convertToGeometry","o","convertFromFeatures","a","convertToFeature","l","convertFromFeature","d","u","project","p","checkProjectionSupport","y","f","validateGeoJSON","m","inferLayerProperties","c","createOptimizedFeatures","h","createDrawingInfo","g","createDefaultTemplate","I","createDefaultAttributesFunction","F","loadGeometryEngineForSimplify","b","mixAttributes","j","createFeatureEditSuccessResult","_","createFeatureEditErrorResult","E","simplify","T","q","kebabDict","x","getFieldDefaultValue","w","R","hasAttachments","capabilities","useStandardizedQueries","supportsCoordinatesQuantization","supportsReturningQueryGeometry","advancedQueryCapabilities","supportsQueryAttachments","supportsStatistics","supportsPercentileStatistics","supportsReturningGeometryCentroid","supportsQueryWithDistance","supportsDistinct","supportsReturningQueryExtent","supportsReturningGeometryProperties","supportsHavingClause","supportsOrderBy","supportsPagination","supportsQueryWithResultType","supportsSqlExpression","supportsDisjointSpatialRel","D","constructor","_queryEngine","destroy","_requiredFields","_fieldsIndex","_createDefaultAttributes","load","_checkProjection","spatialReference","url","responseType","data","geometryType","fields","hasZ","objectIdField","objectIdFieldType","objectIdFieldName","timeInfo","push","name","message","unknownFields","length","details","some","type","editable","nullable","unshift","alias","field","jsonValues","indexOf","startTimeField","get","endTimeField","trackIdField","O","warnings","featureErrors","layerDefinition","drawingInfo","templates","extent","hasM","featureStore","cacheSpatialQueries","_nextObjectId","maxObjectId","S","geometry","_loadInitialFeatures","applyEdits","Promise","all","adds","updates","_applyEdits","queryFeatures","executeQuery","signal","queryFeatureCount","executeQueryForCount","queryObjectIds","executeQueryForIds","queryExtent","executeQueryForExtent","querySnapping","executeQueryForSnapping","attributes","_assignObjectId","objectId","addMany","fullExtent","start","end","timeExtent","deletes","addResults","deleteResults","updateResults","uidToObjectId","_applyAddEdits","_applyUpdateEdits","removeManyById","featureEditResults","uid","has","getFeature","add","isFinite"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,wBAAb;AAAsC,OAAOC,CAAP,MAAa,2BAAb;AAAyC,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,2CAA5B;AAAwE,SAAOC,KAAK,IAAIC,CAAhB,EAAkBC,MAAM,IAAIC,CAA5B,QAAkC,uDAAlC;AAA0F,SAAOC,mBAAmB,IAAIC,CAA9B,EAAgCC,iBAAiB,IAAIC,CAArD,EAAuDC,mBAAmB,IAAIC,CAA9E,EAAgFC,gBAAgB,IAAIC,CAApG,EAAsGC,kBAAkB,IAAIC,CAA5H,QAAkI,iCAAlI;AAAoK,OAAOC,CAAP,MAAa,4BAAb;AAA0C,SAAOC,OAAO,IAAIC,CAAlB,EAAoBC,sBAAsB,IAAIC,CAA9C,QAAoD,iCAApD;AAAsF,OAAOC,CAAP,MAAa,2BAAb;AAAyC,SAAOC,eAAe,IAAIC,CAA1B,EAA4BC,oBAAoB,IAAIC,CAApD,EAAsDC,uBAAuB,IAAIC,CAAjF,QAAuF,cAAvF;AAAsG,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,qBAAqB,IAAIC,CAAvD,EAAyDC,+BAA+B,IAAIC,CAA5F,QAAkG,kCAAlG;AAAqI,SAAOC,6BAA6B,IAAIC,CAAxC,EAA0CC,aAAa,IAAIC,CAA3D,EAA6DC,8BAA8B,IAAIC,CAA/F,EAAiGC,4BAA4B,IAAIC,CAAjI,EAAmIC,QAAQ,IAAIC,CAA/I,QAAqJ,2BAArJ;AAAiL,OAAOC,CAAP,MAAa,iCAAb;AAA+C,SAAOC,SAAS,IAAIC,CAApB,QAA0B,+BAA1B;AAA0D,SAAOC,oBAAoB,IAAIC,CAA/B,QAAqC,gCAArC;AAAsE,MAAMC,CAAC,GAAC;AAACC,EAAAA,cAAc,EAAC,CAAC,CAAjB;AAAmBC,EAAAA,YAAY,EAAC,wCAAhC;AAAyEC,EAAAA,sBAAsB,EAAC,CAAC,CAAjG;AAAmGC,EAAAA,+BAA+B,EAAC,CAAC,CAApI;AAAsIC,EAAAA,8BAA8B,EAAC,CAAC,CAAtK;AAAwKC,EAAAA,yBAAyB,EAAC;AAACC,IAAAA,wBAAwB,EAAC,CAAC,CAA3B;AAA6BC,IAAAA,kBAAkB,EAAC,CAAC,CAAjD;AAAmDC,IAAAA,4BAA4B,EAAC,CAAC,CAAjF;AAAmFC,IAAAA,iCAAiC,EAAC,CAAC,CAAtH;AAAwHC,IAAAA,yBAAyB,EAAC,CAAC,CAAnJ;AAAqJC,IAAAA,gBAAgB,EAAC,CAAC,CAAvK;AAAyKC,IAAAA,4BAA4B,EAAC,CAAC,CAAvM;AAAyMC,IAAAA,mCAAmC,EAAC,CAAC,CAA9O;AAAgPC,IAAAA,oBAAoB,EAAC,CAAC,CAAtQ;AAAwQC,IAAAA,eAAe,EAAC,CAAC,CAAzR;AAA2RC,IAAAA,kBAAkB,EAAC,CAAC,CAA/S;AAAiTC,IAAAA,2BAA2B,EAAC,CAAC,CAA9U;AAAgVC,IAAAA,qBAAqB,EAAC,CAAC,CAAvW;AAAyWC,IAAAA,0BAA0B,EAAC,CAAC;AAArY;AAAlM,CAAR;;AAAmlB,MAAMC,CAAN,CAAO;AAACC,EAAAA,WAAW,GAAE;AAAC,SAAKC,YAAL,GAAkB,IAAlB;AAAuB;;AAAAC,EAAAA,OAAO,GAAE;AAAC,SAAKD,YAAL,IAAmB,KAAKA,YAAxB,IAAsC,KAAKA,YAAL,CAAkBC,OAAlB,EAAtC,EAAkE,KAAKD,YAAL,GAAkB,KAAKE,eAAL,GAAqB,KAAKC,YAAL,GAAkB,KAAKC,wBAAL,GAA8B,IAAzJ;AAA8J;;AAAU,QAAJC,IAAI,CAAC5E,CAAD,EAAG;AAAC,UAAMU,CAAC,GAAC,EAAR;AAAW,UAAM,KAAKmE,gBAAL,CAAsB7E,CAAC,CAAC8E,gBAAxB,CAAN;AAAgD,QAAIlE,CAAC,GAAC,IAAN;;AAAW,QAAGZ,CAAC,CAAC+E,GAAL,EAAS;AAACnE,MAAAA,CAAC,GAAC,CAAC,MAAMf,CAAC,CAACG,CAAC,CAAC+E,GAAH,EAAO;AAACC,QAAAA,YAAY,EAAC;AAAd,OAAP,CAAR,EAAuCC,IAAzC,EAA8C,MAAM3D,CAAC,CAACV,CAAD,CAArD;AAAyD;;AAAA,UAAME,CAAC,GAACU,CAAC,CAACZ,CAAD,EAAG;AAACsE,MAAAA,YAAY,EAAClF,CAAC,CAACkF;AAAhB,KAAH,CAAT;AAAA,UAA2C/D,CAAC,GAACnB,CAAC,CAACmF,MAAF,IAAUrE,CAAC,CAACqE,MAAZ,IAAoB,EAAjE;AAAA,UAAoEjD,CAAC,GAAC,QAAMlC,CAAC,CAACoF,IAAR,GAAapF,CAAC,CAACoF,IAAf,GAAoBtE,CAAC,CAACsE,IAA5F;AAAA,UAAiGhD,CAAC,GAACtB,CAAC,CAACoE,YAArG;AAAA,UAAkH5C,CAAC,GAACtC,CAAC,CAACqF,aAAF,KAAkB,aAAWvE,CAAC,CAACwE,iBAAb,GAA+BxE,CAAC,CAACyE,iBAAjC,GAAmD,UAArE,KAAkF,UAAtM;AAAA,UAAiN/C,CAAC,GAACxC,CAAC,CAAC8E,gBAAF,IAAoB5E,CAAvO;;AAAyO,QAAIwC,CAAC,GAAC1C,CAAC,CAACwF,QAAR;AAAiB,QAAG,CAACpD,CAAJ,EAAM,MAAM,IAAItC,CAAJ,CAAM,gCAAN,EAAuC,0EAAvC,CAAN;;AAAyH,QAAG,aAAWgB,CAAC,CAACwE,iBAAb,IAAgC5E,CAAC,CAAC+E,IAAF,CAAO;AAACC,MAAAA,IAAI,EAAC,mCAAN;AAA0CC,MAAAA,OAAO,EAAC;AAAlD,KAAP,CAAhC,EAAkJxE,CAAC,KAAGL,CAAC,CAACqE,MAAN,IAAcrE,CAAC,CAAC8E,aAAF,CAAgBC,MAAhB,GAAuB,CAArC,IAAwCnF,CAAC,CAAC+E,IAAF,CAAO;AAACC,MAAAA,IAAI,EAAC,mCAAN;AAA0CC,MAAAA,OAAO,EAAC,2EAAlD;AAA8HG,MAAAA,OAAO,EAAC;AAACF,QAAAA,aAAa,EAAC9E,CAAC,CAAC8E;AAAjB;AAAtI,KAAP,CAA1L,EAAyWtD,CAA5W,EAA8W;AAAC,UAAIzC,CAAC,GAAC,IAAN;AAAWsB,MAAAA,CAAC,CAAC4E,IAAF,CAAQjG,CAAC,IAAEA,CAAC,CAAC4F,IAAF,KAASpD,CAAT,KAAazC,CAAC,GAACC,CAAF,EAAI,CAAC,CAAlB,CAAX,KAAmCD,CAAC,CAACmG,IAAF,GAAO,kBAAP,EAA0BnG,CAAC,CAACoG,QAAF,GAAW,CAAC,CAAtC,EAAwCpG,CAAC,CAACqG,QAAF,GAAW,CAAC,CAAvF,IAA0F/E,CAAC,CAACgF,OAAF,CAAU;AAACC,QAAAA,KAAK,EAAC9D,CAAP;AAASoD,QAAAA,IAAI,EAACpD,CAAd;AAAgB0D,QAAAA,IAAI,EAAC,kBAArB;AAAwCC,QAAAA,QAAQ,EAAC,CAAC,CAAlD;AAAoDC,QAAAA,QAAQ,EAAC,CAAC;AAA9D,OAAV,CAA1F;AAAsK;;AAAA,SAAI,MAAMrG,CAAV,IAAesB,CAAf,EAAiB;AAAC,UAAG,QAAMtB,CAAC,CAAC6F,IAAR,KAAe7F,CAAC,CAAC6F,IAAF,GAAO7F,CAAC,CAACuG,KAAxB,GAA+B,QAAMvG,CAAC,CAACuG,KAAR,KAAgBvG,CAAC,CAACuG,KAAF,GAAQvG,CAAC,CAAC6F,IAA1B,CAA/B,EAA+D,CAAC7F,CAAC,CAAC6F,IAArE,EAA0E,MAAM,IAAI5F,CAAJ,CAAM,kCAAN,EAAyC,uBAAzC,EAAiE;AAACuG,QAAAA,KAAK,EAACxG;AAAP,OAAjE,CAAN;AAAkF,UAAGA,CAAC,CAAC6F,IAAF,KAASpD,CAAT,KAAazC,CAAC,CAACmG,IAAF,GAAO,kBAApB,GAAwC,CAAC,CAAD,KAAKnD,CAAC,CAACyD,UAAF,CAAaC,OAAb,CAAqB1G,CAAC,CAACmG,IAAvB,CAAhD,EAA6E,MAAM,IAAIlG,CAAJ,CAAM,kCAAN,EAA0C,2BAA0BD,CAAC,CAAC6F,IAAK,GAA3E,EAA8E;AAACW,QAAAA,KAAK,EAACxG;AAAP,OAA9E,CAAN;AAA+F;;AAAA,UAAMwE,CAAC,GAAC,EAAR;AAAW,SAAKI,eAAL,GAAqB,EAArB;;AAAwB,SAAI,MAAM5E,CAAV,IAAesB,CAAf,EAAiB,IAAG,uBAAqBtB,CAAC,CAACmG,IAAvB,IAA6B,4BAA0BnG,CAAC,CAACmG,IAA5D,EAAiE;AAACnG,MAAAA,CAAC,CAACoG,QAAF,GAAW,QAAMpG,CAAC,CAACoG,QAAR,IAAkB,CAAC,CAACpG,CAAC,CAACoG,QAAjC,EAA0CpG,CAAC,CAACqG,QAAF,GAAW,QAAMrG,CAAC,CAACqG,QAAR,IAAkB,CAAC,CAACrG,CAAC,CAACqG,QAA3E;AAAoF,YAAMpG,CAAC,GAACiD,CAAC,CAAClD,CAAD,CAAT;AAAaA,MAAAA,CAAC,CAACqG,QAAF,IAAY,KAAK,CAAL,KAASpG,CAArB,GAAuBuE,CAAC,CAACxE,CAAC,CAAC6F,IAAH,CAAD,GAAU5F,CAAjC,GAAmC,KAAK2E,eAAL,CAAqBgB,IAArB,CAA0B5F,CAA1B,CAAnC;AAAgE;;AAAA,QAAG,KAAK6E,YAAL,GAAkB,IAAI/B,CAAJ,CAAMxB,CAAN,CAAlB,EAA2BuB,CAA9B,EAAgC;AAAC,UAAGA,CAAC,CAAC8D,cAAL,EAAoB;AAAC,cAAM3G,CAAC,GAAC,KAAK6E,YAAL,CAAkB+B,GAAlB,CAAsB/D,CAAC,CAAC8D,cAAxB,CAAR;;AAAgD3G,QAAAA,CAAC,IAAE6C,CAAC,CAAC8D,cAAF,GAAiB3G,CAAC,CAAC6F,IAAnB,EAAwB7F,CAAC,CAACmG,IAAF,GAAO,mBAAjC,IAAsDtD,CAAC,CAAC8D,cAAF,GAAiB,IAAxE;AAA6E;;AAAA,UAAG9D,CAAC,CAACgE,YAAL,EAAkB;AAAC,cAAM7G,CAAC,GAAC,KAAK6E,YAAL,CAAkB+B,GAAlB,CAAsB/D,CAAC,CAACgE,YAAxB,CAAR;;AAA8C7G,QAAAA,CAAC,IAAE6C,CAAC,CAACgE,YAAF,GAAe7G,CAAC,CAAC6F,IAAjB,EAAsB7F,CAAC,CAACmG,IAAF,GAAO,mBAA/B,IAAoDtD,CAAC,CAACgE,YAAF,GAAe,IAApE;AAAyE;;AAAA,UAAGhE,CAAC,CAACiE,YAAL,EAAkB;AAAC,cAAM9G,CAAC,GAAC,KAAK6E,YAAL,CAAkB+B,GAAlB,CAAsB/D,CAAC,CAACiE,YAAxB,CAAR;;AAA8C9G,QAAAA,CAAC,GAAC6C,CAAC,CAACiE,YAAF,GAAe9G,CAAC,CAAC6F,IAAlB,IAAwBhD,CAAC,CAACiE,YAAF,GAAe,IAAf,EAAoBjG,CAAC,CAAC+E,IAAF,CAAO;AAACC,UAAAA,IAAI,EAAC,6CAAN;AAAoDC,UAAAA,OAAO,EAAC,yBAA5D;AAAsFG,UAAAA,OAAO,EAAC;AAACN,YAAAA,QAAQ,EAAC9C;AAAV;AAA9F,SAAP,CAA5C,CAAD;AAAkK;;AAAAA,MAAAA,CAAC,CAAC8D,cAAF,IAAkB9D,CAAC,CAACgE,YAApB,KAAmChG,CAAC,CAAC+E,IAAF,CAAO;AAACC,QAAAA,IAAI,EAAC,gCAAN;AAAuCC,QAAAA,OAAO,EAAC,6CAA/C;AAA6FG,QAAAA,OAAO,EAAC;AAACN,UAAAA,QAAQ,EAAC9C;AAAV;AAArG,OAAP,GAA2HA,CAAC,GAAC,IAAhK;AAAsK;;AAAA,UAAMkE,CAAC,GAAC;AAACC,MAAAA,QAAQ,EAACnG,CAAV;AAAYoG,MAAAA,aAAa,EAAC,EAA1B;AAA6BC,MAAAA,eAAe,EAAC,EAAC,GAAG/D,CAAJ;AAAMgE,QAAAA,WAAW,EAACpF,CAAC,CAACQ,CAAD,CAAnB;AAAuB6E,QAAAA,SAAS,EAACnF,CAAC,CAACuC,CAAD,CAAlC;AAAsC6C,QAAAA,MAAM,EAAC,IAA7C;AAAkDhC,QAAAA,YAAY,EAAC9C,CAA/D;AAAiEiD,QAAAA,aAAa,EAAC/C,CAA/E;AAAiF6C,QAAAA,MAAM,EAAChE,CAAxF;AAA0FiE,QAAAA,IAAI,EAAC,CAAC,CAAClD,CAAjG;AAAmGsD,QAAAA,QAAQ,EAAC9C;AAA5G;AAA7C,KAAR;AAAqK,SAAK6B,YAAL,GAAkB,IAAInD,CAAJ,CAAM;AAAC+D,MAAAA,MAAM,EAAChE,CAAR;AAAU+D,MAAAA,YAAY,EAAC9C,CAAvB;AAAyB+E,MAAAA,IAAI,EAAC,CAAC,CAA/B;AAAiC/B,MAAAA,IAAI,EAAClD,CAAtC;AAAwCmD,MAAAA,aAAa,EAAC/C,CAAtD;AAAwDwC,MAAAA,gBAAgB,EAACtC,CAAzE;AAA2EgD,MAAAA,QAAQ,EAAC9C,CAApF;AAAsF0E,MAAAA,YAAY,EAAC,IAAIrG,CAAJ,CAAM;AAACmE,QAAAA,YAAY,EAAC9C,CAAd;AAAgB+E,QAAAA,IAAI,EAAC,CAAC,CAAtB;AAAwB/B,QAAAA,IAAI,EAAClD;AAA7B,OAAN,CAAnG;AAA0ImF,MAAAA,mBAAmB,EAAC,CAAC;AAA/J,KAAN,CAAlB,EAA2L,KAAK1C,wBAAL,GAA8B3C,CAAC,CAACqC,CAAD,EAAG/B,CAAH,CAA1N,EAAgO,KAAKgF,aAAL,GAAmBxG,CAAC,CAACyG,WAAF,GAAc,CAAjQ;AAAmQ,UAAMC,CAAC,GAAC9F,CAAC,CAACd,CAAD,EAAG;AAACsE,MAAAA,YAAY,EAAC9C,CAAd;AAAgBgD,MAAAA,IAAI,EAAClD,CAArB;AAAuBmD,MAAAA,aAAa,EAAC,aAAWvE,CAAC,CAACwE,iBAAb,GAA+BhD,CAA/B,GAAiC;AAAtE,KAAH,CAAT;AAAyF,QAAG,CAAClC,CAAC,CAACoC,CAAD,EAAGtC,CAAH,CAAL,EAAW,KAAI,MAAML,CAAV,IAAe2H,CAAf,EAAiB3H,CAAC,CAAC4H,QAAF,KAAa5H,CAAC,CAAC4H,QAAF,GAAWnH,CAAC,CAACW,CAAC,CAACT,CAAC,CAACX,CAAC,CAAC4H,QAAH,EAAYrF,CAAZ,EAAcF,CAAd,EAAgB,CAAC,CAAjB,CAAF,EAAsBhC,CAAtB,EAAwBsC,CAAxB,CAAF,CAAzB;AAAwD,WAAO,KAAKkF,oBAAL,CAA0Bd,CAA1B,EAA4BY,CAA5B,GAA+BZ,CAAtC;AAAwC;;AAAgB,QAAVe,UAAU,CAAC9H,CAAD,EAAG;AAAC,UAAK;AAACiF,MAAAA,gBAAgB,EAAChF,CAAlB;AAAoBoF,MAAAA,YAAY,EAAClF;AAAjC,QAAoC,KAAKuE,YAA9C;AAA2D,WAAO,MAAMqD,OAAO,CAACC,GAAR,CAAY,CAAC3F,CAAC,CAACpC,CAAD,EAAGE,CAAH,CAAF,EAAQmB,CAAC,CAACtB,CAAC,CAACiI,IAAH,EAAQhI,CAAR,CAAT,EAAoBqB,CAAC,CAACtB,CAAC,CAACkI,OAAH,EAAWjI,CAAX,CAArB,CAAZ,CAAN,EAAuD,KAAKkI,WAAL,CAAiBnI,CAAjB,CAA9D;AAAkF;;AAAAoI,EAAAA,aAAa,CAACpI,CAAC,GAAC,EAAH,EAAMC,CAAC,GAAC,EAAR,EAAW;AAAC,WAAO,KAAKyE,YAAL,CAAkB2D,YAAlB,CAA+BrI,CAA/B,EAAiCC,CAAC,CAACqI,MAAnC,CAAP;AAAkD;;AAAAC,EAAAA,iBAAiB,CAACvI,CAAC,GAAC,EAAH,EAAMC,CAAC,GAAC,EAAR,EAAW;AAAC,WAAO,KAAKyE,YAAL,CAAkB8D,oBAAlB,CAAuCxI,CAAvC,EAAyCC,CAAC,CAACqI,MAA3C,CAAP;AAA0D;;AAAAG,EAAAA,cAAc,CAACzI,CAAC,GAAC,EAAH,EAAMC,CAAC,GAAC,EAAR,EAAW;AAAC,WAAO,KAAKyE,YAAL,CAAkBgE,kBAAlB,CAAqC1I,CAArC,EAAuCC,CAAC,CAACqI,MAAzC,CAAP;AAAwD;;AAAAK,EAAAA,WAAW,CAAC3I,CAAC,GAAC,EAAH,EAAMC,CAAC,GAAC,EAAR,EAAW;AAAC,WAAO,KAAKyE,YAAL,CAAkBkE,qBAAlB,CAAwC5I,CAAxC,EAA0CC,CAAC,CAACqI,MAA5C,CAAP;AAA2D;;AAAAO,EAAAA,aAAa,CAAC7I,CAAD,EAAGC,CAAC,GAAC,EAAL,EAAQ;AAAC,WAAO,KAAKyE,YAAL,CAAkBoE,uBAAlB,CAA0C9I,CAA1C,EAA4CC,CAAC,CAACqI,MAA9C,CAAP;AAA6D;;AAAAT,EAAAA,oBAAoB,CAAC7H,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAK;AAACsH,MAAAA,YAAY,EAACpH,CAAd;AAAgBqF,MAAAA,aAAa,EAACnF;AAA9B,QAAiC,KAAKqE,YAA3C;AAAA,UAAwDnE,CAAC,GAAC,EAA1D;;AAA6D,SAAI,MAAME,CAAV,IAAeR,CAAf,EAAiB;AAAC,YAAMA,CAAC,GAAC,KAAK6E,wBAAL,EAAR;AAAA,YAAwC3E,CAAC,GAACoC,CAAC,CAAC,KAAKsC,YAAN,EAAmB5E,CAAnB,EAAqBQ,CAAC,CAACsI,UAAvB,EAAkC,KAAKnE,eAAvC,EAAuD,CAAC,CAAxD,EAA0D5E,CAAC,CAACgH,QAA5D,CAA3C;;AAAiH7G,MAAAA,CAAC,GAACH,CAAC,CAACiH,aAAF,CAAgBrB,IAAhB,CAAqBzF,CAArB,CAAD,IAA0B,KAAK6I,eAAL,CAAqB/I,CAArB,EAAuBQ,CAAC,CAACsI,UAAzB,EAAoC,CAAC,CAArC,GAAwCtI,CAAC,CAACsI,UAAF,GAAa9I,CAArD,EAAuDQ,CAAC,CAACwI,QAAF,GAAWhJ,CAAC,CAACI,CAAD,CAAnE,EAAuEE,CAAC,CAACqF,IAAF,CAAOnF,CAAP,CAAjG,CAAD;AAA6G;;AAAA,QAAGN,CAAC,CAAC+I,OAAF,CAAU3I,CAAV,GAAaP,CAAC,CAACkH,eAAF,CAAkBG,MAAlB,GAAyB,KAAK3C,YAAL,CAAkByE,UAAxD,EAAmEnJ,CAAC,CAACkH,eAAF,CAAkBvB,QAAxF,EAAiG;AAAC,YAAK;AAACyD,QAAAA,KAAK,EAACnJ,CAAP;AAASoJ,QAAAA,GAAG,EAAClJ;AAAb,UAAgB,KAAKuE,YAAL,CAAkB4E,UAAvC;AAAkDtJ,MAAAA,CAAC,CAACkH,eAAF,CAAkBvB,QAAlB,CAA2B2D,UAA3B,GAAsC,CAACrJ,CAAD,EAAGE,CAAH,CAAtC;AAA4C;;AAAA,WAAOH,CAAP;AAAS;;AAAAmI,EAAAA,WAAW,CAACnI,CAAD,EAAG;AAAC,UAAK;AAACiI,MAAAA,IAAI,EAAChI,CAAN;AAAQiI,MAAAA,OAAO,EAAC/H,CAAhB;AAAkBoJ,MAAAA,OAAO,EAAClJ;AAA1B,QAA6BL,CAAlC;AAAA,UAAoCO,CAAC,GAAC;AAACiJ,MAAAA,UAAU,EAAC,EAAZ;AAAeC,MAAAA,aAAa,EAAC,EAA7B;AAAgCC,MAAAA,aAAa,EAAC,EAA9C;AAAiDC,MAAAA,aAAa,EAAC;AAA/D,KAAtC;;AAAyG,QAAG1J,CAAC,IAAEA,CAAC,CAAC+F,MAAL,IAAa,KAAK4D,cAAL,CAAoBrJ,CAApB,EAAsBN,CAAtB,CAAb,EAAsCE,CAAC,IAAEA,CAAC,CAAC6F,MAAL,IAAa,KAAK6D,iBAAL,CAAuBtJ,CAAvB,EAAyBJ,CAAzB,CAAnD,EAA+EE,CAAC,IAAEA,CAAC,CAAC2F,MAAvF,EAA8F;AAAC,WAAI,MAAMhG,CAAV,IAAeK,CAAf,EAAiBE,CAAC,CAACkJ,aAAF,CAAgB7D,IAAhB,CAAqBnD,CAAC,CAACzC,CAAD,CAAtB;;AAA2B,WAAK0E,YAAL,CAAkB6C,YAAlB,CAA+BuC,cAA/B,CAA8CzJ,CAA9C;AAAiD;;AAAA,WAAM;AAAC8I,MAAAA,UAAU,EAAC,KAAKzE,YAAL,CAAkByE,UAA9B;AAAyCG,MAAAA,UAAU,EAAC,KAAK5E,YAAL,CAAkB4E,UAAtE;AAAiFS,MAAAA,kBAAkB,EAACxJ;AAApG,KAAN;AAA6G;;AAAAqJ,EAAAA,cAAc,CAAC5J,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAK;AAACuJ,MAAAA,UAAU,EAACnJ;AAAZ,QAAeL,CAApB;AAAA,UAAsB;AAACqF,MAAAA,YAAY,EAAC9E,CAAd;AAAgB+G,MAAAA,IAAI,EAAC7G,CAArB;AAAuB8E,MAAAA,IAAI,EAAC5E,CAA5B;AAA8B6E,MAAAA,aAAa,EAACzE,CAA5C;AAA8CkE,MAAAA,gBAAgB,EAAChE,CAA/D;AAAiEsG,MAAAA,YAAY,EAACrG;AAA9E,QAAiF,KAAKwD,YAA5G;AAAA,UAAyHpD,CAAC,GAAC,EAA3H;;AAA8H,SAAI,MAAMT,CAAV,IAAeZ,CAAf,EAAiB;AAAC,UAAGY,CAAC,CAAC+G,QAAF,IAAYrH,CAAC,KAAGJ,CAAC,CAACU,CAAC,CAAC+G,QAAH,CAApB,EAAiC;AAACvH,QAAAA,CAAC,CAACuF,IAAF,CAAOjD,CAAC,CAAC,0BAAD,CAAR;AAAsC;AAAS;;AAAA,YAAM1C,CAAC,GAAC,KAAK6E,wBAAL,EAAR;AAAA,YAAwCrE,CAAC,GAAC8B,CAAC,CAAC,KAAKsC,YAAN,EAAmB5E,CAAnB,EAAqBY,CAAC,CAACkI,UAAvB,EAAkC,KAAKnE,eAAvC,CAA3C;;AAAmG,UAAGnE,CAAH,EAAKJ,CAAC,CAACuF,IAAF,CAAOnF,CAAP,EAAL,KAAmB;AAAC,YAAG,KAAKuI,eAAL,CAAqB/I,CAArB,EAAuBY,CAAC,CAACkI,UAAzB,GAAqClI,CAAC,CAACkI,UAAF,GAAa9I,CAAlD,EAAoD,QAAMY,CAAC,CAACmJ,GAA/D,EAAmE;AAAC,gBAAM/J,CAAC,GAACY,CAAC,CAACkI,UAAF,CAAahI,CAAb,CAAR;AAAwBf,UAAAA,CAAC,CAAC2J,aAAF,CAAgB9I,CAAC,CAACmJ,GAAlB,IAAuB/J,CAAvB;AAAyB;;AAAAY,QAAAA,CAAC,CAAC+G,QAAF,KAAa/G,CAAC,CAAC+G,QAAF,GAAWxG,CAAC,CAACyB,CAAC,CAAChC,CAAC,CAAC+G,QAAH,EAAY3G,CAAZ,CAAF,EAAiBJ,CAAC,CAAC+G,QAAF,CAAW3C,gBAA5B,EAA6ChE,CAA7C,CAAzB,GAA0EK,CAAC,CAACsE,IAAF,CAAO/E,CAAP,CAA1E,EAAoFR,CAAC,CAACuF,IAAF,CAAOnD,CAAC,CAAC5B,CAAC,CAACkI,UAAF,CAAahI,CAAb,CAAD,CAAR,CAApF;AAA+G;AAAC;;AAAAG,IAAAA,CAAC,CAACgI,OAAF,CAAUrI,CAAC,CAAC,EAAD,EAAIS,CAAJ,EAAMf,CAAN,EAAQI,CAAR,EAAUF,CAAV,EAAYM,CAAZ,CAAX;AAA2B;;AAAA8I,EAAAA,iBAAiB,CAAC;AAACH,IAAAA,aAAa,EAAC1J;AAAf,GAAD,EAAmBC,CAAnB,EAAqB;AAAC,UAAK;AAACoF,MAAAA,YAAY,EAAChF,CAAd;AAAgBiH,MAAAA,IAAI,EAAC/G,CAArB;AAAuBgF,MAAAA,IAAI,EAAC9E,CAA5B;AAA8B+E,MAAAA,aAAa,EAAC7E,CAA5C;AAA8CsE,MAAAA,gBAAgB,EAACpE,CAA/D;AAAiE0G,MAAAA,YAAY,EAACrG;AAA9E,QAAiF,KAAKwD,YAA3F;;AAAwG,SAAI,MAAMpD,CAAV,IAAerB,CAAf,EAAiB;AAAC,YAAK;AAAC8I,QAAAA,UAAU,EAAC9I,CAAZ;AAAc2H,QAAAA,QAAQ,EAACrG;AAAvB,UAA0BD,CAA/B;AAAA,YAAiCG,CAAC,GAACxB,CAAC,IAAEA,CAAC,CAACU,CAAD,CAAvC;;AAA2C,UAAG,QAAMc,CAAT,EAAW;AAACzB,QAAAA,CAAC,CAAC4F,IAAF,CAAOjD,CAAC,CAAE,oBAAmBhC,CAAE,UAAvB,CAAR;AAA2C;AAAS;;AAAA,UAAG,CAACO,CAAC,CAAC+I,GAAF,CAAMxI,CAAN,CAAJ,EAAa;AAACzB,QAAAA,CAAC,CAAC4F,IAAF,CAAOjD,CAAC,CAAE,0BAAyBlB,CAAE,UAA7B,CAAR;AAAiD;AAAS;;AAAA,YAAME,CAAC,GAACZ,CAAC,CAACG,CAAC,CAACgJ,UAAF,CAAazI,CAAb,CAAD,EAAiBpB,CAAjB,EAAmBI,CAAnB,EAAqBF,CAArB,CAAT;;AAAiC,UAAGgB,CAAH,EAAK;AAAC,YAAGlB,CAAC,KAAGF,CAAC,CAACoB,CAAD,CAAR,EAAY;AAACvB,UAAAA,CAAC,CAAC4F,IAAF,CAAOjD,CAAC,CAAC,0BAAD,CAAR;AAAsC;AAAS;;AAAAhB,QAAAA,CAAC,CAACiG,QAAF,GAAWxG,CAAC,CAACyB,CAAC,CAACtB,CAAD,EAAGV,CAAH,CAAF,EAAQU,CAAC,CAAC0D,gBAAV,EAA2BpE,CAA3B,CAAZ;AAA0C;;AAAA,UAAGZ,CAAH,EAAK;AAAC,cAAME,CAAC,GAACoC,CAAC,CAAC,KAAKsC,YAAN,EAAmBlD,CAAC,CAACoH,UAArB,EAAgC9I,CAAhC,EAAkC,KAAK2E,eAAvC,CAAT;;AAAiE,YAAGzE,CAAH,EAAK;AAACH,UAAAA,CAAC,CAAC4F,IAAF,CAAOzF,CAAP;AAAU;AAAS;AAAC;;AAAAe,MAAAA,CAAC,CAACiJ,GAAF,CAAMlJ,CAAC,CAACU,CAAD,EAAGtB,CAAH,EAAKI,CAAL,EAAOF,CAAP,EAASI,CAAT,CAAP,GAAoBX,CAAC,CAAC4F,IAAF,CAAOnD,CAAC,CAAChB,CAAD,CAAR,CAApB;AAAiC;AAAC;;AAAAuH,EAAAA,eAAe,CAAChJ,CAAD,EAAGC,CAAH,EAAKE,CAAC,GAAC,CAAC,CAAR,EAAU;AAAC,UAAME,CAAC,GAAC,KAAKqE,YAAL,CAAkBc,aAA1B;AAAwCrF,IAAAA,CAAC,IAAEiK,QAAQ,CAACnK,CAAC,CAACI,CAAD,CAAF,CAAX,GAAkBL,CAAC,CAACK,CAAD,CAAD,GAAKJ,CAAC,CAACI,CAAD,CAAxB,GAA4BL,CAAC,CAACK,CAAD,CAAD,GAAK,KAAKoH,aAAL,EAAjC;AAAsD;;AAAsB,QAAhBzC,gBAAgB,CAAChF,CAAD,EAAG;AAAC,QAAG;AAAC,YAAMsB,CAAC,CAACjB,CAAD,EAAGL,CAAH,CAAP;AAAa,KAAjB,CAAiB,MAAK;AAAC,YAAM,IAAIC,CAAJ,CAAM,eAAN,EAAsB,0BAAtB,CAAN;AAAwD;AAAC;;AAA/kM;;AAAglM,eAAeuE,CAAf","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import t from\"../../../../core/Error.js\";import{getJsonType as i}from\"../../../../geometry/support/jsonUtils.js\";import{WGS84 as s,equals as r}from\"../../../../geometry/support/spatialReferenceUtils.js\";import{convertFromGeometry as n,convertToGeometry as o,convertFromFeatures as a,convertToFeature as l,convertFromFeature as d}from\"../../featureConversionUtils.js\";import u from\"../../data/FeatureStore.js\";import{project as p,checkProjectionSupport as y}from\"../../data/projectionSupport.js\";import f from\"../../data/QueryEngine.js\";import{validateGeoJSON as m,inferLayerProperties as c,createOptimizedFeatures as h}from\"./geojson.js\";import{createDrawingInfo as g,createDefaultTemplate as I,createDefaultAttributesFunction as F}from\"../support/clientSideDefaults.js\";import{loadGeometryEngineForSimplify as b,mixAttributes as j,createFeatureEditSuccessResult as _,createFeatureEditErrorResult as E,simplify as T}from\"../support/sourceUtils.js\";import q from\"../../../support/FieldsIndex.js\";import{kebabDict as x}from\"../../../support/fieldType.js\";import{getFieldDefaultValue as w}from\"../../../support/fieldUtils.js\";const R={hasAttachments:!1,capabilities:\"query, editing, create, delete, update\",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class D{constructor(){this._queryEngine=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null}async load(i){const a=[];await this._checkProjection(i.spatialReference);let l=null;if(i.url){l=(await e(i.url,{responseType:\"json\"})).data,await m(l)}const d=c(l,{geometryType:i.geometryType}),y=i.fields||d.fields||[],b=null!=i.hasZ?i.hasZ:d.hasZ,j=d.geometryType,_=i.objectIdField||(\"number\"===d.objectIdFieldType?d.objectIdFieldName:\"OBJECTID\")||\"OBJECTID\",E=i.spatialReference||s;let T=i.timeInfo;if(!j)throw new t(\"geojson-layer:missing-property\",\"geometryType not set and couldn't be inferred from the provided features\");if(\"string\"===d.objectIdFieldType&&a.push({name:\"geojson-layer:unsupported-id-type\",message:\"Feature ids are of type string and can't be honored.\"}),y===d.fields&&d.unknownFields.length>0&&a.push({name:\"geojson-layer:unknown-field-types\",message:\"Some fields types couldn't be inferred from the features and were dropped\",details:{unknownFields:d.unknownFields}}),_){let e=null;y.some((t=>t.name===_&&(e=t,!0)))?(e.type=\"esriFieldTypeOID\",e.editable=!1,e.nullable=!1):y.unshift({alias:_,name:_,type:\"esriFieldTypeOID\",editable:!1,nullable:!1})}for(const e of y){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new t(\"geojson-layer:invalid-field-name\",\"field name is missing\",{field:e});if(e.name===_&&(e.type=\"esriFieldTypeOID\"),-1===x.jsonValues.indexOf(e.type))throw new t(\"geojson-layer:invalid-field-type\",`invalid type for field \"${e.name}\"`,{field:e})}const D={};this._requiredFields=[];for(const e of y)if(\"esriFieldTypeOID\"!==e.type&&\"esriFieldTypeGlobalID\"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const t=w(e);e.nullable||void 0!==t?D[e.name]=t:this._requiredFields.push(e)}if(this._fieldsIndex=new q(y),T){if(T.startTimeField){const e=this._fieldsIndex.get(T.startTimeField);e?(T.startTimeField=e.name,e.type=\"esriFieldTypeDate\"):T.startTimeField=null}if(T.endTimeField){const e=this._fieldsIndex.get(T.endTimeField);e?(T.endTimeField=e.name,e.type=\"esriFieldTypeDate\"):T.endTimeField=null}if(T.trackIdField){const e=this._fieldsIndex.get(T.trackIdField);e?T.trackIdField=e.name:(T.trackIdField=null,a.push({name:\"geojson-layer:invalid-timeInfo-trackIdField\",message:\"trackIdField is missing\",details:{timeInfo:T}}))}T.startTimeField||T.endTimeField||(a.push({name:\"geojson-layer:invalid-timeInfo\",message:\"startTimeField and endTimeField are missing\",details:{timeInfo:T}}),T=null)}const O={warnings:a,featureErrors:[],layerDefinition:{...R,drawingInfo:g(j),templates:I(D),extent:null,geometryType:j,objectIdField:_,fields:y,hasZ:!!b,timeInfo:T}};this._queryEngine=new f({fields:y,geometryType:j,hasM:!1,hasZ:b,objectIdField:_,spatialReference:E,timeInfo:T,featureStore:new u({geometryType:j,hasM:!1,hasZ:b}),cacheSpatialQueries:!0}),this._createDefaultAttributes=F(D,_),this._nextObjectId=d.maxObjectId+1;const S=h(l,{geometryType:j,hasZ:b,objectIdField:\"number\"===d.objectIdFieldType?_:null});if(!r(E,s))for(const e of S)e.geometry&&(e.geometry=n(p(o(e.geometry,j,b,!1),s,E)));return this._loadInitialFeatures(O,S),O}async applyEdits(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Promise.all([b(t,i),y(e.adds,t),y(e.updates,t)]),this._applyEdits(e)}queryFeatures(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_loadInitialFeatures(e,t){const{featureStore:i,objectIdField:s}=this._queryEngine,r=[];for(const n of t){const t=this._createDefaultAttributes(),i=j(this._fieldsIndex,t,n.attributes,this._requiredFields,!0,e.warnings);i?e.featureErrors.push(i):(this._assignObjectId(t,n.attributes,!0),n.attributes=t,n.objectId=t[s],r.push(n))}if(i.addMany(r),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:i}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}_applyEdits(e){const{adds:t,updates:i,deletes:s}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),i&&i.length&&this._applyUpdateEdits(r,i),s&&s.length){for(const e of s)r.deleteResults.push(_(e));this._queryEngine.featureStore.removeManyById(s)}return{fullExtent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:r,hasM:n,hasZ:o,objectIdField:l,spatialReference:d,featureStore:u}=this._queryEngine,y=[];for(const a of t){if(a.geometry&&r!==i(a.geometry)){s.push(E(\"Incorrect geometry type.\"));continue}const t=this._createDefaultAttributes(),n=j(this._fieldsIndex,t,a.attributes,this._requiredFields);if(n)s.push(n);else{if(this._assignObjectId(t,a.attributes),a.attributes=t,null!=a.uid){const t=a.attributes[l];e.uidToObjectId[a.uid]=t}a.geometry&&(a.geometry=p(T(a.geometry,d),a.geometry.spatialReference,d)),y.push(a),s.push(_(a.attributes[l]))}}u.addMany(a([],y,r,o,n,l))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:r,hasZ:n,objectIdField:o,spatialReference:a,featureStore:u}=this._queryEngine;for(const y of t){const{attributes:t,geometry:f}=y,m=t&&t[o];if(null==m){e.push(E(`Identifier field ${o} missing`));continue}if(!u.has(m)){e.push(E(`Feature with object id ${m} missing`));continue}const c=l(u.getFeature(m),s,n,r);if(f){if(s!==i(f)){e.push(E(\"Incorrect geometry type.\"));continue}c.geometry=p(T(f,a),f.spatialReference,a)}if(t){const i=j(this._fieldsIndex,c.attributes,t,this._requiredFields);if(i){e.push(i);continue}}u.add(d(c,s,n,r,o)),e.push(_(m))}}_assignObjectId(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++}async _checkProjection(e){try{await y(s,e)}catch{throw new t(\"geojson-layer\",\"Projection not supported\")}}}export default D;\n"]},"metadata":{},"sourceType":"module"}