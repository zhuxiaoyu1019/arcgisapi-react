{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { glsl as d } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as e } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\n\nfunction r() {\n  const r = new e();\n  return r.extensions.add(\"GL_OES_standard_derivatives\"), r.vertex.uniforms.add(\"proj\", \"mat4\").add(\"view\", \"mat4\"), r.attributes.add(\"position\", \"vec3\"), r.attributes.add(\"uv0\", \"vec2\"), r.varyings.add(\"vUV\", \"vec2\"), r.vertex.code.add(d`void main(void) {\nvUV = uv0;\ngl_Position = proj * view * vec4(position, 1.0);\n}`), r.fragment.uniforms.add(\"backgroundColor\", \"vec4\").add(\"gridColor\", \"vec4\").add(\"ratio\", \"float\").add(\"gridWidth\", \"float\"), r.fragment.code.add(d`void main() {\nconst float LINE_WIDTH = 1.0;\nvec2 uvScaled = vUV * gridWidth;\nvec2 gridUV = (fract(uvScaled + 0.5) - 0.5) / (LINE_WIDTH * fwidth(uvScaled));\nvec2 grid = (1.0 - step(0.5, gridUV)) * step(-0.5, gridUV);\ngrid.x *= step(0.5, uvScaled.x) * step(uvScaled.x, gridWidth - 0.5);\ngrid.y *= step(0.5, uvScaled.y) * step(uvScaled.y, gridWidth - 0.5);\nfloat gridFade = max(grid.x, grid.y);\nfloat gridAlpha = gridColor.a * gridFade;\ngl_FragColor =\nvec4(backgroundColor.rgb * backgroundColor.a, backgroundColor.a) * (1.0 - gridAlpha) +\nvec4(gridColor.rgb, 1.0) * gridAlpha;\n}`), r;\n}\n\nvar a = Object.freeze({\n  __proto__: null,\n  build: r\n});\nexport { a as S, r as b };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/chunks/SlicePlaneMaterial.glsl.js"],"names":["glsl","d","ShaderBuilder","e","r","extensions","add","vertex","uniforms","attributes","varyings","code","fragment","a","Object","freeze","__proto__","build","S","b"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,2DAArB;AAAiF,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,8DAA9B;;AAA6F,SAASC,CAAT,GAAY;AAAC,QAAMA,CAAC,GAAC,IAAID,CAAJ,EAAR;AAAc,SAAOC,CAAC,CAACC,UAAF,CAAaC,GAAb,CAAiB,6BAAjB,GAAgDF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,GAAlB,CAAsB,MAAtB,EAA6B,MAA7B,EAAqCA,GAArC,CAAyC,MAAzC,EAAgD,MAAhD,CAAhD,EAAwGF,CAAC,CAACK,UAAF,CAAaH,GAAb,CAAiB,UAAjB,EAA4B,MAA5B,CAAxG,EAA4IF,CAAC,CAACK,UAAF,CAAaH,GAAb,CAAiB,KAAjB,EAAuB,MAAvB,CAA5I,EAA2KF,CAAC,CAACM,QAAF,CAAWJ,GAAX,CAAe,KAAf,EAAqB,MAArB,CAA3K,EAAwMF,CAAC,CAACG,MAAF,CAASI,IAAT,CAAcL,GAAd,CAAkBL,CAAE;AAC5a;AACA;AACA,EAHwZ,CAAxM,EAG5MG,CAAC,CAACQ,QAAF,CAAWJ,QAAX,CAAoBF,GAApB,CAAwB,iBAAxB,EAA0C,MAA1C,EAAkDA,GAAlD,CAAsD,WAAtD,EAAkE,MAAlE,EAA0EA,GAA1E,CAA8E,OAA9E,EAAsF,OAAtF,EAA+FA,GAA/F,CAAmG,WAAnG,EAA+G,OAA/G,CAH4M,EAGpFF,CAAC,CAACQ,QAAF,CAAWD,IAAX,CAAgBL,GAAhB,CAAoBL,CAAE;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAZ4H,CAHoF,EAe5MG,CAfqM;AAenM;;AAAA,IAAIS,CAAC,GAACC,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,SAAS,EAAC,IAAX;AAAgBC,EAAAA,KAAK,EAACb;AAAtB,CAAd,CAAN;AAA8C,SAAOS,CAAC,IAAIK,CAAZ,EAAcd,CAAC,IAAIe,CAAnB","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{glsl as d}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as e}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";function r(){const r=new e;return r.extensions.add(\"GL_OES_standard_derivatives\"),r.vertex.uniforms.add(\"proj\",\"mat4\").add(\"view\",\"mat4\"),r.attributes.add(\"position\",\"vec3\"),r.attributes.add(\"uv0\",\"vec2\"),r.varyings.add(\"vUV\",\"vec2\"),r.vertex.code.add(d`void main(void) {\nvUV = uv0;\ngl_Position = proj * view * vec4(position, 1.0);\n}`),r.fragment.uniforms.add(\"backgroundColor\",\"vec4\").add(\"gridColor\",\"vec4\").add(\"ratio\",\"float\").add(\"gridWidth\",\"float\"),r.fragment.code.add(d`void main() {\nconst float LINE_WIDTH = 1.0;\nvec2 uvScaled = vUV * gridWidth;\nvec2 gridUV = (fract(uvScaled + 0.5) - 0.5) / (LINE_WIDTH * fwidth(uvScaled));\nvec2 grid = (1.0 - step(0.5, gridUV)) * step(-0.5, gridUV);\ngrid.x *= step(0.5, uvScaled.x) * step(uvScaled.x, gridWidth - 0.5);\ngrid.y *= step(0.5, uvScaled.y) * step(uvScaled.y, gridWidth - 0.5);\nfloat gridFade = max(grid.x, grid.y);\nfloat gridAlpha = gridColor.a * gridFade;\ngl_FragColor =\nvec4(backgroundColor.rgb * backgroundColor.a, backgroundColor.a) * (1.0 - gridAlpha) +\nvec4(gridColor.rgb, 1.0) * gridAlpha;\n}`),r}var a=Object.freeze({__proto__:null,build:r});export{a as S,r as b};\n"]},"metadata":{},"sourceType":"module"}