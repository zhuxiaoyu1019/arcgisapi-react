{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Error.js\";\nimport { whenTrueOnce as r } from \"../../../core/watchUtils.js\";\nimport { property as i } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/Logger.js\";\nimport { subclass as a } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { updatingProgress as s, updatingProgressValue as o } from \"../support/updatingProperties.js\";\nimport { checkIfTileInfoSupportedForView as l } from \"../terrain/terrainUtils.js\";\n\nconst n = n => {\n  let p = class extends n {\n    get imageFormatIsOpaque() {\n      return !1;\n    }\n\n    get isOpaque() {\n      return this.fullOpacity >= 1 && this.imageFormatIsOpaque;\n    }\n\n    get dataLevelRange() {\n      const e = this.tileInfo.lods,\n            t = e[0].scale,\n            r = e[e.length - 1].scale;\n      return this.levelRangeFromScaleRange(t, r);\n    }\n\n    get displayLevelRange() {\n      const e = this.tileInfo.lods,\n            t = this.layer.minScale || e[0].scale,\n            r = this.layer.maxScale || e[e.length - 1].scale,\n            i = this.levelRangeFromScaleRange(t, r);\n      return this.layer.maxScale && i.maxLevel++, i;\n    }\n\n    getTileUrl(e, t, r) {\n      return this.layer.getTileUrl(e, t, r);\n    }\n\n    _addTilingSchemeMatchPromise() {\n      const e = this._getTileInfoSupportError(this.tileInfo, this.layer.fullExtent);\n\n      if (e) this.addResolvingPromise(Promise.reject(e));else {\n        const e = r(this.view, \"basemapTerrain.tilingSchemeLocked\").then(() => {\n          const e = this.view.basemapTerrain.tilingScheme,\n                t = this._getTileInfoCompatibilityError(this.tileInfo, e);\n\n          if (t) throw t;\n        });\n        this.addResolvingPromise(e);\n      }\n    }\n\n    _getTileInfoSupportError(e, r) {\n      const i = l(e, r, this.view.spatialReference, this.view.state.viewingMode);\n\n      if (i) {\n        const e = {\n          layer: this.layer,\n          error: i\n        };\n        let r;\n\n        switch (i.name) {\n          case \"tilingscheme:local-gcs-not-supported\":\n            r = new t(\"layerview:local-gcs-not-supported\", \"Geographic coordinate systems are not supported in local scenes\", e);\n            break;\n\n          case \"tilingscheme:spatial-reference-mismatch\":\n          case \"tilingscheme:global-unsupported-spatial-reference\":\n            r = new t(\"layerview:spatial-reference-incompatible\", \"The spatial reference of this layer does not meet the requirements of the view\", e);\n            break;\n\n          default:\n            r = new t(\"layerview:tiling-scheme-unsupported\", \"The tiling scheme of this layer is not supported by SceneView\", e);\n        }\n\n        return r;\n      }\n\n      return null;\n    }\n\n    _getTileInfoCompatibilityError(e, r) {\n      return r.compatibleWith(e) ? null : new t(\"layerview:tiling-scheme-incompatible\", \"The tiling scheme of this layer is incompatible with the tiling scheme of the surface\");\n    }\n\n    levelRangeFromScaleRange(e, t) {\n      const r = {\n        minLevel: 0,\n        maxLevel: 1 / 0\n      },\n            i = this.view && this.view.basemapTerrain && this.view.basemapTerrain.tilingScheme;\n      if (!i) return r;\n\n      const a = i.levels[0],\n            s = e => {\n        const t = Math.log(a.scale / e) / Math.LN2;\n        return .5 - Math.abs(.5 - t % 1) < 1e-9 ? Math.round(t) : Math.ceil(t);\n      };\n\n      return null != e && e > 0 && (r.minLevel = Math.max(0, s(e))), null != t && t > 0 && (r.maxLevel = Math.max(0, s(t))), r;\n    }\n\n    isUpdating() {\n      return !!(this.view && this.view.basemapTerrain && this.view.basemapTerrain.updating);\n    }\n\n  };\n  return e([i({\n    readOnly: !0\n  })], p.prototype, \"imageFormatIsOpaque\", null), e([i({\n    readOnly: !0\n  })], p.prototype, \"updating\", void 0), e([i(s)], p.prototype, \"updatingProgress\", void 0), e([i(o)], p.prototype, \"updatingProgressValue\", void 0), e([i({\n    readOnly: !0\n  })], p.prototype, \"fullExtent\", void 0), e([i({\n    readOnly: !0\n  })], p.prototype, \"isOpaque\", null), e([i({\n    readOnly: !0\n  })], p.prototype, \"dataLevelRange\", null), e([i({\n    readOnly: !0\n  })], p.prototype, \"displayLevelRange\", null), e([i()], p.prototype, \"layer\", void 0), e([i({\n    readOnly: !0\n  })], p.prototype, \"tileInfo\", void 0), p = e([a(\"esri.views.3d.layers.TiledLayerView3D\")], p), p;\n};\n\nexport { n as TiledLayerView3D };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/layers/TiledLayerView3D.js"],"names":["_","e","t","whenTrueOnce","r","property","i","subclass","a","updatingProgress","s","updatingProgressValue","o","checkIfTileInfoSupportedForView","l","n","p","imageFormatIsOpaque","isOpaque","fullOpacity","dataLevelRange","tileInfo","lods","scale","length","levelRangeFromScaleRange","displayLevelRange","layer","minScale","maxScale","maxLevel","getTileUrl","_addTilingSchemeMatchPromise","_getTileInfoSupportError","fullExtent","addResolvingPromise","Promise","reject","view","then","basemapTerrain","tilingScheme","_getTileInfoCompatibilityError","spatialReference","state","viewingMode","error","name","compatibleWith","minLevel","levels","Math","log","LN2","abs","round","ceil","max","isUpdating","updating","readOnly","prototype","TiledLayerView3D"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Error.js\";import{whenTrueOnce as r}from\"../../../core/watchUtils.js\";import{property as i}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/Logger.js\";import{subclass as a}from\"../../../core/accessorSupport/decorators/subclass.js\";import{updatingProgress as s,updatingProgressValue as o}from\"../support/updatingProperties.js\";import{checkIfTileInfoSupportedForView as l}from\"../terrain/terrainUtils.js\";const n=n=>{let p=class extends n{get imageFormatIsOpaque(){return!1}get isOpaque(){return this.fullOpacity>=1&&this.imageFormatIsOpaque}get dataLevelRange(){const e=this.tileInfo.lods,t=e[0].scale,r=e[e.length-1].scale;return this.levelRangeFromScaleRange(t,r)}get displayLevelRange(){const e=this.tileInfo.lods,t=this.layer.minScale||e[0].scale,r=this.layer.maxScale||e[e.length-1].scale,i=this.levelRangeFromScaleRange(t,r);return this.layer.maxScale&&i.maxLevel++,i}getTileUrl(e,t,r){return this.layer.getTileUrl(e,t,r)}_addTilingSchemeMatchPromise(){const e=this._getTileInfoSupportError(this.tileInfo,this.layer.fullExtent);if(e)this.addResolvingPromise(Promise.reject(e));else{const e=r(this.view,\"basemapTerrain.tilingSchemeLocked\").then((()=>{const e=this.view.basemapTerrain.tilingScheme,t=this._getTileInfoCompatibilityError(this.tileInfo,e);if(t)throw t}));this.addResolvingPromise(e)}}_getTileInfoSupportError(e,r){const i=l(e,r,this.view.spatialReference,this.view.state.viewingMode);if(i){const e={layer:this.layer,error:i};let r;switch(i.name){case\"tilingscheme:local-gcs-not-supported\":r=new t(\"layerview:local-gcs-not-supported\",\"Geographic coordinate systems are not supported in local scenes\",e);break;case\"tilingscheme:spatial-reference-mismatch\":case\"tilingscheme:global-unsupported-spatial-reference\":r=new t(\"layerview:spatial-reference-incompatible\",\"The spatial reference of this layer does not meet the requirements of the view\",e);break;default:r=new t(\"layerview:tiling-scheme-unsupported\",\"The tiling scheme of this layer is not supported by SceneView\",e)}return r}return null}_getTileInfoCompatibilityError(e,r){return r.compatibleWith(e)?null:new t(\"layerview:tiling-scheme-incompatible\",\"The tiling scheme of this layer is incompatible with the tiling scheme of the surface\")}levelRangeFromScaleRange(e,t){const r={minLevel:0,maxLevel:1/0},i=this.view&&this.view.basemapTerrain&&this.view.basemapTerrain.tilingScheme;if(!i)return r;const a=i.levels[0],s=e=>{const t=Math.log(a.scale/e)/Math.LN2;return.5-Math.abs(.5-t%1)<1e-9?Math.round(t):Math.ceil(t)};return null!=e&&e>0&&(r.minLevel=Math.max(0,s(e))),null!=t&&t>0&&(r.maxLevel=Math.max(0,s(t))),r}isUpdating(){return!!(this.view&&this.view.basemapTerrain&&this.view.basemapTerrain.updating)}};return e([i({readOnly:!0})],p.prototype,\"imageFormatIsOpaque\",null),e([i({readOnly:!0})],p.prototype,\"updating\",void 0),e([i(s)],p.prototype,\"updatingProgress\",void 0),e([i(o)],p.prototype,\"updatingProgressValue\",void 0),e([i({readOnly:!0})],p.prototype,\"fullExtent\",void 0),e([i({readOnly:!0})],p.prototype,\"isOpaque\",null),e([i({readOnly:!0})],p.prototype,\"dataLevelRange\",null),e([i({readOnly:!0})],p.prototype,\"displayLevelRange\",null),e([i()],p.prototype,\"layer\",void 0),e([i({readOnly:!0})],p.prototype,\"tileInfo\",void 0),p=e([a(\"esri.views.3d.layers.TiledLayerView3D\")],p),p};export{n as TiledLayerView3D};\n"]},"metadata":{},"sourceType":"module"}