{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../../../request.js\";\nimport { splitIntoChunks as t, remove as s } from \"../../../../core/arrayUtils.js\";\nimport { resultOrAbort as i, result as r } from \"../../../../core/asyncUtils.js\";\nimport { estimateStringByteSize as a, estimateNumberByteSize as n } from \"../../../../core/byteSizeEstimations.js\";\nimport o from \"../../../../core/Logger.js\";\nimport { isNone as c, unwrap as d, get as h, isSome as l } from \"../../../../core/maybe.js\";\nimport { createAbortController as m, whenOrAbort as u } from \"../../../../core/promiseUtils.js\";\nimport { formatNumber as g } from \"../../../../intl/number.js\";\nimport { getMaximumQuerySize as b, queryAllJSON as p } from \"../../../../layers/support/featureQueryAll.js\";\nconst f = o.getLogger(\"esri.views.3d.layers.i3s.I3SAttributeOverrides\");\n\nclass y {\n  constructor(e, t) {\n    this.layer = e, this.warnMaximumChangedObjectsExceeded = !1, this.changedObjectIds = new Set(), this.pendingFetchAbortController = m(), this.interactiveEditingSessions = null, this._maximumNumberOfEditOVerrides = v, this.memCache = t.getMemCache(`${e.uid}-attribute-overrides`), this.pendingFetchChangedObjectIds = this.fetchChangedObjectIds(this.pendingFetchAbortController.signal), this.pendingFetchChangedObjectIds.then(() => this.pendingFetchAbortController = null);\n  }\n\n  destroy() {\n    this.layer = null, this.memCache.destroy(), this.memCache = null, this.pendingFetchAbortController && (this.pendingFetchAbortController.abort(), this.pendingFetchAbortController = null), this.pendingFetchChangedObjectIds = null;\n  }\n\n  createInteractiveEditSession(e) {\n    this.changedObjectIds.add(e), c(this.interactiveEditingSessions) && (this.interactiveEditingSessions = []);\n    const t = this.interactiveEditingSessions,\n          i = new O(e, {\n      rollback: () => {\n        s(t, i), 0 === t.length && (this.interactiveEditingSessions = null);\n      },\n      commit: t => {\n        for (const [s, i] of t) this.updateValue(e, s, i);\n      }\n    });\n    return t.unshift(i), i;\n  }\n\n  async apply(e, t, s) {\n    if (c(t)) return;\n    const {\n      loadedAttributes: i,\n      attributeData: r\n    } = t;\n    if (c(i) || 0 === i.length || c(r)) return;\n    if (await u(this.pendingFetchChangedObjectIds, s), 0 === this.changedObjectIds.size) return;\n    const a = {\n      loadedAttributes: i,\n      attributeData: r\n    },\n          n = this.getOverridesFromCache(e, a, this.changedObjectIds),\n          {\n      objectIds: o,\n      fieldNames: d\n    } = n,\n          h = await this.queryOverridesFromAssociatedLayer(o, d, s);\n    c(h) || this.processOverridesFromAssociatedLayer(e, h, d, a);\n  }\n\n  updateValue(e, t, s) {\n    this.changedObjectIds.add(e), this.cacheValue(e, t, s);\n  }\n\n  cacheValue(e, t, s) {\n    this.memCache.put(this.getCacheKey(e, t), s, this.memCacheValueSize(s));\n  }\n\n  getOverridesFromCache(e, {\n    loadedAttributes: t,\n    attributeData: s\n  }, i) {\n    const r = new Set(),\n          a = new Array();\n\n    for (const o of t) a[o.index] = s[o.name];\n\n    const n = new Set();\n\n    for (let o = 0; o < e.length; o++) {\n      const s = e[o];\n      if (i.has(s)) for (const e of t) {\n        const t = this.fromCache(s, e.index);\n        void 0 === t ? (r.add(s), n.add(e.name)) : a[e.index][o] = t;\n      }\n    }\n\n    return {\n      objectIds: Array.from(r),\n      fieldNames: Array.from(n)\n    };\n  }\n\n  fromCache(e, t) {\n    const s = this.fromInteractiveEditingSession(e, t);\n    if (void 0 !== s) return s;\n    const i = this.getCacheKey(e, t);\n    return this.memCache.get(i);\n  }\n\n  fromInteractiveEditingSession(e, t) {\n    if (!c(this.interactiveEditingSessions)) for (const s of this.interactiveEditingSessions) {\n      if (s.objectId !== e) continue;\n      const i = s.get(t);\n      if (void 0 !== i) return i;\n    }\n  }\n\n  getCacheKey(e, t) {\n    return `${e}-${t}`;\n  }\n\n  async queryOverridesFromAssociatedLayer(e, s, r) {\n    if (0 === e.length || 0 === s.length) return null;\n    e = e.sort((e, t) => e - t), this.warnMaximumChangedObjectsExceeded && (this.warnMaximumChangedObjectsExceeded = !1, this.logMaximumObjectsExceededWarning());\n    const a = d(this.layer.associatedLayer),\n          n = a.createQuery();\n    n.where = \"1=1\", n.returnGeometry = !1, n.outFields = [a.objectIdField, ...s], n.cacheHint = !0, n.objectIds = e;\n    const o = b(a),\n          c = e.length > o ? t(e, o).map(e => {\n      const t = n.clone();\n      return t.objectIds = e, i(p(a, t, {\n        signal: r\n      }));\n    }) : [i(p(a, n, {\n      signal: r\n    }))];\n    return (await Promise.all(c)).reduce((e, t) => e.concat(t.ok ? t.value.features : []), []);\n  }\n\n  logMaximumObjectsExceededWarning() {\n    let e = `The number of edited objects that are not yet cached in the scene service exceeds the maximum limit. Attribute changes will only be available for the first ${g(this._maximumNumberOfEditOVerrides)} objects. Please consider re-caching the scene service`;\n    const t = this.layer.portalItem;\n    t && t.loaded ? e += ` (${t.portal.url}/home/item.html?id=${t.id}#settings)` : e += ` (${this.layer.parsedUrl.path})`, f.warn(\"#queryOverrides()\", this.layer.title, `${e}.`);\n  }\n\n  processOverridesFromAssociatedLayer(e, t, s, {\n    loadedAttributes: i,\n    attributeData: r\n  }) {\n    const a = d(this.layer.associatedLayer).objectIdField,\n          n = s.map(e => r[e]),\n          o = new Map(i.map(e => [e.name, e.index])),\n          c = s.map(e => o.get(e)),\n          h = new Map(Array.from(e, (e, t) => [e, t]));\n\n    for (const d of t) {\n      const e = d.attributes[a];\n\n      for (let t = 0; t < s.length; t++) {\n        const i = c[t],\n              r = h.get(e),\n              a = d.attributes[s[t]];\n        n[t][r] = a, this.cacheValue(e, i, a);\n      }\n    }\n  }\n\n  memCacheValueSize(e) {\n    return \"string\" == typeof e ? a(e) : n();\n  }\n\n  async fetchChangedObjectIds(t) {\n    var s, i, a;\n    const n = this.layer;\n    if (await n.load({\n      signal: t\n    }), this.changedObjectIds.clear(), c(n.associatedLayer) || null == (s = n.associatedLayer.capabilities) || null == (i = s.operations) || !i.supportsChangeTracking) return;\n    const o = this.getFetchChangedObjectIdsServerGen();\n    if (c(o)) return null;\n    const d = n.associatedLayer.layerId,\n          m = await r(e(`${n.associatedLayer.url}/extractChanges`, {\n      method: \"post\",\n      query: {\n        f: \"json\",\n        returnIdsOnly: !0,\n        layers: `${d}`,\n        returnUpdates: !0,\n        returnDeletes: !1,\n        returnInserts: !1,\n        layerServerGens: JSON.stringify([{\n          id: d,\n          serverGen: o\n        }])\n      },\n      timeout: j,\n      signal: t\n    })),\n          u = m.ok && null != (a = m.value.data) && a.edits ? h(m.value.data.edits[0], \"objectIds\", \"updates\") : null;\n\n    if (l(u)) {\n      const e = Math.min(this._maximumNumberOfEditOVerrides, u.length);\n      e < u.length && (this.warnMaximumChangedObjectsExceeded = !0);\n      const t = u.sort((e, t) => e - t);\n\n      for (let s = 0; s < e; s++) this.changedObjectIds.add(t[s]);\n    }\n  }\n\n  getFetchChangedObjectIdsServerGen() {\n    const e = this.layer;\n    if (l(e.serviceUpdateTimeStamp) && l(e.serviceUpdateTimeStamp.lastUpdate)) return e.serviceUpdateTimeStamp.lastUpdate;\n    const t = e.associatedLayer;\n    return l(t) && l(t.serverGens) && l(t.serverGens.minServerGen) ? t.serverGens.minServerGen : null;\n  }\n\n  get test() {\n    const e = Array.from(this.changedObjectIds),\n          t = this.pendingFetchChangedObjectIds,\n          s = this;\n    return {\n      changedObjectIds: e,\n      pendingFetchChangedObjectIds: t,\n\n      get maximumNumberOfEditOVerrides() {\n        return s._maximumNumberOfEditOVerrides;\n      },\n\n      set maximumNumberOfEditOVerrides(e) {\n        s._maximumNumberOfEditOVerrides = e;\n      }\n\n    };\n  }\n\n}\n\nclass O {\n  constructor(e, t) {\n    this.objectId = e, this.options = t, this.updates = new Map(), this.state = 0;\n  }\n\n  get(e) {\n    return this.updates.get(e);\n  }\n\n  set(e, t) {\n    this.isActive && this.updates.set(e, t);\n  }\n\n  rollback() {\n    this.isActive && (this.state = 2, this.options.rollback());\n  }\n\n  commit() {\n    this.isActive && (this.state = 1, this.options.commit(this.updates), this.updates.clear());\n  }\n\n  get isActive() {\n    return 0 === this.state;\n  }\n\n}\n\nconst j = 1e4,\n      v = 5e4;\nexport { y as I3SAttributeOverrides };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/layers/i3s/I3SAttributeOverrides.js"],"names":["e","splitIntoChunks","t","remove","s","resultOrAbort","i","result","r","estimateStringByteSize","a","estimateNumberByteSize","n","o","isNone","c","unwrap","d","get","h","isSome","l","createAbortController","m","whenOrAbort","u","formatNumber","g","getMaximumQuerySize","b","queryAllJSON","p","f","getLogger","y","constructor","layer","warnMaximumChangedObjectsExceeded","changedObjectIds","Set","pendingFetchAbortController","interactiveEditingSessions","_maximumNumberOfEditOVerrides","v","memCache","getMemCache","uid","pendingFetchChangedObjectIds","fetchChangedObjectIds","signal","then","destroy","abort","createInteractiveEditSession","add","O","rollback","length","commit","updateValue","unshift","apply","loadedAttributes","attributeData","size","getOverridesFromCache","objectIds","fieldNames","queryOverridesFromAssociatedLayer","processOverridesFromAssociatedLayer","cacheValue","put","getCacheKey","memCacheValueSize","Array","index","name","has","fromCache","from","fromInteractiveEditingSession","objectId","sort","logMaximumObjectsExceededWarning","associatedLayer","createQuery","where","returnGeometry","outFields","objectIdField","cacheHint","map","clone","Promise","all","reduce","concat","ok","value","features","portalItem","loaded","portal","url","id","parsedUrl","path","warn","title","Map","attributes","load","clear","capabilities","operations","supportsChangeTracking","getFetchChangedObjectIdsServerGen","layerId","method","query","returnIdsOnly","layers","returnUpdates","returnDeletes","returnInserts","layerServerGens","JSON","stringify","serverGen","timeout","j","data","edits","Math","min","serviceUpdateTimeStamp","lastUpdate","serverGens","minServerGen","test","maximumNumberOfEditOVerrides","options","updates","state","set","isActive","I3SAttributeOverrides"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import{splitIntoChunks as t,remove as s}from\"../../../../core/arrayUtils.js\";import{resultOrAbort as i,result as r}from\"../../../../core/asyncUtils.js\";import{estimateStringByteSize as a,estimateNumberByteSize as n}from\"../../../../core/byteSizeEstimations.js\";import o from\"../../../../core/Logger.js\";import{isNone as c,unwrap as d,get as h,isSome as l}from\"../../../../core/maybe.js\";import{createAbortController as m,whenOrAbort as u}from\"../../../../core/promiseUtils.js\";import{formatNumber as g}from\"../../../../intl/number.js\";import{getMaximumQuerySize as b,queryAllJSON as p}from\"../../../../layers/support/featureQueryAll.js\";const f=o.getLogger(\"esri.views.3d.layers.i3s.I3SAttributeOverrides\");class y{constructor(e,t){this.layer=e,this.warnMaximumChangedObjectsExceeded=!1,this.changedObjectIds=new Set,this.pendingFetchAbortController=m(),this.interactiveEditingSessions=null,this._maximumNumberOfEditOVerrides=v,this.memCache=t.getMemCache(`${e.uid}-attribute-overrides`),this.pendingFetchChangedObjectIds=this.fetchChangedObjectIds(this.pendingFetchAbortController.signal),this.pendingFetchChangedObjectIds.then((()=>this.pendingFetchAbortController=null))}destroy(){this.layer=null,this.memCache.destroy(),this.memCache=null,this.pendingFetchAbortController&&(this.pendingFetchAbortController.abort(),this.pendingFetchAbortController=null),this.pendingFetchChangedObjectIds=null}createInteractiveEditSession(e){this.changedObjectIds.add(e),c(this.interactiveEditingSessions)&&(this.interactiveEditingSessions=[]);const t=this.interactiveEditingSessions,i=new O(e,{rollback:()=>{s(t,i),0===t.length&&(this.interactiveEditingSessions=null)},commit:t=>{for(const[s,i]of t)this.updateValue(e,s,i)}});return t.unshift(i),i}async apply(e,t,s){if(c(t))return;const{loadedAttributes:i,attributeData:r}=t;if(c(i)||0===i.length||c(r))return;if(await u(this.pendingFetchChangedObjectIds,s),0===this.changedObjectIds.size)return;const a={loadedAttributes:i,attributeData:r},n=this.getOverridesFromCache(e,a,this.changedObjectIds),{objectIds:o,fieldNames:d}=n,h=await this.queryOverridesFromAssociatedLayer(o,d,s);c(h)||this.processOverridesFromAssociatedLayer(e,h,d,a)}updateValue(e,t,s){this.changedObjectIds.add(e),this.cacheValue(e,t,s)}cacheValue(e,t,s){this.memCache.put(this.getCacheKey(e,t),s,this.memCacheValueSize(s))}getOverridesFromCache(e,{loadedAttributes:t,attributeData:s},i){const r=new Set,a=new Array;for(const o of t)a[o.index]=s[o.name];const n=new Set;for(let o=0;o<e.length;o++){const s=e[o];if(i.has(s))for(const e of t){const t=this.fromCache(s,e.index);void 0===t?(r.add(s),n.add(e.name)):a[e.index][o]=t}}return{objectIds:Array.from(r),fieldNames:Array.from(n)}}fromCache(e,t){const s=this.fromInteractiveEditingSession(e,t);if(void 0!==s)return s;const i=this.getCacheKey(e,t);return this.memCache.get(i)}fromInteractiveEditingSession(e,t){if(!c(this.interactiveEditingSessions))for(const s of this.interactiveEditingSessions){if(s.objectId!==e)continue;const i=s.get(t);if(void 0!==i)return i}}getCacheKey(e,t){return`${e}-${t}`}async queryOverridesFromAssociatedLayer(e,s,r){if(0===e.length||0===s.length)return null;e=e.sort(((e,t)=>e-t)),this.warnMaximumChangedObjectsExceeded&&(this.warnMaximumChangedObjectsExceeded=!1,this.logMaximumObjectsExceededWarning());const a=d(this.layer.associatedLayer),n=a.createQuery();n.where=\"1=1\",n.returnGeometry=!1,n.outFields=[a.objectIdField,...s],n.cacheHint=!0,n.objectIds=e;const o=b(a),c=e.length>o?t(e,o).map((e=>{const t=n.clone();return t.objectIds=e,i(p(a,t,{signal:r}))})):[i(p(a,n,{signal:r}))];return(await Promise.all(c)).reduce(((e,t)=>e.concat(t.ok?t.value.features:[])),[])}logMaximumObjectsExceededWarning(){let e=`The number of edited objects that are not yet cached in the scene service exceeds the maximum limit. Attribute changes will only be available for the first ${g(this._maximumNumberOfEditOVerrides)} objects. Please consider re-caching the scene service`;const t=this.layer.portalItem;t&&t.loaded?e+=` (${t.portal.url}/home/item.html?id=${t.id}#settings)`:e+=` (${this.layer.parsedUrl.path})`,f.warn(\"#queryOverrides()\",this.layer.title,`${e}.`)}processOverridesFromAssociatedLayer(e,t,s,{loadedAttributes:i,attributeData:r}){const a=d(this.layer.associatedLayer).objectIdField,n=s.map((e=>r[e])),o=new Map(i.map((e=>[e.name,e.index]))),c=s.map((e=>o.get(e))),h=new Map(Array.from(e,((e,t)=>[e,t])));for(const d of t){const e=d.attributes[a];for(let t=0;t<s.length;t++){const i=c[t],r=h.get(e),a=d.attributes[s[t]];n[t][r]=a,this.cacheValue(e,i,a)}}}memCacheValueSize(e){return\"string\"==typeof e?a(e):n()}async fetchChangedObjectIds(t){var s,i,a;const n=this.layer;if(await n.load({signal:t}),this.changedObjectIds.clear(),c(n.associatedLayer)||null==(s=n.associatedLayer.capabilities)||null==(i=s.operations)||!i.supportsChangeTracking)return;const o=this.getFetchChangedObjectIdsServerGen();if(c(o))return null;const d=n.associatedLayer.layerId,m=await r(e(`${n.associatedLayer.url}/extractChanges`,{method:\"post\",query:{f:\"json\",returnIdsOnly:!0,layers:`${d}`,returnUpdates:!0,returnDeletes:!1,returnInserts:!1,layerServerGens:JSON.stringify([{id:d,serverGen:o}])},timeout:j,signal:t})),u=m.ok&&null!=(a=m.value.data)&&a.edits?h(m.value.data.edits[0],\"objectIds\",\"updates\"):null;if(l(u)){const e=Math.min(this._maximumNumberOfEditOVerrides,u.length);e<u.length&&(this.warnMaximumChangedObjectsExceeded=!0);const t=u.sort(((e,t)=>e-t));for(let s=0;s<e;s++)this.changedObjectIds.add(t[s])}}getFetchChangedObjectIdsServerGen(){const e=this.layer;if(l(e.serviceUpdateTimeStamp)&&l(e.serviceUpdateTimeStamp.lastUpdate))return e.serviceUpdateTimeStamp.lastUpdate;const t=e.associatedLayer;return l(t)&&l(t.serverGens)&&l(t.serverGens.minServerGen)?t.serverGens.minServerGen:null}get test(){const e=Array.from(this.changedObjectIds),t=this.pendingFetchChangedObjectIds,s=this;return{changedObjectIds:e,pendingFetchChangedObjectIds:t,get maximumNumberOfEditOVerrides(){return s._maximumNumberOfEditOVerrides},set maximumNumberOfEditOVerrides(e){s._maximumNumberOfEditOVerrides=e}}}}class O{constructor(e,t){this.objectId=e,this.options=t,this.updates=new Map,this.state=0}get(e){return this.updates.get(e)}set(e,t){this.isActive&&this.updates.set(e,t)}rollback(){this.isActive&&(this.state=2,this.options.rollback())}commit(){this.isActive&&(this.state=1,this.options.commit(this.updates),this.updates.clear())}get isActive(){return 0===this.state}}const j=1e4,v=5e4;export{y as I3SAttributeOverrides};\n"]},"metadata":{},"sourceType":"module"}