{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport r from \"../../request.js\";\nimport { throwIfAborted as s } from \"../../core/promiseUtils.js\";\nimport { urlToObject as t } from \"../../core/urlUtils.js\";\nimport { Version as o } from \"../../core/Version.js\";\nimport { property as i } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/has.js\";\nimport \"../../core/accessorSupport/ensureType.js\";\nimport \"../../core/Logger.js\";\nimport { reader as p } from \"../../core/accessorSupport/decorators/reader.js\";\nimport { subclass as a } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport l from \"../../geometry/Extent.js\";\nimport n from \"../../geometry/SpatialReference.js\";\nimport { id as u, popupEnabled as c } from \"../support/commonProperties.js\";\n\nconst y = y => {\n  let m = class extends y {\n    constructor() {\n      super(...arguments), this.capabilities = void 0, this.copyright = null, this.fullExtent = null, this.legendEnabled = !0, this.spatialReference = null, this.version = null;\n    }\n\n    readCapabilities(e, r) {\n      const s = r.capabilities && r.capabilities.split(\",\").map(e => e.toLowerCase().trim());\n      if (!s) return {\n        operations: {\n          supportsQuery: !1,\n          supportsExportMap: !1,\n          supportsExportTiles: !1,\n          supportsTileMap: !1\n        },\n        exportMap: null,\n        exportTiles: null\n      };\n      const t = this.type,\n            i = -1 !== s.indexOf(\"query\"),\n            p = -1 !== s.indexOf(\"map\"),\n            a = !!r.exportTilesAllowed,\n            l = -1 !== s.indexOf(\"tilemap\"),\n            n = \"tile\" !== t && !!r.supportsDynamicLayers,\n            u = \"tile\" !== t && (!r.tileInfo || n),\n            c = \"tile\" !== t && (!r.tileInfo || n),\n            y = \"tile\" !== t,\n            m = !!r.cimVersion && o.parse(r.cimVersion).since(1, 4);\n      return {\n        operations: {\n          supportsQuery: i,\n          supportsExportMap: p,\n          supportsExportTiles: a,\n          supportsTileMap: l\n        },\n        exportMap: p ? {\n          supportsArcadeExpressionForLabeling: m,\n          supportsSublayersChanges: y,\n          supportsDynamicLayers: n,\n          supportsSublayerVisibility: u,\n          supportsSublayerDefinitionExpression: c\n        } : null,\n        exportTiles: a ? {\n          maxExportTilesCount: +r.maxExportTilesCount\n        } : null\n      };\n    }\n\n    readVersion(e, r) {\n      let s = r.currentVersion;\n      return s || (s = r.hasOwnProperty(\"capabilities\") || r.hasOwnProperty(\"tables\") ? 10 : r.hasOwnProperty(\"supportedImageFormatTypes\") ? 9.31 : 9.3), s;\n    }\n\n    async fetchSublayerInfo(e, r) {\n      return await this.fetchAllLayersAndTables(r), this._allLayersAndTablesMap.get(e);\n    }\n\n    async fetchAllLayersAndTables(e) {\n      await this.load(e), this._allLayersAndTablesPromise || (this._allLayersAndTablesPromise = r(t(this.url).path + \"/layers\", {\n        responseType: \"json\",\n        query: {\n          f: \"json\",\n          ...this.customParameters,\n          token: this.apiKey\n        }\n      }).then(e => {\n        this._allLayersAndTablesMap = new Map();\n\n        for (const r of e.data.layers) this._allLayersAndTablesMap.set(r.id, r);\n\n        return {\n          result: e.data\n        };\n      }, e => ({\n        error: e\n      })));\n      const o = await this._allLayersAndTablesPromise;\n      if (s(e), \"result\" in o) return o.result;\n      throw o.error;\n    }\n\n  };\n  return e([i({\n    readOnly: !0\n  })], m.prototype, \"capabilities\", void 0), e([p(\"service\", \"capabilities\", [\"capabilities\", \"exportTilesAllowed\", \"maxExportTilesCount\", \"supportsDynamicLayers\", \"tileInfo\"])], m.prototype, \"readCapabilities\", null), e([i({\n    json: {\n      read: {\n        source: \"copyrightText\"\n      }\n    }\n  })], m.prototype, \"copyright\", void 0), e([i({\n    type: l\n  })], m.prototype, \"fullExtent\", void 0), e([i(u)], m.prototype, \"id\", void 0), e([i({\n    type: Boolean,\n    json: {\n      origins: {\n        service: {\n          read: {\n            enabled: !1\n          }\n        }\n      },\n      read: {\n        source: \"showLegend\"\n      },\n      write: {\n        target: \"showLegend\"\n      }\n    }\n  })], m.prototype, \"legendEnabled\", void 0), e([i(c)], m.prototype, \"popupEnabled\", void 0), e([i({\n    type: n\n  })], m.prototype, \"spatialReference\", void 0), e([i()], m.prototype, \"version\", void 0), e([p(\"version\", [\"currentVersion\", \"capabilities\", \"tables\", \"supportedImageFormatTypes\"])], m.prototype, \"readVersion\", null), m = e([a(\"esri.layers.mixins.ArcGISMapService\")], m), m;\n};\n\nexport { y as ArcGISMapService };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/layers/mixins/ArcGISMapService.js"],"names":["_","e","r","throwIfAborted","s","urlToObject","t","Version","o","property","i","reader","p","subclass","a","l","n","id","u","popupEnabled","c","y","m","constructor","arguments","capabilities","copyright","fullExtent","legendEnabled","spatialReference","version","readCapabilities","split","map","toLowerCase","trim","operations","supportsQuery","supportsExportMap","supportsExportTiles","supportsTileMap","exportMap","exportTiles","type","indexOf","exportTilesAllowed","supportsDynamicLayers","tileInfo","cimVersion","parse","since","supportsArcadeExpressionForLabeling","supportsSublayersChanges","supportsSublayerVisibility","supportsSublayerDefinitionExpression","maxExportTilesCount","readVersion","currentVersion","hasOwnProperty","fetchSublayerInfo","fetchAllLayersAndTables","_allLayersAndTablesMap","get","load","_allLayersAndTablesPromise","url","path","responseType","query","f","customParameters","token","apiKey","then","Map","data","layers","set","result","error","readOnly","prototype","json","read","source","Boolean","origins","service","enabled","write","target","ArcGISMapService"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import r from\"../../request.js\";import{throwIfAborted as s}from\"../../core/promiseUtils.js\";import{urlToObject as t}from\"../../core/urlUtils.js\";import{Version as o}from\"../../core/Version.js\";import{property as i}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/has.js\";import\"../../core/accessorSupport/ensureType.js\";import\"../../core/Logger.js\";import{reader as p}from\"../../core/accessorSupport/decorators/reader.js\";import{subclass as a}from\"../../core/accessorSupport/decorators/subclass.js\";import l from\"../../geometry/Extent.js\";import n from\"../../geometry/SpatialReference.js\";import{id as u,popupEnabled as c}from\"../support/commonProperties.js\";const y=y=>{let m=class extends y{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=null}readCapabilities(e,r){const s=r.capabilities&&r.capabilities.split(\",\").map((e=>e.toLowerCase().trim()));if(!s)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const t=this.type,i=-1!==s.indexOf(\"query\"),p=-1!==s.indexOf(\"map\"),a=!!r.exportTilesAllowed,l=-1!==s.indexOf(\"tilemap\"),n=\"tile\"!==t&&!!r.supportsDynamicLayers,u=\"tile\"!==t&&(!r.tileInfo||n),c=\"tile\"!==t&&(!r.tileInfo||n),y=\"tile\"!==t,m=!!r.cimVersion&&o.parse(r.cimVersion).since(1,4);return{operations:{supportsQuery:i,supportsExportMap:p,supportsExportTiles:a,supportsTileMap:l},exportMap:p?{supportsArcadeExpressionForLabeling:m,supportsSublayersChanges:y,supportsDynamicLayers:n,supportsSublayerVisibility:u,supportsSublayerDefinitionExpression:c}:null,exportTiles:a?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(e,r){let s=r.currentVersion;return s||(s=r.hasOwnProperty(\"capabilities\")||r.hasOwnProperty(\"tables\")?10:r.hasOwnProperty(\"supportedImageFormatTypes\")?9.31:9.3),s}async fetchSublayerInfo(e,r){return await this.fetchAllLayersAndTables(r),this._allLayersAndTablesMap.get(e)}async fetchAllLayersAndTables(e){await this.load(e),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=r(t(this.url).path+\"/layers\",{responseType:\"json\",query:{f:\"json\",...this.customParameters,token:this.apiKey}}).then((e=>{this._allLayersAndTablesMap=new Map;for(const r of e.data.layers)this._allLayersAndTablesMap.set(r.id,r);return{result:e.data}}),(e=>({error:e}))));const o=await this._allLayersAndTablesPromise;if(s(e),\"result\"in o)return o.result;throw o.error}};return e([i({readOnly:!0})],m.prototype,\"capabilities\",void 0),e([p(\"service\",\"capabilities\",[\"capabilities\",\"exportTilesAllowed\",\"maxExportTilesCount\",\"supportsDynamicLayers\",\"tileInfo\"])],m.prototype,\"readCapabilities\",null),e([i({json:{read:{source:\"copyrightText\"}}})],m.prototype,\"copyright\",void 0),e([i({type:l})],m.prototype,\"fullExtent\",void 0),e([i(u)],m.prototype,\"id\",void 0),e([i({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:\"showLegend\"},write:{target:\"showLegend\"}}})],m.prototype,\"legendEnabled\",void 0),e([i(c)],m.prototype,\"popupEnabled\",void 0),e([i({type:n})],m.prototype,\"spatialReference\",void 0),e([i()],m.prototype,\"version\",void 0),e([p(\"version\",[\"currentVersion\",\"capabilities\",\"tables\",\"supportedImageFormatTypes\"])],m.prototype,\"readVersion\",null),m=e([a(\"esri.layers.mixins.ArcGISMapService\")],m),m};export{y as ArcGISMapService};\n"]},"metadata":{},"sourceType":"module"}