{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { ResourceType as t } from \"./enums.js\";\n\nclass e {\n  constructor() {\n    for (this._current = new Array(), this._max = new Array(), this._allocations = new Map(); this._current.length < t.COUNT;) this._current.push(0), this._max.push(0);\n  }\n\n  resetMax() {\n    for (this._max.length = 0; this._max.length < this._current.length;) this._max.push(0);\n  }\n\n  increment(t, e) {\n    const s = ++this._current[t];\n    this._max[t] = Math.max(s, this._max[t]);\n  }\n\n  decrement(t, e) {\n    --this._current[t];\n  }\n\n  get max() {\n    return this._max;\n  }\n\n  get current() {\n    return this._current;\n  }\n\n  get total() {\n    return this.current.reduce((t, e) => t + e, 0);\n  }\n\n  printResourceCount() {\n    if (this.total > 0) {\n      console.log(\"Live objects:\");\n\n      for (let e = 0; e < t.COUNT; ++e) {\n        const s = this._current[e];\n        s > 0 && console.log(`${t[e]}: ${s}`);\n      }\n    }\n\n    if (this._allocations.size > 0) {\n      console.log(`${this._allocations.size} live object allocations:`);\n      const t = new Map();\n      this._allocations.forEach(e => {\n        var s;\n        t.set(e, (null != (s = t.get(e)) ? s : 0) + 1);\n      }), t.forEach((t, e) => console.log(t, \" : \", e));\n    }\n  }\n\n}\n\nexport { e as InstanceCounter };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/webgl/InstanceCounter.js"],"names":["ResourceType","t","e","constructor","_current","Array","_max","_allocations","Map","length","COUNT","push","resetMax","increment","s","Math","max","decrement","current","total","reduce","printResourceCount","console","log","size","forEach","set","get","InstanceCounter"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,YAAY,IAAIC,CAAvB,QAA6B,YAA7B;;AAA0C,MAAMC,CAAN,CAAO;AAACC,EAAAA,WAAW,GAAE;AAAC,SAAI,KAAKC,QAAL,GAAc,IAAIC,KAAJ,EAAd,EAAwB,KAAKC,IAAL,GAAU,IAAID,KAAJ,EAAlC,EAA4C,KAAKE,YAAL,GAAkB,IAAIC,GAAJ,EAAlE,EAA0E,KAAKJ,QAAL,CAAcK,MAAd,GAAqBR,CAAC,CAACS,KAAjG,GAAwG,KAAKN,QAAL,CAAcO,IAAd,CAAmB,CAAnB,GAAsB,KAAKL,IAAL,CAAUK,IAAV,CAAe,CAAf,CAAtB;AAAwC;;AAAAC,EAAAA,QAAQ,GAAE;AAAC,SAAI,KAAKN,IAAL,CAAUG,MAAV,GAAiB,CAArB,EAAuB,KAAKH,IAAL,CAAUG,MAAV,GAAiB,KAAKL,QAAL,CAAcK,MAAtD,GAA8D,KAAKH,IAAL,CAAUK,IAAV,CAAe,CAAf;AAAkB;;AAAAE,EAAAA,SAAS,CAACZ,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMY,CAAC,GAAC,EAAE,KAAKV,QAAL,CAAcH,CAAd,CAAV;AAA2B,SAAKK,IAAL,CAAUL,CAAV,IAAac,IAAI,CAACC,GAAL,CAASF,CAAT,EAAW,KAAKR,IAAL,CAAUL,CAAV,CAAX,CAAb;AAAsC;;AAAAgB,EAAAA,SAAS,CAAChB,CAAD,EAAGC,CAAH,EAAK;AAAC,MAAE,KAAKE,QAAL,CAAcH,CAAd,CAAF;AAAmB;;AAAO,MAAHe,GAAG,GAAE;AAAC,WAAO,KAAKV,IAAZ;AAAiB;;AAAW,MAAPY,OAAO,GAAE;AAAC,WAAO,KAAKd,QAAZ;AAAqB;;AAAS,MAALe,KAAK,GAAE;AAAC,WAAO,KAAKD,OAAL,CAAaE,MAAb,CAAqB,CAACnB,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAA9B,EAAiC,CAAjC,CAAP;AAA2C;;AAAAmB,EAAAA,kBAAkB,GAAE;AAAC,QAAG,KAAKF,KAAL,GAAW,CAAd,EAAgB;AAACG,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AAA6B,WAAI,IAAIrB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAC,CAACS,KAAhB,EAAsB,EAAER,CAAxB,EAA0B;AAAC,cAAMY,CAAC,GAAC,KAAKV,QAAL,CAAcF,CAAd,CAAR;AAAyBY,QAAAA,CAAC,GAAC,CAAF,IAAKQ,OAAO,CAACC,GAAR,CAAa,GAAEtB,CAAC,CAACC,CAAD,CAAI,KAAIY,CAAE,EAA1B,CAAL;AAAkC;AAAC;;AAAA,QAAG,KAAKP,YAAL,CAAkBiB,IAAlB,GAAuB,CAA1B,EAA4B;AAACF,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAE,KAAKhB,YAAL,CAAkBiB,IAAK,2BAAtC;AAAkE,YAAMvB,CAAC,GAAC,IAAIO,GAAJ,EAAR;AAAgB,WAAKD,YAAL,CAAkBkB,OAAlB,CAA2BvB,CAAC,IAAE;AAAC,YAAIY,CAAJ;AAAMb,QAAAA,CAAC,CAACyB,GAAF,CAAMxB,CAAN,EAAQ,CAAC,SAAOY,CAAC,GAACb,CAAC,CAAC0B,GAAF,CAAMzB,CAAN,CAAT,IAAmBY,CAAnB,GAAqB,CAAtB,IAAyB,CAAjC;AAAoC,OAAzE,GAA4Eb,CAAC,CAACwB,OAAF,CAAW,CAACxB,CAAD,EAAGC,CAAH,KAAOoB,OAAO,CAACC,GAAR,CAAYtB,CAAZ,EAAc,KAAd,EAAoBC,CAApB,CAAlB,CAA5E;AAAuH;AAAC;;AAAl2B;;AAAm2B,SAAOA,CAAC,IAAI0B,eAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{ResourceType as t}from\"./enums.js\";class e{constructor(){for(this._current=new Array,this._max=new Array,this._allocations=new Map;this._current.length<t.COUNT;)this._current.push(0),this._max.push(0)}resetMax(){for(this._max.length=0;this._max.length<this._current.length;)this._max.push(0)}increment(t,e){const s=++this._current[t];this._max[t]=Math.max(s,this._max[t])}decrement(t,e){--this._current[t]}get max(){return this._max}get current(){return this._current}get total(){return this.current.reduce(((t,e)=>t+e),0)}printResourceCount(){if(this.total>0){console.log(\"Live objects:\");for(let e=0;e<t.COUNT;++e){const s=this._current[e];s>0&&console.log(`${t[e]}: ${s}`)}}if(this._allocations.size>0){console.log(`${this._allocations.size} live object allocations:`);const t=new Map;this._allocations.forEach((e=>{var s;t.set(e,(null!=(s=t.get(e))?s:0)+1)})),t.forEach(((t,e)=>console.log(t,\" : \",e)))}}}export{e as InstanceCounter};\n"]},"metadata":{},"sourceType":"module"}