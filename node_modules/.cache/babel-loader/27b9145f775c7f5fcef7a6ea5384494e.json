{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isSome as t, isNone as e } from \"../../../../../core/maybe.js\";\nimport { DISPLAY_RECORD_INT_PER_ELEMENT as i } from \"../definitions.js\";\nconst s = 2147483647;\n\nclass r {\n  constructor(t) {\n    this._head = t, this._cursor = t;\n  }\n\n  static from(t, e = 0, i = t.byteLength / _.BYTES_PER_RECORD - e) {\n    const s = new _(new Int32Array(t, e * _.BYTES_PER_RECORD, i * _.ELEMENTS_PER_RECORD));\n    return new r(s);\n  }\n\n  size() {\n    var t, e;\n    return null != (t = null == (e = this._cursor) ? void 0 : e.size()) ? t : 0;\n  }\n\n  get id() {\n    return this._cursor.id;\n  }\n\n  set id(t) {\n    this._cursor.id = t;\n  }\n\n  get materialKey() {\n    return this._cursor.materialKey;\n  }\n\n  set materialKey(t) {\n    this._cursor.materialKey = t;\n  }\n\n  get insertAfter() {\n    return this._cursor.insertAfter;\n  }\n\n  get indexFrom() {\n    return this._cursor.indexFrom;\n  }\n\n  set indexFrom(t) {\n    this._cursor.indexFrom = t;\n  }\n\n  get indexCount() {\n    return this._cursor.indexCount;\n  }\n\n  set indexCount(t) {\n    this._cursor.indexCount = t;\n  }\n\n  get vertexFrom() {\n    return this._cursor.vertexFrom;\n  }\n\n  set vertexFrom(t) {\n    this._cursor.vertexFrom = t;\n  }\n\n  get vertexCount() {\n    return this._cursor.vertexCount;\n  }\n\n  set vertexCount(t) {\n    this._cursor.vertexCount = t;\n  }\n\n  get index() {\n    return this._cursor._index;\n  }\n\n  link(t) {\n    if (!this._head) return void (this._head = t._head);\n    let e = this._head;\n\n    for (; e._link;) e = e._link;\n\n    e._link = t._head;\n  }\n\n  getCursor() {\n    return this.copy();\n  }\n\n  lookup(t) {\n    for (this._cursor = this._head; this._cursor && !this._cursor.lookup(t);) {\n      if (!this._cursor._link) return !1;\n      this._cursor = this._cursor._link;\n    }\n\n    return !!this._cursor;\n  }\n\n  copy() {\n    var t;\n    const e = new r(null == (t = this._head) ? void 0 : t.copy());\n    if (!e._head) return e;\n    let i = e._head,\n        s = e._head._link;\n\n    for (; s;) i._link = s.copy(), i = s, s = i._link;\n\n    return e;\n  }\n\n  next() {\n    return !!this._cursor && (!!this._cursor.next() || !!this._cursor._link && (this._cursor = this._cursor._link, this.next()));\n  }\n\n  peekId() {\n    var t;\n    return null != (t = this._cursor.peekId()) ? t : this._cursor._link.peekId();\n  }\n\n  delete(e) {\n    let i = this._head,\n        s = null;\n\n    for (; i;) {\n      if (i.delete(e)) return i.isEmpty() && (t(s) && (s._link = i._link), i === this._head && (this._head = i._link), i === this._cursor && (this._cursor = i._link)), !0;\n      s = i, i = i._link;\n    }\n\n    return !1;\n  }\n\n}\n\nr.ELEMENTS_PER_RECORD = i, r.BYTES_PER_RECORD = r.ELEMENTS_PER_RECORD * Int32Array.BYTES_PER_ELEMENT;\n\nclass _ {\n  constructor(t) {\n    this._link = null, this._index = -1, this._deletedCount = 0, this._offsets = {\n      instance: null\n    }, this._packedRecords = t;\n  }\n\n  static from(t, e = 0, i = t.byteLength / this.BYTES_PER_RECORD - e) {\n    return new _(new Int32Array(t, e * this.BYTES_PER_RECORD, i * this.ELEMENTS_PER_RECORD));\n  }\n\n  delete(t) {\n    const e = this._index,\n          i = this.lookup(t);\n    if (i) for (this.id = s, ++this._deletedCount; this.next() && this.id === t;) this.id = s, ++this._deletedCount;\n    return this._index = e, i;\n  }\n\n  isEmpty() {\n    return this._deletedCount === this.size();\n  }\n\n  link(t) {\n    this._link ? this._link.link(t) : this._link = t;\n  }\n\n  lookup(t) {\n    if (e(this._offsets.instance)) {\n      this._offsets.instance = new Map();\n      const t = this.copy();\n      t._index = -1;\n      let e = 0;\n\n      for (; t.next();) t.id !== e && (this._offsets.instance.set(t.id, t._index), e = t.id);\n    }\n\n    if (!this._offsets.instance.has(t)) return !1;\n    const i = this._index;\n    return this._index = this._offsets.instance.get(t), this.id !== s || (this._index = i, !1);\n  }\n\n  get id() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD];\n  }\n\n  set id(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD] = t;\n  }\n\n  get materialKey() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 1];\n  }\n\n  set materialKey(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 1] = t;\n  }\n\n  get insertAfter() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 2];\n  }\n\n  get indexFrom() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 3];\n  }\n\n  set indexFrom(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 3] = t;\n  }\n\n  get indexCount() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 4];\n  }\n\n  set indexCount(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 4] = t;\n  }\n\n  get vertexFrom() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 5];\n  }\n\n  set vertexFrom(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 5] = t;\n  }\n\n  get vertexCount() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 6];\n  }\n\n  set vertexCount(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 6] = t;\n  }\n\n  get index() {\n    return this._index;\n  }\n\n  size() {\n    return this._packedRecords.length / _.ELEMENTS_PER_RECORD;\n  }\n\n  next() {\n    for (; ++this._index < this.size() && this.id === s;);\n\n    return this._index < this.size();\n  }\n\n  peekId() {\n    const t = (this._index + 1) * _.ELEMENTS_PER_RECORD;\n    return t >= this._packedRecords.length ? 0 : this._packedRecords[t];\n  }\n\n  getCursor() {\n    return this.copy();\n  }\n\n  copy() {\n    const t = new _(this._packedRecords);\n    return t._link = this._link, t._index = this._index, t._offsets = this._offsets, t._deletedCount = this._deletedCount, t;\n  }\n\n}\n\n_.ELEMENTS_PER_RECORD = i, _.BYTES_PER_RECORD = _.ELEMENTS_PER_RECORD * Int32Array.BYTES_PER_ELEMENT;\nexport { r as DisplayRecordReader };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/DisplayRecordReader.js"],"names":["isSome","t","isNone","e","DISPLAY_RECORD_INT_PER_ELEMENT","i","s","r","constructor","_head","_cursor","from","byteLength","_","BYTES_PER_RECORD","Int32Array","ELEMENTS_PER_RECORD","size","id","materialKey","insertAfter","indexFrom","indexCount","vertexFrom","vertexCount","index","_index","link","_link","getCursor","copy","lookup","next","peekId","delete","isEmpty","BYTES_PER_ELEMENT","_deletedCount","_offsets","instance","_packedRecords","Map","set","has","get","length","DisplayRecordReader"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as e}from\"../../../../../core/maybe.js\";import{DISPLAY_RECORD_INT_PER_ELEMENT as i}from\"../definitions.js\";const s=2147483647;class r{constructor(t){this._head=t,this._cursor=t}static from(t,e=0,i=t.byteLength/_.BYTES_PER_RECORD-e){const s=new _(new Int32Array(t,e*_.BYTES_PER_RECORD,i*_.ELEMENTS_PER_RECORD));return new r(s)}size(){var t,e;return null!=(t=null==(e=this._cursor)?void 0:e.size())?t:0}get id(){return this._cursor.id}set id(t){this._cursor.id=t}get materialKey(){return this._cursor.materialKey}set materialKey(t){this._cursor.materialKey=t}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(t){this._cursor.indexFrom=t}get indexCount(){return this._cursor.indexCount}set indexCount(t){this._cursor.indexCount=t}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(t){this._cursor.vertexFrom=t}get vertexCount(){return this._cursor.vertexCount}set vertexCount(t){this._cursor.vertexCount=t}get index(){return this._cursor._index}link(t){if(!this._head)return void(this._head=t._head);let e=this._head;for(;e._link;)e=e._link;e._link=t._head}getCursor(){return this.copy()}lookup(t){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(t);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){var t;const e=new r(null==(t=this._head)?void 0:t.copy());if(!e._head)return e;let i=e._head,s=e._head._link;for(;s;)i._link=s.copy(),i=s,s=i._link;return e}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){var t;return null!=(t=this._cursor.peekId())?t:this._cursor._link.peekId()}delete(e){let i=this._head,s=null;for(;i;){if(i.delete(e))return i.isEmpty()&&(t(s)&&(s._link=i._link),i===this._head&&(this._head=i._link),i===this._cursor&&(this._cursor=i._link)),!0;s=i,i=i._link}return!1}}r.ELEMENTS_PER_RECORD=i,r.BYTES_PER_RECORD=r.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class _{constructor(t){this._link=null,this._index=-1,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=t}static from(t,e=0,i=t.byteLength/this.BYTES_PER_RECORD-e){return new _(new Int32Array(t,e*this.BYTES_PER_RECORD,i*this.ELEMENTS_PER_RECORD))}delete(t){const e=this._index,i=this.lookup(t);if(i)for(this.id=s,++this._deletedCount;this.next()&&this.id===t;)this.id=s,++this._deletedCount;return this._index=e,i}isEmpty(){return this._deletedCount===this.size()}link(t){this._link?this._link.link(t):this._link=t}lookup(t){if(e(this._offsets.instance)){this._offsets.instance=new Map;const t=this.copy();t._index=-1;let e=0;for(;t.next();)t.id!==e&&(this._offsets.instance.set(t.id,t._index),e=t.id)}if(!this._offsets.instance.has(t))return!1;const i=this._index;return this._index=this._offsets.instance.get(t),this.id!==s||(this._index=i,!1)}get id(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD]}set id(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD]=t}get materialKey(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+1]}set materialKey(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+1]=t}get insertAfter(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+3]}set indexFrom(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+3]=t}get indexCount(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+4]}set indexCount(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+4]=t}get vertexFrom(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+5]}set vertexFrom(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+5]=t}get vertexCount(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+6]}set vertexCount(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+6]=t}get index(){return this._index}size(){return this._packedRecords.length/_.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===s;);return this._index<this.size()}peekId(){const t=(this._index+1)*_.ELEMENTS_PER_RECORD;return t>=this._packedRecords.length?0:this._packedRecords[t]}getCursor(){return this.copy()}copy(){const t=new _(this._packedRecords);return t._link=this._link,t._index=this._index,t._offsets=this._offsets,t._deletedCount=this._deletedCount,t}}_.ELEMENTS_PER_RECORD=i,_.BYTES_PER_RECORD=_.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;export{r as DisplayRecordReader};\n"]},"metadata":{},"sourceType":"module"}