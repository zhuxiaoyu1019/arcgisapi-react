{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { loadArcade as e } from \"../../support/arcadeOnDemand.js\";\nimport { getWellKnownBasemapId as t } from \"../../support/basemapUtils.js\";\nconst n = {\n  light: [\"streets\", \"gray\", \"topo\", \"terrain\", \"national-geographic\", \"oceans\", \"osm\", \"gray-vector\", \"streets-vector\", \"topo-vector\", \"streets-relief-vector\", \"streets-navigation-vector\"],\n  dark: [\"satellite\", \"hybrid\", \"dark-gray\", \"dark-gray-vector\", \"streets-night-vector\"]\n},\n      r = \"percent-of-total\",\n      o = \"field\",\n      i = {\n  years: 365,\n  months: 30,\n  days: 1,\n  hours: 1 / 24,\n  minutes: 1 / 1440,\n  seconds: 1 / 86400,\n  milliseconds: 1 / 864e5\n},\n      s = [\"integer\", \"small-integer\"];\nlet a = null;\n\nasync function l(t) {\n  const n = t.field,\n        r = t.normalizationField,\n        o = t.valueExpression;\n  let i = [];\n\n  if (o) {\n    if (!a) {\n      const {\n        arcadeUtils: t\n      } = await e();\n      a = t;\n    }\n\n    i = a.extractFieldNames(o);\n  }\n\n  return n && i.push(n), r && i.push(r), i;\n}\n\nfunction u(e) {\n  let t = e.normalizationType;\n  return t || (e.normalizationField ? t = o : null != e.normalizationTotal && (t = r)), t;\n}\n\nfunction c(e) {\n  return String(e).padStart(2, \"0\");\n}\n\nfunction f(e, t, n) {\n  let r;\n\n  if (\"date\" === t || \"number\" === t) {\n    \"number\" === t && (e = new Date(e));\n    r = `TIMESTAMP'${n ? e.getFullYear() : e.getUTCFullYear()}-${c((n ? e.getMonth() : e.getUTCMonth()) + 1)}-${c(n ? e.getDate() : e.getUTCDate())} ${c(n ? e.getHours() : e.getUTCHours())}:${c(n ? e.getMinutes() : e.getUTCMinutes())}:${c(n ? e.getSeconds() : e.getUTCSeconds())}'`;\n  } else r = e;\n\n  return r;\n}\n\nfunction g(e, t, n, r) {\n  const {\n    hasQueryEngine: o\n  } = e;\n  let s = `(${f(n, d(e, n), o)} - ${f(t, d(e, t), o)})`;\n  o && (s = `(${s} * ${i.milliseconds})`);\n  let a = i[r],\n      l = \"/\";\n  a < 1 && (a = 1 / a, l = \"*\");\n  return {\n    sqlExpression: 1 === a ? s : `(${s} ${l} ${a})`,\n    sqlWhere: null\n  };\n}\n\nfunction d(e, t) {\n  if (t instanceof Date) return \"date\";\n  if (\"number\" == typeof t) return \"number\";\n\n  if (\"string\" == typeof t) {\n    const n = e.getField(t);\n    if (\"<now>\" === t.toLowerCase()) return;\n    if (n && \"date\" === n.type) return \"field\";\n  }\n}\n\nfunction p(e, t = n) {\n  for (const n in t) if (t[n].indexOf(e) > -1) return n;\n}\n\nfunction m(e, n, r = !0) {\n  let o = null;\n  return e && (\"string\" == typeof e ? n.includes(e) && (o = e) : o = t(e)), r ? o || \"gray\" : o;\n}\n\nfunction y(e, t) {\n  const n = t && e.getField(t);\n  return n && s.indexOf(n.type) > -1;\n}\n\nfunction $(e) {\n  return `cast(${e} as float)`;\n}\n\nexport { $ as castIntegerFieldToFloat, n as defaultBasemapGroups, p as getBasemapGroup, m as getBasemapId, g as getDateDiffSQL, d as getDateType, l as getFieldsList, u as getNormalizationType, y as isIntegerField, i as unitValueInDays };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/smartMapping/support/utils.js"],"names":["loadArcade","e","getWellKnownBasemapId","t","n","light","dark","r","o","i","years","months","days","hours","minutes","seconds","milliseconds","s","a","l","field","normalizationField","valueExpression","arcadeUtils","extractFieldNames","push","u","normalizationType","normalizationTotal","c","String","padStart","f","Date","getFullYear","getUTCFullYear","getMonth","getUTCMonth","getDate","getUTCDate","getHours","getUTCHours","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","g","hasQueryEngine","d","sqlExpression","sqlWhere","getField","toLowerCase","type","p","indexOf","m","includes","y","$","castIntegerFieldToFloat","defaultBasemapGroups","getBasemapGroup","getBasemapId","getDateDiffSQL","getDateType","getFieldsList","getNormalizationType","isIntegerField","unitValueInDays"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{loadArcade as e}from\"../../support/arcadeOnDemand.js\";import{getWellKnownBasemapId as t}from\"../../support/basemapUtils.js\";const n={light:[\"streets\",\"gray\",\"topo\",\"terrain\",\"national-geographic\",\"oceans\",\"osm\",\"gray-vector\",\"streets-vector\",\"topo-vector\",\"streets-relief-vector\",\"streets-navigation-vector\"],dark:[\"satellite\",\"hybrid\",\"dark-gray\",\"dark-gray-vector\",\"streets-night-vector\"]},r=\"percent-of-total\",o=\"field\",i={years:365,months:30,days:1,hours:1/24,minutes:1/1440,seconds:1/86400,milliseconds:1/864e5},s=[\"integer\",\"small-integer\"];let a=null;async function l(t){const n=t.field,r=t.normalizationField,o=t.valueExpression;let i=[];if(o){if(!a){const{arcadeUtils:t}=await e();a=t}i=a.extractFieldNames(o)}return n&&i.push(n),r&&i.push(r),i}function u(e){let t=e.normalizationType;return t||(e.normalizationField?t=o:null!=e.normalizationTotal&&(t=r)),t}function c(e){return String(e).padStart(2,\"0\")}function f(e,t,n){let r;if(\"date\"===t||\"number\"===t){\"number\"===t&&(e=new Date(e));r=`TIMESTAMP'${n?e.getFullYear():e.getUTCFullYear()}-${c((n?e.getMonth():e.getUTCMonth())+1)}-${c(n?e.getDate():e.getUTCDate())} ${c(n?e.getHours():e.getUTCHours())}:${c(n?e.getMinutes():e.getUTCMinutes())}:${c(n?e.getSeconds():e.getUTCSeconds())}'`}else r=e;return r}function g(e,t,n,r){const{hasQueryEngine:o}=e;let s=`(${f(n,d(e,n),o)} - ${f(t,d(e,t),o)})`;o&&(s=`(${s} * ${i.milliseconds})`);let a=i[r],l=\"/\";a<1&&(a=1/a,l=\"*\");return{sqlExpression:1===a?s:`(${s} ${l} ${a})`,sqlWhere:null}}function d(e,t){if(t instanceof Date)return\"date\";if(\"number\"==typeof t)return\"number\";if(\"string\"==typeof t){const n=e.getField(t);if(\"<now>\"===t.toLowerCase())return;if(n&&\"date\"===n.type)return\"field\"}}function p(e,t=n){for(const n in t)if(t[n].indexOf(e)>-1)return n}function m(e,n,r=!0){let o=null;return e&&(\"string\"==typeof e?n.includes(e)&&(o=e):o=t(e)),r?o||\"gray\":o}function y(e,t){const n=t&&e.getField(t);return n&&s.indexOf(n.type)>-1}function $(e){return`cast(${e} as float)`}export{$ as castIntegerFieldToFloat,n as defaultBasemapGroups,p as getBasemapGroup,m as getBasemapId,g as getDateDiffSQL,d as getDateType,l as getFieldsList,u as getNormalizationType,y as isIntegerField,i as unitValueInDays};\n"]},"metadata":{},"sourceType":"module"}