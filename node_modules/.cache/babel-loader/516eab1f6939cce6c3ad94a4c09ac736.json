{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isSome as t, isNone as r, disposeMaybe as e } from \"../../../core/maybe.js\";\nimport { createTransformTexture as s, getBasicGridUniforms as i, getCommonUniforms as o, getColormapUniforms as a, getStretchUniforms as h, getShadedReliefUniforms as l, createRasterTexture as u, createColormapTexture as n } from \"../../webgl/rasterUtils.js\";\nconst m = {\n  bandCount: 3,\n  outMin: 0,\n  outMax: 1,\n  minCutOff: [0, 0, 0],\n  maxCutOff: [255, 255, 255],\n  factor: [1 / 255, 1 / 255, 1 / 255],\n  useGamma: !1,\n  gamma: [1, 1, 1],\n  gammaCorrection: [1, 1, 1],\n  colormap: null,\n  colormapOffset: null,\n  type: \"stretch\"\n};\n\nclass d {\n  constructor(t, r, e = null, s = null) {\n    this._memoryUsed = null, this._source = null, this._symbolizerParameters = null, this._bandIds = null, this._interpolation = null, this._dirty = !1, this._transformGrid = null, this.isRendereredSource = !1, this.symbolizerRenderer = null, this.rawPixelData = null, this.lij = null, this.scale = 1, this.offset = [0, 0], this.opacity = 1, this.lij = t, this.source = r, this.width = e || r.width, this.height = s || r.height;\n  }\n\n  get source() {\n    return this._source;\n  }\n\n  set source(t) {\n    this._source = t, this._rasterTexture && (this._rasterTexture.dispose(), this._rasterTexture = null, this._memoryUsed = null);\n  }\n\n  get symbolizerParameters() {\n    return this.isRendereredSource ? { ...m,\n      maxCutOff: [1, 1, 1],\n      factor: [1, 1, 1]\n    } : this._symbolizerParameters || m;\n  }\n\n  set symbolizerParameters(t) {\n    this._symbolizerParameters = t;\n  }\n\n  get bandIds() {\n    return this._bandIds;\n  }\n\n  set bandIds(r) {\n    if (t(r) && r.length > 0) {\n      this._bandIds && r.every((t, r) => !!this._bandIds[r] && t === this._bandIds[r]) || (this._bandIds = r, this._dirty = !0);\n    } else this._bandIds = null;\n  }\n\n  get interpolation() {\n    return this._interpolation;\n  }\n\n  set interpolation(t) {\n    this._interpolation = t, this._rasterTexture && this._rasterTexture.setSamplingMode(\"bilinear\" === t ? 9729 : 9728);\n  }\n\n  get transformGrid() {\n    return this._transformGrid;\n  }\n\n  set transformGrid(t) {\n    this._transformGrid = t, this._transformGridTexture && (this._transformGridTexture.dispose(), this._transformGridTexture = null, this._memoryUsed = null);\n  }\n\n  bind(t) {\n    return !!(this.source && this.source.pixels && this.source.pixels.length > 0) && (this._rasterTexture && !this._dirty || this._updateRasterTexture(t, this.bandIds), this._rasterTexture && (this._updateColormapTexture(t), this.transformGrid && !this._transformGridTexture && (this._transformGridTexture = s(t, this.transformGrid))), !0);\n  }\n\n  getUniforms() {\n    const t = i(this.scale, this.offset),\n          {\n      symbolizerParameters: r,\n      transformGrid: e,\n      width: s,\n      height: u,\n      opacity: n\n    } = this;\n    return {\n      basic: t,\n      common: o(e, [s, u], [this.source.width, this.source.height], n),\n      colormap: r.colormap ? a(r.colormap, r.colormapOffset) : null,\n      stretch: \"stretch\" === this.symbolizerParameters.type ? h(this.symbolizerParameters) : null,\n      hillshade: \"hillshade\" === this.symbolizerParameters.type ? l(this.symbolizerParameters) : null\n    };\n  }\n\n  getTextures() {\n    const t = new Array(),\n          r = [];\n    return this._rasterTexture && (r.push(this._rasterTexture), t.push(\"u_image\"), this._transformGridTexture && (r.push(this._transformGridTexture), t.push(\"u_transformGrid\")), this._colormapTexture && (r.push(this._colormapTexture), t.push(\"u_colormap\"))), {\n      names: t,\n      textures: r\n    };\n  }\n\n  get memoryUsage() {\n    if (r(this._memoryUsed)) {\n      const t = this.getTextures();\n      if (null == t) return 0;\n      this._memoryUsed = t.textures.map(t => t.descriptor.width * t.descriptor.height * 4).reduce((t, r) => t + r, 0);\n    }\n\n    return this._memoryUsed;\n  }\n\n  release() {\n    return this._rasterTexture = e(this._rasterTexture), this._transformGridTexture = e(this._transformGridTexture), this._colormapTexture = e(this._colormapTexture), this.source = null, this.transformGrid = null, this.rawPixelData = null, !0;\n  }\n\n  _updateRasterTexture(e, s) {\n    const i = this.source ? this.source.extractBands(s) : null;\n    if (!(i && i.pixels && i.pixels.length > 0)) return void (this._rasterTexture && (this._rasterTexture.dispose(), this._rasterTexture = null));\n    const o = r(s) && r(this.bandIds) || t(s) && t(this.bandIds) && s.join(\"\") === this.bandIds.join(\"\");\n\n    if (this._rasterTexture) {\n      if (o) return;\n      this._rasterTexture.dispose(), this._rasterTexture = null;\n    }\n\n    this._rasterTexture = u(e, i, this.interpolation || \"nearest\", this.isRendereredSource);\n  }\n\n  _updateColormapTexture(t) {\n    const r = this._colormap,\n          e = this.symbolizerParameters.colormap;\n    return e ? r ? e.length !== r.length || e.some((t, e) => t !== r[e]) ? (this._colormapTexture && (this._colormapTexture.dispose(), this._colormapTexture = null), this._colormapTexture = n(t, e), void (this._colormap = e)) : void 0 : (this._colormapTexture = n(t, e), void (this._colormap = e)) : (this._colormapTexture && (this._colormapTexture.dispose(), this._colormapTexture = null), void (this._colormap = null));\n  }\n\n}\n\nexport default d;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/terrain/RasterTile.js"],"names":["isSome","t","isNone","r","disposeMaybe","e","createTransformTexture","s","getBasicGridUniforms","i","getCommonUniforms","o","getColormapUniforms","a","getStretchUniforms","h","getShadedReliefUniforms","l","createRasterTexture","u","createColormapTexture","n","m","bandCount","outMin","outMax","minCutOff","maxCutOff","factor","useGamma","gamma","gammaCorrection","colormap","colormapOffset","type","d","constructor","_memoryUsed","_source","_symbolizerParameters","_bandIds","_interpolation","_dirty","_transformGrid","isRendereredSource","symbolizerRenderer","rawPixelData","lij","scale","offset","opacity","source","width","height","_rasterTexture","dispose","symbolizerParameters","bandIds","length","every","interpolation","setSamplingMode","transformGrid","_transformGridTexture","bind","pixels","_updateRasterTexture","_updateColormapTexture","getUniforms","basic","common","stretch","hillshade","getTextures","Array","push","_colormapTexture","names","textures","memoryUsage","map","descriptor","reduce","release","extractBands","join","_colormap","some"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as r,disposeMaybe as e}from\"../../../core/maybe.js\";import{createTransformTexture as s,getBasicGridUniforms as i,getCommonUniforms as o,getColormapUniforms as a,getStretchUniforms as h,getShadedReliefUniforms as l,createRasterTexture as u,createColormapTexture as n}from\"../../webgl/rasterUtils.js\";const m={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,type:\"stretch\"};class d{constructor(t,r,e=null,s=null){this._memoryUsed=null,this._source=null,this._symbolizerParameters=null,this._bandIds=null,this._interpolation=null,this._dirty=!1,this._transformGrid=null,this.isRendereredSource=!1,this.symbolizerRenderer=null,this.rawPixelData=null,this.lij=null,this.scale=1,this.offset=[0,0],this.opacity=1,this.lij=t,this.source=r,this.width=e||r.width,this.height=s||r.height}get source(){return this._source}set source(t){this._source=t,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._memoryUsed=null)}get symbolizerParameters(){return this.isRendereredSource?{...m,maxCutOff:[1,1,1],factor:[1,1,1]}:this._symbolizerParameters||m}set symbolizerParameters(t){this._symbolizerParameters=t}get bandIds(){return this._bandIds}set bandIds(r){if(t(r)&&r.length>0){this._bandIds&&r.every(((t,r)=>!!this._bandIds[r]&&t===this._bandIds[r]))||(this._bandIds=r,this._dirty=!0)}else this._bandIds=null}get interpolation(){return this._interpolation}set interpolation(t){this._interpolation=t,this._rasterTexture&&this._rasterTexture.setSamplingMode(\"bilinear\"===t?9729:9728)}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid=t,this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null,this._memoryUsed=null)}bind(t){return!!(this.source&&this.source.pixels&&this.source.pixels.length>0)&&(this._rasterTexture&&!this._dirty||this._updateRasterTexture(t,this.bandIds),this._rasterTexture&&(this._updateColormapTexture(t),this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=s(t,this.transformGrid))),!0)}getUniforms(){const t=i(this.scale,this.offset),{symbolizerParameters:r,transformGrid:e,width:s,height:u,opacity:n}=this;return{basic:t,common:o(e,[s,u],[this.source.width,this.source.height],n),colormap:r.colormap?a(r.colormap,r.colormapOffset):null,stretch:\"stretch\"===this.symbolizerParameters.type?h(this.symbolizerParameters):null,hillshade:\"hillshade\"===this.symbolizerParameters.type?l(this.symbolizerParameters):null}}getTextures(){const t=new Array,r=[];return this._rasterTexture&&(r.push(this._rasterTexture),t.push(\"u_image\"),this._transformGridTexture&&(r.push(this._transformGridTexture),t.push(\"u_transformGrid\")),this._colormapTexture&&(r.push(this._colormapTexture),t.push(\"u_colormap\"))),{names:t,textures:r}}get memoryUsage(){if(r(this._memoryUsed)){const t=this.getTextures();if(null==t)return 0;this._memoryUsed=t.textures.map((t=>t.descriptor.width*t.descriptor.height*4)).reduce(((t,r)=>t+r),0)}return this._memoryUsed}release(){return this._rasterTexture=e(this._rasterTexture),this._transformGridTexture=e(this._transformGridTexture),this._colormapTexture=e(this._colormapTexture),this.source=null,this.transformGrid=null,this.rawPixelData=null,!0}_updateRasterTexture(e,s){const i=this.source?this.source.extractBands(s):null;if(!(i&&i.pixels&&i.pixels.length>0))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null));const o=r(s)&&r(this.bandIds)||t(s)&&t(this.bandIds)&&s.join(\"\")===this.bandIds.join(\"\");if(this._rasterTexture){if(o)return;this._rasterTexture.dispose(),this._rasterTexture=null}this._rasterTexture=u(e,i,this.interpolation||\"nearest\",this.isRendereredSource)}_updateColormapTexture(t){const r=this._colormap,e=this.symbolizerParameters.colormap;return e?r?e.length!==r.length||e.some(((t,e)=>t!==r[e]))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=n(t,e),void(this._colormap=e)):void 0:(this._colormapTexture=n(t,e),void(this._colormap=e)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}}export default d;\n"]},"metadata":{},"sourceType":"module"}