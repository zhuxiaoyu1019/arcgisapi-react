{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../../shaderModules/interfaces.js\";\nimport { bindScreenSizePerspective as a } from \"../../../materials/internal/MaterialUtil.js\";\n\nfunction r(a) {\n  a.vertex.code.add(e`float screenSizePerspectiveMinSize(float size, vec4 factor) {\nfloat nonZeroSize = 1.0 - step(size, 0.0);\nreturn (\nfactor.z * (\n1.0 +\nnonZeroSize *\n2.0 * factor.w / (\nsize + (1.0 - nonZeroSize)\n)\n)\n);\n}`), a.vertex.code.add(e`float screenSizePerspectiveViewAngleDependentFactor(float absCosAngle) {\nreturn absCosAngle * absCosAngle * absCosAngle;\n}`), a.vertex.code.add(e`vec4 screenSizePerspectiveScaleFactor(float absCosAngle, float distanceToCamera, vec4 params) {\nreturn vec4(\nmin(params.x / (distanceToCamera - params.y), 1.0),\nscreenSizePerspectiveViewAngleDependentFactor(absCosAngle),\nparams.z,\nparams.w\n);\n}`), a.vertex.code.add(e`float applyScreenSizePerspectiveScaleFactorFloat(float size, vec4 factor) {\nreturn max(mix(size * factor.x, size, factor.y), screenSizePerspectiveMinSize(size, factor));\n}`), a.vertex.code.add(e`float screenSizePerspectiveScaleFloat(float size, float absCosAngle, float distanceToCamera, vec4 params) {\nreturn applyScreenSizePerspectiveScaleFactorFloat(\nsize,\nscreenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params)\n);\n}`), a.vertex.code.add(e`vec2 applyScreenSizePerspectiveScaleFactorVec2(vec2 size, vec4 factor) {\nreturn mix(size * clamp(factor.x, screenSizePerspectiveMinSize(size.y, factor) / size.y, 1.0), size, factor.y);\n}`), a.vertex.code.add(e`vec2 screenSizePerspectiveScaleVec2(vec2 size, float absCosAngle, float distanceToCamera, vec4 params) {\nreturn applyScreenSizePerspectiveScaleFactorVec2(size, screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params));\n}`);\n}\n\nfunction c(e, r) {\n  if (r.screenSizePerspective) {\n    a(r.screenSizePerspective, e, \"screenSizePerspective\");\n    const c = r.screenSizePerspectiveAlignment || r.screenSizePerspective;\n    a(c, e, \"screenSizePerspectiveAlignment\");\n  }\n}\n\nexport { r as ScreenSizePerspective, c as bindScreenSizePerspectiveUniforms };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js"],"names":["glsl","e","bindScreenSizePerspective","a","r","vertex","code","add","c","screenSizePerspective","screenSizePerspectiveAlignment","ScreenSizePerspective","bindScreenSizePerspectiveUniforms"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,mCAArB;AAAyD,SAAOC,yBAAyB,IAAIC,CAApC,QAA0C,6CAA1C;;AAAwF,SAASC,CAAT,CAAWD,CAAX,EAAa;AAACA,EAAAA,CAAC,CAACE,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AACnL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAX+J,GAW3JE,CAAC,CAACE,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AACxB;AACA,EAFI,CAX2J,EAa3JE,CAAC,CAACE,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,EAPI,CAb2J,EAoB3JE,CAAC,CAACE,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AACxB;AACA,EAFI,CApB2J,EAsB3JE,CAAC,CAACE,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AACxB;AACA;AACA;AACA;AACA,EALI,CAtB2J,EA2B3JE,CAAC,CAACE,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AACxB;AACA,EAFI,CA3B2J,EA6B3JE,CAAC,CAACE,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AACxB;AACA,EAFI,CA7B2J;AA+B3J;;AAAA,SAASO,CAAT,CAAWP,CAAX,EAAaG,CAAb,EAAe;AAAC,MAAGA,CAAC,CAACK,qBAAL,EAA2B;AAACN,IAAAA,CAAC,CAACC,CAAC,CAACK,qBAAH,EAAyBR,CAAzB,EAA2B,uBAA3B,CAAD;AAAqD,UAAMO,CAAC,GAACJ,CAAC,CAACM,8BAAF,IAAkCN,CAAC,CAACK,qBAA5C;AAAkEN,IAAAA,CAAC,CAACK,CAAD,EAAGP,CAAH,EAAK,gCAAL,CAAD;AAAwC;AAAC;;AAAA,SAAOG,CAAC,IAAIO,qBAAZ,EAAkCH,CAAC,IAAII,iCAAvC","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";import{bindScreenSizePerspective as a}from\"../../../materials/internal/MaterialUtil.js\";function r(a){a.vertex.code.add(e`float screenSizePerspectiveMinSize(float size, vec4 factor) {\nfloat nonZeroSize = 1.0 - step(size, 0.0);\nreturn (\nfactor.z * (\n1.0 +\nnonZeroSize *\n2.0 * factor.w / (\nsize + (1.0 - nonZeroSize)\n)\n)\n);\n}`),a.vertex.code.add(e`float screenSizePerspectiveViewAngleDependentFactor(float absCosAngle) {\nreturn absCosAngle * absCosAngle * absCosAngle;\n}`),a.vertex.code.add(e`vec4 screenSizePerspectiveScaleFactor(float absCosAngle, float distanceToCamera, vec4 params) {\nreturn vec4(\nmin(params.x / (distanceToCamera - params.y), 1.0),\nscreenSizePerspectiveViewAngleDependentFactor(absCosAngle),\nparams.z,\nparams.w\n);\n}`),a.vertex.code.add(e`float applyScreenSizePerspectiveScaleFactorFloat(float size, vec4 factor) {\nreturn max(mix(size * factor.x, size, factor.y), screenSizePerspectiveMinSize(size, factor));\n}`),a.vertex.code.add(e`float screenSizePerspectiveScaleFloat(float size, float absCosAngle, float distanceToCamera, vec4 params) {\nreturn applyScreenSizePerspectiveScaleFactorFloat(\nsize,\nscreenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params)\n);\n}`),a.vertex.code.add(e`vec2 applyScreenSizePerspectiveScaleFactorVec2(vec2 size, vec4 factor) {\nreturn mix(size * clamp(factor.x, screenSizePerspectiveMinSize(size.y, factor) / size.y, 1.0), size, factor.y);\n}`),a.vertex.code.add(e`vec2 screenSizePerspectiveScaleVec2(vec2 size, float absCosAngle, float distanceToCamera, vec4 params) {\nreturn applyScreenSizePerspectiveScaleFactorVec2(size, screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params));\n}`)}function c(e,r){if(r.screenSizePerspective){a(r.screenSizePerspective,e,\"screenSizePerspective\");const c=r.screenSizePerspectiveAlignment||r.screenSizePerspective;a(c,e,\"screenSizePerspectiveAlignment\")}}export{r as ScreenSizePerspective,c as bindScreenSizePerspectiveUniforms};\n"]},"metadata":{},"sourceType":"module"}