{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { m as e, d as r } from \"../../../chunks/mat4.js\";\nimport { c as i } from \"../../../chunks/mat4f64.js\";\nimport { S as t } from \"../../../chunks/Stars.glsl.js\";\nimport { ReloadableShaderModule as o } from \"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as n } from \"../webgl-engine/core/shaderTechnique/ShaderTechnique.js\";\nimport { Default3D as s } from \"../webgl-engine/lib/DefaultVertexAttributeLocations.js\";\nimport { Program as a } from \"../webgl-engine/lib/Program.js\";\nimport { makePipelineState as m, separateBlendingParams as l, defaultColorWriteParams as c } from \"../../webgl/renderState.js\";\n\nclass f extends n {\n  initializeProgram(e) {\n    const r = f.shader.get().build();\n    return new a(e.rctx, r, s);\n  }\n\n  initializePipeline() {\n    return m({\n      blending: l(770, 1, 771, 771),\n      depthTest: {\n        func: 515\n      },\n      colorWrite: c\n    });\n  }\n\n  bindPass({\n    camera: r,\n    modelMatrix: i\n  }) {\n    const t = this.makeInfiniteProjectionMatrix(r.projectionMatrix, r.near, p);\n    e(t, t, r.viewMatrix), e(t, t, i), this.program.setUniformMatrix4fv(\"transform\", t), this.program.setUniform4fv(\"viewport\", r.fullViewport), this.program.setUniform1f(\"pixelRatio\", r.pixelRatio);\n  }\n\n  makeInfiniteProjectionMatrix(e, i, t) {\n    const o = 24e-8;\n    return r(t, e), t[10] = o - 1, t[11] = -1, t[14] = (o - 2) * i, t;\n  }\n\n}\n\nf.shader = new o(t, () => import(\"./Stars.glsl.js\"));\nconst p = i();\nexport { f as StarsTechnique };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/environment/StarsTechnique.js"],"names":["m","e","d","r","c","i","S","t","ReloadableShaderModule","o","ShaderTechnique","n","Default3D","s","Program","a","makePipelineState","separateBlendingParams","l","defaultColorWriteParams","f","initializeProgram","shader","get","build","rctx","initializePipeline","blending","depthTest","func","colorWrite","bindPass","camera","modelMatrix","makeInfiniteProjectionMatrix","projectionMatrix","near","p","viewMatrix","program","setUniformMatrix4fv","setUniform4fv","fullViewport","setUniform1f","pixelRatio","StarsTechnique"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,EAAcC,CAAC,IAAIC,CAAnB,QAAyB,yBAAzB;AAAmD,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,4BAAlB;AAA+C,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,+BAAlB;AAAkD,SAAOC,sBAAsB,IAAIC,CAAjC,QAAuC,gEAAvC;AAAwG,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,yDAAhC;AAA0F,SAAOC,SAAS,IAAIC,CAApB,QAA0B,wDAA1B;AAAmF,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,gCAAxB;AAAyD,SAAOC,iBAAiB,IAAIhB,CAA5B,EAA8BiB,sBAAsB,IAAIC,CAAxD,EAA0DC,uBAAuB,IAAIf,CAArF,QAA2F,4BAA3F;;AAAwH,MAAMgB,CAAN,SAAgBT,CAAhB,CAAiB;AAACU,EAAAA,iBAAiB,CAACpB,CAAD,EAAG;AAAC,UAAME,CAAC,GAACiB,CAAC,CAACE,MAAF,CAASC,GAAT,GAAeC,KAAf,EAAR;AAA+B,WAAO,IAAIT,CAAJ,CAAMd,CAAC,CAACwB,IAAR,EAAatB,CAAb,EAAeU,CAAf,CAAP;AAAyB;;AAAAa,EAAAA,kBAAkB,GAAE;AAAC,WAAO1B,CAAC,CAAC;AAAC2B,MAAAA,QAAQ,EAACT,CAAC,CAAC,GAAD,EAAK,CAAL,EAAO,GAAP,EAAW,GAAX,CAAX;AAA2BU,MAAAA,SAAS,EAAC;AAACC,QAAAA,IAAI,EAAC;AAAN,OAArC;AAAgDC,MAAAA,UAAU,EAAC1B;AAA3D,KAAD,CAAR;AAAwE;;AAAA2B,EAAAA,QAAQ,CAAC;AAACC,IAAAA,MAAM,EAAC7B,CAAR;AAAU8B,IAAAA,WAAW,EAAC5B;AAAtB,GAAD,EAA0B;AAAC,UAAME,CAAC,GAAC,KAAK2B,4BAAL,CAAkC/B,CAAC,CAACgC,gBAApC,EAAqDhC,CAAC,CAACiC,IAAvD,EAA4DC,CAA5D,CAAR;AAAuEpC,IAAAA,CAAC,CAACM,CAAD,EAAGA,CAAH,EAAKJ,CAAC,CAACmC,UAAP,CAAD,EAAoBrC,CAAC,CAACM,CAAD,EAAGA,CAAH,EAAKF,CAAL,CAArB,EAA6B,KAAKkC,OAAL,CAAaC,mBAAb,CAAiC,WAAjC,EAA6CjC,CAA7C,CAA7B,EAA6E,KAAKgC,OAAL,CAAaE,aAAb,CAA2B,UAA3B,EAAsCtC,CAAC,CAACuC,YAAxC,CAA7E,EAAmI,KAAKH,OAAL,CAAaI,YAAb,CAA0B,YAA1B,EAAuCxC,CAAC,CAACyC,UAAzC,CAAnI;AAAwL;;AAAAV,EAAAA,4BAA4B,CAACjC,CAAD,EAAGI,CAAH,EAAKE,CAAL,EAAO;AAAC,UAAME,CAAC,GAAC,KAAR;AAAc,WAAON,CAAC,CAACI,CAAD,EAAGN,CAAH,CAAD,EAAOM,CAAC,CAAC,EAAD,CAAD,GAAME,CAAC,GAAC,CAAf,EAAiBF,CAAC,CAAC,EAAD,CAAD,GAAM,CAAC,CAAxB,EAA0BA,CAAC,CAAC,EAAD,CAAD,GAAM,CAACE,CAAC,GAAC,CAAH,IAAMJ,CAAtC,EAAwCE,CAA/C;AAAiD;;AAAhjB;;AAAijBa,CAAC,CAACE,MAAF,GAAS,IAAIb,CAAJ,CAAMF,CAAN,EAAS,MAAI,OAAO,iBAAP,CAAb,CAAT;AAAkD,MAAM8B,CAAC,GAAChC,CAAC,EAAT;AAAY,SAAOe,CAAC,IAAIyB,cAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{m as e,d as r}from\"../../../chunks/mat4.js\";import{c as i}from\"../../../chunks/mat4f64.js\";import{S as t}from\"../../../chunks/Stars.glsl.js\";import{ReloadableShaderModule as o}from\"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js\";import{ShaderTechnique as n}from\"../webgl-engine/core/shaderTechnique/ShaderTechnique.js\";import{Default3D as s}from\"../webgl-engine/lib/DefaultVertexAttributeLocations.js\";import{Program as a}from\"../webgl-engine/lib/Program.js\";import{makePipelineState as m,separateBlendingParams as l,defaultColorWriteParams as c}from\"../../webgl/renderState.js\";class f extends n{initializeProgram(e){const r=f.shader.get().build();return new a(e.rctx,r,s)}initializePipeline(){return m({blending:l(770,1,771,771),depthTest:{func:515},colorWrite:c})}bindPass({camera:r,modelMatrix:i}){const t=this.makeInfiniteProjectionMatrix(r.projectionMatrix,r.near,p);e(t,t,r.viewMatrix),e(t,t,i),this.program.setUniformMatrix4fv(\"transform\",t),this.program.setUniform4fv(\"viewport\",r.fullViewport),this.program.setUniform1f(\"pixelRatio\",r.pixelRatio)}makeInfiniteProjectionMatrix(e,i,t){const o=24e-8;return r(t,e),t[10]=o-1,t[11]=-1,t[14]=(o-2)*i,t}}f.shader=new o(t,(()=>import(\"./Stars.glsl.js\")));const p=i();export{f as StarsTechnique};\n"]},"metadata":{},"sourceType":"module"}