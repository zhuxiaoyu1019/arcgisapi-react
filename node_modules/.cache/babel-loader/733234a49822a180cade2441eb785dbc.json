{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { addFrameTask as e } from \"../../../core/scheduling.js\";\nimport t from \"./GamepadInputDevice.js\";\nimport { extractState as s, stateIdle as i, stateEqual as n } from \"./GamepadState.js\";\n\nclass a {\n  constructor(e, t) {\n    this.element = e, this.input = t, this._hasEventListeners = !1, this.onConnectGamepad = e => {\n      this.connectGamepad(e.gamepad);\n    }, this.onDisconnectGamepad = e => {\n      const t = e.gamepad,\n            i = t.index,\n            n = this.inputDevices[i];\n      n && (this.emitGamepadEvent(t, s(n), !1), this.inputDevices.splice(i, 1), this.latestUpdate.splice(i, 1), this.input.gamepad.devices.remove(n), this.ensurePollingState());\n    }, this.frameTask = null, this.latestUpdate = new Array(), this.inputDevices = new Array(), this.callback = null;\n    const i = (\"getGamepads\" in window.navigator),\n          n = window.isSecureContext;\n    this.supported = i && n, this.supported && (this.forEachGamepad(this.connectGamepad), window.addEventListener(\"gamepadconnected\", this.onConnectGamepad), window.addEventListener(\"gamepaddisconnected\", this.onDisconnectGamepad), this.ensurePollingState());\n  }\n\n  destroy() {\n    this.hasEventListeners = !1, this.supported && (window.removeEventListener(\"gamepadconnected\", this.onConnectGamepad), window.removeEventListener(\"gamepaddisconnected\", this.onDisconnectGamepad));\n  }\n\n  set hasEventListeners(e) {\n    this._hasEventListeners !== e && (this._hasEventListeners = e, this.ensurePollingState());\n  }\n\n  get eventsEnabled() {\n    return this.supported && this.inputDevices.length > 0 && this._hasEventListeners;\n  }\n\n  set onEvent(e) {\n    this.callback = e;\n  }\n\n  connectGamepad(e) {\n    const s = new t(e);\n    \"unknown\" !== s.deviceType && (this.inputDevices[e.index] = s, this.input.gamepad.devices.add(s)), this.ensurePollingState();\n  }\n\n  ensurePollingState() {\n    this.eventsEnabled ? this.startPolling() : this.stopPolling();\n  }\n\n  startPolling() {\n    null == this.frameTask && (this.frameTask = e({\n      update: () => this.readGamepadState()\n    }));\n  }\n\n  stopPolling() {\n    null != this.frameTask && (this.frameTask.remove(), this.frameTask = null, this.latestUpdate = new Array());\n  }\n\n  readGamepadState() {\n    const e = document.hasFocus(),\n          t = this.element.contains(document.activeElement),\n          a = \"document\" === this.input.gamepad.enabledFocusMode && !e || \"view\" === this.input.gamepad.enabledFocusMode && !t;\n    this.forEachGamepad(e => {\n      const t = this.inputDevices[e.index];\n      if (!t) return;\n      const d = this.latestUpdate[e.index],\n            o = s(t),\n            r = a || i(o);\n\n      if (d) {\n        if (d.timestamp === e.timestamp) return;\n        if (!d.active && r) return;\n        if (n(d.state, o)) return;\n      }\n\n      this.emitGamepadEvent(e, o, !r);\n    });\n  }\n\n  forEachGamepad(e) {\n    const t = window.navigator.getGamepads();\n\n    for (let s = 0; s < t.length; s++) {\n      const i = t[s];\n      this.validate(i) && e(i);\n    }\n  }\n\n  emitGamepadEvent(e, t, s) {\n    const i = this.latestUpdate[e.index],\n          n = i && i.active;\n    if (!n && !s) return;\n    const a = !n && s ? \"start\" : n && s ? \"update\" : \"end\";\n    this.latestUpdate[e.index] = {\n      timestamp: e.timestamp,\n      state: t,\n      active: s\n    }, this.callback && this.callback({\n      device: this.inputDevices[e.index],\n      state: t,\n      action: a\n    });\n  }\n\n  validate(e) {\n    if (!e) return !1;\n    if (!e.connected) return !1;\n\n    for (let t = 0; t < e.axes.length; t++) if (isNaN(e.axes[t])) return !1;\n\n    return !0;\n  }\n\n}\n\nexport { a as GamepadSource };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/input/gamepad/GamepadSource.js"],"names":["addFrameTask","e","t","extractState","s","stateIdle","i","stateEqual","n","a","constructor","element","input","_hasEventListeners","onConnectGamepad","connectGamepad","gamepad","onDisconnectGamepad","index","inputDevices","emitGamepadEvent","splice","latestUpdate","devices","remove","ensurePollingState","frameTask","Array","callback","window","navigator","isSecureContext","supported","forEachGamepad","addEventListener","destroy","hasEventListeners","removeEventListener","eventsEnabled","length","onEvent","deviceType","add","startPolling","stopPolling","update","readGamepadState","document","hasFocus","contains","activeElement","enabledFocusMode","d","o","r","timestamp","active","state","getGamepads","validate","device","action","connected","axes","isNaN","GamepadSource"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{addFrameTask as e}from\"../../../core/scheduling.js\";import t from\"./GamepadInputDevice.js\";import{extractState as s,stateIdle as i,stateEqual as n}from\"./GamepadState.js\";class a{constructor(e,t){this.element=e,this.input=t,this._hasEventListeners=!1,this.onConnectGamepad=e=>{this.connectGamepad(e.gamepad)},this.onDisconnectGamepad=e=>{const t=e.gamepad,i=t.index,n=this.inputDevices[i];n&&(this.emitGamepadEvent(t,s(n),!1),this.inputDevices.splice(i,1),this.latestUpdate.splice(i,1),this.input.gamepad.devices.remove(n),this.ensurePollingState())},this.frameTask=null,this.latestUpdate=new Array,this.inputDevices=new Array,this.callback=null;const i=\"getGamepads\"in window.navigator,n=window.isSecureContext;this.supported=i&&n,this.supported&&(this.forEachGamepad(this.connectGamepad),window.addEventListener(\"gamepadconnected\",this.onConnectGamepad),window.addEventListener(\"gamepaddisconnected\",this.onDisconnectGamepad),this.ensurePollingState())}destroy(){this.hasEventListeners=!1,this.supported&&(window.removeEventListener(\"gamepadconnected\",this.onConnectGamepad),window.removeEventListener(\"gamepaddisconnected\",this.onDisconnectGamepad))}set hasEventListeners(e){this._hasEventListeners!==e&&(this._hasEventListeners=e,this.ensurePollingState())}get eventsEnabled(){return this.supported&&this.inputDevices.length>0&&this._hasEventListeners}set onEvent(e){this.callback=e}connectGamepad(e){const s=new t(e);\"unknown\"!==s.deviceType&&(this.inputDevices[e.index]=s,this.input.gamepad.devices.add(s)),this.ensurePollingState()}ensurePollingState(){this.eventsEnabled?this.startPolling():this.stopPolling()}startPolling(){null==this.frameTask&&(this.frameTask=e({update:()=>this.readGamepadState()}))}stopPolling(){null!=this.frameTask&&(this.frameTask.remove(),this.frameTask=null,this.latestUpdate=new Array)}readGamepadState(){const e=document.hasFocus(),t=this.element.contains(document.activeElement),a=\"document\"===this.input.gamepad.enabledFocusMode&&!e||\"view\"===this.input.gamepad.enabledFocusMode&&!t;this.forEachGamepad((e=>{const t=this.inputDevices[e.index];if(!t)return;const d=this.latestUpdate[e.index],o=s(t),r=a||i(o);if(d){if(d.timestamp===e.timestamp)return;if(!d.active&&r)return;if(n(d.state,o))return}this.emitGamepadEvent(e,o,!r)}))}forEachGamepad(e){const t=window.navigator.getGamepads();for(let s=0;s<t.length;s++){const i=t[s];this.validate(i)&&e(i)}}emitGamepadEvent(e,t,s){const i=this.latestUpdate[e.index],n=i&&i.active;if(!n&&!s)return;const a=!n&&s?\"start\":n&&s?\"update\":\"end\";this.latestUpdate[e.index]={timestamp:e.timestamp,state:t,active:s},this.callback&&this.callback({device:this.inputDevices[e.index],state:t,action:a})}validate(e){if(!e)return!1;if(!e.connected)return!1;for(let t=0;t<e.axes.length;t++)if(isNaN(e.axes[t]))return!1;return!0}}export{a as GamepadSource};\n"]},"metadata":{},"sourceType":"module"}