{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../../Graphic.js\";\nimport { Q as t } from \"../../../chunks/languageUtils.js\";\nimport { SqlExpressionAdapted as i, OriginalField as s, AdaptedFeatureSet as n } from \"./Adapted.js\";\nimport r from \"./AttributeFilter.js\";\nimport a from \"./OrderBy.js\";\nimport l from \"../support/FeatureSet.js\";\nimport o from \"../support/IdSet.js\";\nimport d from \"../support/OrderbyClause.js\";\nimport { IdState as u, layerGeometryEsriConstants as f, FeatureServiceDatabaseType as h } from \"../support/shared.js\";\nimport { isSingleField as c, toWhereClause as p, predictType as g, scanForField as _, reformulateWithoutField as m } from \"../support/sqlUtils.js\";\nimport { calculateStat as y } from \"../support/stats.js\";\nimport b from \"../support/StatsField.js\";\nimport { createMD5Hash as w, outputTypes as F } from \"../../../core/MD5.js\";\nimport { resolve as I, reject as S, create as x } from \"../../../core/promiseUtils.js\";\nimport { WhereClause as k } from \"../../../core/sql/WhereClause.js\";\nimport D from \"../../../geometry/SpatialReference.js\";\nimport A from \"../../../layers/support/Field.js\";\nimport j from \"../../../layers/support/FieldsIndex.js\";\n\nfunction C(e) {\n  if (!e) return \"COUNT\";\n\n  switch (e.toLowerCase()) {\n    case \"max\":\n      return \"MAX\";\n\n    case \"var\":\n    case \"variance\":\n      return \"VAR\";\n\n    case \"avg\":\n    case \"average\":\n    case \"mean\":\n      return \"AVG\";\n\n    case \"min\":\n      return \"MIN\";\n\n    case \"sum\":\n      return \"SUM\";\n\n    case \"stdev\":\n    case \"stddev\":\n      return \"STDDEV\";\n\n    case \"count\":\n      return \"COUNT\";\n  }\n\n  return \"COUNT\";\n}\n\nclass G extends l {\n  constructor(e) {\n    super(e), this._decodedStatsfield = [], this._decodedGroupbyfield = [], this._candosimplegroupby = !0, this.phsyicalgroupbyfields = [], this.objectIdField = \"ROW__ID\", this._internalObjectIdField = \"ROW__ID\", this._adaptedFields = [], this.declaredClass = \"esri.arcade.featureset.actions.Aggregate\", this._uniqueIds = 1, this._maxQuery = 10, this._maxProcessing = 10, this._parent = e.parentfeatureset, this._config = e;\n  }\n\n  isTable() {\n    return !0;\n  }\n\n  _getSet(e) {\n    return null === this._wset ? this._getFilteredSet(\"\", null, null, null, e).then(e => (this._wset = e, this._wset)) : I(this._wset);\n  }\n\n  _isInFeatureSet() {\n    return u.InFeatureSet;\n  }\n\n  nextUniqueName(e) {\n    for (; 1 === e[\"T\" + this._uniqueIds.toString()];) this._uniqueIds++;\n\n    const t = \"T\" + this._uniqueIds.toString();\n\n    return e[t] = 1, t;\n  }\n\n  convertToEsriFieldType(e) {\n    return e;\n  }\n\n  _initialiseFeatureSet() {\n    const e = {};\n    let t = !1,\n        n = 1;\n    const r = this._parent ? this._parent.getFieldsIndex() : new j([]);\n\n    for (this.objectIdField = \"ROW__ID\", this.globalIdField = \"\"; !1 === t;) {\n      let e = !1;\n\n      for (let t = 0; t < this._config.groupbyfields.length; t++) if (this._config.groupbyfields[t].name.toLowerCase() === this.objectIdField.toLowerCase()) {\n        e = !0;\n        break;\n      }\n\n      if (!1 === e) for (let t = 0; t < this._config.statsfields.length; t++) if (this._config.statsfields[t].name.toLowerCase() === this.objectIdField.toLowerCase()) {\n        e = !0;\n        break;\n      }\n      !1 === e ? t = !0 : (this.objectIdField = \"ROW__ID\" + n.toString(), n++);\n    }\n\n    for (const i of this._config.statsfields) {\n      const e = new b();\n      e.field = i.name, e.tofieldname = i.name, e.workingexpr = i.expression instanceof k ? i.expression : k.create(i.expression, r), e.typeofstat = C(i.statistic), this._decodedStatsfield.push(e);\n    }\n\n    this._decodedGroupbyfield = [];\n\n    for (const i of this._config.groupbyfields) {\n      const e = {\n        name: i.name,\n        singlefield: null,\n        tofieldname: i.name,\n        expression: i.expression instanceof k ? i.expression : k.create(i.expression, r)\n      };\n\n      this._decodedGroupbyfield.push(e);\n    }\n\n    if (null !== this._parent) {\n      this.geometryType = this._parent.geometryType, this.spatialReference = this._parent.spatialReference, this.hasM = this._parent.hasM, this.hasZ = this._parent.hasZ, this.typeIdField = \"\";\n\n      for (const t of this._parent.fields) e[t.name.toUpperCase()] = 1;\n\n      this.types = null;\n    } else this.geometryType = f.point, this.typeIdField = \"\", this.types = null, this.spatialReference = new D({\n      wkid: 4326\n    });\n\n    this.fields = [];\n    const a = new b();\n    a.field = this.nextUniqueName(e), a.tofieldname = this.objectIdField, a.workingexpr = k.create(this._parent.objectIdField, this._parent.getFieldsIndex()), a.typeofstat = \"MIN\", this._decodedStatsfield.push(a);\n\n    for (const s of this._decodedGroupbyfield) {\n      const t = new A();\n\n      if (s.name = this.nextUniqueName(e), t.name = s.tofieldname, t.alias = t.name, c(s.expression)) {\n        const e = this._parent.getField(p(s.expression, h.Standardised));\n\n        if (!e) throw new Error(\"Field is not present for Aggregation\");\n        s.name = e.name, s.singlefield = e.name, this.phsyicalgroupbyfields.push(e.name), t.type = e.type;\n      } else {\n        t.type = this.convertToEsriFieldType(g(s.expression, this._parent.fields));\n        const e = new A();\n        e.name = s.name, e.alias = e.name, this.phsyicalgroupbyfields.push(s.name), this._adaptedFields.push(new i(e, s.expression)), this._candosimplegroupby = !1;\n      }\n\n      this.fields.push(t);\n    }\n\n    if (this._adaptedFields.length > 0) for (const i of this._parent.fields) this._adaptedFields.push(new s(i));\n\n    for (let i = 0; i < this._decodedStatsfield.length; i++) {\n      const t = new A();\n      let s = null;\n      const n = this._decodedStatsfield[i];\n      n.field = this.nextUniqueName(e), n.tofieldname === this.objectIdField && (this._internalObjectIdField = n.field), t.name = n.tofieldname, t.alias = t.name;\n      const r = null !== n.workingexpr && c(n.workingexpr) ? p(n.workingexpr, h.Standardised) : \"\";\n\n      switch (this._decodedStatsfield[i].typeofstat) {\n        case \"SUM\":\n          if (\"\" !== r) {\n            if (s = this._parent.getField(r), !s) throw new Error(\"Field is not present for Aggregation\");\n            t.type = s.type;\n          } else t.type = \"double\";\n\n          break;\n\n        case \"MIN\":\n        case \"MAX\":\n          if (\"\" !== r) {\n            if (s = this._parent.getField(r), !s) throw new Error(\"Field is not present for Aggregation\");\n            t.type = s.type;\n          } else t.type = \"double\";\n\n          break;\n\n        case \"COUNT\":\n          t.type = \"integer\";\n          break;\n\n        case \"STDDEV\":\n        case \"VAR\":\n        case \"AVG\":\n          if (\"\" !== r && (s = this._parent.getField(r), !s)) throw new Error(\"Field is not present for Aggregation\");\n          t.type = \"double\";\n      }\n\n      this.fields.push(t);\n    }\n  }\n\n  _canDoAggregates() {\n    return I(!1);\n  }\n\n  _getFeatures(e, t, i, s) {\n    -1 !== t && this._featureCache[t];\n    const n = this._maxQuery;\n    return !0 === this._checkIfNeedToExpandKnownPage(e, n) ? this._expandPagedSet(e, n, 0, 0, s).then(() => this._getFeatures(e, t, i, s)) : I(\"success\");\n  }\n\n  _getFilteredSet(e, t, i, s, l) {\n    if (\"\" !== e) return I(new o([], [], !0, null));\n    let u = null;\n    const f = {\n      ordered: !1,\n      nowhereclause: !1\n    };\n    return this._ensureLoaded().then(() => {\n      if (null !== i) for (let e = 0; e < this._decodedStatsfield.length; e++) if (!0 === _(i, this._decodedStatsfield[e].tofieldname)) {\n        f.nowhereclause = !0, i = null;\n        break;\n      }\n\n      if (null !== s) {\n        f.ordered = !0;\n\n        for (let e = 0; e < this._decodedStatsfield.length; e++) if (!0 === s.scanForField(this._decodedStatsfield[e].tofieldname)) {\n          s = null, f.ordered = !1;\n          break;\n        }\n\n        if (null !== s) for (const e of this._decodedGroupbyfield) if (null === e.singlefield && !0 === s.scanForField(e.tofieldname)) {\n          s = null, f.ordered = !1;\n          break;\n        }\n      }\n\n      return !1 === this._candosimplegroupby ? I(!1) : this._parent._canDoAggregates(this.phsyicalgroupbyfields, this._decodedStatsfield, \"\", null, null);\n    }).then(e => {\n      if (e) {\n        let e = null;\n        i && (e = this._reformulateWhereClauseWithoutGroupByFields(i));\n        let t = null;\n        return s && (t = this._reformulateOrderClauseWithoutGroupByFields(s)), this._parent._getAggregatePagesDataSourceDefinition(this.phsyicalgroupbyfields, this._decodedStatsfield, \"\", null, e, t, this._internalObjectIdField).then(e => (this._checkCancelled(l), u = !0 === f.nowhereclause ? new o(e._candidates.slice(0).concat(e._known.slice(0)), [], !0 === f.ordered && e._ordered, this._clonePageDefinition(e.pagesDefinition)) : new o(e._candidates.slice(0), e._known.slice(0), !0 === f.ordered && e._ordered, this._clonePageDefinition(e.pagesDefinition)), u));\n      }\n\n      let t = this._parent;\n      if (this._adaptedFields.length > 0 && (t = new n({\n        parentfeatureset: this._parent,\n        adaptedFields: this._adaptedFields,\n        extraFilter: null\n      })), !0 === f.nowhereclause) u = new o([\"GETPAGES\"], [], !1, {\n        aggregatefeaturesetpagedefinition: !0,\n        resultOffset: 0,\n        resultRecordCount: this._maxQuery,\n        internal: {\n          fullyResolved: !1,\n          workingItem: null,\n          type: \"manual\",\n          iterator: null,\n          set: [],\n          subfeatureset: new a({\n            parentfeatureset: t,\n            orderbyclause: new d(this.phsyicalgroupbyfields.join(\",\") + \",\" + this._parent.objectIdField + \" ASC\")\n          })\n        }\n      });else {\n        let e = t;\n\n        if (null !== i) {\n          let t = null;\n          i && (t = this._reformulateWhereClauseWithoutGroupByFields(i)), e = new r({\n            parentfeatureset: e,\n            whereclause: t\n          });\n        }\n\n        u = new o([\"GETPAGES\"], [], !1, {\n          aggregatefeaturesetpagedefinition: !0,\n          resultOffset: 0,\n          resultRecordCount: this._maxQuery,\n          internal: {\n            fullyResolved: !1,\n            workingItem: null,\n            type: \"manual\",\n            iterator: null,\n            set: [],\n            subfeatureset: new a({\n              parentfeatureset: e,\n              orderbyclause: new d(this.phsyicalgroupbyfields.join(\",\") + \",\" + this._parent.objectIdField + \" ASC\")\n            })\n          }\n        });\n      }\n      return u;\n    });\n  }\n\n  _reformulateWhereClauseWithoutStatsFields(e) {\n    for (const t of this._decodedStatsfield) e = m(e, t.tofieldname, p(t.workingexpr, h.Standardised), this._parent.getFieldsIndex());\n\n    return e;\n  }\n\n  _reformulateWhereClauseWithoutGroupByFields(e) {\n    for (const t of this._decodedGroupbyfield) t.tofieldname !== t.name && (e = m(e, t.tofieldname, p(t.expression, h.Standardised), this._parent.getFieldsIndex()));\n\n    return e;\n  }\n\n  _reformulateOrderClauseWithoutGroupByFields(e) {\n    const t = [];\n\n    for (const i of this._decodedGroupbyfield) i.tofieldname !== i.name && t.push({\n      field: i.tofieldname,\n      newfield: i.name\n    });\n\n    return t.length > 0 ? e.replaceFields(t) : e;\n  }\n\n  _clonePageDefinition(e) {\n    return null === e ? null : !0 === e.aggregatefeaturesetpagedefinition ? {\n      aggregatefeaturesetpagedefinition: !0,\n      resultRecordCount: e.resultRecordCount,\n      resultOffset: e.resultOffset,\n      internal: e.internal\n    } : this._parent._clonePageDefinition(e);\n  }\n\n  _refineSetBlock(e, t, i) {\n    try {\n      if (!0 === this._checkIfNeedToExpandCandidatePage(e, this._maxQuery)) return this._expandPagedSet(e, this._maxQuery, 0, 0, i).then(() => this._refineSetBlock(e, t, i));\n\n      this._checkCancelled(i);\n\n      const s = e._candidates.length;\n\n      this._refineKnowns(e, t);\n\n      e._candidates.length;\n      return e._candidates.length, I(e);\n    } catch (s) {\n      return S(s);\n    }\n  }\n\n  _expandPagedSet(e, t, i, s, n) {\n    return this._expandPagedSetFeatureSet(e, t, i, s, n);\n  }\n\n  _getPhysicalPage(t, i, s) {\n    return !0 === t.pagesDefinition.aggregatefeaturesetpagedefinition ? x((e, i) => {\n      this._sequentialGetPhysicalItem(t, t.pagesDefinition.resultRecordCount, s, []).then(t => {\n        e(t);\n      }, i);\n    }) : this._getAgregagtePhysicalPage(t, i, s).then(t => {\n      for (const i of t) {\n        const t = {\n          geometry: i.geometry,\n          attributes: {}\n        };\n\n        for (const e of this._decodedGroupbyfield) t.attributes[e.tofieldname] = i.attributes[e.name];\n\n        for (const e of this._decodedStatsfield) t.attributes[e.tofieldname] = i.attributes[e.field];\n\n        this._featureCache[t.attributes[this.objectIdField]] = new e(t);\n      }\n\n      return t.length;\n    });\n  }\n\n  _sequentialGetPhysicalItem(e, t, i, s) {\n    return x((n, r) => {\n      null === e.pagesDefinition.internal.iterator && (e.pagesDefinition.internal.iterator = e.pagesDefinition.internal.subfeatureset.iterator(i)), !0 === e.pagesDefinition.internal.fullyResolved || 0 === t ? n(s.length) : this._nextAggregateItem(e, t, i, s, r => {\n        null === r ? n(s.length) : (t -= 1, n(this._sequentialGetPhysicalItem(e, t, i, s)));\n      }, r);\n    });\n  }\n\n  _nextAggregateItem(e, i, s, n, r, a) {\n    try {\n      t(e.pagesDefinition.internal.iterator.next()).then(t => {\n        if (null === t) {\n          if (null !== e.pagesDefinition.internal.workingItem) {\n            const t = this._calculateAndAppendAggregateItem(e.pagesDefinition.internal.workingItem);\n\n            n.push(t), e.pagesDefinition.internal.workingItem = null, e.pagesDefinition.internal.set.push(t.attributes[this.objectIdField]), e.pagesDefinition.internal.fullyResolved = !0, r(null);\n          } else e.pagesDefinition.internal.fullyResolved = !0, r(null);\n        } else {\n          const l = this._generateAggregateHash(t);\n\n          if (null === e.pagesDefinition.internal.workingItem) e.pagesDefinition.internal.workingItem = {\n            features: [t],\n            id: l\n          };else {\n            if (l !== e.pagesDefinition.internal.workingItem.id) {\n              const s = this._calculateAndAppendAggregateItem(e.pagesDefinition.internal.workingItem);\n\n              return n.push(s), e.pagesDefinition.internal.workingItem = null, e.pagesDefinition.internal.set.push(s.attributes[this.objectIdField]), i -= 1, e.pagesDefinition.internal.workingItem = {\n                features: [t],\n                id: l\n              }, void r(s);\n            }\n\n            e.pagesDefinition.internal.workingItem.features.push(t);\n          }\n\n          this._nextAggregateItem(e, i, s, n, r, a);\n        }\n      }, a);\n    } catch (l) {\n      a(l);\n    }\n  }\n\n  _calculateFieldStat(e, t, i) {\n    const s = [];\n\n    for (let n = 0; n < e.features.length; n++) if (null !== t.workingexpr) {\n      const i = t.workingexpr.calculateValue(e.features[n]);\n      null !== i && s.push(i);\n    } else s.push(null);\n\n    switch (t.typeofstat) {\n      case \"MIN\":\n        i.attributes[t.tofieldname] = y(\"min\", s, -1);\n        break;\n\n      case \"MAX\":\n        i.attributes[t.tofieldname] = y(\"max\", s, -1);\n        break;\n\n      case \"SUM\":\n        i.attributes[t.tofieldname] = y(\"sum\", s, -1);\n        break;\n\n      case \"COUNT\":\n        i.attributes[t.tofieldname] = s.length;\n        break;\n\n      case \"VAR\":\n        i.attributes[t.tofieldname] = y(\"var\", s, -1);\n        break;\n\n      case \"STDDEV\":\n        i.attributes[t.tofieldname] = y(\"stddev\", s, -1);\n        break;\n\n      case \"AVG\":\n        i.attributes[t.tofieldname] = y(\"avg\", s, -1);\n    }\n\n    return !0;\n  }\n\n  _calculateAndAppendAggregateItem(t) {\n    const i = {\n      attributes: {},\n      geometry: null\n    };\n\n    for (const e of this._decodedGroupbyfield) {\n      const s = e.singlefield ? t.features[0].attributes[e.singlefield] : e.expression.calculateValue(t.features[0]);\n      i.attributes[e.tofieldname] = s;\n    }\n\n    for (const e of this._decodedStatsfield) this._calculateFieldStat(t, e, i);\n\n    const s = [];\n\n    for (let e = 0; e < this._decodedStatsfield.length; e++) s.push(this._calculateFieldStat(t, this._decodedStatsfield[e], i));\n\n    return this._featureCache[i.attributes[this.objectIdField]] = new e({\n      attributes: i.attributes,\n      geometry: i.geometry\n    }), i;\n  }\n\n  _generateAggregateHash(e) {\n    let t = \"\";\n\n    for (const i of this._decodedGroupbyfield) {\n      const s = i.singlefield ? e.attributes[i.singlefield] : i.expression.calculateValue(e);\n      t += null == s ? \":\" : \":\" + s.toString();\n    }\n\n    return w(t, F.String);\n  }\n\n  _stat() {\n    return I({\n      calculated: !1\n    });\n  }\n\n  getFeatureByObjectId() {\n    return I(null);\n  }\n\n  static registerAction() {\n    l._featuresetFunctions.groupby = function (e, t) {\n      return new G({\n        parentfeatureset: this,\n        groupbyfields: e,\n        statsfields: t\n      });\n    };\n  }\n\n}\n\nexport default G;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/arcade/featureset/actions/GroupBy.js"],"names":["e","Q","t","SqlExpressionAdapted","i","OriginalField","s","AdaptedFeatureSet","n","r","a","l","o","d","IdState","u","layerGeometryEsriConstants","f","FeatureServiceDatabaseType","h","isSingleField","c","toWhereClause","p","predictType","g","scanForField","_","reformulateWithoutField","m","calculateStat","y","b","createMD5Hash","w","outputTypes","F","resolve","I","reject","S","create","x","WhereClause","k","D","A","j","C","toLowerCase","G","constructor","_decodedStatsfield","_decodedGroupbyfield","_candosimplegroupby","phsyicalgroupbyfields","objectIdField","_internalObjectIdField","_adaptedFields","declaredClass","_uniqueIds","_maxQuery","_maxProcessing","_parent","parentfeatureset","_config","isTable","_getSet","_wset","_getFilteredSet","then","_isInFeatureSet","InFeatureSet","nextUniqueName","toString","convertToEsriFieldType","_initialiseFeatureSet","getFieldsIndex","globalIdField","groupbyfields","length","name","statsfields","field","tofieldname","workingexpr","expression","typeofstat","statistic","push","singlefield","geometryType","spatialReference","hasM","hasZ","typeIdField","fields","toUpperCase","types","point","wkid","alias","getField","Standardised","Error","type","_canDoAggregates","_getFeatures","_featureCache","_checkIfNeedToExpandKnownPage","_expandPagedSet","ordered","nowhereclause","_ensureLoaded","_reformulateWhereClauseWithoutGroupByFields","_reformulateOrderClauseWithoutGroupByFields","_getAggregatePagesDataSourceDefinition","_checkCancelled","_candidates","slice","concat","_known","_ordered","_clonePageDefinition","pagesDefinition","adaptedFields","extraFilter","aggregatefeaturesetpagedefinition","resultOffset","resultRecordCount","internal","fullyResolved","workingItem","iterator","set","subfeatureset","orderbyclause","join","whereclause","_reformulateWhereClauseWithoutStatsFields","newfield","replaceFields","_refineSetBlock","_checkIfNeedToExpandCandidatePage","_refineKnowns","_expandPagedSetFeatureSet","_getPhysicalPage","_sequentialGetPhysicalItem","_getAgregagtePhysicalPage","geometry","attributes","_nextAggregateItem","next","_calculateAndAppendAggregateItem","_generateAggregateHash","features","id","_calculateFieldStat","calculateValue","String","_stat","calculated","getFeatureByObjectId","registerAction","_featuresetFunctions","groupby"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../../Graphic.js\";import{Q as t}from\"../../../chunks/languageUtils.js\";import{SqlExpressionAdapted as i,OriginalField as s,AdaptedFeatureSet as n}from\"./Adapted.js\";import r from\"./AttributeFilter.js\";import a from\"./OrderBy.js\";import l from\"../support/FeatureSet.js\";import o from\"../support/IdSet.js\";import d from\"../support/OrderbyClause.js\";import{IdState as u,layerGeometryEsriConstants as f,FeatureServiceDatabaseType as h}from\"../support/shared.js\";import{isSingleField as c,toWhereClause as p,predictType as g,scanForField as _,reformulateWithoutField as m}from\"../support/sqlUtils.js\";import{calculateStat as y}from\"../support/stats.js\";import b from\"../support/StatsField.js\";import{createMD5Hash as w,outputTypes as F}from\"../../../core/MD5.js\";import{resolve as I,reject as S,create as x}from\"../../../core/promiseUtils.js\";import{WhereClause as k}from\"../../../core/sql/WhereClause.js\";import D from\"../../../geometry/SpatialReference.js\";import A from\"../../../layers/support/Field.js\";import j from\"../../../layers/support/FieldsIndex.js\";function C(e){if(!e)return\"COUNT\";switch(e.toLowerCase()){case\"max\":return\"MAX\";case\"var\":case\"variance\":return\"VAR\";case\"avg\":case\"average\":case\"mean\":return\"AVG\";case\"min\":return\"MIN\";case\"sum\":return\"SUM\";case\"stdev\":case\"stddev\":return\"STDDEV\";case\"count\":return\"COUNT\"}return\"COUNT\"}class G extends l{constructor(e){super(e),this._decodedStatsfield=[],this._decodedGroupbyfield=[],this._candosimplegroupby=!0,this.phsyicalgroupbyfields=[],this.objectIdField=\"ROW__ID\",this._internalObjectIdField=\"ROW__ID\",this._adaptedFields=[],this.declaredClass=\"esri.arcade.featureset.actions.Aggregate\",this._uniqueIds=1,this._maxQuery=10,this._maxProcessing=10,this._parent=e.parentfeatureset,this._config=e}isTable(){return!0}_getSet(e){return null===this._wset?this._getFilteredSet(\"\",null,null,null,e).then((e=>(this._wset=e,this._wset))):I(this._wset)}_isInFeatureSet(){return u.InFeatureSet}nextUniqueName(e){for(;1===e[\"T\"+this._uniqueIds.toString()];)this._uniqueIds++;const t=\"T\"+this._uniqueIds.toString();return e[t]=1,t}convertToEsriFieldType(e){return e}_initialiseFeatureSet(){const e={};let t=!1,n=1;const r=this._parent?this._parent.getFieldsIndex():new j([]);for(this.objectIdField=\"ROW__ID\",this.globalIdField=\"\";!1===t;){let e=!1;for(let t=0;t<this._config.groupbyfields.length;t++)if(this._config.groupbyfields[t].name.toLowerCase()===this.objectIdField.toLowerCase()){e=!0;break}if(!1===e)for(let t=0;t<this._config.statsfields.length;t++)if(this._config.statsfields[t].name.toLowerCase()===this.objectIdField.toLowerCase()){e=!0;break}!1===e?t=!0:(this.objectIdField=\"ROW__ID\"+n.toString(),n++)}for(const i of this._config.statsfields){const e=new b;e.field=i.name,e.tofieldname=i.name,e.workingexpr=i.expression instanceof k?i.expression:k.create(i.expression,r),e.typeofstat=C(i.statistic),this._decodedStatsfield.push(e)}this._decodedGroupbyfield=[];for(const i of this._config.groupbyfields){const e={name:i.name,singlefield:null,tofieldname:i.name,expression:i.expression instanceof k?i.expression:k.create(i.expression,r)};this._decodedGroupbyfield.push(e)}if(null!==this._parent){this.geometryType=this._parent.geometryType,this.spatialReference=this._parent.spatialReference,this.hasM=this._parent.hasM,this.hasZ=this._parent.hasZ,this.typeIdField=\"\";for(const t of this._parent.fields)e[t.name.toUpperCase()]=1;this.types=null}else this.geometryType=f.point,this.typeIdField=\"\",this.types=null,this.spatialReference=new D({wkid:4326});this.fields=[];const a=new b;a.field=this.nextUniqueName(e),a.tofieldname=this.objectIdField,a.workingexpr=k.create(this._parent.objectIdField,this._parent.getFieldsIndex()),a.typeofstat=\"MIN\",this._decodedStatsfield.push(a);for(const s of this._decodedGroupbyfield){const t=new A;if(s.name=this.nextUniqueName(e),t.name=s.tofieldname,t.alias=t.name,c(s.expression)){const e=this._parent.getField(p(s.expression,h.Standardised));if(!e)throw new Error(\"Field is not present for Aggregation\");s.name=e.name,s.singlefield=e.name,this.phsyicalgroupbyfields.push(e.name),t.type=e.type}else{t.type=this.convertToEsriFieldType(g(s.expression,this._parent.fields));const e=new A;e.name=s.name,e.alias=e.name,this.phsyicalgroupbyfields.push(s.name),this._adaptedFields.push(new i(e,s.expression)),this._candosimplegroupby=!1}this.fields.push(t)}if(this._adaptedFields.length>0)for(const i of this._parent.fields)this._adaptedFields.push(new s(i));for(let i=0;i<this._decodedStatsfield.length;i++){const t=new A;let s=null;const n=this._decodedStatsfield[i];n.field=this.nextUniqueName(e),n.tofieldname===this.objectIdField&&(this._internalObjectIdField=n.field),t.name=n.tofieldname,t.alias=t.name;const r=null!==n.workingexpr&&c(n.workingexpr)?p(n.workingexpr,h.Standardised):\"\";switch(this._decodedStatsfield[i].typeofstat){case\"SUM\":if(\"\"!==r){if(s=this._parent.getField(r),!s)throw new Error(\"Field is not present for Aggregation\");t.type=s.type}else t.type=\"double\";break;case\"MIN\":case\"MAX\":if(\"\"!==r){if(s=this._parent.getField(r),!s)throw new Error(\"Field is not present for Aggregation\");t.type=s.type}else t.type=\"double\";break;case\"COUNT\":t.type=\"integer\";break;case\"STDDEV\":case\"VAR\":case\"AVG\":if(\"\"!==r&&(s=this._parent.getField(r),!s))throw new Error(\"Field is not present for Aggregation\");t.type=\"double\"}this.fields.push(t)}}_canDoAggregates(){return I(!1)}_getFeatures(e,t,i,s){-1!==t&&this._featureCache[t];const n=this._maxQuery;return!0===this._checkIfNeedToExpandKnownPage(e,n)?this._expandPagedSet(e,n,0,0,s).then((()=>this._getFeatures(e,t,i,s))):I(\"success\")}_getFilteredSet(e,t,i,s,l){if(\"\"!==e)return I(new o([],[],!0,null));let u=null;const f={ordered:!1,nowhereclause:!1};return this._ensureLoaded().then((()=>{if(null!==i)for(let e=0;e<this._decodedStatsfield.length;e++)if(!0===_(i,this._decodedStatsfield[e].tofieldname)){f.nowhereclause=!0,i=null;break}if(null!==s){f.ordered=!0;for(let e=0;e<this._decodedStatsfield.length;e++)if(!0===s.scanForField(this._decodedStatsfield[e].tofieldname)){s=null,f.ordered=!1;break}if(null!==s)for(const e of this._decodedGroupbyfield)if(null===e.singlefield&&!0===s.scanForField(e.tofieldname)){s=null,f.ordered=!1;break}}return!1===this._candosimplegroupby?I(!1):this._parent._canDoAggregates(this.phsyicalgroupbyfields,this._decodedStatsfield,\"\",null,null)})).then((e=>{if(e){let e=null;i&&(e=this._reformulateWhereClauseWithoutGroupByFields(i));let t=null;return s&&(t=this._reformulateOrderClauseWithoutGroupByFields(s)),this._parent._getAggregatePagesDataSourceDefinition(this.phsyicalgroupbyfields,this._decodedStatsfield,\"\",null,e,t,this._internalObjectIdField).then((e=>(this._checkCancelled(l),u=!0===f.nowhereclause?new o(e._candidates.slice(0).concat(e._known.slice(0)),[],!0===f.ordered&&e._ordered,this._clonePageDefinition(e.pagesDefinition)):new o(e._candidates.slice(0),e._known.slice(0),!0===f.ordered&&e._ordered,this._clonePageDefinition(e.pagesDefinition)),u)))}let t=this._parent;if(this._adaptedFields.length>0&&(t=new n({parentfeatureset:this._parent,adaptedFields:this._adaptedFields,extraFilter:null})),!0===f.nowhereclause)u=new o([\"GETPAGES\"],[],!1,{aggregatefeaturesetpagedefinition:!0,resultOffset:0,resultRecordCount:this._maxQuery,internal:{fullyResolved:!1,workingItem:null,type:\"manual\",iterator:null,set:[],subfeatureset:new a({parentfeatureset:t,orderbyclause:new d(this.phsyicalgroupbyfields.join(\",\")+\",\"+this._parent.objectIdField+\" ASC\")})}});else{let e=t;if(null!==i){let t=null;i&&(t=this._reformulateWhereClauseWithoutGroupByFields(i)),e=new r({parentfeatureset:e,whereclause:t})}u=new o([\"GETPAGES\"],[],!1,{aggregatefeaturesetpagedefinition:!0,resultOffset:0,resultRecordCount:this._maxQuery,internal:{fullyResolved:!1,workingItem:null,type:\"manual\",iterator:null,set:[],subfeatureset:new a({parentfeatureset:e,orderbyclause:new d(this.phsyicalgroupbyfields.join(\",\")+\",\"+this._parent.objectIdField+\" ASC\")})}})}return u}))}_reformulateWhereClauseWithoutStatsFields(e){for(const t of this._decodedStatsfield)e=m(e,t.tofieldname,p(t.workingexpr,h.Standardised),this._parent.getFieldsIndex());return e}_reformulateWhereClauseWithoutGroupByFields(e){for(const t of this._decodedGroupbyfield)t.tofieldname!==t.name&&(e=m(e,t.tofieldname,p(t.expression,h.Standardised),this._parent.getFieldsIndex()));return e}_reformulateOrderClauseWithoutGroupByFields(e){const t=[];for(const i of this._decodedGroupbyfield)i.tofieldname!==i.name&&t.push({field:i.tofieldname,newfield:i.name});return t.length>0?e.replaceFields(t):e}_clonePageDefinition(e){return null===e?null:!0===e.aggregatefeaturesetpagedefinition?{aggregatefeaturesetpagedefinition:!0,resultRecordCount:e.resultRecordCount,resultOffset:e.resultOffset,internal:e.internal}:this._parent._clonePageDefinition(e)}_refineSetBlock(e,t,i){try{if(!0===this._checkIfNeedToExpandCandidatePage(e,this._maxQuery))return this._expandPagedSet(e,this._maxQuery,0,0,i).then((()=>this._refineSetBlock(e,t,i)));this._checkCancelled(i);const s=e._candidates.length;this._refineKnowns(e,t);e._candidates.length;return e._candidates.length,I(e)}catch(s){return S(s)}}_expandPagedSet(e,t,i,s,n){return this._expandPagedSetFeatureSet(e,t,i,s,n)}_getPhysicalPage(t,i,s){return!0===t.pagesDefinition.aggregatefeaturesetpagedefinition?x(((e,i)=>{this._sequentialGetPhysicalItem(t,t.pagesDefinition.resultRecordCount,s,[]).then((t=>{e(t)}),i)})):this._getAgregagtePhysicalPage(t,i,s).then((t=>{for(const i of t){const t={geometry:i.geometry,attributes:{}};for(const e of this._decodedGroupbyfield)t.attributes[e.tofieldname]=i.attributes[e.name];for(const e of this._decodedStatsfield)t.attributes[e.tofieldname]=i.attributes[e.field];this._featureCache[t.attributes[this.objectIdField]]=new e(t)}return t.length}))}_sequentialGetPhysicalItem(e,t,i,s){return x(((n,r)=>{null===e.pagesDefinition.internal.iterator&&(e.pagesDefinition.internal.iterator=e.pagesDefinition.internal.subfeatureset.iterator(i)),!0===e.pagesDefinition.internal.fullyResolved||0===t?n(s.length):this._nextAggregateItem(e,t,i,s,(r=>{null===r?n(s.length):(t-=1,n(this._sequentialGetPhysicalItem(e,t,i,s)))}),r)}))}_nextAggregateItem(e,i,s,n,r,a){try{t(e.pagesDefinition.internal.iterator.next()).then((t=>{if(null===t)if(null!==e.pagesDefinition.internal.workingItem){const t=this._calculateAndAppendAggregateItem(e.pagesDefinition.internal.workingItem);n.push(t),e.pagesDefinition.internal.workingItem=null,e.pagesDefinition.internal.set.push(t.attributes[this.objectIdField]),e.pagesDefinition.internal.fullyResolved=!0,r(null)}else e.pagesDefinition.internal.fullyResolved=!0,r(null);else{const l=this._generateAggregateHash(t);if(null===e.pagesDefinition.internal.workingItem)e.pagesDefinition.internal.workingItem={features:[t],id:l};else{if(l!==e.pagesDefinition.internal.workingItem.id){const s=this._calculateAndAppendAggregateItem(e.pagesDefinition.internal.workingItem);return n.push(s),e.pagesDefinition.internal.workingItem=null,e.pagesDefinition.internal.set.push(s.attributes[this.objectIdField]),i-=1,e.pagesDefinition.internal.workingItem={features:[t],id:l},void r(s)}e.pagesDefinition.internal.workingItem.features.push(t)}this._nextAggregateItem(e,i,s,n,r,a)}}),a)}catch(l){a(l)}}_calculateFieldStat(e,t,i){const s=[];for(let n=0;n<e.features.length;n++)if(null!==t.workingexpr){const i=t.workingexpr.calculateValue(e.features[n]);null!==i&&s.push(i)}else s.push(null);switch(t.typeofstat){case\"MIN\":i.attributes[t.tofieldname]=y(\"min\",s,-1);break;case\"MAX\":i.attributes[t.tofieldname]=y(\"max\",s,-1);break;case\"SUM\":i.attributes[t.tofieldname]=y(\"sum\",s,-1);break;case\"COUNT\":i.attributes[t.tofieldname]=s.length;break;case\"VAR\":i.attributes[t.tofieldname]=y(\"var\",s,-1);break;case\"STDDEV\":i.attributes[t.tofieldname]=y(\"stddev\",s,-1);break;case\"AVG\":i.attributes[t.tofieldname]=y(\"avg\",s,-1)}return!0}_calculateAndAppendAggregateItem(t){const i={attributes:{},geometry:null};for(const e of this._decodedGroupbyfield){const s=e.singlefield?t.features[0].attributes[e.singlefield]:e.expression.calculateValue(t.features[0]);i.attributes[e.tofieldname]=s}for(const e of this._decodedStatsfield)this._calculateFieldStat(t,e,i);const s=[];for(let e=0;e<this._decodedStatsfield.length;e++)s.push(this._calculateFieldStat(t,this._decodedStatsfield[e],i));return this._featureCache[i.attributes[this.objectIdField]]=new e({attributes:i.attributes,geometry:i.geometry}),i}_generateAggregateHash(e){let t=\"\";for(const i of this._decodedGroupbyfield){const s=i.singlefield?e.attributes[i.singlefield]:i.expression.calculateValue(e);t+=null==s?\":\":\":\"+s.toString()}return w(t,F.String)}_stat(){return I({calculated:!1})}getFeatureByObjectId(){return I(null)}static registerAction(){l._featuresetFunctions.groupby=function(e,t){return new G({parentfeatureset:this,groupbyfields:e,statsfields:t})}}}export default G;\n"]},"metadata":{},"sourceType":"module"}