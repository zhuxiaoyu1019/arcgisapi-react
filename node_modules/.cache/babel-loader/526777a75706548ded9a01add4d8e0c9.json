{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isNone as t } from \"../../../core/maybe.js\";\nimport { getExpressionFromFieldName as e, getWhereClause as s, getAliasFromFieldName as i } from \"./attributeSupport.js\";\nimport { getNormalizedValue as a } from \"../../../smartMapping/statistics/support/utils.js\";\n\nclass r {\n  constructor(t, a, r) {\n    this._fieldDataCache = new Map(), this._returnDistinctMap = new Map(), this.returnDistinctValues = t.returnDistinctValues, this.fieldsIndex = r, this.featureAdapter = a;\n    const l = t.outFields;\n\n    if (l && -1 === l.indexOf(\"*\")) {\n      this.outFields = l;\n      let t = 0;\n\n      for (const a of l) {\n        const l = e(a),\n              u = this.fieldsIndex.get(l),\n              n = u ? null : s(l, r),\n              c = u ? u.name : i(a) || \"FIELD_EXP_\" + t++;\n\n        this._fieldDataCache.set(a, {\n          alias: c,\n          clause: n\n        });\n      }\n    }\n  }\n\n  countDistinctValues(t) {\n    return this.returnDistinctValues ? (t.forEach(t => this.getAttributes(t)), this._returnDistinctMap.size) : t.length;\n  }\n\n  getAttributes(t) {\n    const e = this._processAttributesForOutFields(t);\n\n    return this._processAttributesForDistinctValues(e);\n  }\n\n  getFieldValue(t, e, i) {\n    const a = i ? i.name : e;\n    let r = null;\n    return this._fieldDataCache.has(a) ? r = this._fieldDataCache.get(a).clause : i || (r = s(e, this.fieldsIndex), this._fieldDataCache.set(a, {\n      alias: a,\n      clause: r\n    })), i ? this.featureAdapter.getAttribute(t, a) : r.calculateValue(t, this.featureAdapter);\n  }\n\n  getNormalizedValue(t, e) {\n    const s = e.normalizationType,\n          i = e.normalizationTotal;\n    let r = this.getFieldValue(t, e.field, e.fieldInfo);\n\n    if (s && Number.isFinite(r)) {\n      const l = this.getFieldValue(t, e.normalizationField, e.normalizationFieldInfo);\n      r = a(r, s, l, i);\n    }\n\n    return r;\n  }\n\n  getExpressionValue(t, e, s) {\n    const i = {\n      attributes: this.featureAdapter.getAttributes(t)\n    },\n          a = s.createExecContext(i, e.viewInfo);\n    return s.executeFunction(e.compiledFunc, a);\n  }\n\n  validateItem(t, e) {\n    return this._fieldDataCache.has(e) || this._fieldDataCache.set(e, {\n      alias: e,\n      clause: s(e, this.fieldsIndex)\n    }), this._fieldDataCache.get(e).clause.testFeature(t, this.featureAdapter);\n  }\n\n  validateItems(t, e) {\n    return this._fieldDataCache.has(e) || this._fieldDataCache.set(e, {\n      alias: e,\n      clause: s(e, this.fieldsIndex)\n    }), this._fieldDataCache.get(e).clause.testSet(t, this.featureAdapter);\n  }\n\n  _processAttributesForOutFields(t) {\n    const e = this.outFields;\n    if (!e || !e.length) return this.featureAdapter.getAttributes(t);\n    const s = {};\n\n    for (const i of e) {\n      const {\n        alias: e,\n        clause: a\n      } = this._fieldDataCache.get(i);\n\n      s[e] = a ? a.calculateValue(t, this.featureAdapter) : this.featureAdapter.getAttribute(t, e);\n    }\n\n    return s;\n  }\n\n  _processAttributesForDistinctValues(e) {\n    if (t(e) || !this.returnDistinctValues) return e;\n    const s = this.outFields,\n          i = [];\n    if (s) for (const t of s) {\n      const {\n        alias: s\n      } = this._fieldDataCache.get(t);\n\n      i.push(e[s]);\n    } else for (const t in e) i.push(e[t]);\n    const a = `${(s || [\"*\"]).join(\",\")}=${i.join(\",\")}`;\n    let r = this._returnDistinctMap.get(a) || 0;\n    return this._returnDistinctMap.set(a, ++r), r > 1 ? null : e;\n  }\n\n}\n\nexport default r;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/layers/graphics/data/AttributesBuilder.js"],"names":["isNone","t","getExpressionFromFieldName","e","getWhereClause","s","getAliasFromFieldName","i","getNormalizedValue","a","r","constructor","_fieldDataCache","Map","_returnDistinctMap","returnDistinctValues","fieldsIndex","featureAdapter","l","outFields","indexOf","u","get","n","c","name","set","alias","clause","countDistinctValues","forEach","getAttributes","size","length","_processAttributesForOutFields","_processAttributesForDistinctValues","getFieldValue","has","getAttribute","calculateValue","normalizationType","normalizationTotal","field","fieldInfo","Number","isFinite","normalizationField","normalizationFieldInfo","getExpressionValue","attributes","createExecContext","viewInfo","executeFunction","compiledFunc","validateItem","testFeature","validateItems","testSet","push","join"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isNone as t}from\"../../../core/maybe.js\";import{getExpressionFromFieldName as e,getWhereClause as s,getAliasFromFieldName as i}from\"./attributeSupport.js\";import{getNormalizedValue as a}from\"../../../smartMapping/statistics/support/utils.js\";class r{constructor(t,a,r){this._fieldDataCache=new Map,this._returnDistinctMap=new Map,this.returnDistinctValues=t.returnDistinctValues,this.fieldsIndex=r,this.featureAdapter=a;const l=t.outFields;if(l&&-1===l.indexOf(\"*\")){this.outFields=l;let t=0;for(const a of l){const l=e(a),u=this.fieldsIndex.get(l),n=u?null:s(l,r),c=u?u.name:i(a)||\"FIELD_EXP_\"+t++;this._fieldDataCache.set(a,{alias:c,clause:n})}}}countDistinctValues(t){return this.returnDistinctValues?(t.forEach((t=>this.getAttributes(t))),this._returnDistinctMap.size):t.length}getAttributes(t){const e=this._processAttributesForOutFields(t);return this._processAttributesForDistinctValues(e)}getFieldValue(t,e,i){const a=i?i.name:e;let r=null;return this._fieldDataCache.has(a)?r=this._fieldDataCache.get(a).clause:i||(r=s(e,this.fieldsIndex),this._fieldDataCache.set(a,{alias:a,clause:r})),i?this.featureAdapter.getAttribute(t,a):r.calculateValue(t,this.featureAdapter)}getNormalizedValue(t,e){const s=e.normalizationType,i=e.normalizationTotal;let r=this.getFieldValue(t,e.field,e.fieldInfo);if(s&&Number.isFinite(r)){const l=this.getFieldValue(t,e.normalizationField,e.normalizationFieldInfo);r=a(r,s,l,i)}return r}getExpressionValue(t,e,s){const i={attributes:this.featureAdapter.getAttributes(t)},a=s.createExecContext(i,e.viewInfo);return s.executeFunction(e.compiledFunc,a)}validateItem(t,e){return this._fieldDataCache.has(e)||this._fieldDataCache.set(e,{alias:e,clause:s(e,this.fieldsIndex)}),this._fieldDataCache.get(e).clause.testFeature(t,this.featureAdapter)}validateItems(t,e){return this._fieldDataCache.has(e)||this._fieldDataCache.set(e,{alias:e,clause:s(e,this.fieldsIndex)}),this._fieldDataCache.get(e).clause.testSet(t,this.featureAdapter)}_processAttributesForOutFields(t){const e=this.outFields;if(!e||!e.length)return this.featureAdapter.getAttributes(t);const s={};for(const i of e){const{alias:e,clause:a}=this._fieldDataCache.get(i);s[e]=a?a.calculateValue(t,this.featureAdapter):this.featureAdapter.getAttribute(t,e)}return s}_processAttributesForDistinctValues(e){if(t(e)||!this.returnDistinctValues)return e;const s=this.outFields,i=[];if(s)for(const t of s){const{alias:s}=this._fieldDataCache.get(t);i.push(e[s])}else for(const t in e)i.push(e[t]);const a=`${(s||[\"*\"]).join(\",\")}=${i.join(\",\")}`;let r=this._returnDistinctMap.get(a)||0;return this._returnDistinctMap.set(a,++r),r>1?null:e}}export default r;\n"]},"metadata":{},"sourceType":"module"}