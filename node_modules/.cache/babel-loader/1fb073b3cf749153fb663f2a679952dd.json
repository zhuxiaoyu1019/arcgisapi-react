{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nconst n = /^\\s*\"([\\S\\s]*)\"\\s*$/,\n      t = /\"\"/g,\n      e = \"\\n\",\n      o = [\",\", \" \", \";\", \"|\", \"\\t\"];\n\nfunction r(n, t) {\n  const e = {},\n        o = n.length;\n\n  for (let r = 0; r < o; r++) e[n[r]] = t[r];\n\n  return e;\n}\n\nfunction* i(n, t, e) {\n  let o = 0;\n\n  for (; o <= n.length;) {\n    const r = n.indexOf(t, o),\n          i = n.substring(o, r > -1 ? r : void 0);\n    o += i.length + t.length, e && !i.trim() || (yield i);\n  }\n}\n\nfunction c(n) {\n  const t = n.includes(\"\\r\\n\") ? \"\\r\\n\" : e;\n  return i(n, t, !0);\n}\n\nfunction f(n, t) {\n  return i(n, t, !1);\n}\n\nfunction s(n) {\n  const t = n.trim();\n  let e = 0,\n      r = \"\";\n\n  for (const i of o) {\n    const n = t.split(i).length;\n    n > e && (e = n, r = i);\n  }\n\n  return \"\" === r ? null : r;\n}\n\nfunction* l(o, i, c) {\n  let s = \"\",\n      l = \"\",\n      d = 0,\n      g = [];\n\n  n: for (;;) {\n    const {\n      value: h,\n      done: x\n    } = o.next();\n    if (x) return;\n    const p = f(h, c);\n\n    t: for (;;) {\n      const {\n        value: e,\n        done: o\n      } = p.next();\n      if (o) break t;\n\n      if (s += l + e, l = \"\", d += u(e), d % 2 == 0) {\n        if (d > 0) {\n          const e = n.exec(s);\n\n          if (!e) {\n            g = [], s = \"\", d = 0;\n            continue n;\n          }\n\n          g.push(e[1].replace(t, '\"'));\n        } else g.push(s);\n\n        s = \"\", d = 0;\n      } else l = c;\n    }\n\n    0 === d ? (yield r(i, g), g = []) : l = e;\n  }\n}\n\nfunction u(n) {\n  let t = 0,\n      e = 0;\n\n  for (e = n.indexOf('\"', e); e >= 0;) t++, e = n.indexOf('\"', e + 1);\n\n  return t;\n}\n\nexport { s as inferDelimiter, l as parseRows, f as readRowParts, c as readRows };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/layers/graphics/sources/csv/csv.js"],"names":["n","t","e","o","r","length","i","indexOf","substring","trim","c","includes","f","s","split","l","d","g","value","h","done","x","next","p","u","exec","push","replace","inferDelimiter","parseRows","readRowParts","readRows"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nconst n=/^\\s*\"([\\S\\s]*)\"\\s*$/,t=/\"\"/g,e=\"\\n\",o=[\",\",\" \",\";\",\"|\",\"\\t\"];function r(n,t){const e={},o=n.length;for(let r=0;r<o;r++)e[n[r]]=t[r];return e}function*i(n,t,e){let o=0;for(;o<=n.length;){const r=n.indexOf(t,o),i=n.substring(o,r>-1?r:void 0);o+=i.length+t.length,e&&!i.trim()||(yield i)}}function c(n){const t=n.includes(\"\\r\\n\")?\"\\r\\n\":e;return i(n,t,!0)}function f(n,t){return i(n,t,!1)}function s(n){const t=n.trim();let e=0,r=\"\";for(const i of o){const n=t.split(i).length;n>e&&(e=n,r=i)}return\"\"===r?null:r}function*l(o,i,c){let s=\"\",l=\"\",d=0,g=[];n:for(;;){const{value:h,done:x}=o.next();if(x)return;const p=f(h,c);t:for(;;){const{value:e,done:o}=p.next();if(o)break t;if(s+=l+e,l=\"\",d+=u(e),d%2==0){if(d>0){const e=n.exec(s);if(!e){g=[],s=\"\",d=0;continue n}g.push(e[1].replace(t,'\"'))}else g.push(s);s=\"\",d=0}else l=c}0===d?(yield r(i,g),g=[]):l=e}}function u(n){let t=0,e=0;for(e=n.indexOf('\"',e);e>=0;)t++,e=n.indexOf('\"',e+1);return t}export{s as inferDelimiter,l as parseRows,f as readRowParts,c as readRows};\n"]},"metadata":{},"sourceType":"module"}