{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../../shaderModules/interfaces.js\";\n\nfunction n(n, r) {\n  1 === r.viewingMode ? n.vertex.code.add(e`vec3 getLocalUp(in vec3 pos, in vec3 origin) {\nreturn normalize(pos + origin);\n}`) : n.vertex.code.add(e`vec3 getLocalUp(in vec3 pos, in vec3 origin) {\nreturn vec3(0.0, 0.0, 1.0);\n}`), 1 === r.viewingMode ? n.vertex.code.add(e`mat3 getTBNMatrix(in vec3 n) {\nvec3 t = normalize(cross(vec3(0.0, 0.0, 1.0), n));\nvec3 b = normalize(cross(n, t));\nreturn mat3(t, b, n);\n}`) : n.vertex.code.add(e`mat3 getTBNMatrix(in vec3 n) {\nvec3 t = vec3(1.0, 0.0, 0.0);\nvec3 b = normalize(cross(n, t));\nreturn mat3(t, b, n);\n}`);\n}\n\nexport { n as NormalUtils };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js"],"names":["glsl","e","n","r","viewingMode","vertex","code","add","NormalUtils"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,mCAArB;;AAAyD,SAASC,CAAT,CAAWA,CAAX,EAAaC,CAAb,EAAe;AAAC,QAAIA,CAAC,CAACC,WAAN,GAAkBF,CAAC,CAACG,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AAC/G;AACA,EAF2F,CAAlB,GAErEC,CAAC,CAACG,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AACxB;AACA,EAFI,CAFqE,EAIrE,MAAIE,CAAC,CAACC,WAAN,GAAkBF,CAAC,CAACG,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AAC1C;AACA;AACA;AACA,EAJsB,CAAlB,GAIAC,CAAC,CAACG,MAAF,CAASC,IAAT,CAAcC,GAAd,CAAkBN,CAAE;AACxB;AACA;AACA;AACA,EAJI,CARqE;AAYrE;;AAAA,SAAOC,CAAC,IAAIM,WAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function n(n,r){1===r.viewingMode?n.vertex.code.add(e`vec3 getLocalUp(in vec3 pos, in vec3 origin) {\nreturn normalize(pos + origin);\n}`):n.vertex.code.add(e`vec3 getLocalUp(in vec3 pos, in vec3 origin) {\nreturn vec3(0.0, 0.0, 1.0);\n}`),1===r.viewingMode?n.vertex.code.add(e`mat3 getTBNMatrix(in vec3 n) {\nvec3 t = normalize(cross(vec3(0.0, 0.0, 1.0), n));\nvec3 b = normalize(cross(n, t));\nreturn mat3(t, b, n);\n}`):n.vertex.code.add(e`mat3 getTBNMatrix(in vec3 n) {\nvec3 t = vec3(1.0, 0.0, 0.0);\nvec3 b = normalize(cross(n, t));\nreturn mat3(t, b, n);\n}`)}export{n as NormalUtils};\n"]},"metadata":{},"sourceType":"module"}