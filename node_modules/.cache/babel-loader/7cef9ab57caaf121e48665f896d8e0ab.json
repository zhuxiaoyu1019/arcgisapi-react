{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../lib/GLMaterialTexture.js\";\nimport { Material as t, materialParametersDefaults as i } from \"../lib/Material.js\";\nimport { OITPolygonOffsetLimit as s } from \"../lib/OrderIndependentTransparency.js\";\nimport { DefaultBufferWriter as a, PositionUVLayout as r } from \"./internal/DefaultBufferWriter.js\";\nimport { intersectTriangleGeometry as n } from \"./internal/MaterialUtil.js\";\nimport { ImageMaterialTechniqueConfiguration as u, ImageMaterialTechnique as h } from \"../shaders/ImageMaterialTechnique.js\";\n\nclass c extends t {\n  constructor(e) {\n    super(e, p), this.supportsEdges = !0, this.techniqueConfig = new u();\n  }\n\n  getTechniqueConfig(e, t) {\n    return this.techniqueConfig.output = e, this.techniqueConfig.cullFace = this.params.cullFace, this.techniqueConfig.slicePlaneEnabled = this.params.slicePlaneEnabled, this.techniqueConfig.transparent = this.params.transparent, this.techniqueConfig.writeDepth = this.params.writeDepth, this.techniqueConfig.sceneHasOcludees = this.params.sceneHasOcludees, this.techniqueConfig.transparencyPassType = t ? t.transparencyPassType : 3, this.techniqueConfig.enableOffset = !t || t.camera.relativeElevation < s, this.techniqueConfig.multipassTerrainEnabled = !!t && t.multipassTerrainEnabled, this.techniqueConfig.cullAboveGround = !!t && t.cullAboveGround, this.techniqueConfig;\n  }\n\n  intersect(e, t, i, s, a, r, u) {\n    n(e, t, s, a, r, void 0, u);\n  }\n\n  getGLMaterial(e) {\n    return 0 === e.output || 7 === e.output || 4 === e.output ? new l(e) : void 0;\n  }\n\n  createBufferWriter() {\n    return new a(r);\n  }\n\n}\n\nclass l extends e {\n  constructor(e) {\n    super({ ...e,\n      ...e.material.params\n    }), this.updateParameters();\n  }\n\n  updateParameters(e) {\n    const t = this._material.params;\n    this.updateTexture(t.textureId), this._technique = this._techniqueRep.releaseAndAcquire(h, this._material.getTechniqueConfig(this._output, e), this._technique);\n  }\n\n  beginSlot(e) {\n    if (4 === this._output) return 3 === e;\n    return e === (this._technique.configuration.transparent ? this._technique.configuration.writeDepth ? 5 : 8 : 3);\n  }\n\n  _updateOccludeeState(e) {\n    e.hasOccludees !== this._material.params.sceneHasOcludees && (this._material.setParameterValues({\n      sceneHasOcludees: e.hasOccludees\n    }), this.updateParameters(e));\n  }\n\n  ensureParameters(e) {\n    0 !== this._output && 7 !== this._output || this._updateOccludeeState(e), this.updateParameters(e);\n  }\n\n  bind(e) {\n    this.bindTextures(this._technique.program), this.bindTextureScale(this._technique.program), this._technique.bindPass(this._material.params, e);\n  }\n\n  getPipelineState(e, t) {\n    return this._technique.getPipelineState(t);\n  }\n\n}\n\nconst p = {\n  transparent: !1,\n  writeDepth: !0,\n  slicePlaneEnabled: !1,\n  cullFace: 0,\n  sceneHasOcludees: !1,\n  opacity: 1,\n  textureId: null,\n  initTextureTransparent: !0,\n  ...i\n};\nexport { c as ImageMaterial };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/materials/ImageMaterial.js"],"names":["e","Material","t","materialParametersDefaults","i","OITPolygonOffsetLimit","s","DefaultBufferWriter","a","PositionUVLayout","r","intersectTriangleGeometry","n","ImageMaterialTechniqueConfiguration","u","ImageMaterialTechnique","h","c","constructor","p","supportsEdges","techniqueConfig","getTechniqueConfig","output","cullFace","params","slicePlaneEnabled","transparent","writeDepth","sceneHasOcludees","transparencyPassType","enableOffset","camera","relativeElevation","multipassTerrainEnabled","cullAboveGround","intersect","getGLMaterial","l","createBufferWriter","material","updateParameters","_material","updateTexture","textureId","_technique","_techniqueRep","releaseAndAcquire","_output","beginSlot","configuration","_updateOccludeeState","hasOccludees","setParameterValues","ensureParameters","bind","bindTextures","program","bindTextureScale","bindPass","getPipelineState","opacity","initTextureTransparent","ImageMaterial"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../lib/GLMaterialTexture.js\";import{Material as t,materialParametersDefaults as i}from\"../lib/Material.js\";import{OITPolygonOffsetLimit as s}from\"../lib/OrderIndependentTransparency.js\";import{DefaultBufferWriter as a,PositionUVLayout as r}from\"./internal/DefaultBufferWriter.js\";import{intersectTriangleGeometry as n}from\"./internal/MaterialUtil.js\";import{ImageMaterialTechniqueConfiguration as u,ImageMaterialTechnique as h}from\"../shaders/ImageMaterialTechnique.js\";class c extends t{constructor(e){super(e,p),this.supportsEdges=!0,this.techniqueConfig=new u}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.params.cullFace,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.enableOffset=!t||t.camera.relativeElevation<s,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig}intersect(e,t,i,s,a,r,u){n(e,t,s,a,r,void 0,u)}getGLMaterial(e){return 0===e.output||7===e.output||4===e.output?new l(e):void 0}createBufferWriter(){return new a(r)}}class l extends e{constructor(e){super({...e,...e.material.params}),this.updateParameters()}updateParameters(e){const t=this._material.params;this.updateTexture(t.textureId),this._technique=this._techniqueRep.releaseAndAcquire(h,this._material.getTechniqueConfig(this._output,e),this._technique)}beginSlot(e){if(4===this._output)return 3===e;return e===(this._technique.configuration.transparent?this._technique.configuration.writeDepth?5:8:3)}_updateOccludeeState(e){e.hasOccludees!==this._material.params.sceneHasOcludees&&(this._material.setParameterValues({sceneHasOcludees:e.hasOccludees}),this.updateParameters(e))}ensureParameters(e){0!==this._output&&7!==this._output||this._updateOccludeeState(e),this.updateParameters(e)}bind(e){this.bindTextures(this._technique.program),this.bindTextureScale(this._technique.program),this._technique.bindPass(this._material.params,e)}getPipelineState(e,t){return this._technique.getPipelineState(t)}}const p={transparent:!1,writeDepth:!0,slicePlaneEnabled:!1,cullFace:0,sceneHasOcludees:!1,opacity:1,textureId:null,initTextureTransparent:!0,...i};export{c as ImageMaterial};\n"]},"metadata":{},"sourceType":"module"}