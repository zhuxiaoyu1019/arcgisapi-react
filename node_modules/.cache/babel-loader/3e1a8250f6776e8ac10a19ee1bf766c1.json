{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { JSONMap as e } from \"../../../core/jsonMap.js\";\nimport { isNone as t } from \"../../../core/maybe.js\";\nimport { getUnitString as r } from \"../../../core/unitUtils.js\";\nimport { getGeometryExtent as i } from \"../../../geometry/support/extentUtils.js\";\nimport { fromJSON as o } from \"../../../geometry/support/jsonUtils.js\";\nimport { normalizeCentralMeridian as n } from \"../../../geometry/support/normalizeUtils.js\";\nimport { isGeographic as s, isWebMercator as a, WGS84 as l } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { getCentroidOptimizedGeometry as m } from \"../centroid.js\";\nimport { quantizeOptimizedGeometry as c, convertToPoint as u, generalizeOptimizedGeometry as f, removeZMValues as p, convertToPolyline as y, convertToPolygon as g, convertToMultipoint as S } from \"../featureConversionUtils.js\";\nimport R from \"../OptimizedGeometry.js\";\nimport { checkProjectionSupport as d, project as h } from \"./projectionSupport.js\";\nconst w = new e({\n  esriSRUnit_Meter: \"meters\",\n  esriSRUnit_Kilometer: \"kilometers\",\n  esriSRUnit_Foot: \"feet\",\n  esriSRUnit_StatuteMile: \"miles\",\n  esriSRUnit_NauticalMile: \"nautical-miles\",\n  esriSRUnit_USNauticalMile: \"us-nautical-miles\"\n}),\n      j = Object.freeze({}),\n      U = new R(),\n      M = new R(),\n      F = new R(),\n      G = {\n  esriGeometryPoint: u,\n  esriGeometryPolyline: y,\n  esriGeometryPolygon: g,\n  esriGeometryMultipoint: S\n};\n\nfunction N(e, t, r, i = e.hasZ, o = e.hasM) {\n  const n = e.hasZ && i,\n        s = e.hasM && o;\n\n  if (r) {\n    const a = c(F, t, e.hasZ, e.hasM, \"esriGeometryPoint\", r, i, o);\n    return u(a, n, s);\n  }\n\n  return u(t, n, s);\n}\n\nfunction O(e, t, r) {\n  return \"esriGeometryPolygon\" === e.geometryType && t && (t.centroid || t.geometry) ? (t.centroid || (t.centroid = m(new R(), t.geometry, e.hasZ, e.hasM)), N(e, t.centroid, r)) : null;\n}\n\nfunction _(e, t, r, i, o, n, s = t, a = r) {\n  const l = t && s,\n        m = r && a,\n        u = i ? \"coords\" in i ? i : i.geometry : null;\n  if (!u) return null;\n\n  if (o) {\n    let i = f(M, u, t, r, e, o, s, a);\n    return n && (i = c(F, i, l, m, e, n)), G[e](i, l, m);\n  }\n\n  if (n) {\n    const i = c(F, u, t, r, e, n, s, a);\n    return G[e](i, l, m);\n  }\n\n  return p(U, u, t, r, s, a), G[e](U, l, m);\n}\n\nasync function J(e, t, r) {\n  const {\n    outFields: i,\n    orderByFields: o,\n    groupByFieldsForStatistics: n,\n    outStatistics: s\n  } = e;\n  if (i) for (let a = 0; a < i.length; a++) i[a] = i[a].trim();\n  if (o) for (let a = 0; a < o.length; a++) o[a] = o[a].trim();\n  if (n) for (let a = 0; a < n.length; a++) n[a] = n[a].trim();\n  if (s) for (let a = 0; a < s.length; a++) s[a].onStatisticField && (s[a].onStatisticField = s[a].onStatisticField.trim());\n  return e.geometry && !e.outSR && (e.outSR = e.geometry.spatialReference), v(e, t, r);\n}\n\nasync function P(e, t, r) {\n  return v(e, t, r);\n}\n\nasync function v(e, r, s) {\n  if (!e) return null;\n  let {\n    where: a\n  } = e;\n  if (e.where = a = a && a.trim(), (!a || /^1 *= *1$/.test(a) || r && r === a) && (e.where = null), !e.geometry) return e;\n  let l = await Z(e);\n\n  if (e.distance = 0, e.units = null, \"esriSpatialRelEnvelopeIntersects\" === e.spatialRel) {\n    const {\n      spatialReference: t\n    } = e.geometry;\n    l = i(l), l.spatialReference = t;\n  }\n\n  e.geometry = l, await d(l.spatialReference, s);\n  const m = (await n(o(l)))[0];\n  if (t(m)) throw j;\n  const c = m.toJSON(),\n        u = await h(c, c.spatialReference, s);\n  if (!u) throw j;\n  return u.spatialReference = s, e.geometry = u, e;\n}\n\nasync function Z(e) {\n  const {\n    geometry: t,\n    distance: i,\n    units: o\n  } = e;\n  if (null == i || \"vertexAttributes\" in t) return t;\n  const n = t.spatialReference,\n        m = o ? w.fromJSON(o) : r(n),\n        c = n && (s(n) || a(n)) ? t : await d(n, l).then(() => h(t, l));\n  return (await b())(c.spatialReference, c, i, m);\n}\n\nasync function b() {\n  return (await import(\"../../../geometry/geometryEngineJSON.js\")).geodesicBuffer;\n}\n\nfunction x(e) {\n  return e && z in e ? JSON.parse(JSON.stringify(e, B)) : e;\n}\n\nconst z = \"_geVersion\",\n      B = (e, t) => e !== z ? t : void 0;\n\nexport { j as QUERY_ENGINE_EMPTY_RESULT, x as cleanFromGeometryEngine, O as getCentroid, _ as getGeometry, P as normalizeFilter, J as normalizeQuery, v as normalizeQueryLike, N as transformCentroid };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/layers/graphics/data/utils.js"],"names":["JSONMap","e","isNone","t","getUnitString","r","getGeometryExtent","i","fromJSON","o","normalizeCentralMeridian","n","isGeographic","s","isWebMercator","a","WGS84","l","getCentroidOptimizedGeometry","m","quantizeOptimizedGeometry","c","convertToPoint","u","generalizeOptimizedGeometry","f","removeZMValues","p","convertToPolyline","y","convertToPolygon","g","convertToMultipoint","S","R","checkProjectionSupport","d","project","h","w","esriSRUnit_Meter","esriSRUnit_Kilometer","esriSRUnit_Foot","esriSRUnit_StatuteMile","esriSRUnit_NauticalMile","esriSRUnit_USNauticalMile","j","Object","freeze","U","M","F","G","esriGeometryPoint","esriGeometryPolyline","esriGeometryPolygon","esriGeometryMultipoint","N","hasZ","hasM","O","geometryType","centroid","geometry","_","J","outFields","orderByFields","groupByFieldsForStatistics","outStatistics","length","trim","onStatisticField","outSR","spatialReference","v","P","where","test","Z","distance","units","spatialRel","toJSON","then","b","geodesicBuffer","x","z","JSON","parse","stringify","B","QUERY_ENGINE_EMPTY_RESULT","cleanFromGeometryEngine","getCentroid","getGeometry","normalizeFilter","normalizeQuery","normalizeQueryLike","transformCentroid"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{JSONMap as e}from\"../../../core/jsonMap.js\";import{isNone as t}from\"../../../core/maybe.js\";import{getUnitString as r}from\"../../../core/unitUtils.js\";import{getGeometryExtent as i}from\"../../../geometry/support/extentUtils.js\";import{fromJSON as o}from\"../../../geometry/support/jsonUtils.js\";import{normalizeCentralMeridian as n}from\"../../../geometry/support/normalizeUtils.js\";import{isGeographic as s,isWebMercator as a,WGS84 as l}from\"../../../geometry/support/spatialReferenceUtils.js\";import{getCentroidOptimizedGeometry as m}from\"../centroid.js\";import{quantizeOptimizedGeometry as c,convertToPoint as u,generalizeOptimizedGeometry as f,removeZMValues as p,convertToPolyline as y,convertToPolygon as g,convertToMultipoint as S}from\"../featureConversionUtils.js\";import R from\"../OptimizedGeometry.js\";import{checkProjectionSupport as d,project as h}from\"./projectionSupport.js\";const w=new e({esriSRUnit_Meter:\"meters\",esriSRUnit_Kilometer:\"kilometers\",esriSRUnit_Foot:\"feet\",esriSRUnit_StatuteMile:\"miles\",esriSRUnit_NauticalMile:\"nautical-miles\",esriSRUnit_USNauticalMile:\"us-nautical-miles\"}),j=Object.freeze({}),U=new R,M=new R,F=new R,G={esriGeometryPoint:u,esriGeometryPolyline:y,esriGeometryPolygon:g,esriGeometryMultipoint:S};function N(e,t,r,i=e.hasZ,o=e.hasM){const n=e.hasZ&&i,s=e.hasM&&o;if(r){const a=c(F,t,e.hasZ,e.hasM,\"esriGeometryPoint\",r,i,o);return u(a,n,s)}return u(t,n,s)}function O(e,t,r){return\"esriGeometryPolygon\"===e.geometryType&&t&&(t.centroid||t.geometry)?(t.centroid||(t.centroid=m(new R,t.geometry,e.hasZ,e.hasM)),N(e,t.centroid,r)):null}function _(e,t,r,i,o,n,s=t,a=r){const l=t&&s,m=r&&a,u=i?\"coords\"in i?i:i.geometry:null;if(!u)return null;if(o){let i=f(M,u,t,r,e,o,s,a);return n&&(i=c(F,i,l,m,e,n)),G[e](i,l,m)}if(n){const i=c(F,u,t,r,e,n,s,a);return G[e](i,l,m)}return p(U,u,t,r,s,a),G[e](U,l,m)}async function J(e,t,r){const{outFields:i,orderByFields:o,groupByFieldsForStatistics:n,outStatistics:s}=e;if(i)for(let a=0;a<i.length;a++)i[a]=i[a].trim();if(o)for(let a=0;a<o.length;a++)o[a]=o[a].trim();if(n)for(let a=0;a<n.length;a++)n[a]=n[a].trim();if(s)for(let a=0;a<s.length;a++)s[a].onStatisticField&&(s[a].onStatisticField=s[a].onStatisticField.trim());return e.geometry&&!e.outSR&&(e.outSR=e.geometry.spatialReference),v(e,t,r)}async function P(e,t,r){return v(e,t,r)}async function v(e,r,s){if(!e)return null;let{where:a}=e;if(e.where=a=a&&a.trim(),(!a||/^1 *= *1$/.test(a)||r&&r===a)&&(e.where=null),!e.geometry)return e;let l=await Z(e);if(e.distance=0,e.units=null,\"esriSpatialRelEnvelopeIntersects\"===e.spatialRel){const{spatialReference:t}=e.geometry;l=i(l),l.spatialReference=t}e.geometry=l,await d(l.spatialReference,s);const m=(await n(o(l)))[0];if(t(m))throw j;const c=m.toJSON(),u=await h(c,c.spatialReference,s);if(!u)throw j;return u.spatialReference=s,e.geometry=u,e}async function Z(e){const{geometry:t,distance:i,units:o}=e;if(null==i||\"vertexAttributes\"in t)return t;const n=t.spatialReference,m=o?w.fromJSON(o):r(n),c=n&&(s(n)||a(n))?t:await d(n,l).then((()=>h(t,l)));return(await b())(c.spatialReference,c,i,m)}async function b(){return(await import(\"../../../geometry/geometryEngineJSON.js\")).geodesicBuffer}function x(e){return e&&z in e?JSON.parse(JSON.stringify(e,B)):e}const z=\"_geVersion\",B=(e,t)=>e!==z?t:void 0;export{j as QUERY_ENGINE_EMPTY_RESULT,x as cleanFromGeometryEngine,O as getCentroid,_ as getGeometry,P as normalizeFilter,J as normalizeQuery,v as normalizeQueryLike,N as transformCentroid};\n"]},"metadata":{},"sourceType":"module"}