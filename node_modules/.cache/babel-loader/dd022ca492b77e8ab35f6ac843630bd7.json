{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { Slice as e } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as r } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { ReadLinearDepth as a } from \"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";\nimport { multipassTerrainTest as o } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { defaultMaskAlphaCutoff as i } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";\nimport { ColorConversion as d } from \"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";\nimport { glsl as t } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as l } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\n\nfunction s(s) {\n  const n = new l();\n  return n.include(r, {\n    linearDepth: !1\n  }), n.vertex.uniforms.add(\"proj\", \"mat4\").add(\"view\", \"mat4\"), n.attributes.add(\"position\", \"vec3\"), n.attributes.add(\"uv0\", \"vec2\"), n.varyings.add(\"vpos\", \"vec3\"), s.multipassTerrainEnabled && n.varyings.add(\"depth\", \"float\"), n.vertex.uniforms.add(\"textureCoordinateScaleFactor\", \"vec2\"), n.vertex.code.add(t`\n    void main(void) {\n      vpos = position;\n      ${s.multipassTerrainEnabled ? \"depth = (view * vec4(vpos, 1.0)).z;\" : \"\"}\n      vTexCoord = uv0 * textureCoordinateScaleFactor;\n      gl_Position = transformPosition(proj, view, vpos);\n    }\n  `), n.include(e, s), s.multipassTerrainEnabled && (n.fragment.include(a), n.include(o, s)), n.fragment.uniforms.add(\"tex\", \"sampler2D\"), n.fragment.uniforms.add(\"opacity\", \"float\"), n.varyings.add(\"vTexCoord\", \"vec2\"), 7 === s.output ? n.fragment.code.add(t`\n    void main() {\n      discardBySlice(vpos);\n      ${s.multipassTerrainEnabled ? \"terrainDepthTest(gl_FragCoord, depth);\" : \"\"}\n\n      float alpha = texture2D(tex, vTexCoord).a * opacity;\n      if (alpha  < ${t.float(i)}) {\n        discard;\n      }\n\n      gl_FragColor = vec4(alpha);\n    }\n    `) : (n.fragment.include(d), n.fragment.code.add(t`\n    void main() {\n      discardBySlice(vpos);\n      ${s.multipassTerrainEnabled ? \"terrainDepthTest(gl_FragCoord, depth);\" : \"\"}\n      gl_FragColor = texture2D(tex, vTexCoord) * opacity;\n\n      if (gl_FragColor.a < ${t.float(i)}) {\n        discard;\n      }\n\n      gl_FragColor = highlightSlice(gl_FragColor, vpos);\n      ${s.OITEnabled ? \"gl_FragColor = premultiplyAlpha(gl_FragColor);\" : \"\"}\n    }\n    `)), n;\n}\n\nvar n = Object.freeze({\n  __proto__: null,\n  build: s\n});\nexport { n as I, s as b };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/chunks/ImageMaterial.glsl.js"],"names":["Slice","e","Transform","r","ReadLinearDepth","a","multipassTerrainTest","o","defaultMaskAlphaCutoff","i","ColorConversion","d","glsl","t","ShaderBuilder","l","s","n","include","linearDepth","vertex","uniforms","add","attributes","varyings","multipassTerrainEnabled","code","fragment","output","float","OITEnabled","Object","freeze","__proto__","build","I","b"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{Slice as e}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as r}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{ReadLinearDepth as a}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{multipassTerrainTest as o}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{defaultMaskAlphaCutoff as i}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{ColorConversion as d}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{glsl as t}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as l}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";function s(s){const n=new l;return n.include(r,{linearDepth:!1}),n.vertex.uniforms.add(\"proj\",\"mat4\").add(\"view\",\"mat4\"),n.attributes.add(\"position\",\"vec3\"),n.attributes.add(\"uv0\",\"vec2\"),n.varyings.add(\"vpos\",\"vec3\"),s.multipassTerrainEnabled&&n.varyings.add(\"depth\",\"float\"),n.vertex.uniforms.add(\"textureCoordinateScaleFactor\",\"vec2\"),n.vertex.code.add(t`\n    void main(void) {\n      vpos = position;\n      ${s.multipassTerrainEnabled?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n      vTexCoord = uv0 * textureCoordinateScaleFactor;\n      gl_Position = transformPosition(proj, view, vpos);\n    }\n  `),n.include(e,s),s.multipassTerrainEnabled&&(n.fragment.include(a),n.include(o,s)),n.fragment.uniforms.add(\"tex\",\"sampler2D\"),n.fragment.uniforms.add(\"opacity\",\"float\"),n.varyings.add(\"vTexCoord\",\"vec2\"),7===s.output?n.fragment.code.add(t`\n    void main() {\n      discardBySlice(vpos);\n      ${s.multipassTerrainEnabled?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n\n      float alpha = texture2D(tex, vTexCoord).a * opacity;\n      if (alpha  < ${t.float(i)}) {\n        discard;\n      }\n\n      gl_FragColor = vec4(alpha);\n    }\n    `):(n.fragment.include(d),n.fragment.code.add(t`\n    void main() {\n      discardBySlice(vpos);\n      ${s.multipassTerrainEnabled?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n      gl_FragColor = texture2D(tex, vTexCoord) * opacity;\n\n      if (gl_FragColor.a < ${t.float(i)}) {\n        discard;\n      }\n\n      gl_FragColor = highlightSlice(gl_FragColor, vpos);\n      ${s.OITEnabled?\"gl_FragColor = premultiplyAlpha(gl_FragColor);\":\"\"}\n    }\n    `)),n}var n=Object.freeze({__proto__:null,build:s});export{n as I,s as b};\n"]},"metadata":{},"sourceType":"module"}