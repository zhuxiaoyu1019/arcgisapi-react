{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../request.js\";\nimport r from \"../../../core/Error.js\";\nimport { JSONSupport as o } from \"../../../core/JSONSupport.js\";\nimport n from \"../../../core/Logger.js\";\nimport { isSome as i, unwrap as s } from \"../../../core/maybe.js\";\nimport { EsriPromiseMixin as a } from \"../../../core/Promise.js\";\nimport { createAbortController as l, onAbort as c } from \"../../../core/promiseUtils.js\";\nimport { property as f } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as u } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { sanitizeUrl as m } from \"../arcgisLayerUrl.js\";\nimport { url as h } from \"../commonProperties.js\";\nimport d from \"../RasterStorageInfo.js\";\nimport p from \"../TileInfo.js\";\nimport { getRasterId as g, getBlock as x, putBlock as y, deleteBlock as I, decreaseRefCount as w } from \"./RawBlockCache.js\";\nimport { decode as k } from \"../rasterFormats/RasterCodec.js\";\nimport { mosaic as v, approximateTransform as R } from \"../rasterFunctions/pixelUtils.js\";\nimport { load as b, projectPoint as C, snapPyramid as M, snapExtent as T, getWorldWrapCount as P, projectResolution as B, projectExtent as S, getProjectionOffsetGrid as j, getRasterDatasetAlignmentInfo as F } from \"../rasterFunctions/rasterProjectionHelper.js\";\nimport L from \"../../../geometry/Point.js\";\nimport D from \"../../../geometry/Extent.js\";\nlet H = class extends a(o) {\n  constructor() {\n    super(...arguments), this.rasterJobHandler = null, this.datasetName = null, this.datasetFormat = null, this.rasterInfo = null, this.ioConfig = {\n      sampling: \"closest\"\n    };\n  }\n\n  async init() {\n    const e = b();\n    this.addResolvingPromise(e), await this.when();\n  }\n\n  normalizeCtorArgs(e) {\n    return e && e.ioConfig && (e = { ...e,\n      ioConfig: {\n        resolution: null,\n        bandIds: null,\n        sampling: \"closest\",\n        tileInfo: p.create(),\n        ...e.ioConfig\n      }\n    }), e;\n  }\n\n  set url(e) {\n    this._set(\"url\", m(e, n.getLogger(this.declaredClass)));\n  }\n\n  async open(e) {\n    throw new r(\"BaseRaster:open-not-implemented\", \"open() is not implemented\");\n  }\n\n  async fetchTile(e, t, r, o = {}) {\n    var n;\n    const {\n      tileInfo: s\n    } = o,\n          a = s.lodAt(e),\n          l = this.getTileExtent({\n      x: a.resolution,\n      y: a.resolution\n    }, t, r, s.origin, s.spatialReference, s.size);\n    return null != (n = o.multidimensionalDefinition) && n.length && i(this.rasterInfo.multidimensionalInfo) && null == o.sliceId && (o = { ...o,\n      sliceId: this.getSliceIndex(o.multidimensionalDefinition) || 0\n    }), this.fetchPixels(l, s.size[0], s.size[1], o);\n  }\n\n  async identify(e, t = {}) {\n    const {\n      spatialReference: r,\n      extent: o\n    } = this.rasterInfo,\n          {\n      datumTransformation: n\n    } = t;\n    let s = C(e, r, n);\n    if (!o.intersects(s)) return {\n      location: s,\n      value: null\n    };\n\n    if (i(this.rasterInfo.transform)) {\n      const e = this.rasterInfo.transform.inverseTransform(s);\n      if (!this.rasterInfo.nativeExtent.intersects(e)) return {\n        location: e,\n        value: null\n      };\n      s = e;\n    }\n\n    let a = 0;\n\n    if (t.srcResolution) {\n      a = M(t.srcResolution, this.rasterInfo, this.ioConfig.sampling).pyramidLevel;\n    } else if (a = await this.computeBestPyramidLevelForLocation(e, t), null == a) return {\n      location: s,\n      value: null\n    };\n\n    const l = this.identifyPixelLocation(s, a, null);\n    if (null === l) return {\n      location: s,\n      value: null\n    };\n    const {\n      row: c,\n      col: f,\n      rowOffset: u,\n      colOffset: m\n    } = l,\n          h = g(this.url, t.sliceId),\n          d = `${a}/${c}/${f}`;\n    let p = x(h, null, d);\n    i(p) || (p = this.fetchRawTile(a, c, f, t), y(h, null, d, p));\n    const I = await p;\n    if (!(I && I.pixels && I.pixels.length > 0)) return {\n      location: s,\n      value: null\n    };\n    const w = u * this.rasterInfo.storageInfo.blockHeight + m;\n    return {\n      location: s,\n      value: !I.mask || I.mask[w] ? I.pixels.map(e => e[w]) : null,\n      pyramidLevel: a\n    };\n  }\n\n  async fetchPixels(e, t, r, o = {}) {\n    e = T(e);\n    const n = P(e),\n          i = this.rasterInfo.spatialReference,\n          a = !e.spatialReference.equals(i),\n          {\n      datumTransformation: l\n    } = o,\n          c = new L({\n      x: (e.xmax - e.xmin) / t,\n      y: (e.ymax - e.ymin) / r,\n      spatialReference: e.spatialReference\n    }),\n          f = o.srcResolution || (a ? B(c, i, e, l) : c);\n    if (!f) return null;\n    const {\n      pyramidLevel: u,\n      pyramidResolution: m,\n      excessiveReading: h\n    } = M(f, this.rasterInfo, this.ioConfig.sampling);\n    if (h) return null;\n    const d = this.rasterInfo.storageInfo;\n    let p = a ? S(e, i, l) : e;\n    const g = s(this.rasterInfo.transform);\n    if (g && (p = g.inverseTransform(p)), null == p) return null;\n    const x = {\n      x: Math.floor((p.xmin - d.origin.x) / m.x + .1),\n      y: Math.floor((d.origin.y - p.ymax) / m.y + .1)\n    },\n          y = Math.ceil((p.xmax - p.xmin) / m.x - .1),\n          I = Math.ceil((p.ymax - p.ymin) / m.y - .1);\n    if (y / t > 8 || I / r > 8 || n >= 2) return null;\n    const w = await this.fetchRawPixels(u, x, {\n      width: y,\n      height: I,\n      wrapCount: n\n    }, o);\n    if (!w) return null;\n    const k = u > 0 ? d.pyramidBlockWidth : d.blockWidth,\n          b = u > 0 ? d.pyramidBlockHeight : d.blockHeight;\n    if (!a && 1 === w.pixelBlocks.length && k === t && b === r && f.x === c.x && f.y === c.y) return {\n      extent: e,\n      srcExtent: p,\n      pixelBlock: w.pixelBlocks[0]\n    };\n    const C = j(e, w.extent, c, l, g, n > 0);\n    let F;\n\n    const D = !o.requestRawData,\n          H = {\n      rows: C.spacing[0],\n      cols: C.spacing[1]\n    },\n          _ = s(this._getRasterTileAlignmentInfo(u, w.extent.xmin)),\n          {\n      pixelBlocks: A,\n      mosaicSize: W,\n      isPartiallyFilled: z\n    } = w;\n\n    if (this.rasterJobHandler) F = await this.rasterJobHandler.mosaicAndTransform({\n      srcPixelBlocks: A,\n      srcMosaicSize: W,\n      destDimension: D ? {\n        width: t,\n        height: r\n      } : null,\n      coefs: D ? C.coefficients : null,\n      sampleSpacing: D ? H : null,\n      interpolation: o.interpolation,\n      alignmentInfo: _\n    }, o);else {\n      const e = v(A, W, null, null, _);\n      F = D ? R(e, {\n        width: t,\n        height: r\n      }, C.coefficients, H, o.interpolation) : e;\n    }\n    return o.requestRawData ? {\n      srcExtent: p,\n      pixelBlock: F,\n      transformGrid: C,\n      extent: e,\n      isPartiallyFilled: z\n    } : {\n      srcExtent: p,\n      extent: e,\n      pixelBlock: F\n    };\n  }\n\n  async fetchRawPixels(e, t, r, o) {\n    const {\n      origin: n,\n      blockBoundary: i\n    } = this.rasterInfo.storageInfo,\n          {\n      blockWidth: a,\n      blockHeight: l\n    } = this.getBlockWidthHeight(e);\n    let {\n      x: c,\n      y: f\n    } = t,\n        {\n      width: u,\n      height: m,\n      wrapCount: h\n    } = r;\n    const d = s(this._getRasterTileAlignmentInfo(e, 0));\n    o.buffer && (c -= o.buffer.cols, f -= o.buffer.rows, u += 2 * o.buffer.cols, m += 2 * o.buffer.rows);\n    const p = Math.floor(c / a),\n          g = Math.floor(f / l),\n          x = Math.floor((c + u - 1) / a),\n          y = Math.floor((f + m - 1) / l),\n          I = i[e];\n    if (!I) return null;\n    const {\n      minRow: w,\n      minCol: k,\n      maxCol: v,\n      maxRow: R\n    } = I;\n    if (y < w || x < k || g > R || p > v) return null;\n    const b = [];\n    let C,\n        M = !1;\n\n    for (let s = g; s <= y; s++) for (let t = p; t <= x; t++) {\n      const r = 0 === h || null == d || t < d.worldColumnCountFromOrigin ? t : t % d.worldColumnCountFromOrigin - d.originColumnOffset;\n      s >= w && r >= k && R >= s && v >= r ? (C = this._fetchRawTile(e, s, r, o), this.ioConfig.allowPartialFill && (C = new Promise(e => {\n        C.then(t => e(t)).catch(() => {\n          M = !0, e(null);\n        });\n      })), b.push(C)) : b.push(null);\n    }\n\n    if (0 === b.length) return null;\n    const T = await Promise.all(b),\n          P = {\n      height: (y - g + 1) * l,\n      width: (x - p + 1) * a\n    },\n          {\n      spatialReference: B\n    } = this.rasterInfo,\n          S = this.getPyramidPixelSize(e),\n          {\n      x: j,\n      y: F\n    } = S;\n    return {\n      extent: new D({\n        xmin: n.x + p * a * j,\n        xmax: n.x + (x + 1) * a * j,\n        ymin: n.y - (y + 1) * l * F,\n        ymax: n.y - g * l * F,\n        spatialReference: B\n      }),\n      pixelBlocks: T,\n      mosaicSize: P,\n      isPartiallyFilled: M\n    };\n  }\n\n  async fetchRawTile(e, t, o, n) {\n    throw new r(\"BaseRaster:read-not-implemented\", \"fetchRawTile() is not implemented\");\n  }\n\n  computeExtent(e) {\n    return S(this.rasterInfo.extent, e);\n  }\n\n  decodePixelBlock(e, t) {\n    return !this.rasterJobHandler || t.useCanvas ? k(e, t) : this.rasterJobHandler.decode({\n      data: e,\n      options: t\n    });\n  }\n\n  async request(e, r, o) {\n    var n, i;\n    const {\n      customFetchParameters: s\n    } = this.ioConfig,\n          {\n      range: a,\n      query: l,\n      headers: c\n    } = r;\n    o = null != (n = null != (i = o) ? i : r.retryCount) ? n : this.ioConfig.retryCount;\n    const f = a ? {\n      Range: `bytes=${a.from}-${a.to}`\n    } : null;\n\n    try {\n      return await t(e, { ...r,\n        query: { ...l,\n          ...s\n        },\n        headers: { ...c,\n          ...f\n        }\n      });\n    } catch (u) {\n      if (o > 0) return o--, this.request(e, r, o);\n      throw u;\n    }\n  }\n\n  getSliceIndex(e) {\n    const {\n      multidimensionalInfo: t\n    } = this.rasterInfo;\n    if (!i(t) || null == e || !e.length) return null;\n    let r = 0;\n    const o = e[0].variableName;\n\n    for (let n = 0; n < t.variables.length; n++) {\n      const i = t.variables[n],\n            s = i.dimensions;\n\n      if (i.name !== o) {\n        r += s.map(e => this._getDimensionValuesCount(e)).reduce((e, t) => e + t);\n        break;\n      }\n\n      const a = s.map(e => this._getDimensionValuesCount(e)),\n            l = s.length;\n\n      for (let t = 0; t < l; t++) {\n        const o = e.filter(e => e.dimensionName === s[t].name)[0];\n        if (null == o) return null;\n\n        const n = Array.isArray(o.values[0]) ? o.values[0][0] : o.values[0],\n              i = this._getIndexFromDimensions(n, s[t]);\n\n        if (-1 === i) return null;\n        a.shift(), r += t === l - 1 ? i : i * a.reduce((e, t) => e + t);\n      }\n    }\n\n    return r;\n  }\n\n  updateTileInfo() {\n    const {\n      storageInfo: e,\n      spatialReference: t,\n      extent: r,\n      pixelSize: o\n    } = this.rasterInfo;\n\n    if (!e.tileInfo) {\n      const n = [],\n            i = e.maximumPyramidLevel || 0;\n      let s = Math.max(o.x, o.y),\n          a = 1 / .0254 * 96 * s;\n\n      for (let e = 0; e <= i; e++) n.push({\n        level: i - e,\n        resolution: s,\n        scale: a\n      }), s *= 2, a *= 2;\n\n      const l = new L({\n        x: r.xmin,\n        y: r.ymax,\n        spatialReference: t\n      });\n      e.tileInfo = new p({\n        origin: l,\n        size: [e.blockWidth, e.blockHeight],\n        spatialReference: t,\n        lods: n\n      }), e.isVirtualTileInfo = !0;\n    }\n  }\n\n  createRemoteDatasetStorageInfo(e, t = 512, r = 512, o) {\n    const {\n      width: n,\n      height: i,\n      nativeExtent: s,\n      pixelSize: a,\n      spatialReference: l\n    } = e,\n          c = new L({\n      x: s.xmin,\n      y: s.ymax,\n      spatialReference: l\n    });\n    null == o && (o = Math.max(0, Math.round(Math.log(Math.max(n, i)) / Math.LN2 - 8)));\n    const f = this.computeBlockBoundary(s, 512, 512, {\n      x: s.xmin,\n      y: s.ymax\n    }, [a], o);\n    e.storageInfo = new d({\n      blockWidth: t,\n      blockHeight: r,\n      pyramidBlockWidth: t,\n      pyramidBlockHeight: r,\n      origin: c,\n      firstPyramidLevel: 1,\n      maximumPyramidLevel: o,\n      blockBoundary: f\n    });\n  }\n\n  async computeBestPyramidLevelForLocation(e, t = {}) {\n    return 0;\n  }\n\n  computeBlockBoundary(e, t, r, o, n, i = 0, s = 2) {\n    if (1 === n.length && i > 0) {\n      n = [...n];\n      let {\n        x: e,\n        y: t\n      } = n[0];\n\n      for (let r = 0; r < i; r++) e *= s, t *= s, n.push({\n        x: e,\n        y: t\n      });\n    }\n\n    const a = [],\n          {\n      x: l,\n      y: c\n    } = o;\n\n    for (let f = 0; f < n.length; f++) {\n      const {\n        x: o,\n        y: i\n      } = n[f];\n      a.push({\n        minCol: Math.floor((e.xmin - l + .1 * o) / t / o),\n        maxCol: Math.floor((e.xmax - l - .1 * o) / t / o),\n        minRow: Math.floor((c - e.ymax + .1 * i) / r / i),\n        maxRow: Math.floor((c - e.ymin - .1 * i) / r / i)\n      });\n    }\n\n    return a;\n  }\n\n  getPyramidPixelSize(e) {\n    const {\n      nativePixelSize: t\n    } = this.rasterInfo,\n          {\n      pyramidResolutions: r,\n      pyramidScalingFactor: o\n    } = this.rasterInfo.storageInfo;\n    if (0 === e) return t;\n    if (i(r) && r.length) return r[e - 1];\n    const n = o ** e;\n    return {\n      x: t.x * n,\n      y: t.y * n\n    };\n  }\n\n  identifyPixelLocation(e, t, r) {\n    const {\n      spatialReference: o,\n      nativeExtent: n\n    } = this.rasterInfo,\n          {\n      blockWidth: i,\n      blockHeight: s,\n      maximumPyramidLevel: a,\n      origin: l\n    } = this.rasterInfo.storageInfo,\n          c = C(e, o, r);\n    if (!n.intersects(c)) return null;\n    if (t < 0 || t > a) return null;\n    const f = this.getPyramidPixelSize(t),\n          {\n      x: u,\n      y: m\n    } = f,\n          h = (l.y - c.y) / m / s,\n          d = (c.x - l.x) / u / i,\n          p = Math.min(s - 1, Math.floor((h - Math.floor(h)) * s)),\n          g = Math.min(i - 1, Math.floor((d - Math.floor(d)) * i));\n    return {\n      pyramidLevel: t,\n      row: Math.floor(h),\n      col: Math.floor(d),\n      rowOffset: p,\n      colOffset: g,\n      srcLocation: c\n    };\n  }\n\n  getTileExtent(e, t, r, o, n, i) {\n    const [s, a] = i,\n          l = o.x + r * s * e.x,\n          c = l + s * e.x,\n          f = o.y - t * a * e.y,\n          u = f - a * e.y;\n    return new D({\n      xmin: l,\n      xmax: c,\n      ymin: u,\n      ymax: f,\n      spatialReference: n\n    });\n  }\n\n  getBlockWidthHeight(e) {\n    return {\n      blockWidth: e > 0 ? this.rasterInfo.storageInfo.pyramidBlockWidth : this.rasterInfo.storageInfo.blockWidth,\n      blockHeight: e > 0 ? this.rasterInfo.storageInfo.pyramidBlockHeight : this.rasterInfo.storageInfo.blockHeight\n    };\n  }\n\n  isBlockOutside(e, t, r) {\n    const o = this.rasterInfo.storageInfo.blockBoundary[e];\n    return !o || o.maxRow < t || o.maxCol < r || o.minRow > t || o.minCol > r;\n  }\n\n  _fetchRawTile(e, t, r, o) {\n    const n = this.rasterInfo.storageInfo.blockBoundary[e];\n    if (!n) return Promise.resolve(null);\n    const {\n      minRow: s,\n      minCol: a,\n      maxCol: f,\n      maxRow: u\n    } = n;\n    if (t < s || r < a || t > u || r > f) return Promise.resolve(null);\n    const m = g(this.url, o.sliceId),\n          h = `${e}/${t}/${r}`;\n    let d = x(m, o.registryId, h);\n\n    if (!i(d)) {\n      const n = l();\n      d = this.fetchRawTile(e, t, r, { ...o,\n        signal: n.signal\n      }), y(m, o.registryId, h, d, n), d.catch(() => {\n        I(m, o.registryId, h);\n      });\n    }\n\n    return o.signal && c(o, () => {\n      w(m, o.registryId, h);\n    }), d;\n  }\n\n  _getIndexFromDimensions(e, t) {\n    const {\n      extent: r,\n      interval: o,\n      unit: n,\n      values: i\n    } = t;\n    if (null != i && i.length) return Array.isArray(i[0]) ? i.findIndex(t => t[0] <= e && t[1] >= e) : i.indexOf(e);\n    if (e > r[1]) return -1;\n    const s = r[0];\n    let a = -1;\n\n    if (\"ISO8601\" === n) {\n      var l;\n\n      switch ((null == (l = t.intervalUnit) ? void 0 : l.toLowerCase()) || \"seconds\") {\n        case \"seconds\":\n          a = Math.round((e - s) / 1e3 / o);\n          break;\n\n        case \"minutes\":\n          a = Math.round((e - s) / 6e4 / o);\n          break;\n\n        case \"hours\":\n          a = Math.round((e - s) / 36e5 / o);\n          break;\n\n        case \"days\":\n          a = Math.round((e - s) / 864e5 / o);\n          break;\n\n        case \"years\":\n          a = Math.round((new Date(e).getUTCFullYear() - new Date(s).getUTCFullYear()) / o);\n          break;\n\n        case \"decades\":\n          a = Math.round((new Date(e).getUTCFullYear() - new Date(s).getUTCFullYear()) / 10 / o);\n      }\n\n      return a;\n    }\n\n    return Math.round((e - s) / o);\n  }\n\n  _getDimensionValuesCount(e) {\n    const {\n      extent: t,\n      interval: r,\n      unit: o,\n      values: n\n    } = e;\n    let i = (null == n ? void 0 : n.length) || 0;\n    if (i) return i;\n    const s = t[0];\n\n    if (0 === i && \"ISO8601\" === o) {\n      var a;\n\n      switch ((null == (a = e.intervalUnit) ? void 0 : a.toLowerCase()) || \"seconds\") {\n        case \"seconds\":\n          i = Math.round((t[1] - t[0]) / 1e3 / r);\n          break;\n\n        case \"minutes\":\n          i = Math.round((t[1] - t[0]) / 6e4 / r);\n          break;\n\n        case \"hours\":\n          i = Math.round((t[1] - t[0]) / 36e5 / r);\n          break;\n\n        case \"days\":\n          i = Math.round((t[1] - t[0]) / 864e5 / r);\n          break;\n\n        case \"years\":\n          i = Math.round((new Date(t[1]).getUTCFullYear() - new Date(s).getUTCFullYear()) / r);\n          break;\n\n        case \"decades\":\n          i = Math.round((new Date(t[1]).getUTCFullYear() - new Date(s).getUTCFullYear()) / 10 / r);\n      }\n\n      return i;\n    }\n\n    return Math.round((t[1] - t[0]) / r);\n  }\n\n  _getRasterTileAlignmentInfo(e, t) {\n    return null == this._rasterTileAlighmentInfo && (this._rasterTileAlighmentInfo = F(this.rasterInfo)), i(this._rasterTileAlighmentInfo.pyramidsInfo) ? {\n      startX: t,\n      halfWorldWidth: this._rasterTileAlighmentInfo.halfWorldWidth,\n      hasGCSSShiftTransform: this._rasterTileAlighmentInfo.hasGCSSShiftTransform,\n      ...this._rasterTileAlighmentInfo.pyramidsInfo[e]\n    } : null;\n  }\n\n};\ne([f()], H.prototype, \"_rasterTileAlighmentInfo\", void 0), e([f(h)], H.prototype, \"url\", null), e([f({\n  type: String,\n  json: {\n    write: !0\n  }\n})], H.prototype, \"datasetName\", void 0), e([f({\n  type: String,\n  json: {\n    write: !0\n  }\n})], H.prototype, \"datasetFormat\", void 0), e([f()], H.prototype, \"rasterInfo\", void 0), e([f()], H.prototype, \"ioConfig\", void 0), e([f()], H.prototype, \"sourceJSON\", void 0), H = e([u(\"esri.layers.support.rasterDatasets.BaseRaster\")], H);\nvar _ = H;\nexport default _;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js"],"names":["_","e","t","r","JSONSupport","o","n","isSome","i","unwrap","s","EsriPromiseMixin","a","createAbortController","l","onAbort","c","property","f","subclass","u","sanitizeUrl","m","url","h","d","p","getRasterId","g","getBlock","x","putBlock","y","deleteBlock","I","decreaseRefCount","w","decode","k","mosaic","v","approximateTransform","R","load","b","projectPoint","C","snapPyramid","M","snapExtent","T","getWorldWrapCount","P","projectResolution","B","projectExtent","S","getProjectionOffsetGrid","j","getRasterDatasetAlignmentInfo","F","L","D","H","constructor","arguments","rasterJobHandler","datasetName","datasetFormat","rasterInfo","ioConfig","sampling","init","addResolvingPromise","when","normalizeCtorArgs","resolution","bandIds","tileInfo","create","_set","getLogger","declaredClass","open","fetchTile","lodAt","getTileExtent","origin","spatialReference","size","multidimensionalDefinition","length","multidimensionalInfo","sliceId","getSliceIndex","fetchPixels","identify","extent","datumTransformation","intersects","location","value","transform","inverseTransform","nativeExtent","srcResolution","pyramidLevel","computeBestPyramidLevelForLocation","identifyPixelLocation","row","col","rowOffset","colOffset","fetchRawTile","pixels","storageInfo","blockHeight","mask","map","equals","xmax","xmin","ymax","ymin","pyramidResolution","excessiveReading","Math","floor","ceil","fetchRawPixels","width","height","wrapCount","pyramidBlockWidth","blockWidth","pyramidBlockHeight","pixelBlocks","srcExtent","pixelBlock","requestRawData","rows","spacing","cols","_getRasterTileAlignmentInfo","A","mosaicSize","W","isPartiallyFilled","z","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","destDimension","coefs","coefficients","sampleSpacing","interpolation","alignmentInfo","transformGrid","blockBoundary","getBlockWidthHeight","buffer","minRow","minCol","maxCol","maxRow","worldColumnCountFromOrigin","originColumnOffset","_fetchRawTile","allowPartialFill","Promise","then","catch","push","all","getPyramidPixelSize","computeExtent","decodePixelBlock","useCanvas","data","options","request","customFetchParameters","range","query","headers","retryCount","Range","from","to","variableName","variables","dimensions","name","_getDimensionValuesCount","reduce","filter","dimensionName","Array","isArray","values","_getIndexFromDimensions","shift","updateTileInfo","pixelSize","maximumPyramidLevel","max","level","scale","lods","isVirtualTileInfo","createRemoteDatasetStorageInfo","round","log","LN2","computeBlockBoundary","firstPyramidLevel","nativePixelSize","pyramidResolutions","pyramidScalingFactor","min","srcLocation","isBlockOutside","resolve","registryId","signal","interval","unit","findIndex","indexOf","intervalUnit","toLowerCase","Date","getUTCFullYear","_rasterTileAlighmentInfo","pyramidsInfo","startX","halfWorldWidth","hasGCSSShiftTransform","prototype","type","String","json","write"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,8BAAlB;AAAiD,OAAM,sBAAN;AAA6B,OAAOC,CAAP,MAAa,qBAAb;AAAmC,OAAOC,CAAP,MAAa,wBAAb;AAAsC,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,8BAA5B;AAA2D,OAAOC,CAAP,MAAa,yBAAb;AAAuC,SAAOC,MAAM,IAAIC,CAAjB,EAAmBC,MAAM,IAAIC,CAA7B,QAAmC,wBAAnC;AAA4D,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,0BAAjC;AAA4D,SAAOC,qBAAqB,IAAIC,CAAhC,EAAkCC,OAAO,IAAIC,CAA7C,QAAmD,+BAAnD;AAAmF,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,sDAAzB;AAAgF,OAAM,sBAAN;AAA6B,OAAM,6CAAN;AAAoD,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,sDAAzB;AAAgF,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,sBAA5B;AAAmD,SAAOC,GAAG,IAAIC,CAAd,QAAoB,wBAApB;AAA6C,OAAOC,CAAP,MAAa,yBAAb;AAAuC,OAAOC,CAAP,MAAa,gBAAb;AAA8B,SAAOC,WAAW,IAAIC,CAAtB,EAAwBC,QAAQ,IAAIC,CAApC,EAAsCC,QAAQ,IAAIC,CAAlD,EAAoDC,WAAW,IAAIC,CAAnE,EAAqEC,gBAAgB,IAAIC,CAAzF,QAA+F,oBAA/F;AAAoH,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,iCAAvB;AAAyD,SAAOC,MAAM,IAAIC,CAAjB,EAAmBC,oBAAoB,IAAIC,CAA3C,QAAiD,kCAAjD;AAAoF,SAAOC,IAAI,IAAIC,CAAf,EAAiBC,YAAY,IAAIC,CAAjC,EAAmCC,WAAW,IAAIC,CAAlD,EAAoDC,UAAU,IAAIC,CAAlE,EAAoEC,iBAAiB,IAAIC,CAAzF,EAA2FC,iBAAiB,IAAIC,CAAhH,EAAkHC,aAAa,IAAIC,CAAnI,EAAqIC,uBAAuB,IAAIC,CAAhK,EAAkKC,6BAA6B,IAAIC,CAAnM,QAAyM,8CAAzM;AAAwP,OAAOC,CAAP,MAAa,4BAAb;AAA0C,OAAOC,CAAP,MAAa,6BAAb;AAA2C,IAAIC,CAAC,GAAC,cAAcnD,CAAC,CAACP,CAAD,CAAf,CAAmB;AAAC2D,EAAAA,WAAW,GAAE;AAAC,UAAM,GAAGC,SAAT,GAAoB,KAAKC,gBAAL,GAAsB,IAA1C,EAA+C,KAAKC,WAAL,GAAiB,IAAhE,EAAqE,KAAKC,aAAL,GAAmB,IAAxF,EAA6F,KAAKC,UAAL,GAAgB,IAA7G,EAAkH,KAAKC,QAAL,GAAc;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAhI;AAAqJ;;AAAU,QAAJC,IAAI,GAAE;AAAC,UAAMvE,CAAC,GAAC2C,CAAC,EAAT;AAAY,SAAK6B,mBAAL,CAAyBxE,CAAzB,GAA4B,MAAM,KAAKyE,IAAL,EAAlC;AAA8C;;AAAAC,EAAAA,iBAAiB,CAAC1E,CAAD,EAAG;AAAC,WAAOA,CAAC,IAAEA,CAAC,CAACqE,QAAL,KAAgBrE,CAAC,GAAC,EAAC,GAAGA,CAAJ;AAAMqE,MAAAA,QAAQ,EAAC;AAACM,QAAAA,UAAU,EAAC,IAAZ;AAAiBC,QAAAA,OAAO,EAAC,IAAzB;AAA8BN,QAAAA,QAAQ,EAAC,SAAvC;AAAiDO,QAAAA,QAAQ,EAACpD,CAAC,CAACqD,MAAF,EAA1D;AAAqE,WAAG9E,CAAC,CAACqE;AAA1E;AAAf,KAAlB,GAAuHrE,CAA9H;AAAgI;;AAAO,MAAHsB,GAAG,CAACtB,CAAD,EAAG;AAAC,SAAK+E,IAAL,CAAU,KAAV,EAAgB1D,CAAC,CAACrB,CAAD,EAAGK,CAAC,CAAC2E,SAAF,CAAY,KAAKC,aAAjB,CAAH,CAAjB;AAAsD;;AAAU,QAAJC,IAAI,CAAClF,CAAD,EAAG;AAAC,UAAM,IAAIE,CAAJ,CAAM,iCAAN,EAAwC,2BAAxC,CAAN;AAA2E;;AAAe,QAATiF,SAAS,CAACnF,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOE,CAAC,GAAC,EAAT,EAAY;AAAC,QAAIC,CAAJ;AAAM,UAAK;AAACwE,MAAAA,QAAQ,EAACpE;AAAV,QAAaL,CAAlB;AAAA,UAAoBO,CAAC,GAACF,CAAC,CAAC2E,KAAF,CAAQpF,CAAR,CAAtB;AAAA,UAAiCa,CAAC,GAAC,KAAKwE,aAAL,CAAmB;AAACxD,MAAAA,CAAC,EAAClB,CAAC,CAACgE,UAAL;AAAgB5C,MAAAA,CAAC,EAACpB,CAAC,CAACgE;AAApB,KAAnB,EAAmD1E,CAAnD,EAAqDC,CAArD,EAAuDO,CAAC,CAAC6E,MAAzD,EAAgE7E,CAAC,CAAC8E,gBAAlE,EAAmF9E,CAAC,CAAC+E,IAArF,CAAnC;AAA8H,WAAO,SAAOnF,CAAC,GAACD,CAAC,CAACqF,0BAAX,KAAwCpF,CAAC,CAACqF,MAA1C,IAAkDnF,CAAC,CAAC,KAAK6D,UAAL,CAAgBuB,oBAAjB,CAAnD,IAA2F,QAAMvF,CAAC,CAACwF,OAAnG,KAA6GxF,CAAC,GAAC,EAAC,GAAGA,CAAJ;AAAMwF,MAAAA,OAAO,EAAC,KAAKC,aAAL,CAAmBzF,CAAC,CAACqF,0BAArB,KAAkD;AAAhE,KAA/G,GAAmL,KAAKK,WAAL,CAAiBjF,CAAjB,EAAmBJ,CAAC,CAAC+E,IAAF,CAAO,CAAP,CAAnB,EAA6B/E,CAAC,CAAC+E,IAAF,CAAO,CAAP,CAA7B,EAAuCpF,CAAvC,CAA1L;AAAoO;;AAAc,QAAR2F,QAAQ,CAAC/F,CAAD,EAAGC,CAAC,GAAC,EAAL,EAAQ;AAAC,UAAK;AAACsF,MAAAA,gBAAgB,EAACrF,CAAlB;AAAoB8F,MAAAA,MAAM,EAAC5F;AAA3B,QAA8B,KAAKgE,UAAxC;AAAA,UAAmD;AAAC6B,MAAAA,mBAAmB,EAAC5F;AAArB,QAAwBJ,CAA3E;AAA6E,QAAIQ,CAAC,GAACoC,CAAC,CAAC7C,CAAD,EAAGE,CAAH,EAAKG,CAAL,CAAP;AAAe,QAAG,CAACD,CAAC,CAAC8F,UAAF,CAAazF,CAAb,CAAJ,EAAoB,OAAM;AAAC0F,MAAAA,QAAQ,EAAC1F,CAAV;AAAY2F,MAAAA,KAAK,EAAC;AAAlB,KAAN;;AAA8B,QAAG7F,CAAC,CAAC,KAAK6D,UAAL,CAAgBiC,SAAjB,CAAJ,EAAgC;AAAC,YAAMrG,CAAC,GAAC,KAAKoE,UAAL,CAAgBiC,SAAhB,CAA0BC,gBAA1B,CAA2C7F,CAA3C,CAAR;AAAsD,UAAG,CAAC,KAAK2D,UAAL,CAAgBmC,YAAhB,CAA6BL,UAA7B,CAAwClG,CAAxC,CAAJ,EAA+C,OAAM;AAACmG,QAAAA,QAAQ,EAACnG,CAAV;AAAYoG,QAAAA,KAAK,EAAC;AAAlB,OAAN;AAA8B3F,MAAAA,CAAC,GAACT,CAAF;AAAI;;AAAA,QAAIW,CAAC,GAAC,CAAN;;AAAQ,QAAGV,CAAC,CAACuG,aAAL,EAAmB;AAAC7F,MAAAA,CAAC,GAACoC,CAAC,CAAC9C,CAAC,CAACuG,aAAH,EAAiB,KAAKpC,UAAtB,EAAiC,KAAKC,QAAL,CAAcC,QAA/C,CAAD,CAA0DmC,YAA5D;AAAyE,KAA7F,MAAkG,IAAG9F,CAAC,GAAC,MAAM,KAAK+F,kCAAL,CAAwC1G,CAAxC,EAA0CC,CAA1C,CAAR,EAAqD,QAAMU,CAA9D,EAAgE,OAAM;AAACwF,MAAAA,QAAQ,EAAC1F,CAAV;AAAY2F,MAAAA,KAAK,EAAC;AAAlB,KAAN;;AAA8B,UAAMvF,CAAC,GAAC,KAAK8F,qBAAL,CAA2BlG,CAA3B,EAA6BE,CAA7B,EAA+B,IAA/B,CAAR;AAA6C,QAAG,SAAOE,CAAV,EAAY,OAAM;AAACsF,MAAAA,QAAQ,EAAC1F,CAAV;AAAY2F,MAAAA,KAAK,EAAC;AAAlB,KAAN;AAA8B,UAAK;AAACQ,MAAAA,GAAG,EAAC7F,CAAL;AAAO8F,MAAAA,GAAG,EAAC5F,CAAX;AAAa6F,MAAAA,SAAS,EAAC3F,CAAvB;AAAyB4F,MAAAA,SAAS,EAAC1F;AAAnC,QAAsCR,CAA3C;AAAA,UAA6CU,CAAC,GAACI,CAAC,CAAC,KAAKL,GAAN,EAAUrB,CAAC,CAAC2F,OAAZ,CAAhD;AAAA,UAAqEpE,CAAC,GAAE,GAAEb,CAAE,IAAGI,CAAE,IAAGE,CAAE,EAAtF;AAAwF,QAAIQ,CAAC,GAACI,CAAC,CAACN,CAAD,EAAG,IAAH,EAAQC,CAAR,CAAP;AAAkBjB,IAAAA,CAAC,CAACkB,CAAD,CAAD,KAAOA,CAAC,GAAC,KAAKuF,YAAL,CAAkBrG,CAAlB,EAAoBI,CAApB,EAAsBE,CAAtB,EAAwBhB,CAAxB,CAAF,EAA6B8B,CAAC,CAACR,CAAD,EAAG,IAAH,EAAQC,CAAR,EAAUC,CAAV,CAArC;AAAmD,UAAMQ,CAAC,GAAC,MAAMR,CAAd;AAAgB,QAAG,EAAEQ,CAAC,IAAEA,CAAC,CAACgF,MAAL,IAAahF,CAAC,CAACgF,MAAF,CAASvB,MAAT,GAAgB,CAA/B,CAAH,EAAqC,OAAM;AAACS,MAAAA,QAAQ,EAAC1F,CAAV;AAAY2F,MAAAA,KAAK,EAAC;AAAlB,KAAN;AAA8B,UAAMjE,CAAC,GAAChB,CAAC,GAAC,KAAKiD,UAAL,CAAgB8C,WAAhB,CAA4BC,WAA9B,GAA0C9F,CAAlD;AAAoD,WAAM;AAAC8E,MAAAA,QAAQ,EAAC1F,CAAV;AAAY2F,MAAAA,KAAK,EAAC,CAACnE,CAAC,CAACmF,IAAH,IAASnF,CAAC,CAACmF,IAAF,CAAOjF,CAAP,CAAT,GAAmBF,CAAC,CAACgF,MAAF,CAASI,GAAT,CAAcrH,CAAC,IAAEA,CAAC,CAACmC,CAAD,CAAlB,CAAnB,GAA2C,IAA7D;AAAkEsE,MAAAA,YAAY,EAAC9F;AAA/E,KAAN;AAAwF;;AAAiB,QAAXmF,WAAW,CAAC9F,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOE,CAAC,GAAC,EAAT,EAAY;AAACJ,IAAAA,CAAC,GAACiD,CAAC,CAACjD,CAAD,CAAH;AAAO,UAAMK,CAAC,GAAC8C,CAAC,CAACnD,CAAD,CAAT;AAAA,UAAaO,CAAC,GAAC,KAAK6D,UAAL,CAAgBmB,gBAA/B;AAAA,UAAgD5E,CAAC,GAAC,CAACX,CAAC,CAACuF,gBAAF,CAAmB+B,MAAnB,CAA0B/G,CAA1B,CAAnD;AAAA,UAAgF;AAAC0F,MAAAA,mBAAmB,EAACpF;AAArB,QAAwBT,CAAxG;AAAA,UAA0GW,CAAC,GAAC,IAAI6C,CAAJ,CAAM;AAAC/B,MAAAA,CAAC,EAAC,CAAC7B,CAAC,CAACuH,IAAF,GAAOvH,CAAC,CAACwH,IAAV,IAAgBvH,CAAnB;AAAqB8B,MAAAA,CAAC,EAAC,CAAC/B,CAAC,CAACyH,IAAF,GAAOzH,CAAC,CAAC0H,IAAV,IAAgBxH,CAAvC;AAAyCqF,MAAAA,gBAAgB,EAACvF,CAAC,CAACuF;AAA5D,KAAN,CAA5G;AAAA,UAAiMtE,CAAC,GAACb,CAAC,CAACoG,aAAF,KAAkB7F,CAAC,GAAC0C,CAAC,CAACtC,CAAD,EAAGR,CAAH,EAAKP,CAAL,EAAOa,CAAP,CAAF,GAAYE,CAA/B,CAAnM;AAAqO,QAAG,CAACE,CAAJ,EAAM,OAAO,IAAP;AAAY,UAAK;AAACwF,MAAAA,YAAY,EAACtF,CAAd;AAAgBwG,MAAAA,iBAAiB,EAACtG,CAAlC;AAAoCuG,MAAAA,gBAAgB,EAACrG;AAArD,QAAwDwB,CAAC,CAAC9B,CAAD,EAAG,KAAKmD,UAAR,EAAmB,KAAKC,QAAL,CAAcC,QAAjC,CAA9D;AAAyG,QAAG/C,CAAH,EAAK,OAAO,IAAP;AAAY,UAAMC,CAAC,GAAC,KAAK4C,UAAL,CAAgB8C,WAAxB;AAAoC,QAAIzF,CAAC,GAACd,CAAC,GAAC4C,CAAC,CAACvD,CAAD,EAAGO,CAAH,EAAKM,CAAL,CAAF,GAAUb,CAAjB;AAAmB,UAAM2B,CAAC,GAAClB,CAAC,CAAC,KAAK2D,UAAL,CAAgBiC,SAAjB,CAAT;AAAqC,QAAG1E,CAAC,KAAGF,CAAC,GAACE,CAAC,CAAC2E,gBAAF,CAAmB7E,CAAnB,CAAL,CAAD,EAA6B,QAAMA,CAAtC,EAAwC,OAAO,IAAP;AAAY,UAAMI,CAAC,GAAC;AAACA,MAAAA,CAAC,EAACgG,IAAI,CAACC,KAAL,CAAW,CAACrG,CAAC,CAAC+F,IAAF,GAAOhG,CAAC,CAAC8D,MAAF,CAASzD,CAAjB,IAAoBR,CAAC,CAACQ,CAAtB,GAAwB,EAAnC,CAAH;AAA0CE,MAAAA,CAAC,EAAC8F,IAAI,CAACC,KAAL,CAAW,CAACtG,CAAC,CAAC8D,MAAF,CAASvD,CAAT,GAAWN,CAAC,CAACgG,IAAd,IAAoBpG,CAAC,CAACU,CAAtB,GAAwB,EAAnC;AAA5C,KAAR;AAAA,UAA4FA,CAAC,GAAC8F,IAAI,CAACE,IAAL,CAAU,CAACtG,CAAC,CAAC8F,IAAF,GAAO9F,CAAC,CAAC+F,IAAV,IAAgBnG,CAAC,CAACQ,CAAlB,GAAoB,EAA9B,CAA9F;AAAA,UAAgII,CAAC,GAAC4F,IAAI,CAACE,IAAL,CAAU,CAACtG,CAAC,CAACgG,IAAF,GAAOhG,CAAC,CAACiG,IAAV,IAAgBrG,CAAC,CAACU,CAAlB,GAAoB,EAA9B,CAAlI;AAAoK,QAAGA,CAAC,GAAC9B,CAAF,GAAI,CAAJ,IAAOgC,CAAC,GAAC/B,CAAF,GAAI,CAAX,IAAcG,CAAC,IAAE,CAApB,EAAsB,OAAO,IAAP;AAAY,UAAM8B,CAAC,GAAC,MAAM,KAAK6F,cAAL,CAAoB7G,CAApB,EAAsBU,CAAtB,EAAwB;AAACoG,MAAAA,KAAK,EAAClG,CAAP;AAASmG,MAAAA,MAAM,EAACjG,CAAhB;AAAkBkG,MAAAA,SAAS,EAAC9H;AAA5B,KAAxB,EAAuDD,CAAvD,CAAd;AAAwE,QAAG,CAAC+B,CAAJ,EAAM,OAAO,IAAP;AAAY,UAAME,CAAC,GAAClB,CAAC,GAAC,CAAF,GAAIK,CAAC,CAAC4G,iBAAN,GAAwB5G,CAAC,CAAC6G,UAAlC;AAAA,UAA6C1F,CAAC,GAACxB,CAAC,GAAC,CAAF,GAAIK,CAAC,CAAC8G,kBAAN,GAAyB9G,CAAC,CAAC2F,WAA1E;AAAsF,QAAG,CAACxG,CAAD,IAAI,MAAIwB,CAAC,CAACoG,WAAF,CAAc7C,MAAtB,IAA8BrD,CAAC,KAAGpC,CAAlC,IAAqC0C,CAAC,KAAGzC,CAAzC,IAA4Ce,CAAC,CAACY,CAAF,KAAMd,CAAC,CAACc,CAApD,IAAuDZ,CAAC,CAACc,CAAF,KAAMhB,CAAC,CAACgB,CAAlE,EAAoE,OAAM;AAACiE,MAAAA,MAAM,EAAChG,CAAR;AAAUwI,MAAAA,SAAS,EAAC/G,CAApB;AAAsBgH,MAAAA,UAAU,EAACtG,CAAC,CAACoG,WAAF,CAAc,CAAd;AAAjC,KAAN;AAAyD,UAAM1F,CAAC,GAACY,CAAC,CAACzD,CAAD,EAAGmC,CAAC,CAAC6D,MAAL,EAAYjF,CAAZ,EAAcF,CAAd,EAAgBc,CAAhB,EAAkBtB,CAAC,GAAC,CAApB,CAAT;AAAgC,QAAIsD,CAAJ;;AAAM,UAAME,CAAC,GAAC,CAACzD,CAAC,CAACsI,cAAX;AAAA,UAA0B5E,CAAC,GAAC;AAAC6E,MAAAA,IAAI,EAAC9F,CAAC,CAAC+F,OAAF,CAAU,CAAV,CAAN;AAAmBC,MAAAA,IAAI,EAAChG,CAAC,CAAC+F,OAAF,CAAU,CAAV;AAAxB,KAA5B;AAAA,UAAkE7I,CAAC,GAACU,CAAC,CAAC,KAAKqI,2BAAL,CAAiC3H,CAAjC,EAAmCgB,CAAC,CAAC6D,MAAF,CAASwB,IAA5C,CAAD,CAArE;AAAA,UAAyH;AAACe,MAAAA,WAAW,EAACQ,CAAb;AAAeC,MAAAA,UAAU,EAACC,CAA1B;AAA4BC,MAAAA,iBAAiB,EAACC;AAA9C,QAAiDhH,CAA1K;;AAA4K,QAAG,KAAK8B,gBAAR,EAAyBN,CAAC,GAAC,MAAM,KAAKM,gBAAL,CAAsBmF,kBAAtB,CAAyC;AAACC,MAAAA,cAAc,EAACN,CAAhB;AAAkBO,MAAAA,aAAa,EAACL,CAAhC;AAAkCM,MAAAA,aAAa,EAAC1F,CAAC,GAAC;AAACoE,QAAAA,KAAK,EAAChI,CAAP;AAASiI,QAAAA,MAAM,EAAChI;AAAhB,OAAD,GAAoB,IAArE;AAA0EsJ,MAAAA,KAAK,EAAC3F,CAAC,GAAChB,CAAC,CAAC4G,YAAH,GAAgB,IAAjG;AAAsGC,MAAAA,aAAa,EAAC7F,CAAC,GAACC,CAAD,GAAG,IAAxH;AAA6H6F,MAAAA,aAAa,EAACvJ,CAAC,CAACuJ,aAA7I;AAA2JC,MAAAA,aAAa,EAAC7J;AAAzK,KAAzC,EAAqNK,CAArN,CAAR,CAAzB,KAA6P;AAAC,YAAMJ,CAAC,GAACuC,CAAC,CAACwG,CAAD,EAAGE,CAAH,EAAK,IAAL,EAAU,IAAV,EAAelJ,CAAf,CAAT;AAA2B4D,MAAAA,CAAC,GAACE,CAAC,GAACpB,CAAC,CAACzC,CAAD,EAAG;AAACiI,QAAAA,KAAK,EAAChI,CAAP;AAASiI,QAAAA,MAAM,EAAChI;AAAhB,OAAH,EAAsB2C,CAAC,CAAC4G,YAAxB,EAAqC3F,CAArC,EAAuC1D,CAAC,CAACuJ,aAAzC,CAAF,GAA0D3J,CAA7D;AAA+D;AAAA,WAAOI,CAAC,CAACsI,cAAF,GAAiB;AAACF,MAAAA,SAAS,EAAC/G,CAAX;AAAagH,MAAAA,UAAU,EAAC9E,CAAxB;AAA0BkG,MAAAA,aAAa,EAAChH,CAAxC;AAA0CmD,MAAAA,MAAM,EAAChG,CAAjD;AAAmDkJ,MAAAA,iBAAiB,EAACC;AAArE,KAAjB,GAAyF;AAACX,MAAAA,SAAS,EAAC/G,CAAX;AAAauE,MAAAA,MAAM,EAAChG,CAApB;AAAsByI,MAAAA,UAAU,EAAC9E;AAAjC,KAAhG;AAAoI;;AAAoB,QAAdqE,cAAc,CAAChI,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOE,CAAP,EAAS;AAAC,UAAK;AAACkF,MAAAA,MAAM,EAACjF,CAAR;AAAUyJ,MAAAA,aAAa,EAACvJ;AAAxB,QAA2B,KAAK6D,UAAL,CAAgB8C,WAAhD;AAAA,UAA4D;AAACmB,MAAAA,UAAU,EAAC1H,CAAZ;AAAcwG,MAAAA,WAAW,EAACtG;AAA1B,QAA6B,KAAKkJ,mBAAL,CAAyB/J,CAAzB,CAAzF;AAAqH,QAAG;AAAC6B,MAAAA,CAAC,EAACd,CAAH;AAAKgB,MAAAA,CAAC,EAACd;AAAP,QAAUhB,CAAb;AAAA,QAAe;AAACgI,MAAAA,KAAK,EAAC9G,CAAP;AAAS+G,MAAAA,MAAM,EAAC7G,CAAhB;AAAkB8G,MAAAA,SAAS,EAAC5G;AAA5B,QAA+BrB,CAA9C;AAAgD,UAAMsB,CAAC,GAACf,CAAC,CAAC,KAAKqI,2BAAL,CAAiC9I,CAAjC,EAAmC,CAAnC,CAAD,CAAT;AAAiDI,IAAAA,CAAC,CAAC4J,MAAF,KAAWjJ,CAAC,IAAEX,CAAC,CAAC4J,MAAF,CAASnB,IAAZ,EAAiB5H,CAAC,IAAEb,CAAC,CAAC4J,MAAF,CAASrB,IAA7B,EAAkCxH,CAAC,IAAE,IAAEf,CAAC,CAAC4J,MAAF,CAASnB,IAAhD,EAAqDxH,CAAC,IAAE,IAAEjB,CAAC,CAAC4J,MAAF,CAASrB,IAA9E;AAAoF,UAAMlH,CAAC,GAACoG,IAAI,CAACC,KAAL,CAAW/G,CAAC,GAACJ,CAAb,CAAR;AAAA,UAAwBgB,CAAC,GAACkG,IAAI,CAACC,KAAL,CAAW7G,CAAC,GAACJ,CAAb,CAA1B;AAAA,UAA0CgB,CAAC,GAACgG,IAAI,CAACC,KAAL,CAAW,CAAC/G,CAAC,GAACI,CAAF,GAAI,CAAL,IAAQR,CAAnB,CAA5C;AAAA,UAAkEoB,CAAC,GAAC8F,IAAI,CAACC,KAAL,CAAW,CAAC7G,CAAC,GAACI,CAAF,GAAI,CAAL,IAAQR,CAAnB,CAApE;AAAA,UAA0FoB,CAAC,GAAC1B,CAAC,CAACP,CAAD,CAA7F;AAAiG,QAAG,CAACiC,CAAJ,EAAM,OAAO,IAAP;AAAY,UAAK;AAACgI,MAAAA,MAAM,EAAC9H,CAAR;AAAU+H,MAAAA,MAAM,EAAC7H,CAAjB;AAAmB8H,MAAAA,MAAM,EAAC5H,CAA1B;AAA4B6H,MAAAA,MAAM,EAAC3H;AAAnC,QAAsCR,CAA3C;AAA6C,QAAGF,CAAC,GAACI,CAAF,IAAKN,CAAC,GAACQ,CAAP,IAAUV,CAAC,GAACc,CAAZ,IAAehB,CAAC,GAACc,CAApB,EAAsB,OAAO,IAAP;AAAY,UAAMI,CAAC,GAAC,EAAR;AAAW,QAAIE,CAAJ;AAAA,QAAME,CAAC,GAAC,CAAC,CAAT;;AAAW,SAAI,IAAItC,CAAC,GAACkB,CAAV,EAAYlB,CAAC,IAAEsB,CAAf,EAAiBtB,CAAC,EAAlB,EAAqB,KAAI,IAAIR,CAAC,GAACwB,CAAV,EAAYxB,CAAC,IAAE4B,CAAf,EAAiB5B,CAAC,EAAlB,EAAqB;AAAC,YAAMC,CAAC,GAAC,MAAIqB,CAAJ,IAAO,QAAMC,CAAb,IAAgBvB,CAAC,GAACuB,CAAC,CAAC6I,0BAApB,GAA+CpK,CAA/C,GAAiDA,CAAC,GAACuB,CAAC,CAAC6I,0BAAJ,GAA+B7I,CAAC,CAAC8I,kBAA1F;AAA6G7J,MAAAA,CAAC,IAAE0B,CAAH,IAAMjC,CAAC,IAAEmC,CAAT,IAAYI,CAAC,IAAEhC,CAAf,IAAkB8B,CAAC,IAAErC,CAArB,IAAwB2C,CAAC,GAAC,KAAK0H,aAAL,CAAmBvK,CAAnB,EAAqBS,CAArB,EAAuBP,CAAvB,EAAyBE,CAAzB,CAAF,EAA8B,KAAKiE,QAAL,CAAcmG,gBAAd,KAAiC3H,CAAC,GAAC,IAAI4H,OAAJ,CAAazK,CAAC,IAAE;AAAC6C,QAAAA,CAAC,CAAC6H,IAAF,CAAQzK,CAAC,IAAED,CAAC,CAACC,CAAD,CAAZ,EAAkB0K,KAAlB,CAAyB,MAAI;AAAC5H,UAAAA,CAAC,GAAC,CAAC,CAAH,EAAK/C,CAAC,CAAC,IAAD,CAAN;AAAa,SAA3C;AAA8C,OAA/D,CAAnC,CAA9B,EAAoI2C,CAAC,CAACiI,IAAF,CAAO/H,CAAP,CAA5J,IAAuKF,CAAC,CAACiI,IAAF,CAAO,IAAP,CAAvK;AAAoL;;AAAA,QAAG,MAAIjI,CAAC,CAAC+C,MAAT,EAAgB,OAAO,IAAP;AAAY,UAAMzC,CAAC,GAAC,MAAMwH,OAAO,CAACI,GAAR,CAAYlI,CAAZ,CAAd;AAAA,UAA6BQ,CAAC,GAAC;AAAC+E,MAAAA,MAAM,EAAC,CAACnG,CAAC,GAACJ,CAAF,GAAI,CAAL,IAAQd,CAAhB;AAAkBoH,MAAAA,KAAK,EAAC,CAACpG,CAAC,GAACJ,CAAF,GAAI,CAAL,IAAQd;AAAhC,KAA/B;AAAA,UAAkE;AAAC4E,MAAAA,gBAAgB,EAAClC;AAAlB,QAAqB,KAAKe,UAA5F;AAAA,UAAuGb,CAAC,GAAC,KAAKuH,mBAAL,CAAyB9K,CAAzB,CAAzG;AAAA,UAAqI;AAAC6B,MAAAA,CAAC,EAAC4B,CAAH;AAAK1B,MAAAA,CAAC,EAAC4B;AAAP,QAAUJ,CAA/I;AAAiJ,WAAM;AAACyC,MAAAA,MAAM,EAAC,IAAInC,CAAJ,CAAM;AAAC2D,QAAAA,IAAI,EAACnH,CAAC,CAACwB,CAAF,GAAIJ,CAAC,GAACd,CAAF,GAAI8C,CAAd;AAAgB8D,QAAAA,IAAI,EAAClH,CAAC,CAACwB,CAAF,GAAI,CAACA,CAAC,GAAC,CAAH,IAAMlB,CAAN,GAAQ8C,CAAjC;AAAmCiE,QAAAA,IAAI,EAACrH,CAAC,CAAC0B,CAAF,GAAI,CAACA,CAAC,GAAC,CAAH,IAAMlB,CAAN,GAAQ8C,CAApD;AAAsD8D,QAAAA,IAAI,EAACpH,CAAC,CAAC0B,CAAF,GAAIJ,CAAC,GAACd,CAAF,GAAI8C,CAAnE;AAAqE4B,QAAAA,gBAAgB,EAAClC;AAAtF,OAAN,CAAR;AAAwGkF,MAAAA,WAAW,EAACtF,CAApH;AAAsH+F,MAAAA,UAAU,EAAC7F,CAAjI;AAAmI+F,MAAAA,iBAAiB,EAACnG;AAArJ,KAAN;AAA8J;;AAAkB,QAAZiE,YAAY,CAAChH,CAAD,EAAGC,CAAH,EAAKG,CAAL,EAAOC,CAAP,EAAS;AAAC,UAAM,IAAIH,CAAJ,CAAM,iCAAN,EAAwC,mCAAxC,CAAN;AAAmF;;AAAA6K,EAAAA,aAAa,CAAC/K,CAAD,EAAG;AAAC,WAAOuD,CAAC,CAAC,KAAKa,UAAL,CAAgB4B,MAAjB,EAAwBhG,CAAxB,CAAR;AAAmC;;AAAAgL,EAAAA,gBAAgB,CAAChL,CAAD,EAAGC,CAAH,EAAK;AAAC,WAAM,CAAC,KAAKgE,gBAAN,IAAwBhE,CAAC,CAACgL,SAA1B,GAAoC5I,CAAC,CAACrC,CAAD,EAAGC,CAAH,CAArC,GAA2C,KAAKgE,gBAAL,CAAsB7B,MAAtB,CAA6B;AAAC8I,MAAAA,IAAI,EAAClL,CAAN;AAAQmL,MAAAA,OAAO,EAAClL;AAAhB,KAA7B,CAAjD;AAAkG;;AAAa,QAAPmL,OAAO,CAACpL,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAO;AAAC,QAAIC,CAAJ,EAAME,CAAN;AAAQ,UAAK;AAAC8K,MAAAA,qBAAqB,EAAC5K;AAAvB,QAA0B,KAAK4D,QAApC;AAAA,UAA6C;AAACiH,MAAAA,KAAK,EAAC3K,CAAP;AAAS4K,MAAAA,KAAK,EAAC1K,CAAf;AAAiB2K,MAAAA,OAAO,EAACzK;AAAzB,QAA4Bb,CAAzE;AAA2EE,IAAAA,CAAC,GAAC,SAAOC,CAAC,GAAC,SAAOE,CAAC,GAACH,CAAT,IAAYG,CAAZ,GAAcL,CAAC,CAACuL,UAAzB,IAAqCpL,CAArC,GAAuC,KAAKgE,QAAL,CAAcoH,UAAvD;AAAkE,UAAMxK,CAAC,GAACN,CAAC,GAAC;AAAC+K,MAAAA,KAAK,EAAE,SAAQ/K,CAAC,CAACgL,IAAK,IAAGhL,CAAC,CAACiL,EAAG;AAA/B,KAAD,GAAmC,IAA5C;;AAAiD,QAAG;AAAC,aAAO,MAAM3L,CAAC,CAACD,CAAD,EAAG,EAAC,GAAGE,CAAJ;AAAMqL,QAAAA,KAAK,EAAC,EAAC,GAAG1K,CAAJ;AAAM,aAAGJ;AAAT,SAAZ;AAAwB+K,QAAAA,OAAO,EAAC,EAAC,GAAGzK,CAAJ;AAAM,aAAGE;AAAT;AAAhC,OAAH,CAAd;AAA+D,KAAnE,CAAmE,OAAME,CAAN,EAAQ;AAAC,UAAGf,CAAC,GAAC,CAAL,EAAO,OAAOA,CAAC,IAAG,KAAKgL,OAAL,CAAapL,CAAb,EAAeE,CAAf,EAAiBE,CAAjB,CAAX;AAA+B,YAAMe,CAAN;AAAQ;AAAC;;AAAA0E,EAAAA,aAAa,CAAC7F,CAAD,EAAG;AAAC,UAAK;AAAC2F,MAAAA,oBAAoB,EAAC1F;AAAtB,QAAyB,KAAKmE,UAAnC;AAA8C,QAAG,CAAC7D,CAAC,CAACN,CAAD,CAAF,IAAO,QAAMD,CAAb,IAAgB,CAACA,CAAC,CAAC0F,MAAtB,EAA6B,OAAO,IAAP;AAAY,QAAIxF,CAAC,GAAC,CAAN;AAAQ,UAAME,CAAC,GAACJ,CAAC,CAAC,CAAD,CAAD,CAAK6L,YAAb;;AAA0B,SAAI,IAAIxL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAC,CAAC6L,SAAF,CAAYpG,MAA1B,EAAiCrF,CAAC,EAAlC,EAAqC;AAAC,YAAME,CAAC,GAACN,CAAC,CAAC6L,SAAF,CAAYzL,CAAZ,CAAR;AAAA,YAAuBI,CAAC,GAACF,CAAC,CAACwL,UAA3B;;AAAsC,UAAGxL,CAAC,CAACyL,IAAF,KAAS5L,CAAZ,EAAc;AAACF,QAAAA,CAAC,IAAEO,CAAC,CAAC4G,GAAF,CAAOrH,CAAC,IAAE,KAAKiM,wBAAL,CAA8BjM,CAA9B,CAAV,EAA6CkM,MAA7C,CAAqD,CAAClM,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAA9D,CAAH;AAAqE;AAAM;;AAAA,YAAMU,CAAC,GAACF,CAAC,CAAC4G,GAAF,CAAOrH,CAAC,IAAE,KAAKiM,wBAAL,CAA8BjM,CAA9B,CAAV,CAAR;AAAA,YAAqDa,CAAC,GAACJ,CAAC,CAACiF,MAAzD;;AAAgE,WAAI,IAAIzF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACY,CAAd,EAAgBZ,CAAC,EAAjB,EAAoB;AAAC,cAAMG,CAAC,GAACJ,CAAC,CAACmM,MAAF,CAAUnM,CAAC,IAAEA,CAAC,CAACoM,aAAF,KAAkB3L,CAAC,CAACR,CAAD,CAAD,CAAK+L,IAApC,EAA2C,CAA3C,CAAR;AAAsD,YAAG,QAAM5L,CAAT,EAAW,OAAO,IAAP;;AAAY,cAAMC,CAAC,GAACgM,KAAK,CAACC,OAAN,CAAclM,CAAC,CAACmM,MAAF,CAAS,CAAT,CAAd,IAA2BnM,CAAC,CAACmM,MAAF,CAAS,CAAT,EAAY,CAAZ,CAA3B,GAA0CnM,CAAC,CAACmM,MAAF,CAAS,CAAT,CAAlD;AAAA,cAA8DhM,CAAC,GAAC,KAAKiM,uBAAL,CAA6BnM,CAA7B,EAA+BI,CAAC,CAACR,CAAD,CAAhC,CAAhE;;AAAqG,YAAG,CAAC,CAAD,KAAKM,CAAR,EAAU,OAAO,IAAP;AAAYI,QAAAA,CAAC,CAAC8L,KAAF,IAAUvM,CAAC,IAAED,CAAC,KAAGY,CAAC,GAAC,CAAN,GAAQN,CAAR,GAAUA,CAAC,GAACI,CAAC,CAACuL,MAAF,CAAU,CAAClM,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAnB,CAAzB;AAAgD;AAAC;;AAAA,WAAOC,CAAP;AAAS;;AAAAwM,EAAAA,cAAc,GAAE;AAAC,UAAK;AAACxF,MAAAA,WAAW,EAAClH,CAAb;AAAeuF,MAAAA,gBAAgB,EAACtF,CAAhC;AAAkC+F,MAAAA,MAAM,EAAC9F,CAAzC;AAA2CyM,MAAAA,SAAS,EAACvM;AAArD,QAAwD,KAAKgE,UAAlE;;AAA6E,QAAG,CAACpE,CAAC,CAAC6E,QAAN,EAAe;AAAC,YAAMxE,CAAC,GAAC,EAAR;AAAA,YAAWE,CAAC,GAACP,CAAC,CAAC4M,mBAAF,IAAuB,CAApC;AAAsC,UAAInM,CAAC,GAACoH,IAAI,CAACgF,GAAL,CAASzM,CAAC,CAACyB,CAAX,EAAazB,CAAC,CAAC2B,CAAf,CAAN;AAAA,UAAwBpB,CAAC,GAAC,IAAE,KAAF,GAAQ,EAAR,GAAWF,CAArC;;AAAuC,WAAI,IAAIT,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAEO,CAAf,EAAiBP,CAAC,EAAlB,EAAqBK,CAAC,CAACuK,IAAF,CAAO;AAACkC,QAAAA,KAAK,EAACvM,CAAC,GAACP,CAAT;AAAW2E,QAAAA,UAAU,EAAClE,CAAtB;AAAwBsM,QAAAA,KAAK,EAACpM;AAA9B,OAAP,GAAyCF,CAAC,IAAE,CAA5C,EAA8CE,CAAC,IAAE,CAAjD;;AAAmD,YAAME,CAAC,GAAC,IAAI+C,CAAJ,CAAM;AAAC/B,QAAAA,CAAC,EAAC3B,CAAC,CAACsH,IAAL;AAAUzF,QAAAA,CAAC,EAAC7B,CAAC,CAACuH,IAAd;AAAmBlC,QAAAA,gBAAgB,EAACtF;AAApC,OAAN,CAAR;AAAsDD,MAAAA,CAAC,CAAC6E,QAAF,GAAW,IAAIpD,CAAJ,CAAM;AAAC6D,QAAAA,MAAM,EAACzE,CAAR;AAAU2E,QAAAA,IAAI,EAAC,CAACxF,CAAC,CAACqI,UAAH,EAAcrI,CAAC,CAACmH,WAAhB,CAAf;AAA4C5B,QAAAA,gBAAgB,EAACtF,CAA7D;AAA+D+M,QAAAA,IAAI,EAAC3M;AAApE,OAAN,CAAX,EAAyFL,CAAC,CAACiN,iBAAF,GAAoB,CAAC,CAA9G;AAAgH;AAAC;;AAAAC,EAAAA,8BAA8B,CAAClN,CAAD,EAAGC,CAAC,GAAC,GAAL,EAASC,CAAC,GAAC,GAAX,EAAeE,CAAf,EAAiB;AAAC,UAAK;AAAC6H,MAAAA,KAAK,EAAC5H,CAAP;AAAS6H,MAAAA,MAAM,EAAC3H,CAAhB;AAAkBgG,MAAAA,YAAY,EAAC9F,CAA/B;AAAiCkM,MAAAA,SAAS,EAAChM,CAA3C;AAA6C4E,MAAAA,gBAAgB,EAAC1E;AAA9D,QAAiEb,CAAtE;AAAA,UAAwEe,CAAC,GAAC,IAAI6C,CAAJ,CAAM;AAAC/B,MAAAA,CAAC,EAACpB,CAAC,CAAC+G,IAAL;AAAUzF,MAAAA,CAAC,EAACtB,CAAC,CAACgH,IAAd;AAAmBlC,MAAAA,gBAAgB,EAAC1E;AAApC,KAAN,CAA1E;AAAwH,YAAMT,CAAN,KAAUA,CAAC,GAACyH,IAAI,CAACgF,GAAL,CAAS,CAAT,EAAWhF,IAAI,CAACsF,KAAL,CAAWtF,IAAI,CAACuF,GAAL,CAASvF,IAAI,CAACgF,GAAL,CAASxM,CAAT,EAAWE,CAAX,CAAT,IAAwBsH,IAAI,CAACwF,GAA7B,GAAiC,CAA5C,CAAX,CAAZ;AAAwE,UAAMpM,CAAC,GAAC,KAAKqM,oBAAL,CAA0B7M,CAA1B,EAA4B,GAA5B,EAAgC,GAAhC,EAAoC;AAACoB,MAAAA,CAAC,EAACpB,CAAC,CAAC+G,IAAL;AAAUzF,MAAAA,CAAC,EAACtB,CAAC,CAACgH;AAAd,KAApC,EAAwD,CAAC9G,CAAD,CAAxD,EAA4DP,CAA5D,CAAR;AAAuEJ,IAAAA,CAAC,CAACkH,WAAF,GAAc,IAAI1F,CAAJ,CAAM;AAAC6G,MAAAA,UAAU,EAACpI,CAAZ;AAAckH,MAAAA,WAAW,EAACjH,CAA1B;AAA4BkI,MAAAA,iBAAiB,EAACnI,CAA9C;AAAgDqI,MAAAA,kBAAkB,EAACpI,CAAnE;AAAqEoF,MAAAA,MAAM,EAACvE,CAA5E;AAA8EwM,MAAAA,iBAAiB,EAAC,CAAhG;AAAkGX,MAAAA,mBAAmB,EAACxM,CAAtH;AAAwH0J,MAAAA,aAAa,EAAC7I;AAAtI,KAAN,CAAd;AAA8J;;AAAwC,QAAlCyF,kCAAkC,CAAC1G,CAAD,EAAGC,CAAC,GAAC,EAAL,EAAQ;AAAC,WAAO,CAAP;AAAS;;AAAAqN,EAAAA,oBAAoB,CAACtN,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOE,CAAP,EAASC,CAAT,EAAWE,CAAC,GAAC,CAAb,EAAeE,CAAC,GAAC,CAAjB,EAAmB;AAAC,QAAG,MAAIJ,CAAC,CAACqF,MAAN,IAAcnF,CAAC,GAAC,CAAnB,EAAqB;AAACF,MAAAA,CAAC,GAAC,CAAC,GAAGA,CAAJ,CAAF;AAAS,UAAG;AAACwB,QAAAA,CAAC,EAAC7B,CAAH;AAAK+B,QAAAA,CAAC,EAAC9B;AAAP,UAAUI,CAAC,CAAC,CAAD,CAAd;;AAAkB,WAAI,IAAIH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgBL,CAAC,EAAjB,EAAoBF,CAAC,IAAES,CAAH,EAAKR,CAAC,IAAEQ,CAAR,EAAUJ,CAAC,CAACuK,IAAF,CAAO;AAAC/I,QAAAA,CAAC,EAAC7B,CAAH;AAAK+B,QAAAA,CAAC,EAAC9B;AAAP,OAAP,CAAV;AAA4B;;AAAA,UAAMU,CAAC,GAAC,EAAR;AAAA,UAAW;AAACkB,MAAAA,CAAC,EAAChB,CAAH;AAAKkB,MAAAA,CAAC,EAAChB;AAAP,QAAUX,CAArB;;AAAuB,SAAI,IAAIa,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACZ,CAAC,CAACqF,MAAhB,EAAuBzE,CAAC,EAAxB,EAA2B;AAAC,YAAK;AAACY,QAAAA,CAAC,EAACzB,CAAH;AAAK2B,QAAAA,CAAC,EAACxB;AAAP,UAAUF,CAAC,CAACY,CAAD,CAAhB;AAAoBN,MAAAA,CAAC,CAACiK,IAAF,CAAO;AAACV,QAAAA,MAAM,EAACrC,IAAI,CAACC,KAAL,CAAW,CAAC9H,CAAC,CAACwH,IAAF,GAAO3G,CAAP,GAAS,KAAGT,CAAb,IAAgBH,CAAhB,GAAkBG,CAA7B,CAAR;AAAwC+J,QAAAA,MAAM,EAACtC,IAAI,CAACC,KAAL,CAAW,CAAC9H,CAAC,CAACuH,IAAF,GAAO1G,CAAP,GAAS,KAAGT,CAAb,IAAgBH,CAAhB,GAAkBG,CAA7B,CAA/C;AAA+E6J,QAAAA,MAAM,EAACpC,IAAI,CAACC,KAAL,CAAW,CAAC/G,CAAC,GAACf,CAAC,CAACyH,IAAJ,GAAS,KAAGlH,CAAb,IAAgBL,CAAhB,GAAkBK,CAA7B,CAAtF;AAAsH6J,QAAAA,MAAM,EAACvC,IAAI,CAACC,KAAL,CAAW,CAAC/G,CAAC,GAACf,CAAC,CAAC0H,IAAJ,GAAS,KAAGnH,CAAb,IAAgBL,CAAhB,GAAkBK,CAA7B;AAA7H,OAAP;AAAsK;;AAAA,WAAOI,CAAP;AAAS;;AAAAmK,EAAAA,mBAAmB,CAAC9K,CAAD,EAAG;AAAC,UAAK;AAACwN,MAAAA,eAAe,EAACvN;AAAjB,QAAoB,KAAKmE,UAA9B;AAAA,UAAyC;AAACqJ,MAAAA,kBAAkB,EAACvN,CAApB;AAAsBwN,MAAAA,oBAAoB,EAACtN;AAA3C,QAA8C,KAAKgE,UAAL,CAAgB8C,WAAvG;AAAmH,QAAG,MAAIlH,CAAP,EAAS,OAAOC,CAAP;AAAS,QAAGM,CAAC,CAACL,CAAD,CAAD,IAAMA,CAAC,CAACwF,MAAX,EAAkB,OAAOxF,CAAC,CAACF,CAAC,GAAC,CAAH,CAAR;AAAc,UAAMK,CAAC,GAACD,CAAC,IAAEJ,CAAX;AAAa,WAAM;AAAC6B,MAAAA,CAAC,EAAC5B,CAAC,CAAC4B,CAAF,GAAIxB,CAAP;AAAS0B,MAAAA,CAAC,EAAC9B,CAAC,CAAC8B,CAAF,GAAI1B;AAAf,KAAN;AAAwB;;AAAAsG,EAAAA,qBAAqB,CAAC3G,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAO;AAAC,UAAK;AAACqF,MAAAA,gBAAgB,EAACnF,CAAlB;AAAoBmG,MAAAA,YAAY,EAAClG;AAAjC,QAAoC,KAAK+D,UAA9C;AAAA,UAAyD;AAACiE,MAAAA,UAAU,EAAC9H,CAAZ;AAAc4G,MAAAA,WAAW,EAAC1G,CAA1B;AAA4BmM,MAAAA,mBAAmB,EAACjM,CAAhD;AAAkD2E,MAAAA,MAAM,EAACzE;AAAzD,QAA4D,KAAKuD,UAAL,CAAgB8C,WAArI;AAAA,UAAiJnG,CAAC,GAAC8B,CAAC,CAAC7C,CAAD,EAAGI,CAAH,EAAKF,CAAL,CAApJ;AAA4J,QAAG,CAACG,CAAC,CAAC6F,UAAF,CAAanF,CAAb,CAAJ,EAAoB,OAAO,IAAP;AAAY,QAAGd,CAAC,GAAC,CAAF,IAAKA,CAAC,GAACU,CAAV,EAAY,OAAO,IAAP;AAAY,UAAMM,CAAC,GAAC,KAAK6J,mBAAL,CAAyB7K,CAAzB,CAAR;AAAA,UAAoC;AAAC4B,MAAAA,CAAC,EAACV,CAAH;AAAKY,MAAAA,CAAC,EAACV;AAAP,QAAUJ,CAA9C;AAAA,UAAgDM,CAAC,GAAC,CAACV,CAAC,CAACkB,CAAF,GAAIhB,CAAC,CAACgB,CAAP,IAAUV,CAAV,GAAYZ,CAA9D;AAAA,UAAgEe,CAAC,GAAC,CAACT,CAAC,CAACc,CAAF,GAAIhB,CAAC,CAACgB,CAAP,IAAUV,CAAV,GAAYZ,CAA9E;AAAA,UAAgFkB,CAAC,GAACoG,IAAI,CAAC8F,GAAL,CAASlN,CAAC,GAAC,CAAX,EAAaoH,IAAI,CAACC,KAAL,CAAW,CAACvG,CAAC,GAACsG,IAAI,CAACC,KAAL,CAAWvG,CAAX,CAAH,IAAkBd,CAA7B,CAAb,CAAlF;AAAA,UAAgIkB,CAAC,GAACkG,IAAI,CAAC8F,GAAL,CAASpN,CAAC,GAAC,CAAX,EAAasH,IAAI,CAACC,KAAL,CAAW,CAACtG,CAAC,GAACqG,IAAI,CAACC,KAAL,CAAWtG,CAAX,CAAH,IAAkBjB,CAA7B,CAAb,CAAlI;AAAgL,WAAM;AAACkG,MAAAA,YAAY,EAACxG,CAAd;AAAgB2G,MAAAA,GAAG,EAACiB,IAAI,CAACC,KAAL,CAAWvG,CAAX,CAApB;AAAkCsF,MAAAA,GAAG,EAACgB,IAAI,CAACC,KAAL,CAAWtG,CAAX,CAAtC;AAAoDsF,MAAAA,SAAS,EAACrF,CAA9D;AAAgEsF,MAAAA,SAAS,EAACpF,CAA1E;AAA4EiM,MAAAA,WAAW,EAAC7M;AAAxF,KAAN;AAAiG;;AAAAsE,EAAAA,aAAa,CAACrF,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOE,CAAP,EAASC,CAAT,EAAWE,CAAX,EAAa;AAAC,UAAK,CAACE,CAAD,EAAGE,CAAH,IAAMJ,CAAX;AAAA,UAAaM,CAAC,GAACT,CAAC,CAACyB,CAAF,GAAI3B,CAAC,GAACO,CAAF,GAAIT,CAAC,CAAC6B,CAAzB;AAAA,UAA2Bd,CAAC,GAACF,CAAC,GAACJ,CAAC,GAACT,CAAC,CAAC6B,CAAnC;AAAA,UAAqCZ,CAAC,GAACb,CAAC,CAAC2B,CAAF,GAAI9B,CAAC,GAACU,CAAF,GAAIX,CAAC,CAAC+B,CAAjD;AAAA,UAAmDZ,CAAC,GAACF,CAAC,GAACN,CAAC,GAACX,CAAC,CAAC+B,CAA3D;AAA6D,WAAO,IAAI8B,CAAJ,CAAM;AAAC2D,MAAAA,IAAI,EAAC3G,CAAN;AAAQ0G,MAAAA,IAAI,EAACxG,CAAb;AAAe2G,MAAAA,IAAI,EAACvG,CAApB;AAAsBsG,MAAAA,IAAI,EAACxG,CAA3B;AAA6BsE,MAAAA,gBAAgB,EAAClF;AAA9C,KAAN,CAAP;AAA+D;;AAAA0J,EAAAA,mBAAmB,CAAC/J,CAAD,EAAG;AAAC,WAAM;AAACqI,MAAAA,UAAU,EAACrI,CAAC,GAAC,CAAF,GAAI,KAAKoE,UAAL,CAAgB8C,WAAhB,CAA4BkB,iBAAhC,GAAkD,KAAKhE,UAAL,CAAgB8C,WAAhB,CAA4BmB,UAA1F;AAAqGlB,MAAAA,WAAW,EAACnH,CAAC,GAAC,CAAF,GAAI,KAAKoE,UAAL,CAAgB8C,WAAhB,CAA4BoB,kBAAhC,GAAmD,KAAKlE,UAAL,CAAgB8C,WAAhB,CAA4BC;AAAhM,KAAN;AAAmN;;AAAA0G,EAAAA,cAAc,CAAC7N,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAO;AAAC,UAAME,CAAC,GAAC,KAAKgE,UAAL,CAAgB8C,WAAhB,CAA4B4C,aAA5B,CAA0C9J,CAA1C,CAAR;AAAqD,WAAM,CAACI,CAAD,IAAIA,CAAC,CAACgK,MAAF,GAASnK,CAAb,IAAgBG,CAAC,CAAC+J,MAAF,GAASjK,CAAzB,IAA4BE,CAAC,CAAC6J,MAAF,GAAShK,CAArC,IAAwCG,CAAC,CAAC8J,MAAF,GAAShK,CAAvD;AAAyD;;AAAAqK,EAAAA,aAAa,CAACvK,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOE,CAAP,EAAS;AAAC,UAAMC,CAAC,GAAC,KAAK+D,UAAL,CAAgB8C,WAAhB,CAA4B4C,aAA5B,CAA0C9J,CAA1C,CAAR;AAAqD,QAAG,CAACK,CAAJ,EAAM,OAAOoK,OAAO,CAACqD,OAAR,CAAgB,IAAhB,CAAP;AAA6B,UAAK;AAAC7D,MAAAA,MAAM,EAACxJ,CAAR;AAAUyJ,MAAAA,MAAM,EAACvJ,CAAjB;AAAmBwJ,MAAAA,MAAM,EAAClJ,CAA1B;AAA4BmJ,MAAAA,MAAM,EAACjJ;AAAnC,QAAsCd,CAA3C;AAA6C,QAAGJ,CAAC,GAACQ,CAAF,IAAKP,CAAC,GAACS,CAAP,IAAUV,CAAC,GAACkB,CAAZ,IAAejB,CAAC,GAACe,CAApB,EAAsB,OAAOwJ,OAAO,CAACqD,OAAR,CAAgB,IAAhB,CAAP;AAA6B,UAAMzM,CAAC,GAACM,CAAC,CAAC,KAAKL,GAAN,EAAUlB,CAAC,CAACwF,OAAZ,CAAT;AAAA,UAA8BrE,CAAC,GAAE,GAAEvB,CAAE,IAAGC,CAAE,IAAGC,CAAE,EAA/C;AAAiD,QAAIsB,CAAC,GAACK,CAAC,CAACR,CAAD,EAAGjB,CAAC,CAAC2N,UAAL,EAAgBxM,CAAhB,CAAP;;AAA0B,QAAG,CAAChB,CAAC,CAACiB,CAAD,CAAL,EAAS;AAAC,YAAMnB,CAAC,GAACQ,CAAC,EAAT;AAAYW,MAAAA,CAAC,GAAC,KAAKwF,YAAL,CAAkBhH,CAAlB,EAAoBC,CAApB,EAAsBC,CAAtB,EAAwB,EAAC,GAAGE,CAAJ;AAAM4N,QAAAA,MAAM,EAAC3N,CAAC,CAAC2N;AAAf,OAAxB,CAAF,EAAkDjM,CAAC,CAACV,CAAD,EAAGjB,CAAC,CAAC2N,UAAL,EAAgBxM,CAAhB,EAAkBC,CAAlB,EAAoBnB,CAApB,CAAnD,EAA0EmB,CAAC,CAACmJ,KAAF,CAAS,MAAI;AAAC1I,QAAAA,CAAC,CAACZ,CAAD,EAAGjB,CAAC,CAAC2N,UAAL,EAAgBxM,CAAhB,CAAD;AAAoB,OAAlC,CAA1E;AAA+G;;AAAA,WAAOnB,CAAC,CAAC4N,MAAF,IAAUjN,CAAC,CAACX,CAAD,EAAI,MAAI;AAAC+B,MAAAA,CAAC,CAACd,CAAD,EAAGjB,CAAC,CAAC2N,UAAL,EAAgBxM,CAAhB,CAAD;AAAoB,KAA7B,CAAX,EAA2CC,CAAlD;AAAoD;;AAAAgL,EAAAA,uBAAuB,CAACxM,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAK;AAAC+F,MAAAA,MAAM,EAAC9F,CAAR;AAAU+N,MAAAA,QAAQ,EAAC7N,CAAnB;AAAqB8N,MAAAA,IAAI,EAAC7N,CAA1B;AAA4BkM,MAAAA,MAAM,EAAChM;AAAnC,QAAsCN,CAA3C;AAA6C,QAAG,QAAMM,CAAN,IAASA,CAAC,CAACmF,MAAd,EAAqB,OAAO2G,KAAK,CAACC,OAAN,CAAc/L,CAAC,CAAC,CAAD,CAAf,IAAoBA,CAAC,CAAC4N,SAAF,CAAalO,CAAC,IAAEA,CAAC,CAAC,CAAD,CAAD,IAAMD,CAAN,IAASC,CAAC,CAAC,CAAD,CAAD,IAAMD,CAA/B,CAApB,GAAuDO,CAAC,CAAC6N,OAAF,CAAUpO,CAAV,CAA9D;AAA2E,QAAGA,CAAC,GAACE,CAAC,CAAC,CAAD,CAAN,EAAU,OAAM,CAAC,CAAP;AAAS,UAAMO,CAAC,GAACP,CAAC,CAAC,CAAD,CAAT;AAAa,QAAIS,CAAC,GAAC,CAAC,CAAP;;AAAS,QAAG,cAAYN,CAAf,EAAiB;AAAC,UAAIQ,CAAJ;;AAAM,cAAO,CAAC,SAAOA,CAAC,GAACZ,CAAC,CAACoO,YAAX,IAAyB,KAAK,CAA9B,GAAgCxN,CAAC,CAACyN,WAAF,EAAjC,KAAmD,SAA1D;AAAqE,aAAI,SAAJ;AAAc3N,UAAAA,CAAC,GAACkH,IAAI,CAACsF,KAAL,CAAW,CAACnN,CAAC,GAACS,CAAH,IAAM,GAAN,GAAUL,CAArB,CAAF;AAA0B;;AAAM,aAAI,SAAJ;AAAcO,UAAAA,CAAC,GAACkH,IAAI,CAACsF,KAAL,CAAW,CAACnN,CAAC,GAACS,CAAH,IAAM,GAAN,GAAUL,CAArB,CAAF;AAA0B;;AAAM,aAAI,OAAJ;AAAYO,UAAAA,CAAC,GAACkH,IAAI,CAACsF,KAAL,CAAW,CAACnN,CAAC,GAACS,CAAH,IAAM,IAAN,GAAWL,CAAtB,CAAF;AAA2B;;AAAM,aAAI,MAAJ;AAAWO,UAAAA,CAAC,GAACkH,IAAI,CAACsF,KAAL,CAAW,CAACnN,CAAC,GAACS,CAAH,IAAM,KAAN,GAAYL,CAAvB,CAAF;AAA4B;;AAAM,aAAI,OAAJ;AAAYO,UAAAA,CAAC,GAACkH,IAAI,CAACsF,KAAL,CAAW,CAAC,IAAIoB,IAAJ,CAASvO,CAAT,EAAYwO,cAAZ,KAA6B,IAAID,IAAJ,CAAS9N,CAAT,EAAY+N,cAAZ,EAA9B,IAA4DpO,CAAvE,CAAF;AAA4E;;AAAM,aAAI,SAAJ;AAAcO,UAAAA,CAAC,GAACkH,IAAI,CAACsF,KAAL,CAAW,CAAC,IAAIoB,IAAJ,CAASvO,CAAT,EAAYwO,cAAZ,KAA6B,IAAID,IAAJ,CAAS9N,CAAT,EAAY+N,cAAZ,EAA9B,IAA4D,EAA5D,GAA+DpO,CAA1E,CAAF;AAAvW;;AAAsb,aAAOO,CAAP;AAAS;;AAAA,WAAOkH,IAAI,CAACsF,KAAL,CAAW,CAACnN,CAAC,GAACS,CAAH,IAAML,CAAjB,CAAP;AAA2B;;AAAA6L,EAAAA,wBAAwB,CAACjM,CAAD,EAAG;AAAC,UAAK;AAACgG,MAAAA,MAAM,EAAC/F,CAAR;AAAUgO,MAAAA,QAAQ,EAAC/N,CAAnB;AAAqBgO,MAAAA,IAAI,EAAC9N,CAA1B;AAA4BmM,MAAAA,MAAM,EAAClM;AAAnC,QAAsCL,CAA3C;AAA6C,QAAIO,CAAC,GAAC,CAAC,QAAMF,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAACqF,MAAlB,KAA2B,CAAjC;AAAmC,QAAGnF,CAAH,EAAK,OAAOA,CAAP;AAAS,UAAME,CAAC,GAACR,CAAC,CAAC,CAAD,CAAT;;AAAa,QAAG,MAAIM,CAAJ,IAAO,cAAYH,CAAtB,EAAwB;AAAC,UAAIO,CAAJ;;AAAM,cAAO,CAAC,SAAOA,CAAC,GAACX,CAAC,CAACqO,YAAX,IAAyB,KAAK,CAA9B,GAAgC1N,CAAC,CAAC2N,WAAF,EAAjC,KAAmD,SAA1D;AAAqE,aAAI,SAAJ;AAAc/N,UAAAA,CAAC,GAACsH,IAAI,CAACsF,KAAL,CAAW,CAAClN,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAP,IAAY,GAAZ,GAAgBC,CAA3B,CAAF;AAAgC;;AAAM,aAAI,SAAJ;AAAcK,UAAAA,CAAC,GAACsH,IAAI,CAACsF,KAAL,CAAW,CAAClN,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAP,IAAY,GAAZ,GAAgBC,CAA3B,CAAF;AAAgC;;AAAM,aAAI,OAAJ;AAAYK,UAAAA,CAAC,GAACsH,IAAI,CAACsF,KAAL,CAAW,CAAClN,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAP,IAAY,IAAZ,GAAiBC,CAA5B,CAAF;AAAiC;;AAAM,aAAI,MAAJ;AAAWK,UAAAA,CAAC,GAACsH,IAAI,CAACsF,KAAL,CAAW,CAAClN,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAP,IAAY,KAAZ,GAAkBC,CAA7B,CAAF;AAAkC;;AAAM,aAAI,OAAJ;AAAYK,UAAAA,CAAC,GAACsH,IAAI,CAACsF,KAAL,CAAW,CAAC,IAAIoB,IAAJ,CAAStO,CAAC,CAAC,CAAD,CAAV,EAAeuO,cAAf,KAAgC,IAAID,IAAJ,CAAS9N,CAAT,EAAY+N,cAAZ,EAAjC,IAA+DtO,CAA1E,CAAF;AAA+E;;AAAM,aAAI,SAAJ;AAAcK,UAAAA,CAAC,GAACsH,IAAI,CAACsF,KAAL,CAAW,CAAC,IAAIoB,IAAJ,CAAStO,CAAC,CAAC,CAAD,CAAV,EAAeuO,cAAf,KAAgC,IAAID,IAAJ,CAAS9N,CAAT,EAAY+N,cAAZ,EAAjC,IAA+D,EAA/D,GAAkEtO,CAA7E,CAAF;AAAlY;;AAAod,aAAOK,CAAP;AAAS;;AAAA,WAAOsH,IAAI,CAACsF,KAAL,CAAW,CAAClN,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAP,IAAYC,CAAvB,CAAP;AAAiC;;AAAA4I,EAAAA,2BAA2B,CAAC9I,CAAD,EAAGC,CAAH,EAAK;AAAC,WAAO,QAAM,KAAKwO,wBAAX,KAAsC,KAAKA,wBAAL,GAA8B9K,CAAC,CAAC,KAAKS,UAAN,CAArE,GAAwF7D,CAAC,CAAC,KAAKkO,wBAAL,CAA8BC,YAA/B,CAAD,GAA8C;AAACC,MAAAA,MAAM,EAAC1O,CAAR;AAAU2O,MAAAA,cAAc,EAAC,KAAKH,wBAAL,CAA8BG,cAAvD;AAAsEC,MAAAA,qBAAqB,EAAC,KAAKJ,wBAAL,CAA8BI,qBAA1H;AAAgJ,SAAG,KAAKJ,wBAAL,CAA8BC,YAA9B,CAA2C1O,CAA3C;AAAnJ,KAA9C,GAAgP,IAA/U;AAAoV;;AAA7sV,CAAzB;AAAwuVA,CAAC,CAAC,CAACiB,CAAC,EAAF,CAAD,EAAO6C,CAAC,CAACgL,SAAT,EAAmB,0BAAnB,EAA8C,KAAK,CAAnD,CAAD,EAAuD9O,CAAC,CAAC,CAACiB,CAAC,CAACM,CAAD,CAAF,CAAD,EAAQuC,CAAC,CAACgL,SAAV,EAAoB,KAApB,EAA0B,IAA1B,CAAxD,EAAwF9O,CAAC,CAAC,CAACiB,CAAC,CAAC;AAAC8N,EAAAA,IAAI,EAACC,MAAN;AAAaC,EAAAA,IAAI,EAAC;AAACC,IAAAA,KAAK,EAAC,CAAC;AAAR;AAAlB,CAAD,CAAF,CAAD,EAAoCpL,CAAC,CAACgL,SAAtC,EAAgD,aAAhD,EAA8D,KAAK,CAAnE,CAAzF,EAA+J9O,CAAC,CAAC,CAACiB,CAAC,CAAC;AAAC8N,EAAAA,IAAI,EAACC,MAAN;AAAaC,EAAAA,IAAI,EAAC;AAACC,IAAAA,KAAK,EAAC,CAAC;AAAR;AAAlB,CAAD,CAAF,CAAD,EAAoCpL,CAAC,CAACgL,SAAtC,EAAgD,eAAhD,EAAgE,KAAK,CAArE,CAAhK,EAAwO9O,CAAC,CAAC,CAACiB,CAAC,EAAF,CAAD,EAAO6C,CAAC,CAACgL,SAAT,EAAmB,YAAnB,EAAgC,KAAK,CAArC,CAAzO,EAAiR9O,CAAC,CAAC,CAACiB,CAAC,EAAF,CAAD,EAAO6C,CAAC,CAACgL,SAAT,EAAmB,UAAnB,EAA8B,KAAK,CAAnC,CAAlR,EAAwT9O,CAAC,CAAC,CAACiB,CAAC,EAAF,CAAD,EAAO6C,CAAC,CAACgL,SAAT,EAAmB,YAAnB,EAAgC,KAAK,CAArC,CAAzT,EAAiWhL,CAAC,GAAC9D,CAAC,CAAC,CAACmB,CAAC,CAAC,+CAAD,CAAF,CAAD,EAAsD2C,CAAtD,CAApW;AAA6Z,IAAI/D,CAAC,GAAC+D,CAAN;AAAQ,eAAe/D,CAAf","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../request.js\";import r from\"../../../core/Error.js\";import{JSONSupport as o}from\"../../../core/JSONSupport.js\";import n from\"../../../core/Logger.js\";import{isSome as i,unwrap as s}from\"../../../core/maybe.js\";import{EsriPromiseMixin as a}from\"../../../core/Promise.js\";import{createAbortController as l,onAbort as c}from\"../../../core/promiseUtils.js\";import{property as f}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as u}from\"../../../core/accessorSupport/decorators/subclass.js\";import{sanitizeUrl as m}from\"../arcgisLayerUrl.js\";import{url as h}from\"../commonProperties.js\";import d from\"../RasterStorageInfo.js\";import p from\"../TileInfo.js\";import{getRasterId as g,getBlock as x,putBlock as y,deleteBlock as I,decreaseRefCount as w}from\"./RawBlockCache.js\";import{decode as k}from\"../rasterFormats/RasterCodec.js\";import{mosaic as v,approximateTransform as R}from\"../rasterFunctions/pixelUtils.js\";import{load as b,projectPoint as C,snapPyramid as M,snapExtent as T,getWorldWrapCount as P,projectResolution as B,projectExtent as S,getProjectionOffsetGrid as j,getRasterDatasetAlignmentInfo as F}from\"../rasterFunctions/rasterProjectionHelper.js\";import L from\"../../../geometry/Point.js\";import D from\"../../../geometry/Extent.js\";let H=class extends(a(o)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:\"closest\"}}async init(){const e=b();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:\"closest\",tileInfo:p.create(),...e.ioConfig}}),e}set url(e){this._set(\"url\",m(e,n.getLogger(this.declaredClass)))}async open(e){throw new r(\"BaseRaster:open-not-implemented\",\"open() is not implemented\")}async fetchTile(e,t,r,o={}){var n;const{tileInfo:s}=o,a=s.lodAt(e),l=this.getTileExtent({x:a.resolution,y:a.resolution},t,r,s.origin,s.spatialReference,s.size);return null!=(n=o.multidimensionalDefinition)&&n.length&&i(this.rasterInfo.multidimensionalInfo)&&null==o.sliceId&&(o={...o,sliceId:this.getSliceIndex(o.multidimensionalDefinition)||0}),this.fetchPixels(l,s.size[0],s.size[1],o)}async identify(e,t={}){const{spatialReference:r,extent:o}=this.rasterInfo,{datumTransformation:n}=t;let s=C(e,r,n);if(!o.intersects(s))return{location:s,value:null};if(i(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let a=0;if(t.srcResolution){a=M(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel}else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return{location:s,value:null};const{row:c,col:f,rowOffset:u,colOffset:m}=l,h=g(this.url,t.sliceId),d=`${a}/${c}/${f}`;let p=x(h,null,d);i(p)||(p=this.fetchRawTile(a,c,f,t),y(h,null,d,p));const I=await p;if(!(I&&I.pixels&&I.pixels.length>0))return{location:s,value:null};const w=u*this.rasterInfo.storageInfo.blockHeight+m;return{location:s,value:!I.mask||I.mask[w]?I.pixels.map((e=>e[w])):null,pyramidLevel:a}}async fetchPixels(e,t,r,o={}){e=T(e);const n=P(e),i=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(i),{datumTransformation:l}=o,c=new L({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/r,spatialReference:e.spatialReference}),f=o.srcResolution||(a?B(c,i,e,l):c);if(!f)return null;const{pyramidLevel:u,pyramidResolution:m,excessiveReading:h}=M(f,this.rasterInfo,this.ioConfig.sampling);if(h)return null;const d=this.rasterInfo.storageInfo;let p=a?S(e,i,l):e;const g=s(this.rasterInfo.transform);if(g&&(p=g.inverseTransform(p)),null==p)return null;const x={x:Math.floor((p.xmin-d.origin.x)/m.x+.1),y:Math.floor((d.origin.y-p.ymax)/m.y+.1)},y=Math.ceil((p.xmax-p.xmin)/m.x-.1),I=Math.ceil((p.ymax-p.ymin)/m.y-.1);if(y/t>8||I/r>8||n>=2)return null;const w=await this.fetchRawPixels(u,x,{width:y,height:I,wrapCount:n},o);if(!w)return null;const k=u>0?d.pyramidBlockWidth:d.blockWidth,b=u>0?d.pyramidBlockHeight:d.blockHeight;if(!a&&1===w.pixelBlocks.length&&k===t&&b===r&&f.x===c.x&&f.y===c.y)return{extent:e,srcExtent:p,pixelBlock:w.pixelBlocks[0]};const C=j(e,w.extent,c,l,g,n>0);let F;const D=!o.requestRawData,H={rows:C.spacing[0],cols:C.spacing[1]},_=s(this._getRasterTileAlignmentInfo(u,w.extent.xmin)),{pixelBlocks:A,mosaicSize:W,isPartiallyFilled:z}=w;if(this.rasterJobHandler)F=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:A,srcMosaicSize:W,destDimension:D?{width:t,height:r}:null,coefs:D?C.coefficients:null,sampleSpacing:D?H:null,interpolation:o.interpolation,alignmentInfo:_},o);else{const e=v(A,W,null,null,_);F=D?R(e,{width:t,height:r},C.coefficients,H,o.interpolation):e}return o.requestRawData?{srcExtent:p,pixelBlock:F,transformGrid:C,extent:e,isPartiallyFilled:z}:{srcExtent:p,extent:e,pixelBlock:F}}async fetchRawPixels(e,t,r,o){const{origin:n,blockBoundary:i}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:f}=t,{width:u,height:m,wrapCount:h}=r;const d=s(this._getRasterTileAlignmentInfo(e,0));o.buffer&&(c-=o.buffer.cols,f-=o.buffer.rows,u+=2*o.buffer.cols,m+=2*o.buffer.rows);const p=Math.floor(c/a),g=Math.floor(f/l),x=Math.floor((c+u-1)/a),y=Math.floor((f+m-1)/l),I=i[e];if(!I)return null;const{minRow:w,minCol:k,maxCol:v,maxRow:R}=I;if(y<w||x<k||g>R||p>v)return null;const b=[];let C,M=!1;for(let s=g;s<=y;s++)for(let t=p;t<=x;t++){const r=0===h||null==d||t<d.worldColumnCountFromOrigin?t:t%d.worldColumnCountFromOrigin-d.originColumnOffset;s>=w&&r>=k&&R>=s&&v>=r?(C=this._fetchRawTile(e,s,r,o),this.ioConfig.allowPartialFill&&(C=new Promise((e=>{C.then((t=>e(t))).catch((()=>{M=!0,e(null)}))}))),b.push(C)):b.push(null)}if(0===b.length)return null;const T=await Promise.all(b),P={height:(y-g+1)*l,width:(x-p+1)*a},{spatialReference:B}=this.rasterInfo,S=this.getPyramidPixelSize(e),{x:j,y:F}=S;return{extent:new D({xmin:n.x+p*a*j,xmax:n.x+(x+1)*a*j,ymin:n.y-(y+1)*l*F,ymax:n.y-g*l*F,spatialReference:B}),pixelBlocks:T,mosaicSize:P,isPartiallyFilled:M}}async fetchRawTile(e,t,o,n){throw new r(\"BaseRaster:read-not-implemented\",\"fetchRawTile() is not implemented\")}computeExtent(e){return S(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?k(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,r,o){var n,i;const{customFetchParameters:s}=this.ioConfig,{range:a,query:l,headers:c}=r;o=null!=(n=null!=(i=o)?i:r.retryCount)?n:this.ioConfig.retryCount;const f=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await t(e,{...r,query:{...l,...s},headers:{...c,...f}})}catch(u){if(o>0)return o--,this.request(e,r,o);throw u}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!i(t)||null==e||!e.length)return null;let r=0;const o=e[0].variableName;for(let n=0;n<t.variables.length;n++){const i=t.variables[n],s=i.dimensions;if(i.name!==o){r+=s.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const a=s.map((e=>this._getDimensionValuesCount(e))),l=s.length;for(let t=0;t<l;t++){const o=e.filter((e=>e.dimensionName===s[t].name))[0];if(null==o)return null;const n=Array.isArray(o.values[0])?o.values[0][0]:o.values[0],i=this._getIndexFromDimensions(n,s[t]);if(-1===i)return null;a.shift(),r+=t===l-1?i:i*a.reduce(((e,t)=>e+t))}}return r}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:r,pixelSize:o}=this.rasterInfo;if(!e.tileInfo){const n=[],i=e.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let e=0;e<=i;e++)n.push({level:i-e,resolution:s,scale:a}),s*=2,a*=2;const l=new L({x:r.xmin,y:r.ymax,spatialReference:t});e.tileInfo=new p({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,r=512,o){const{width:n,height:i,nativeExtent:s,pixelSize:a,spatialReference:l}=e,c=new L({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(n,i))/Math.LN2-8)));const f=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[a],o);e.storageInfo=new d({blockWidth:t,blockHeight:r,pyramidBlockWidth:t,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:f})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,r,o,n,i=0,s=2){if(1===n.length&&i>0){n=[...n];let{x:e,y:t}=n[0];for(let r=0;r<i;r++)e*=s,t*=s,n.push({x:e,y:t})}const a=[],{x:l,y:c}=o;for(let f=0;f<n.length;f++){const{x:o,y:i}=n[f];a.push({minCol:Math.floor((e.xmin-l+.1*o)/t/o),maxCol:Math.floor((e.xmax-l-.1*o)/t/o),minRow:Math.floor((c-e.ymax+.1*i)/r/i),maxRow:Math.floor((c-e.ymin-.1*i)/r/i)})}return a}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:o}=this.rasterInfo.storageInfo;if(0===e)return t;if(i(r)&&r.length)return r[e-1];const n=o**e;return{x:t.x*n,y:t.y*n}}identifyPixelLocation(e,t,r){const{spatialReference:o,nativeExtent:n}=this.rasterInfo,{blockWidth:i,blockHeight:s,maximumPyramidLevel:a,origin:l}=this.rasterInfo.storageInfo,c=C(e,o,r);if(!n.intersects(c))return null;if(t<0||t>a)return null;const f=this.getPyramidPixelSize(t),{x:u,y:m}=f,h=(l.y-c.y)/m/s,d=(c.x-l.x)/u/i,p=Math.min(s-1,Math.floor((h-Math.floor(h))*s)),g=Math.min(i-1,Math.floor((d-Math.floor(d))*i));return{pyramidLevel:t,row:Math.floor(h),col:Math.floor(d),rowOffset:p,colOffset:g,srcLocation:c}}getTileExtent(e,t,r,o,n,i){const[s,a]=i,l=o.x+r*s*e.x,c=l+s*e.x,f=o.y-t*a*e.y,u=f-a*e.y;return new D({xmin:l,xmax:c,ymin:u,ymax:f,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,r){const o=this.rasterInfo.storageInfo.blockBoundary[e];return!o||o.maxRow<t||o.maxCol<r||o.minRow>t||o.minCol>r}_fetchRawTile(e,t,r,o){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:s,minCol:a,maxCol:f,maxRow:u}=n;if(t<s||r<a||t>u||r>f)return Promise.resolve(null);const m=g(this.url,o.sliceId),h=`${e}/${t}/${r}`;let d=x(m,o.registryId,h);if(!i(d)){const n=l();d=this.fetchRawTile(e,t,r,{...o,signal:n.signal}),y(m,o.registryId,h,d,n),d.catch((()=>{I(m,o.registryId,h)}))}return o.signal&&c(o,(()=>{w(m,o.registryId,h)})),d}_getIndexFromDimensions(e,t){const{extent:r,interval:o,unit:n,values:i}=t;if(null!=i&&i.length)return Array.isArray(i[0])?i.findIndex((t=>t[0]<=e&&t[1]>=e)):i.indexOf(e);if(e>r[1])return-1;const s=r[0];let a=-1;if(\"ISO8601\"===n){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||\"seconds\"){case\"seconds\":a=Math.round((e-s)/1e3/o);break;case\"minutes\":a=Math.round((e-s)/6e4/o);break;case\"hours\":a=Math.round((e-s)/36e5/o);break;case\"days\":a=Math.round((e-s)/864e5/o);break;case\"years\":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/o);break;case\"decades\":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/o)}return a}return Math.round((e-s)/o)}_getDimensionValuesCount(e){const{extent:t,interval:r,unit:o,values:n}=e;let i=(null==n?void 0:n.length)||0;if(i)return i;const s=t[0];if(0===i&&\"ISO8601\"===o){var a;switch((null==(a=e.intervalUnit)?void 0:a.toLowerCase())||\"seconds\"){case\"seconds\":i=Math.round((t[1]-t[0])/1e3/r);break;case\"minutes\":i=Math.round((t[1]-t[0])/6e4/r);break;case\"hours\":i=Math.round((t[1]-t[0])/36e5/r);break;case\"days\":i=Math.round((t[1]-t[0])/864e5/r);break;case\"years\":i=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/r);break;case\"decades\":i=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/r)}return i}return Math.round((t[1]-t[0])/r)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=F(this.rasterInfo)),i(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}};e([f()],H.prototype,\"_rasterTileAlighmentInfo\",void 0),e([f(h)],H.prototype,\"url\",null),e([f({type:String,json:{write:!0}})],H.prototype,\"datasetName\",void 0),e([f({type:String,json:{write:!0}})],H.prototype,\"datasetFormat\",void 0),e([f()],H.prototype,\"rasterInfo\",void 0),e([f()],H.prototype,\"ioConfig\",void 0),e([f()],H.prototype,\"sourceJSON\",void 0),H=e([u(\"esri.layers.support.rasterDatasets.BaseRaster\")],H);var _=H;export default _;\n"]},"metadata":{},"sourceType":"module"}