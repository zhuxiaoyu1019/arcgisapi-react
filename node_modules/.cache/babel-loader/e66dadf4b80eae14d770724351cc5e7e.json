{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { RgbaFloatEncoding as t } from \"../util/RgbaFloatEncoding.glsl.js\";\nimport { glsl as a } from \"../../shaderModules/interfaces.js\";\n\nfunction e(e, o) {\n  e.fragment.include(t), 3 === o.output ? (e.extensions.add(\"GL_OES_standard_derivatives\"), e.fragment.code.add(a`float _calculateFragDepth(const in float depth) {\nconst float SLOPE_SCALE = 2.0;\nconst float BIAS = 2.0 * .000015259;\nfloat m = max(abs(dFdx(depth)), abs(dFdy(depth)));\nfloat result = depth + SLOPE_SCALE * m + BIAS;\nreturn clamp(result, .0, .999999);\n}\nvoid outputDepth(float _linearDepth) {\ngl_FragColor = float2rgba(_calculateFragDepth(_linearDepth));\n}`)) : 1 === o.output && e.fragment.code.add(a`void outputDepth(float _linearDepth) {\ngl_FragColor = float2rgba(_linearDepth);\n}`);\n}\n\nexport { e as OutputDepth };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js"],"names":["RgbaFloatEncoding","t","glsl","a","e","o","fragment","include","output","extensions","add","code","OutputDepth"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,iBAAiB,IAAIC,CAA5B,QAAkC,mCAAlC;AAAsE,SAAOC,IAAI,IAAIC,CAAf,QAAqB,mCAArB;;AAAyD,SAASC,CAAT,CAAWA,CAAX,EAAaC,CAAb,EAAe;AAACD,EAAAA,CAAC,CAACE,QAAF,CAAWC,OAAX,CAAmBN,CAAnB,GAAsB,MAAII,CAAC,CAACG,MAAN,IAAcJ,CAAC,CAACK,UAAF,CAAaC,GAAb,CAAiB,6BAAjB,GAAgDN,CAAC,CAACE,QAAF,CAAWK,IAAX,CAAgBD,GAAhB,CAAoBP,CAAE;AACzP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EATmO,CAA9D,IAShK,MAAIE,CAAC,CAACG,MAAN,IAAcJ,CAAC,CAACE,QAAF,CAAWK,IAAX,CAAgBD,GAAhB,CAAoBP,CAAE;AACzC;AACA,EAFmB,CAT4H;AAW3I;;AAAA,SAAOC,CAAC,IAAIQ,WAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{RgbaFloatEncoding as t}from\"../util/RgbaFloatEncoding.glsl.js\";import{glsl as a}from\"../../shaderModules/interfaces.js\";function e(e,o){e.fragment.include(t),3===o.output?(e.extensions.add(\"GL_OES_standard_derivatives\"),e.fragment.code.add(a`float _calculateFragDepth(const in float depth) {\nconst float SLOPE_SCALE = 2.0;\nconst float BIAS = 2.0 * .000015259;\nfloat m = max(abs(dFdx(depth)), abs(dFdy(depth)));\nfloat result = depth + SLOPE_SCALE * m + BIAS;\nreturn clamp(result, .0, .999999);\n}\nvoid outputDepth(float _linearDepth) {\ngl_FragColor = float2rgba(_calculateFragDepth(_linearDepth));\n}`)):1===o.output&&e.fragment.code.add(a`void outputDepth(float _linearDepth) {\ngl_FragColor = float2rgba(_linearDepth);\n}`)}export{e as OutputDepth};\n"]},"metadata":{},"sourceType":"module"}