{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { PositionAttribute as e } from \"./PositionAttribute.glsl.js\";\nimport { glsl as o } from \"../../shaderModules/interfaces.js\";\n\nfunction r(r, i) {\n  r.attributes.add(\"featureValue\", \"vec4\"), r.vertex.code.add(o`bool isCapVertex() {\nreturn featureValue.w == 1.0;\n}`), r.vertex.uniforms.add(\"size\", \"vec3\"), i.vvSize ? (r.vertex.uniforms.add(\"vvSizeMinSize\", \"vec3\"), r.vertex.uniforms.add(\"vvSizeMaxSize\", \"vec3\"), r.vertex.uniforms.add(\"vvSizeOffset\", \"vec3\"), r.vertex.uniforms.add(\"vvSizeFactor\", \"vec3\"), r.vertex.code.add(o`vec2 getSize() {\nreturn size.xy*clamp(vvSizeOffset + featureValue.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).xz;\n}`)) : r.vertex.code.add(o`vec2 getSize(){\nreturn size.xy;\n}`), i.vvOpacity ? (r.vertex.constants.add(\"vvOpacityNumber\", \"int\", 8), r.vertex.code.add(o`uniform float vvOpacityValues[vvOpacityNumber];\nuniform float vvOpacityOpacities[vvOpacityNumber];\nvec4 applyOpacity(vec4 color) {\nfloat value = featureValue.z;\nif (value <= vvOpacityValues[0]) {\nreturn vec4( color.xyz, vvOpacityOpacities[0]);\n}\nfor (int i = 1; i < vvOpacityNumber; ++i) {\nif (vvOpacityValues[i] >= value) {\nfloat f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);\nreturn vec4( color.xyz, mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f));\n}\n}\nreturn vec4( color.xyz, vvOpacityOpacities[vvOpacityNumber - 1]);\n}`)) : r.vertex.code.add(o`vec4 applyOpacity(vec4 color){\nreturn color;\n}`), i.vvColor ? (r.vertex.constants.add(\"vvColorNumber\", \"int\", 8), r.vertex.code.add(o`uniform float vvColorValues[vvColorNumber];\nuniform vec4 vvColorColors[vvColorNumber];\nvec4 getColor() {\nfloat value = featureValue.y;\nif (value <= vvColorValues[0]) {\nreturn applyOpacity(vvColorColors[0]);\n}\nfor (int i = 1; i < vvColorNumber; ++i) {\nif (vvColorValues[i] >= value) {\nfloat f = (value - vvColorValues[i-1]) / (vvColorValues[i] - vvColorValues[i-1]);\nreturn applyOpacity(mix(vvColorColors[i-1], vvColorColors[i], f));\n}\n}\nreturn applyOpacity(vvColorColors[vvColorNumber - 1]);\n}`)) : r.vertex.code.add(o`vec4 getColor(){\nreturn applyOpacity(vec4(1, 1, 1, 1));\n}`), r.include(e), r.attributes.add(\"profileRight\", \"vec4\"), r.attributes.add(\"profileUp\", \"vec4\"), r.attributes.add(\"profileVertexAndNormal\", \"vec4\"), r.vertex.code.add(o`vec3 calculateVPos() {\nvec2 size = getSize();\nvec3 origin = position;\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileVertex = profileVertexAndNormal.xy * size;\nvec2 profileNormal = profileVertexAndNormal.zw;\nfloat positionOffsetAlongProfilePlaneNormal = 0.0;\nfloat normalOffsetAlongProfilePlaneNormal = 0.0;`), r.vertex.code.add(o`if(!isCapVertex()) {\nvec2 rotationRight = vec2(profileRight.w, profileUp.w);\nfloat maxDistance = length(rotationRight);`), r.vertex.code.add(o`rotationRight = maxDistance > 0.0 ? normalize(rotationRight) : vec2(0, 0);\nfloat rx = dot(profileVertex, rotationRight);\nif (abs(rx) > maxDistance) {\nvec2 rotationUp = vec2(-rotationRight.y, rotationRight.x);\nfloat ry = dot(profileVertex, rotationUp);\nprofileVertex = rotationRight * maxDistance * sign(rx) + rotationUp * ry;\n}\n}else{\npositionOffsetAlongProfilePlaneNormal = profileRight.w * size[0];\nnormalOffsetAlongProfilePlaneNormal = profileUp.w;\n}\nvec3 offset = right * profileVertex.x + up * profileVertex.y + forward * positionOffsetAlongProfilePlaneNormal;\nreturn origin + offset;\n}`), r.vertex.code.add(o`vec3 localNormal() {\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileNormal = profileVertexAndNormal.zw;\nvec3 normal = right * profileNormal.x + up * profileNormal.y;\nif(isCapVertex()) {\nnormal += forward * profileUp.w;\n}\nreturn normal;\n}`);\n}\n\nfunction i(e, o) {\n  o.vvSizeEnabled && (e.setUniform3fv(\"vvSizeMinSize\", o.vvSizeMinSize), e.setUniform3fv(\"vvSizeMaxSize\", o.vvSizeMaxSize), e.setUniform3fv(\"vvSizeOffset\", o.vvSizeOffset), e.setUniform3fv(\"vvSizeFactor\", o.vvSizeFactor)), o.vvColorEnabled && (e.setUniform1fv(\"vvColorValues\", o.vvColorValues), e.setUniform4fv(\"vvColorColors\", o.vvColorColors)), o.vvOpacityEnabled && (e.setUniform1fv(\"vvOpacityValues\", o.vvOpacityValues), e.setUniform1fv(\"vvOpacityOpacities\", o.vvOpacityOpacities));\n}\n\nexport { r as PathVertexPosition, i as setVVUniforms };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/PathVertexPosition.glsl.js"],"names":["PositionAttribute","e","glsl","o","r","i","attributes","add","vertex","code","uniforms","vvSize","vvOpacity","constants","vvColor","include","vvSizeEnabled","setUniform3fv","vvSizeMinSize","vvSizeMaxSize","vvSizeOffset","vvSizeFactor","vvColorEnabled","setUniform1fv","vvColorValues","setUniform4fv","vvColorColors","vvOpacityEnabled","vvOpacityValues","vvOpacityOpacities","PathVertexPosition","setVVUniforms"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{PositionAttribute as e}from\"./PositionAttribute.glsl.js\";import{glsl as o}from\"../../shaderModules/interfaces.js\";function r(r,i){r.attributes.add(\"featureValue\",\"vec4\"),r.vertex.code.add(o`bool isCapVertex() {\nreturn featureValue.w == 1.0;\n}`),r.vertex.uniforms.add(\"size\",\"vec3\"),i.vvSize?(r.vertex.uniforms.add(\"vvSizeMinSize\",\"vec3\"),r.vertex.uniforms.add(\"vvSizeMaxSize\",\"vec3\"),r.vertex.uniforms.add(\"vvSizeOffset\",\"vec3\"),r.vertex.uniforms.add(\"vvSizeFactor\",\"vec3\"),r.vertex.code.add(o`vec2 getSize() {\nreturn size.xy*clamp(vvSizeOffset + featureValue.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).xz;\n}`)):r.vertex.code.add(o`vec2 getSize(){\nreturn size.xy;\n}`),i.vvOpacity?(r.vertex.constants.add(\"vvOpacityNumber\",\"int\",8),r.vertex.code.add(o`uniform float vvOpacityValues[vvOpacityNumber];\nuniform float vvOpacityOpacities[vvOpacityNumber];\nvec4 applyOpacity(vec4 color) {\nfloat value = featureValue.z;\nif (value <= vvOpacityValues[0]) {\nreturn vec4( color.xyz, vvOpacityOpacities[0]);\n}\nfor (int i = 1; i < vvOpacityNumber; ++i) {\nif (vvOpacityValues[i] >= value) {\nfloat f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);\nreturn vec4( color.xyz, mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f));\n}\n}\nreturn vec4( color.xyz, vvOpacityOpacities[vvOpacityNumber - 1]);\n}`)):r.vertex.code.add(o`vec4 applyOpacity(vec4 color){\nreturn color;\n}`),i.vvColor?(r.vertex.constants.add(\"vvColorNumber\",\"int\",8),r.vertex.code.add(o`uniform float vvColorValues[vvColorNumber];\nuniform vec4 vvColorColors[vvColorNumber];\nvec4 getColor() {\nfloat value = featureValue.y;\nif (value <= vvColorValues[0]) {\nreturn applyOpacity(vvColorColors[0]);\n}\nfor (int i = 1; i < vvColorNumber; ++i) {\nif (vvColorValues[i] >= value) {\nfloat f = (value - vvColorValues[i-1]) / (vvColorValues[i] - vvColorValues[i-1]);\nreturn applyOpacity(mix(vvColorColors[i-1], vvColorColors[i], f));\n}\n}\nreturn applyOpacity(vvColorColors[vvColorNumber - 1]);\n}`)):r.vertex.code.add(o`vec4 getColor(){\nreturn applyOpacity(vec4(1, 1, 1, 1));\n}`),r.include(e),r.attributes.add(\"profileRight\",\"vec4\"),r.attributes.add(\"profileUp\",\"vec4\"),r.attributes.add(\"profileVertexAndNormal\",\"vec4\"),r.vertex.code.add(o`vec3 calculateVPos() {\nvec2 size = getSize();\nvec3 origin = position;\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileVertex = profileVertexAndNormal.xy * size;\nvec2 profileNormal = profileVertexAndNormal.zw;\nfloat positionOffsetAlongProfilePlaneNormal = 0.0;\nfloat normalOffsetAlongProfilePlaneNormal = 0.0;`),r.vertex.code.add(o`if(!isCapVertex()) {\nvec2 rotationRight = vec2(profileRight.w, profileUp.w);\nfloat maxDistance = length(rotationRight);`),r.vertex.code.add(o`rotationRight = maxDistance > 0.0 ? normalize(rotationRight) : vec2(0, 0);\nfloat rx = dot(profileVertex, rotationRight);\nif (abs(rx) > maxDistance) {\nvec2 rotationUp = vec2(-rotationRight.y, rotationRight.x);\nfloat ry = dot(profileVertex, rotationUp);\nprofileVertex = rotationRight * maxDistance * sign(rx) + rotationUp * ry;\n}\n}else{\npositionOffsetAlongProfilePlaneNormal = profileRight.w * size[0];\nnormalOffsetAlongProfilePlaneNormal = profileUp.w;\n}\nvec3 offset = right * profileVertex.x + up * profileVertex.y + forward * positionOffsetAlongProfilePlaneNormal;\nreturn origin + offset;\n}`),r.vertex.code.add(o`vec3 localNormal() {\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileNormal = profileVertexAndNormal.zw;\nvec3 normal = right * profileNormal.x + up * profileNormal.y;\nif(isCapVertex()) {\nnormal += forward * profileUp.w;\n}\nreturn normal;\n}`)}function i(e,o){o.vvSizeEnabled&&(e.setUniform3fv(\"vvSizeMinSize\",o.vvSizeMinSize),e.setUniform3fv(\"vvSizeMaxSize\",o.vvSizeMaxSize),e.setUniform3fv(\"vvSizeOffset\",o.vvSizeOffset),e.setUniform3fv(\"vvSizeFactor\",o.vvSizeFactor)),o.vvColorEnabled&&(e.setUniform1fv(\"vvColorValues\",o.vvColorValues),e.setUniform4fv(\"vvColorColors\",o.vvColorColors)),o.vvOpacityEnabled&&(e.setUniform1fv(\"vvOpacityValues\",o.vvOpacityValues),e.setUniform1fv(\"vvOpacityOpacities\",o.vvOpacityOpacities))}export{r as PathVertexPosition,i as setVVUniforms};\n"]},"metadata":{},"sourceType":"module"}