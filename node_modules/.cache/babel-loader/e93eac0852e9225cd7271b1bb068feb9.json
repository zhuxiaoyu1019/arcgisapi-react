{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../../Graphic.js\";\nimport { cloneGeometry as t } from \"../../kernel.js\";\nimport r from \"../support/FeatureSet.js\";\nimport s from \"../support/IdSet.js\";\nimport { cloneField as i, FeatureServiceDatabaseType as a, layerGeometryEsriConstants as l } from \"../support/shared.js\";\nimport { reformulateWithoutField as n, toWhereClause as o, translateFunctionToDatabaseSpecific as h, makeToday as u, makeDateString as d, convertIntervalToSql as c, combine as p, scanForField as f } from \"../support/sqlUtils.js\";\nimport { resolve as g, reject as _ } from \"../../../core/promiseUtils.js\";\nimport { WhereClause as N } from \"../../../core/sql/WhereClause.js\";\nimport S from \"../../../geometry/SpatialReference.js\";\n\nclass m {\n  constructor() {\n    this.sqlRewritable = !1;\n  }\n\n  postInitialization(e, t) {}\n\n}\n\nclass w extends m {\n  constructor(e) {\n    super(), this.field = e, this.sqlRewritable = !0;\n  }\n\n  extractValue(e) {\n    return e.attributes[this.field.name];\n  }\n\n  rewriteSql(e) {\n    return {\n      rewritten: this.sqlRewritable,\n      where: e\n    };\n  }\n\n}\n\nclass v extends m {\n  constructor(e, t, r) {\n    super(), this.originalField = e, this.sqlRewritable = !0, this.field = i(e), this.field.name = t, this.field.alias = r;\n  }\n\n  rewriteSql(e, t) {\n    return {\n      rewritten: this.sqlRewritable,\n      where: n(e, this.field.name, this.originalField.name, t.getFieldsIndex())\n    };\n  }\n\n  extractValue(e) {\n    return e.attributes[this.originalField.name];\n  }\n\n}\n\nclass C extends m {\n  constructor(e, t, r) {\n    super(), this.field = e, this.codefield = t, this.lkp = r, this.reverseLkp = {};\n\n    for (const s in r) this.reverseLkp[r[s]] = s;\n\n    this.sqlRewritable = !0;\n  }\n\n  rewriteSql(e, t) {\n    const r = this.evaluateNodeToWhereClause(e.parseTree, a.Standardised, this.field.name, this.codefield instanceof N ? o(this.codefield, a.Standardised) : this.codefield, e.parameters);\n    return r.indexOf(C.BADNESS) >= 0 ? {\n      rewritten: !1,\n      where: e\n    } : {\n      rewritten: this.sqlRewritable,\n      where: N.create(r, t._parent.getFieldsIndex())\n    };\n  }\n\n  evaluateNodeToWhereClause(e, t, r = null, s = null, i) {\n    let a, l, n, o;\n\n    switch (e.type) {\n      case \"interval\":\n        return c(this.evaluateNodeToWhereClause(e.value, t, r, s, i), e.qualifier, e.op);\n\n      case \"case_expression\":\n        {\n          let s = \" CASE \";\n          \"simple\" === e.format && (s += this.evaluateNodeToWhereClause(e.operand, t, r, C.BADNESS, i));\n\n          for (let a = 0; a < e.clauses.length; a++) s += \" WHEN \" + this.evaluateNodeToWhereClause(e.clauses[a].operand, t, r, C.BADNESS, i) + \" THEN \" + this.evaluateNodeToWhereClause(e.clauses[a].value, t, r, C.BADNESS, i);\n\n          return null !== e.else && (s += \" ELSE \" + this.evaluateNodeToWhereClause(e.else, t, r, C.BADNESS, i)), s += \" END \", s;\n        }\n\n      case \"param\":\n        {\n          const r = i[e.value.toLowerCase()];\n\n          if (\"string\" == typeof r) {\n            return \"'\" + i[e.value.toLowerCase()].toString().replace(/'/g, \"''\") + \"'\";\n          }\n\n          if (r instanceof Date) return d(r, t);\n\n          if (r instanceof Array) {\n            const e = [];\n\n            for (let s = 0; s < r.length; s++) \"string\" == typeof r[s] ? e.push(\"'\" + r[s].toString().replace(/'/g, \"''\") + \"'\") : r[s] instanceof Date ? e.push(d(r[s], t)) : e.push(r[s].toString());\n\n            return e;\n          }\n\n          return r.toString();\n        }\n\n      case \"expr_list\":\n        l = [];\n\n        for (const a of e.value) l.push(this.evaluateNodeToWhereClause(a, t, r, s, i));\n\n        return l;\n\n      case \"unary_expr\":\n        return \" ( NOT \" + this.evaluateNodeToWhereClause(e.expr, t, r, C.BADNESS, i) + \" ) \";\n\n      case \"binary_expr\":\n        switch (e.operator) {\n          case \"AND\":\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" AND \" + this.evaluateNodeToWhereClause(e.right, t, r, s, i) + \") \";\n\n          case \"OR\":\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" OR \" + this.evaluateNodeToWhereClause(e.right, t, r, s, i) + \") \";\n\n          case \"IS\":\n            if (\"null\" !== e.right.type) throw new Error(\"Unsupported RHS for IS\");\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" IS NULL )\";\n\n          case \"ISNOT\":\n            if (\"null\" !== e.right.type) throw new Error(\"Unsupported RHS for IS\");\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" IS NOT NULL )\";\n\n          case \"IN\":\n            if (a = [], \"expr_list\" === e.right.type) {\n              if (\"column_ref\" === e.left.type && e.left.column.toUpperCase() === this.field.name.toUpperCase()) {\n                const a = [];\n                let l = !0;\n\n                for (const t of e.right.value) {\n                  if (\"string\" !== t.type) {\n                    l = !1;\n                    break;\n                  }\n\n                  if (void 0 === this.lkp[t.value]) {\n                    l = !1;\n                    break;\n                  }\n\n                  a.push(this.lkp[t.value].toString());\n                }\n\n                if (l) return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" IN (\" + a.join(\",\") + \")) \";\n              }\n\n              return a = this.evaluateNodeToWhereClause(e.right, t, r, s, i), \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" IN (\" + a.join(\",\") + \")) \";\n            }\n\n            return o = this.evaluateNodeToWhereClause(e.right, t, r, s, i), o instanceof Array ? \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" IN (\" + o.join(\",\") + \")) \" : \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" IN (\" + o + \")) \";\n\n          case \"NOT IN\":\n            if (a = [], \"expr_list\" === e.right.type) {\n              if (\"column_ref\" === e.left.type && e.left.column.toUpperCase() === this.field.name.toUpperCase()) {\n                const a = [];\n                let l = !0;\n\n                for (const t of e.right.value) {\n                  if (\"string\" !== t.type) {\n                    l = !1;\n                    break;\n                  }\n\n                  if (void 0 === this.lkp[t.value]) {\n                    l = !1;\n                    break;\n                  }\n\n                  a.push(this.lkp[t.value].toString());\n                }\n\n                if (l) return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" NOT IN (\" + a.join(\",\") + \")) \";\n              }\n\n              return a = this.evaluateNodeToWhereClause(e.right, t, r, s, i), \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" NOT IN (\" + a.join(\",\") + \")) \";\n            }\n\n            return o = this.evaluateNodeToWhereClause(e.right, t, r, s, i), o instanceof Array ? \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" NOT IN (\" + o.join(\",\") + \")) \" : \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, i) + \" NOT IN (\" + o + \")) \";\n\n          case \"BETWEEN\":\n            return n = this.evaluateNodeToWhereClause(e.right, t, r, C.BADNESS, i), \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, C.BADNESS, i) + \" BETWEEN \" + n[0] + \" AND \" + n[1] + \" ) \";\n\n          case \"NOTBETWEEN\":\n            return n = this.evaluateNodeToWhereClause(e.right, t, r, C.BADNESS, i), \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, C.BADNESS, i) + \" NOT BETWEEN \" + n[0] + \" AND \" + n[1] + \" ) \";\n\n          case \"LIKE\":\n            return \"\" !== e.escape ? \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, C.BADNESS, i) + \" LIKE \" + this.evaluateNodeToWhereClause(e.right, t, r, C.BADNESS, i) + \" ESCAPE '\" + e.escape + \"') \" : \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, C.BADNESS, i) + \" LIKE \" + this.evaluateNodeToWhereClause(e.right, t, r, C.BADNESS, i) + \") \";\n\n          case \"NOT LIKE\":\n            return \"\" !== e.escape ? \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, C.BADNESS, i) + \" NOT LIKE \" + this.evaluateNodeToWhereClause(e.right, t, r, C.BADNESS, i) + \" ESCAPE '\" + e.escape + \"') \" : \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, C.BADNESS, i) + \" NOT LIKE \" + this.evaluateNodeToWhereClause(e.right, t, r, C.BADNESS, i) + \") \";\n\n          case \"<>\":\n          case \"=\":\n            if (\"column_ref\" === e.left.type && \"string\" === e.right.type) {\n              if (e.left.column.toUpperCase() === this.field.name.toUpperCase() && void 0 !== this.lkp[e.right.value.toString()]) return \" (\" + s + \" \" + e.operator + \" \" + this.lkp[e.right.value.toString()].toString() + \") \";\n            } else if (\"column_ref\" === e.right.type && \"string\" === e.left.type && e.right.column.toUpperCase() === this.field.name.toUpperCase()) return \" (\" + this.lkp[e.right.value.toString()].toString() + \" \" + e.operator + \" \" + s + \") \";\n\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, C.BADNESS, i) + \" \" + e.operator + \" \" + this.evaluateNodeToWhereClause(e.right, t, r, C.BADNESS, i) + \") \";\n\n          case \"<\":\n          case \">\":\n          case \">=\":\n          case \"<=\":\n          case \"*\":\n          case \"-\":\n          case \"+\":\n          case \"/\":\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, C.BADNESS, i) + \" \" + e.operator + \" \" + this.evaluateNodeToWhereClause(e.right, t, r, C.BADNESS, i) + \") \";\n        }\n\n        throw new Error(\"Not Supported Operator \" + e.operator);\n\n      case \"null\":\n        return \"null\";\n\n      case \"bool\":\n        return !0 === e.value ? \"1\" : \"0\";\n\n      case \"string\":\n        return \"'\" + e.value.toString().replace(/'/g, \"''\") + \"'\";\n\n      case \"timestamp\":\n      case \"date\":\n        return d(e.value, t);\n\n      case \"number\":\n        return e.value.toString();\n\n      case \"current_time\":\n        return u(\"date\" === e.mode, t);\n\n      case \"column_ref\":\n        return r && r.toLowerCase() === e.column.toLowerCase() ? \"(\" + s + \")\" : e.column;\n\n      case \"function\":\n        {\n          const s = this.evaluateNodeToWhereClause(e.args, t, r, C.BADNESS, i);\n          return h(e.name, s, t);\n        }\n    }\n\n    throw new Error(\"Unsupported sql syntax \" + e.type);\n  }\n\n  extractValue(e) {\n    return this.codefield instanceof N ? this.reverseLkp[this.codefield.calculateValueCompiled(e)] : this.reverseLkp[e.attributes[this.codefield]];\n  }\n\n}\n\nC.BADNESS = \"_!!!_BAD_LKP_!!!!\";\n\nclass T extends m {\n  constructor(e, t) {\n    super(), this.field = e, this.sql = t;\n  }\n\n  rewriteSql(e, t) {\n    return {\n      rewritten: !0,\n      where: n(e, this.field.name, o(this.sql, a.Standardised), t.getFieldsIndex())\n    };\n  }\n\n  extractValue(e) {\n    return this.sql.calculateValueCompiled(e);\n  }\n\n}\n\nclass E extends r {\n  constructor(e) {\n    super(e), this._calcFunc = null, this.declaredClass = \"esri.arcade.featureset.actions.Adapted\", this.adaptedFields = null, this._extraFilter = null, this._extraFilter = e.extraFilter, this._parent = e.parentfeatureset, this._maxProcessing = 30, this.adaptedFields = e.adaptedFields;\n  }\n\n  static findField(e, t) {\n    for (const r of e) if (r.name.toLowerCase() === t.toString().toLowerCase()) return r;\n\n    return null;\n  }\n\n  _initialiseFeatureSet() {\n    null !== this._parent ? (this.geometryType = this._parent.geometryType, this.objectIdField = this._parent.objectIdField, this.globalIdField = this._parent.globalIdField, this.spatialReference = this._parent.spatialReference, this.hasM = this._parent.hasM, this.hasZ = this._parent.hasZ, this.typeIdField = this._parent.typeIdField, this.types = this._parent.types) : (this.spatialReference = new S({\n      wkid: 4326\n    }), this.objectIdField = \"\", this.globalIdField = \"\", this.geometryType = l.point, this.typeIdField = \"\", this.types = null), this.fields = [];\n\n    for (const e of this.adaptedFields) e.postInitialization(this, this._parent), this.fields.push(e.field);\n  }\n\n  _getSet(e) {\n    return null === this._wset ? this._ensureLoaded().then(() => this._extraFilter ? this._getFilteredSet(\"\", null, null, null, e) : this._parent._getSet(e)).then(t => (this._checkCancelled(e), this._wset = new s(t._candidates.slice(0), t._known.slice(0), t._ordered, this._clonePageDefinition(t.pagesDefinition)), this._wset)) : g(this._wset);\n  }\n\n  _isInFeatureSet(e) {\n    return this._parent._isInFeatureSet(e);\n  }\n\n  _getFeatures(r, i, a, l) {\n    const n = [];\n    -1 !== i && void 0 === this._featureCache[i] && n.push(i);\n\n    const o = this._maxQueryRate();\n\n    if (!0 === this._checkIfNeedToExpandKnownPage(r, o)) return this._expandPagedSet(r, o, 0, 0, l).then(() => this._getFeatures(r, i, a, l));\n    let h = 0;\n\n    for (let e = r._lastFetchedIndex; e < r._known.length && (h++, h <= a && (r._lastFetchedIndex += 1), !(void 0 === this._featureCache[r._known[e]] && (r._known[e] !== i && n.push(r._known[e]), n.length >= o))); e++);\n\n    if (0 === n.length) return g(\"success\");\n    r = new s([], n, r._ordered, null);\n    const u = Math.min(n.length, a);\n    return this._parent._getFeatures(r, -1, u, l).then(() => {\n      this._checkCancelled(l);\n\n      const r = [];\n\n      for (let e = 0; e < u; e++) {\n        const t = this._parent._featureFromCache(n[e]);\n\n        void 0 !== t && r.push({\n          geometry: t.geometry,\n          attributes: t.attributes,\n          id: n[e]\n        });\n      }\n\n      for (const s of r) {\n        const r = [];\n\n        for (const e of this.adaptedFields) r[e.field.name] = e.extractValue(s);\n\n        this._featureCache[s.id] = new e({\n          attributes: r,\n          geometry: t(s.geometry)\n        });\n      }\n\n      return \"success\";\n    });\n  }\n\n  _fetchAndRefineFeatures() {\n    return _(new Error(\"Fetch and Refine should not be called in this featureset\"));\n  }\n\n  _getFilteredSet(e, t, r, i, a) {\n    let l = !1;\n    const n = this.reformulateWithoutAdaptions(r);\n    l = n.cannot, r = n.where;\n    let o = !1;\n\n    if (null !== i) {\n      o = !0;\n      const e = [];\n\n      for (const t of this.adaptedFields) if (!(t instanceof w) && !0 === i.scanForField(t.field.name)) {\n        if (!(t instanceof v)) {\n          i = null, o = !1;\n          break;\n        }\n\n        e.push({\n          field: t.field.name,\n          newfield: t.originalField.name\n        });\n      }\n\n      i && e.length > 0 && (i = i.replaceFields(e));\n    }\n\n    return null !== r ? null !== this._extraFilter && (r = p(this._extraFilter, r)) : r = this._extraFilter, this._ensureLoaded().then(() => this._parent._getFilteredSet(e, t, r, i, a)).then(e => {\n      let t;\n      return this._checkCancelled(a), t = !0 === l ? new s(e._candidates.slice(0).concat(e._known.slice(0)), [], !0 === o && e._ordered, this._clonePageDefinition(e.pagesDefinition)) : new s(e._candidates.slice(0), e._known.slice(0), !0 === o && e._ordered, this._clonePageDefinition(e.pagesDefinition)), t;\n    });\n  }\n\n  reformulateWithoutAdaptions(e) {\n    const t = {\n      cannot: !1,\n      where: e\n    };\n    if (null !== e) for (const r of this.adaptedFields) if (!0 === f(e, r.field.name)) {\n      const s = r.rewriteSql(e, this);\n\n      if (!0 !== s.rewritten) {\n        t.cannot = !0, t.where = null;\n        break;\n      }\n\n      t.where = s.where;\n    }\n    return t;\n  }\n\n  _stat(e, t, r, s, i, a, l) {\n    let n = !1,\n        o = this.reformulateWithoutAdaptions(t);\n    return n = o.cannot, t = o.where, o = this.reformulateWithoutAdaptions(i), n = n || o.cannot, null !== (i = o.where) ? null !== this._extraFilter && (i = p(this._extraFilter, i)) : i = this._extraFilter, !0 === n ? null === i && \"\" === r && null === s ? this._manualStat(e, t, a, l) : g({\n      calculated: !1\n    }) : this._parent._stat(e, t, r, s, i, a, l).then(n => !1 === n.calculated ? null === i && \"\" === r && null === s ? this._manualStat(e, t, a, l) : {\n      calculated: !1\n    } : n);\n  }\n\n  _canDoAggregates(e, t, r, s, i) {\n    if (null === this._parent) return g(!1);\n\n    for (let n = 0; n < e.length; n++) for (const t of this.adaptedFields) if (e[n].toLowerCase() === t.field.name.toLowerCase() && !(t instanceof w)) return g(!1);\n\n    const a = [];\n\n    for (let n = 0; n < t.length; n++) {\n      const e = t[n];\n\n      if (null !== e.workingexpr) {\n        const t = this.reformulateWithoutAdaptions(e.workingexpr);\n        if (t.cannot) return g(!1);\n        const r = e.clone();\n        r.workingexpr = t.where, a.push(r);\n      } else a.push(e);\n    }\n\n    const l = this.reformulateWithoutAdaptions(i);\n    return l.cannot ? g(!1) : (null !== (i = l.where) ? null !== this._extraFilter && (i = p(this._extraFilter, i)) : i = this._extraFilter, this._parent._canDoAggregates(e, a, r, s, i));\n  }\n\n  _getAggregatePagesDataSourceDefinition(e, t, r, s, i, a, l) {\n    if (null === this._parent) return _(new Error(\"Should never be called\"));\n    const n = [];\n\n    for (let h = 0; h < t.length; h++) {\n      const e = t[h];\n\n      if (null !== e.workingexpr) {\n        const t = this.reformulateWithoutAdaptions(e.workingexpr);\n        if (t.cannot) return _(new Error(\"Should never be called\"));\n        const r = e.clone();\n        r.workingexpr = t.where, n.push(r);\n      } else n.push(e);\n    }\n\n    const o = this.reformulateWithoutAdaptions(i);\n    return o.cannot ? _(new Error(\"Should never be called\")) : (null !== (i = o.where) ? null !== this._extraFilter && (i = p(this._extraFilter, i)) : i = this._extraFilter, this._parent._getAggregatePagesDataSourceDefinition(e, n, r, s, i, a, l));\n  }\n\n}\n\nexport { E as AdaptedFeatureSet, m as AdaptedField, v as FieldRename, w as OriginalField, T as SqlExpressionAdapted, C as StringToCodeAdapted };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/arcade/featureset/actions/Adapted.js"],"names":["e","cloneGeometry","t","r","s","cloneField","i","FeatureServiceDatabaseType","a","layerGeometryEsriConstants","l","reformulateWithoutField","n","toWhereClause","o","translateFunctionToDatabaseSpecific","h","makeToday","u","makeDateString","d","convertIntervalToSql","c","combine","p","scanForField","f","resolve","g","reject","_","WhereClause","N","S","m","constructor","sqlRewritable","postInitialization","w","field","extractValue","attributes","name","rewriteSql","rewritten","where","v","originalField","alias","getFieldsIndex","C","codefield","lkp","reverseLkp","evaluateNodeToWhereClause","parseTree","Standardised","parameters","indexOf","BADNESS","create","_parent","type","value","qualifier","op","format","operand","clauses","length","else","toLowerCase","toString","replace","Date","Array","push","expr","operator","left","right","Error","column","toUpperCase","join","escape","mode","args","calculateValueCompiled","T","sql","E","_calcFunc","declaredClass","adaptedFields","_extraFilter","extraFilter","parentfeatureset","_maxProcessing","findField","_initialiseFeatureSet","geometryType","objectIdField","globalIdField","spatialReference","hasM","hasZ","typeIdField","types","wkid","point","fields","_getSet","_wset","_ensureLoaded","then","_getFilteredSet","_checkCancelled","_candidates","slice","_known","_ordered","_clonePageDefinition","pagesDefinition","_isInFeatureSet","_getFeatures","_featureCache","_maxQueryRate","_checkIfNeedToExpandKnownPage","_expandPagedSet","_lastFetchedIndex","Math","min","_featureFromCache","geometry","id","_fetchAndRefineFeatures","reformulateWithoutAdaptions","cannot","newfield","replaceFields","concat","_stat","_manualStat","calculated","_canDoAggregates","workingexpr","clone","_getAggregatePagesDataSourceDefinition","AdaptedFeatureSet","AdaptedField","FieldRename","OriginalField","SqlExpressionAdapted","StringToCodeAdapted"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../../Graphic.js\";import{cloneGeometry as t}from\"../../kernel.js\";import r from\"../support/FeatureSet.js\";import s from\"../support/IdSet.js\";import{cloneField as i,FeatureServiceDatabaseType as a,layerGeometryEsriConstants as l}from\"../support/shared.js\";import{reformulateWithoutField as n,toWhereClause as o,translateFunctionToDatabaseSpecific as h,makeToday as u,makeDateString as d,convertIntervalToSql as c,combine as p,scanForField as f}from\"../support/sqlUtils.js\";import{resolve as g,reject as _}from\"../../../core/promiseUtils.js\";import{WhereClause as N}from\"../../../core/sql/WhereClause.js\";import S from\"../../../geometry/SpatialReference.js\";class m{constructor(){this.sqlRewritable=!1}postInitialization(e,t){}}class w extends m{constructor(e){super(),this.field=e,this.sqlRewritable=!0}extractValue(e){return e.attributes[this.field.name]}rewriteSql(e){return{rewritten:this.sqlRewritable,where:e}}}class v extends m{constructor(e,t,r){super(),this.originalField=e,this.sqlRewritable=!0,this.field=i(e),this.field.name=t,this.field.alias=r}rewriteSql(e,t){return{rewritten:this.sqlRewritable,where:n(e,this.field.name,this.originalField.name,t.getFieldsIndex())}}extractValue(e){return e.attributes[this.originalField.name]}}class C extends m{constructor(e,t,r){super(),this.field=e,this.codefield=t,this.lkp=r,this.reverseLkp={};for(const s in r)this.reverseLkp[r[s]]=s;this.sqlRewritable=!0}rewriteSql(e,t){const r=this.evaluateNodeToWhereClause(e.parseTree,a.Standardised,this.field.name,this.codefield instanceof N?o(this.codefield,a.Standardised):this.codefield,e.parameters);return r.indexOf(C.BADNESS)>=0?{rewritten:!1,where:e}:{rewritten:this.sqlRewritable,where:N.create(r,t._parent.getFieldsIndex())}}evaluateNodeToWhereClause(e,t,r=null,s=null,i){let a,l,n,o;switch(e.type){case\"interval\":return c(this.evaluateNodeToWhereClause(e.value,t,r,s,i),e.qualifier,e.op);case\"case_expression\":{let s=\" CASE \";\"simple\"===e.format&&(s+=this.evaluateNodeToWhereClause(e.operand,t,r,C.BADNESS,i));for(let a=0;a<e.clauses.length;a++)s+=\" WHEN \"+this.evaluateNodeToWhereClause(e.clauses[a].operand,t,r,C.BADNESS,i)+\" THEN \"+this.evaluateNodeToWhereClause(e.clauses[a].value,t,r,C.BADNESS,i);return null!==e.else&&(s+=\" ELSE \"+this.evaluateNodeToWhereClause(e.else,t,r,C.BADNESS,i)),s+=\" END \",s}case\"param\":{const r=i[e.value.toLowerCase()];if(\"string\"==typeof r){return\"'\"+i[e.value.toLowerCase()].toString().replace(/'/g,\"''\")+\"'\"}if(r instanceof Date)return d(r,t);if(r instanceof Array){const e=[];for(let s=0;s<r.length;s++)\"string\"==typeof r[s]?e.push(\"'\"+r[s].toString().replace(/'/g,\"''\")+\"'\"):r[s]instanceof Date?e.push(d(r[s],t)):e.push(r[s].toString());return e}return r.toString()}case\"expr_list\":l=[];for(const a of e.value)l.push(this.evaluateNodeToWhereClause(a,t,r,s,i));return l;case\"unary_expr\":return\" ( NOT \"+this.evaluateNodeToWhereClause(e.expr,t,r,C.BADNESS,i)+\" ) \";case\"binary_expr\":switch(e.operator){case\"AND\":return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" AND \"+this.evaluateNodeToWhereClause(e.right,t,r,s,i)+\") \";case\"OR\":return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" OR \"+this.evaluateNodeToWhereClause(e.right,t,r,s,i)+\") \";case\"IS\":if(\"null\"!==e.right.type)throw new Error(\"Unsupported RHS for IS\");return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" IS NULL )\";case\"ISNOT\":if(\"null\"!==e.right.type)throw new Error(\"Unsupported RHS for IS\");return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" IS NOT NULL )\";case\"IN\":if(a=[],\"expr_list\"===e.right.type){if(\"column_ref\"===e.left.type&&e.left.column.toUpperCase()===this.field.name.toUpperCase()){const a=[];let l=!0;for(const t of e.right.value){if(\"string\"!==t.type){l=!1;break}if(void 0===this.lkp[t.value]){l=!1;break}a.push(this.lkp[t.value].toString())}if(l)return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" IN (\"+a.join(\",\")+\")) \"}return a=this.evaluateNodeToWhereClause(e.right,t,r,s,i),\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" IN (\"+a.join(\",\")+\")) \"}return o=this.evaluateNodeToWhereClause(e.right,t,r,s,i),o instanceof Array?\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" IN (\"+o.join(\",\")+\")) \":\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" IN (\"+o+\")) \";case\"NOT IN\":if(a=[],\"expr_list\"===e.right.type){if(\"column_ref\"===e.left.type&&e.left.column.toUpperCase()===this.field.name.toUpperCase()){const a=[];let l=!0;for(const t of e.right.value){if(\"string\"!==t.type){l=!1;break}if(void 0===this.lkp[t.value]){l=!1;break}a.push(this.lkp[t.value].toString())}if(l)return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" NOT IN (\"+a.join(\",\")+\")) \"}return a=this.evaluateNodeToWhereClause(e.right,t,r,s,i),\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" NOT IN (\"+a.join(\",\")+\")) \"}return o=this.evaluateNodeToWhereClause(e.right,t,r,s,i),o instanceof Array?\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" NOT IN (\"+o.join(\",\")+\")) \":\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,i)+\" NOT IN (\"+o+\")) \";case\"BETWEEN\":return n=this.evaluateNodeToWhereClause(e.right,t,r,C.BADNESS,i),\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,C.BADNESS,i)+\" BETWEEN \"+n[0]+\" AND \"+n[1]+\" ) \";case\"NOTBETWEEN\":return n=this.evaluateNodeToWhereClause(e.right,t,r,C.BADNESS,i),\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,C.BADNESS,i)+\" NOT BETWEEN \"+n[0]+\" AND \"+n[1]+\" ) \";case\"LIKE\":return\"\"!==e.escape?\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,C.BADNESS,i)+\" LIKE \"+this.evaluateNodeToWhereClause(e.right,t,r,C.BADNESS,i)+\" ESCAPE '\"+e.escape+\"') \":\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,C.BADNESS,i)+\" LIKE \"+this.evaluateNodeToWhereClause(e.right,t,r,C.BADNESS,i)+\") \";case\"NOT LIKE\":return\"\"!==e.escape?\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,C.BADNESS,i)+\" NOT LIKE \"+this.evaluateNodeToWhereClause(e.right,t,r,C.BADNESS,i)+\" ESCAPE '\"+e.escape+\"') \":\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,C.BADNESS,i)+\" NOT LIKE \"+this.evaluateNodeToWhereClause(e.right,t,r,C.BADNESS,i)+\") \";case\"<>\":case\"=\":if(\"column_ref\"===e.left.type&&\"string\"===e.right.type){if(e.left.column.toUpperCase()===this.field.name.toUpperCase()&&void 0!==this.lkp[e.right.value.toString()])return\" (\"+s+\" \"+e.operator+\" \"+this.lkp[e.right.value.toString()].toString()+\") \"}else if(\"column_ref\"===e.right.type&&\"string\"===e.left.type&&e.right.column.toUpperCase()===this.field.name.toUpperCase())return\" (\"+this.lkp[e.right.value.toString()].toString()+\" \"+e.operator+\" \"+s+\") \";return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,C.BADNESS,i)+\" \"+e.operator+\" \"+this.evaluateNodeToWhereClause(e.right,t,r,C.BADNESS,i)+\") \";case\"<\":case\">\":case\">=\":case\"<=\":case\"*\":case\"-\":case\"+\":case\"/\":return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,C.BADNESS,i)+\" \"+e.operator+\" \"+this.evaluateNodeToWhereClause(e.right,t,r,C.BADNESS,i)+\") \"}throw new Error(\"Not Supported Operator \"+e.operator);case\"null\":return\"null\";case\"bool\":return!0===e.value?\"1\":\"0\";case\"string\":return\"'\"+e.value.toString().replace(/'/g,\"''\")+\"'\";case\"timestamp\":case\"date\":return d(e.value,t);case\"number\":return e.value.toString();case\"current_time\":return u(\"date\"===e.mode,t);case\"column_ref\":return r&&r.toLowerCase()===e.column.toLowerCase()?\"(\"+s+\")\":e.column;case\"function\":{const s=this.evaluateNodeToWhereClause(e.args,t,r,C.BADNESS,i);return h(e.name,s,t)}}throw new Error(\"Unsupported sql syntax \"+e.type)}extractValue(e){return this.codefield instanceof N?this.reverseLkp[this.codefield.calculateValueCompiled(e)]:this.reverseLkp[e.attributes[this.codefield]]}}C.BADNESS=\"_!!!_BAD_LKP_!!!!\";class T extends m{constructor(e,t){super(),this.field=e,this.sql=t}rewriteSql(e,t){return{rewritten:!0,where:n(e,this.field.name,o(this.sql,a.Standardised),t.getFieldsIndex())}}extractValue(e){return this.sql.calculateValueCompiled(e)}}class E extends r{constructor(e){super(e),this._calcFunc=null,this.declaredClass=\"esri.arcade.featureset.actions.Adapted\",this.adaptedFields=null,this._extraFilter=null,this._extraFilter=e.extraFilter,this._parent=e.parentfeatureset,this._maxProcessing=30,this.adaptedFields=e.adaptedFields}static findField(e,t){for(const r of e)if(r.name.toLowerCase()===t.toString().toLowerCase())return r;return null}_initialiseFeatureSet(){null!==this._parent?(this.geometryType=this._parent.geometryType,this.objectIdField=this._parent.objectIdField,this.globalIdField=this._parent.globalIdField,this.spatialReference=this._parent.spatialReference,this.hasM=this._parent.hasM,this.hasZ=this._parent.hasZ,this.typeIdField=this._parent.typeIdField,this.types=this._parent.types):(this.spatialReference=new S({wkid:4326}),this.objectIdField=\"\",this.globalIdField=\"\",this.geometryType=l.point,this.typeIdField=\"\",this.types=null),this.fields=[];for(const e of this.adaptedFields)e.postInitialization(this,this._parent),this.fields.push(e.field)}_getSet(e){return null===this._wset?this._ensureLoaded().then((()=>this._extraFilter?this._getFilteredSet(\"\",null,null,null,e):this._parent._getSet(e))).then((t=>(this._checkCancelled(e),this._wset=new s(t._candidates.slice(0),t._known.slice(0),t._ordered,this._clonePageDefinition(t.pagesDefinition)),this._wset))):g(this._wset)}_isInFeatureSet(e){return this._parent._isInFeatureSet(e)}_getFeatures(r,i,a,l){const n=[];-1!==i&&void 0===this._featureCache[i]&&n.push(i);const o=this._maxQueryRate();if(!0===this._checkIfNeedToExpandKnownPage(r,o))return this._expandPagedSet(r,o,0,0,l).then((()=>this._getFeatures(r,i,a,l)));let h=0;for(let e=r._lastFetchedIndex;e<r._known.length&&(h++,h<=a&&(r._lastFetchedIndex+=1),!(void 0===this._featureCache[r._known[e]]&&(r._known[e]!==i&&n.push(r._known[e]),n.length>=o)));e++);if(0===n.length)return g(\"success\");r=new s([],n,r._ordered,null);const u=Math.min(n.length,a);return this._parent._getFeatures(r,-1,u,l).then((()=>{this._checkCancelled(l);const r=[];for(let e=0;e<u;e++){const t=this._parent._featureFromCache(n[e]);void 0!==t&&r.push({geometry:t.geometry,attributes:t.attributes,id:n[e]})}for(const s of r){const r=[];for(const e of this.adaptedFields)r[e.field.name]=e.extractValue(s);this._featureCache[s.id]=new e({attributes:r,geometry:t(s.geometry)})}return\"success\"}))}_fetchAndRefineFeatures(){return _(new Error(\"Fetch and Refine should not be called in this featureset\"))}_getFilteredSet(e,t,r,i,a){let l=!1;const n=this.reformulateWithoutAdaptions(r);l=n.cannot,r=n.where;let o=!1;if(null!==i){o=!0;const e=[];for(const t of this.adaptedFields)if(!(t instanceof w)&&!0===i.scanForField(t.field.name)){if(!(t instanceof v)){i=null,o=!1;break}e.push({field:t.field.name,newfield:t.originalField.name})}i&&e.length>0&&(i=i.replaceFields(e))}return null!==r?null!==this._extraFilter&&(r=p(this._extraFilter,r)):r=this._extraFilter,this._ensureLoaded().then((()=>this._parent._getFilteredSet(e,t,r,i,a))).then((e=>{let t;return this._checkCancelled(a),t=!0===l?new s(e._candidates.slice(0).concat(e._known.slice(0)),[],!0===o&&e._ordered,this._clonePageDefinition(e.pagesDefinition)):new s(e._candidates.slice(0),e._known.slice(0),!0===o&&e._ordered,this._clonePageDefinition(e.pagesDefinition)),t}))}reformulateWithoutAdaptions(e){const t={cannot:!1,where:e};if(null!==e)for(const r of this.adaptedFields)if(!0===f(e,r.field.name)){const s=r.rewriteSql(e,this);if(!0!==s.rewritten){t.cannot=!0,t.where=null;break}t.where=s.where}return t}_stat(e,t,r,s,i,a,l){let n=!1,o=this.reformulateWithoutAdaptions(t);return n=o.cannot,t=o.where,o=this.reformulateWithoutAdaptions(i),n=n||o.cannot,null!==(i=o.where)?null!==this._extraFilter&&(i=p(this._extraFilter,i)):i=this._extraFilter,!0===n?null===i&&\"\"===r&&null===s?this._manualStat(e,t,a,l):g({calculated:!1}):this._parent._stat(e,t,r,s,i,a,l).then((n=>!1===n.calculated?null===i&&\"\"===r&&null===s?this._manualStat(e,t,a,l):{calculated:!1}:n))}_canDoAggregates(e,t,r,s,i){if(null===this._parent)return g(!1);for(let n=0;n<e.length;n++)for(const t of this.adaptedFields)if(e[n].toLowerCase()===t.field.name.toLowerCase()&&!(t instanceof w))return g(!1);const a=[];for(let n=0;n<t.length;n++){const e=t[n];if(null!==e.workingexpr){const t=this.reformulateWithoutAdaptions(e.workingexpr);if(t.cannot)return g(!1);const r=e.clone();r.workingexpr=t.where,a.push(r)}else a.push(e)}const l=this.reformulateWithoutAdaptions(i);return l.cannot?g(!1):(null!==(i=l.where)?null!==this._extraFilter&&(i=p(this._extraFilter,i)):i=this._extraFilter,this._parent._canDoAggregates(e,a,r,s,i))}_getAggregatePagesDataSourceDefinition(e,t,r,s,i,a,l){if(null===this._parent)return _(new Error(\"Should never be called\"));const n=[];for(let h=0;h<t.length;h++){const e=t[h];if(null!==e.workingexpr){const t=this.reformulateWithoutAdaptions(e.workingexpr);if(t.cannot)return _(new Error(\"Should never be called\"));const r=e.clone();r.workingexpr=t.where,n.push(r)}else n.push(e)}const o=this.reformulateWithoutAdaptions(i);return o.cannot?_(new Error(\"Should never be called\")):(null!==(i=o.where)?null!==this._extraFilter&&(i=p(this._extraFilter,i)):i=this._extraFilter,this._parent._getAggregatePagesDataSourceDefinition(e,n,r,s,i,a,l))}}export{E as AdaptedFeatureSet,m as AdaptedField,v as FieldRename,w as OriginalField,T as SqlExpressionAdapted,C as StringToCodeAdapted};\n"]},"metadata":{},"sourceType":"module"}