{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isSome as e } from \"../../../core/maybe.js\";\nimport { throwIfAborted as t, createAbortController as r, onAbort as s, createAbortError as o } from \"../../../core/promiseUtils.js\";\nimport { isSVG as u } from \"../../../core/urlUtils.js\";\nimport { Texture as i } from \"../webgl-engine/lib/Texture.js\";\nimport { testWebGLDriver as n } from \"../webgl-engine/lib/WebGLDriverTest.js\";\nimport { TaskPriority as l, ImmediateTask as a } from \"../../support/Scheduler.js\";\n\nclass h {\n  constructor(t, r, s, o) {\n    this._streamDataRequester = t, this._stage = r, this._textureOptions = s, this._textureRequests = new Map(), this._frameTask = e(o) ? o.registerTask(l.TEXTURE_UNLOAD) : a;\n  }\n\n  destroy() {\n    this._frameTask.remove(), this._textureRequests.forEach(e => this.releaseTextureRequest(e)), this._textureRequests.clear();\n  }\n\n  async fromUrl(u, i, n) {\n    t(n);\n    const l = e(n) && n.signal,\n          a = this.makeUid(u, i);\n\n    let h = this._textureRequests.get(a);\n\n    if (!h) {\n      const e = r(),\n            t = this._streamDataRequester.request(u, \"image\", {\n        uid: a,\n        signal: e.signal\n      });\n\n      h = {\n        referenceCount: 0,\n        texture: null,\n        textureAsync: null,\n        abortController: e\n      }, this._textureRequests.set(a, h), h.textureAsync = t.then(e => {\n        const t = this.createTexture(u, e, i);\n        return h.texture = t, h.abortController = null, this.addToStage(t), {\n          uid: a,\n          texture: t\n        };\n      }, e => {\n        throw h.abortController = null, e;\n      });\n    }\n\n    return h.referenceCount++, new Promise((e, t) => {\n      s(l, () => {\n        t(o());\n      }), h.textureAsync.then(e, t);\n    }).catch(e => {\n      throw this.release(a), e;\n    });\n  }\n\n  fromData(e, t) {\n    const r = this.makeUid(e);\n\n    let s = this._textureRequests.get(r);\n\n    return s || (s = {\n      referenceCount: 0,\n      texture: t(),\n      textureAsync: null,\n      abortController: null\n    }, this.addToStage(s.texture), this._textureRequests.set(r, s)), s.referenceCount++, {\n      uid: r,\n      texture: s.texture\n    };\n  }\n\n  release(e) {\n    if (!this._textureRequests) return;\n\n    const t = this._textureRequests.get(e);\n\n    t ? (t.referenceCount < 1 && console.warn(\"TextureCollection: reference count is < 1 for \" + e), t.referenceCount--, t.referenceCount < 1 && this._frameTask.schedule(() => this.releaseNow(e))) : console.warn(`TextureCollection: texture doesn't exist: '${e}'`);\n  }\n\n  get test() {\n    return {\n      textureRequests: this._textureRequests\n    };\n  }\n\n  releaseNow(e) {\n    if (!this._textureRequests) return;\n\n    const t = this._textureRequests.get(e);\n\n    !t || t.referenceCount > 0 || (this.releaseTextureRequest(t), this._textureRequests.delete(e));\n  }\n\n  releaseTextureRequest(e) {\n    e.texture ? this.removeFromStage(e.texture) : e.abortController && (e.abortController.abort(), e.abortController = null);\n  }\n\n  createTexture(e, t, r) {\n    const s = { ...this._textureOptions,\n      powerOfTwoResizeMode: 2\n    };\n\n    if (u(e)) {\n      if (r || 0 === t.width && 0 === t.height) {\n        const e = t.width ? t.height / t.width : 1;\n        r = r || 64, e > 1 ? (t.width = Math.round(r / e), t.height = r) : (t.width = r, t.height = Math.round(r * e));\n      }\n\n      this._stage.renderView && n(this._stage.renderView.renderingContext).svgAlwaysPremultipliesAlpha && (s.preMultiplyAlpha = !1);\n    }\n\n    return s.width = t.width, s.height = t.height, new i(t, s);\n  }\n\n  addToStage(e) {\n    this._stage.add(e);\n  }\n\n  removeFromStage(e) {\n    this._stage.remove(e);\n  }\n\n  makeUid(e, t) {\n    return null != t ? `${e}.${t}px` : e;\n  }\n\n}\n\nexport default h;\nexport { h as TextureCollection };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/support/TextureCollection.js"],"names":["isSome","e","throwIfAborted","t","createAbortController","r","onAbort","s","createAbortError","o","isSVG","u","Texture","i","testWebGLDriver","n","TaskPriority","l","ImmediateTask","a","h","constructor","_streamDataRequester","_stage","_textureOptions","_textureRequests","Map","_frameTask","registerTask","TEXTURE_UNLOAD","destroy","remove","forEach","releaseTextureRequest","clear","fromUrl","signal","makeUid","get","request","uid","referenceCount","texture","textureAsync","abortController","set","then","createTexture","addToStage","Promise","catch","release","fromData","console","warn","schedule","releaseNow","test","textureRequests","delete","removeFromStage","abort","powerOfTwoResizeMode","width","height","Math","round","renderView","renderingContext","svgAlwaysPremultipliesAlpha","preMultiplyAlpha","add","TextureCollection"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../core/maybe.js\";import{throwIfAborted as t,createAbortController as r,onAbort as s,createAbortError as o}from\"../../../core/promiseUtils.js\";import{isSVG as u}from\"../../../core/urlUtils.js\";import{Texture as i}from\"../webgl-engine/lib/Texture.js\";import{testWebGLDriver as n}from\"../webgl-engine/lib/WebGLDriverTest.js\";import{TaskPriority as l,ImmediateTask as a}from\"../../support/Scheduler.js\";class h{constructor(t,r,s,o){this._streamDataRequester=t,this._stage=r,this._textureOptions=s,this._textureRequests=new Map,this._frameTask=e(o)?o.registerTask(l.TEXTURE_UNLOAD):a}destroy(){this._frameTask.remove(),this._textureRequests.forEach((e=>this.releaseTextureRequest(e))),this._textureRequests.clear()}async fromUrl(u,i,n){t(n);const l=e(n)&&n.signal,a=this.makeUid(u,i);let h=this._textureRequests.get(a);if(!h){const e=r(),t=this._streamDataRequester.request(u,\"image\",{uid:a,signal:e.signal});h={referenceCount:0,texture:null,textureAsync:null,abortController:e},this._textureRequests.set(a,h),h.textureAsync=t.then((e=>{const t=this.createTexture(u,e,i);return h.texture=t,h.abortController=null,this.addToStage(t),{uid:a,texture:t}}),(e=>{throw h.abortController=null,e}))}return h.referenceCount++,new Promise(((e,t)=>{s(l,(()=>{t(o())})),h.textureAsync.then(e,t)})).catch((e=>{throw this.release(a),e}))}fromData(e,t){const r=this.makeUid(e);let s=this._textureRequests.get(r);return s||(s={referenceCount:0,texture:t(),textureAsync:null,abortController:null},this.addToStage(s.texture),this._textureRequests.set(r,s)),s.referenceCount++,{uid:r,texture:s.texture}}release(e){if(!this._textureRequests)return;const t=this._textureRequests.get(e);t?(t.referenceCount<1&&console.warn(\"TextureCollection: reference count is < 1 for \"+e),t.referenceCount--,t.referenceCount<1&&this._frameTask.schedule((()=>this.releaseNow(e)))):console.warn(`TextureCollection: texture doesn't exist: '${e}'`)}get test(){return{textureRequests:this._textureRequests}}releaseNow(e){if(!this._textureRequests)return;const t=this._textureRequests.get(e);!t||t.referenceCount>0||(this.releaseTextureRequest(t),this._textureRequests.delete(e))}releaseTextureRequest(e){e.texture?this.removeFromStage(e.texture):e.abortController&&(e.abortController.abort(),e.abortController=null)}createTexture(e,t,r){const s={...this._textureOptions,powerOfTwoResizeMode:2};if(u(e)){if(r||0===t.width&&0===t.height){const e=t.width?t.height/t.width:1;r=r||64,e>1?(t.width=Math.round(r/e),t.height=r):(t.width=r,t.height=Math.round(r*e))}this._stage.renderView&&n(this._stage.renderView.renderingContext).svgAlwaysPremultipliesAlpha&&(s.preMultiplyAlpha=!1)}return s.width=t.width,s.height=t.height,new i(t,s)}addToStage(e){this._stage.add(e)}removeFromStage(e){this._stage.remove(e)}makeUid(e,t){return null!=t?`${e}.${t}px`:e}}export default h;export{h as TextureCollection};\n"]},"metadata":{},"sourceType":"module"}