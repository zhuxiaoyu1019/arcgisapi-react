{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport \"../../../../../geometry.js\";\nimport e from \"../../../../../core/Evented.js\";\nimport t from \"../../../../../core/has.js\";\nimport { isNone as s, isSome as r, andThen as a } from \"../../../../../core/maybe.js\";\nimport { diff as i, hasDiff as o } from \"../../../../../core/accessorSupport/diffUtils.js\";\nimport { GeohashTree as h } from \"../../../../../geohash/GeohashTree.js\";\nimport { setGeohashBuf as l, setGeohashXY as n } from \"../../../../../geohash/geohashUtils.js\";\nimport { earth as u } from \"../../../../../geometry/support/Ellipsoid.js\";\nimport { getInfo as c } from \"../../../../../geometry/support/spatialReferenceUtils.js\";\nimport { quantizeX as g, quantizeY as d } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport p from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport f from \"../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { checkProjectionSupport as _, project as m } from \"../../../../../layers/graphics/data/projectionSupport.js\";\nimport { TILE_SIZE as y } from \"../../../engine/webgl/definitions.js\";\nimport { Store2D as I } from \"../Store2D.js\";\nimport { FeatureSetReaderJSON as b } from \"./FeatureSetReaderJSON.js\";\nimport v from \"../../../../../geometry/SpatialReference.js\";\nconst R = 12,\n      C = 1;\n\nclass M extends p {\n  constructor(e, t, s, r, a) {\n    super(new f([], [t, s]), r, null, e), this.geohashBoundsInfo = a;\n  }\n\n  get count() {\n    return this.attributes.cluster_count;\n  }\n\n  static create(e, t, s, r, a, i, o, h) {\n    const l = new M(t, s, r, i, o);\n    return l.displayId = e.createDisplayId(!0), l.referenceId = h, l.tileLevel = a, l;\n  }\n\n  update(e, t, s, r, a, i) {\n    return this.geometry.coords[0] = e, this.geometry.coords[1] = t, this.tileLevel = s, this.attributes = r, this.geohashBoundsInfo = a, this.referenceId = null, this.referenceId = i, this;\n  }\n\n  toJSON() {\n    return {\n      objectId: this.objectId,\n      referenceId: 1 === this.attributes.cluster_count ? this.referenceId : null,\n      attributes: { ...this.attributes,\n        clusterId: this.objectId\n      },\n      geometry: {\n        x: this.geometry.coords[0],\n        y: this.geometry.coords[1]\n      }\n    };\n  }\n\n}\n\nfunction x(e) {\n  return 57.29577951308232 * e;\n}\n\nclass L extends I {\n  constructor(t, s, r) {\n    super(t, r), this.events = new e(), this._geohashLevel = 0, this._aggregateValueRanges = {}, this._aggregateValueRangesChanged = !1, this._geohashBuf = [], this._clusters = new Map(), this._tiles = new Map(), this.geometryInfo = t.geometryInfo, this._spatialReference = s, this._projectionSupportCheck = _(s, v.WGS84), this._bitsets.geohash = r.getBitset(r.createBitset()), this._bitsets.inserted = r.getBitset(r.createBitset());\n  }\n\n  async updateSchema(e, r) {\n    const a = this._schema;\n\n    try {\n      await super.updateSchema(e, r), await this._projectionSupportCheck;\n    } catch (n) {}\n\n    const l = i(a, r);\n    r && (!s(l) || e.source || e.storage.filters) ? ((o(l, \"params.fields\") || !this._tree || e.source) && (this._tree = new h(this._statisticFields), this._rebuildTree(), t(\"esri-2d-update-debug\") && console.debug(\"Aggregate mesh needs update due to tree changing\")), t(\"esri-2d-update-debug\") && console.debug(\"Applying Update - ClusterStore:\", l), e.targets[r.name] = !0, e.mesh = !1, this._aggregateValueRanges = {}) : a && (e.mesh = !0);\n  }\n\n  sweepFeatures(e, t) {\n    this._bitsets.inserted.forEachSet(s => {\n      if (!e.has(s)) {\n        const e = t.lookupByDisplayIdUnsafe(s);\n\n        this._remove(e);\n      }\n    });\n  }\n\n  sweepClusters(e, t, s) {\n    this._clusters.forEach((r, a) => {\n      r && r.tileLevel !== s && (e.releaseDisplayId(r.displayId), t.unsetAttributeData(r.displayId), this._clusters.delete(a));\n    });\n  }\n\n  onTileData(e, t, r, a, i = !0) {\n    if (!this._schema || s(t.addOrUpdate)) return t;\n\n    const o = this._tree,\n          h = this._getTransforms(e, this._spatialReference);\n\n    {\n      const e = t.addOrUpdate.getCursor();\n\n      for (; e.next();) this._update(e, a, o);\n    }\n    if (t.status.mesh || !i) return t;\n    const l = new Array(),\n          n = this._schema.params.clusterRadius;\n    this._getClustersForTile(l, e, n, r, o, h), t.addOrUpdate = b.fromOptimizedFeatures(l, \"esriGeometryPoint\"), t.addOrUpdate.attachStorage(r), t.end = !0;\n    {\n      const s = t.addOrUpdate.getCursor();\n\n      for (; s.next();) {\n        const t = s.getDisplayId();\n        this._bitsets.computed.unset(t), this.setComputedAttributes(r, s, t, e.scale);\n      }\n    }\n    return this._aggregateValueRangesChanged && t.end && (this.events.emit(\"valueRangesChanged\", {\n      valueRanges: this._aggregateValueRanges\n    }), this._aggregateValueRangesChanged = !1), t;\n  }\n\n  onTileUpdate({\n    added: e,\n    removed: t\n  }) {\n    if (e.length) {\n      const t = e[0].level;\n\n      this._setGeohashLevel(t);\n    }\n\n    if (!this._schema) return;\n    const s = this._schema.params.clusterRadius;\n    t.forEach(e => {\n      this._tiles.delete(e.key.id), this._markTileClustersForDeletion(e, s);\n    });\n  }\n\n  getAggregate(e) {\n    let t = null;\n    return this._clusters.forEach(s => {\n      s && s.displayId === e && (t = s.toJSON());\n    }), t;\n  }\n\n  getDisplayId(e) {\n    const t = this._clusters.get(e);\n\n    return t ? t.displayId : null;\n  }\n\n  getFeatureDisplayIdsForAggregate(e) {\n    const t = this._clusters.get(e);\n\n    if (!t) return [];\n    const s = t.geohashBoundsInfo;\n    return this._tree.getRegionDisplayIds(s.xLL, s.yLL, s.xTR, s.yTR, s.level);\n  }\n\n  getDisplayIdForReferenceId(e) {\n    let t;\n    return this._clusters.forEach(s => {\n      s && s.referenceId === e && (t = s.displayId);\n    }), t;\n  }\n\n  getAggregateValueRanges() {\n    return this._aggregateValueRanges;\n  }\n\n  forEach(e) {\n    this._clusters.forEach((t, s) => {\n      t && e(t, s);\n    });\n  }\n\n  size() {\n    let e = 0;\n    return this.forEach(t => e++), e;\n  }\n\n  _rebuildTree() {\n    this._bitsets.computed.clear(), this._bitsets.inserted.clear(), this._tree && this._tree.clear();\n  }\n\n  _remove(e) {\n    const t = e.getDisplayId(),\n          s = e.getXHydrate(),\n          r = e.getYHydrate(),\n          a = this._geohashBuf[2 * t],\n          i = this._geohashBuf[2 * t + 1];\n    this._bitsets.inserted.has(t) && (this._bitsets.inserted.unset(t), this._tree.removeCursor(e, s, r, a, i, this._geohashLevel));\n  }\n\n  _update(e, t, s) {\n    const r = e.getDisplayId(),\n          a = this._bitsets.inserted,\n          i = t.isVisible(r);\n    if (i === a.has(r)) return;\n    if (!i) return void this._remove(e);\n    const o = e.getXHydrate(),\n          h = e.getYHydrate();\n    if (!this._setGeohash(r, o, h)) return;\n    const l = this._geohashBuf[2 * r],\n          n = this._geohashBuf[2 * r + 1];\n    s.insertCursor(e, r, o, h, l, n, this._geohashLevel), a.set(r);\n  }\n\n  _setGeohash(e, t, s) {\n    if (this._bitsets.geohash.has(e)) return !0;\n    const r = this._geohashBuf;\n\n    if (this._spatialReference.isWebMercator) {\n      const a = x(t / u.radius),\n            i = a - 360 * Math.floor((a + 180) / 360),\n            o = x(Math.PI / 2 - 2 * Math.atan(Math.exp(-1 * s / u.radius)));\n      l(r, e, o, i, R);\n    } else {\n      const a = m({\n        x: t,\n        y: s\n      }, this._spatialReference, v.WGS84);\n      if (!a) return !1;\n      l(r, e, a.y, a.x, R);\n    }\n\n    return this._bitsets.geohash.set(e), !0;\n  }\n\n  _getClustersForTile(e, t, i, o, h, l, n = !0) {\n    const u = this._schema.params.clusterPixelBuffer,\n          c = 2 * i,\n          f = this._getGeohashLevel(t.key.level),\n          _ = Math.ceil(2 ** t.key.level * y / c),\n          m = Math.ceil(u / c) + 0,\n          I = Math.ceil(y / c),\n          {\n      row: b,\n      col: v\n    } = t.key,\n          R = v * y,\n          C = b * y,\n          M = Math.floor(R / c) - m,\n          x = Math.floor(C / c) - m,\n          L = M + I + 2 * m,\n          j = x + I + 2 * m,\n          w = t.tileInfoView.getLODInfoAt(t.key.level);\n\n    for (let y = M; y <= L; y++) for (let i = x; i <= j; i++) {\n      let u = y;\n      w.wrap && (u = y < 0 ? y + _ : y % _);\n\n      const c = w.wrap && y < 0,\n            m = w.wrap && y % _ !== y,\n            I = this._lookupCluster(o, w, t.key.level, u, i, f, h);\n\n      if (r(I)) {\n        const t = a(l, e => c ? e.left : m ? e.right : e.tile);\n        if (n && s(t)) continue;\n        if (!I.count) continue;\n\n        if (r(t) && n) {\n          const s = I.geometry.clone();\n          let a = I.attributes;\n          s.coords[0] = g(t, s.coords[0]), s.coords[1] = d(t, s.coords[1]), 1 === I.count && r(I.referenceId) && (a = { ...I.attributes,\n            referenceId: I.referenceId\n          });\n          const i = new p(s, a);\n          i.displayId = I.displayId, e.push(i);\n        }\n      }\n    }\n  }\n\n  _getGeohashLevel(e) {\n    return Math.min(Math.ceil(e / 2 + 2), R);\n  }\n\n  _setGeohashLevel(e) {\n    const t = this._getGeohashLevel(e),\n          s = (Math.floor(t / C) + 1) * C - 1;\n\n    if (this._geohashLevel !== s) return this._geohashLevel = s, this._rebuildTree(), void this._bitsets.geohash.clear();\n  }\n\n  _getTransforms(e, t) {\n    const s = {\n      originPosition: \"upperLeft\",\n      scale: [e.resolution, e.resolution],\n      translate: [e.bounds[0], e.bounds[3]]\n    },\n          r = c(t);\n    if (!r) return {\n      tile: s,\n      left: null,\n      right: null\n    };\n    const [a, i] = r.valid;\n    return {\n      tile: s,\n      left: { ...s,\n        translate: [i, e.bounds[3]]\n      },\n      right: { ...s,\n        translate: [a - i + e.bounds[0], e.bounds[3]]\n      }\n    };\n  }\n\n  _getClusterId(e, t, s) {\n    return (15 & e) << 28 | (16383 & t) << 14 | 16383 & s;\n  }\n\n  _markForDeletion(e, t, s) {\n    const r = this._getClusterId(e, t, s);\n\n    this._clusters.delete(r);\n  }\n\n  _getClusterBounds(e, t, s) {\n    const r = this._schema.params.clusterRadius,\n          a = 2 * r;\n    let i = s % 2 ? t * a : t * a - r;\n    const o = s * a;\n    let h = i + a;\n    const l = o - a,\n          n = 2 ** e.level * y;\n    e.wrap && i < 0 && (i = 0), e.wrap && h > n && (h = n);\n    const u = i / y,\n          c = o / y,\n          g = h / y,\n          d = l / y;\n    return [e.getXForColumn(u), e.getYForRow(c), e.getXForColumn(g), e.getYForRow(d)];\n  }\n\n  _lookupCluster(e, t, s, a, i, o, h) {\n    const l = this._getClusterId(s, a, i),\n          c = this._clusters.get(l),\n          [g, d, p, f] = this._getClusterBounds(t, a, i),\n          _ = {\n      x: g,\n      y: d\n    },\n          y = {\n      x: p,\n      y: f\n    };\n\n    let I = 0,\n        b = 0,\n        R = 0,\n        C = 0;\n\n    if (this._spatialReference.isWebMercator) {\n      {\n        const e = x(_.x / u.radius);\n        I = e - 360 * Math.floor((e + 180) / 360), b = x(Math.PI / 2 - 2 * Math.atan(Math.exp(-1 * _.y / u.radius)));\n      }\n      {\n        const e = x(y.x / u.radius);\n        R = e - 360 * Math.floor((e + 180) / 360), C = x(Math.PI / 2 - 2 * Math.atan(Math.exp(-1 * y.y / u.radius)));\n      }\n    } else {\n      const e = m(_, this._spatialReference, v.WGS84),\n            t = m(y, this._spatialReference, v.WGS84);\n      if (!e || !t) return null;\n      I = e.x, b = e.y, R = t.x, C = t.y;\n    }\n\n    const L = {\n      geohashX: 0,\n      geohashY: 0\n    },\n          j = {\n      geohashX: 0,\n      geohashY: 0\n    };\n    n(L, b, I, o), n(j, C, R, o);\n    const w = L.geohashX,\n          V = L.geohashY,\n          F = j.geohashX,\n          S = j.geohashY,\n          D = {\n      xLL: w,\n      yLL: V,\n      xTR: F,\n      yTR: S,\n      level: o\n    },\n          T = h.getRegionStatistics(w, V, F, S, o),\n          {\n      count: k,\n      xTotal: B,\n      yTotal: G,\n      referenceId: O\n    } = T,\n          U = k ? B / k : 0,\n          A = k ? G / k : 0;\n    if (0 === k) return this._clusters.set(l, null), null;\n    const E = {\n      cluster_count: k,\n      ...T.attributes\n    },\n          X = r(c) ? c.update(U, A, s, E, D, O) : M.create(e, l, U, A, s, E, D, O);\n    return 0 === k && (X.geometry.coords[0] = (g + p) / 2, X.geometry.coords[1] = (d + f) / 2), this._clusters.set(l, X), this._updateAggregateValueRangeForCluster(X, X.tileLevel), X;\n  }\n\n  _updateAggregateValueRangeForCluster(e, t) {\n    const s = this._aggregateValueRanges[t] || {\n      minValue: 1 / 0,\n      maxValue: 0\n    },\n          r = s.minValue,\n          a = s.maxValue;\n    s.minValue = Math.min(r, e.count), s.maxValue = Math.max(a, e.count), this._aggregateValueRanges[t] = s, r === s.minValue && a === s.maxValue || (this._aggregateValueRangesChanged = !0);\n  }\n\n  _markTileClustersForDeletion(e, t) {\n    const s = 2 * t,\n          r = Math.ceil(y / s),\n          {\n      row: a,\n      col: i\n    } = e.key,\n          o = i * y,\n          h = a * y,\n          l = Math.floor(o / s),\n          n = Math.floor(h / s);\n\n    for (let u = l; u < l + r; u++) for (let t = n; t < n + r; t++) this._markForDeletion(e.key.level, u, t);\n  }\n\n}\n\nexport { M as ClusterInfo, L as ClusterStore };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/2d/layers/features/support/ClusterStore.js"],"names":["e","t","isNone","s","isSome","r","andThen","a","diff","i","hasDiff","o","GeohashTree","h","setGeohashBuf","l","setGeohashXY","n","earth","u","getInfo","c","quantizeX","g","quantizeY","d","p","f","checkProjectionSupport","_","project","m","TILE_SIZE","y","Store2D","I","FeatureSetReaderJSON","b","v","R","C","M","constructor","geohashBoundsInfo","count","attributes","cluster_count","create","displayId","createDisplayId","referenceId","tileLevel","update","geometry","coords","toJSON","objectId","clusterId","x","L","events","_geohashLevel","_aggregateValueRanges","_aggregateValueRangesChanged","_geohashBuf","_clusters","Map","_tiles","geometryInfo","_spatialReference","_projectionSupportCheck","WGS84","_bitsets","geohash","getBitset","createBitset","inserted","updateSchema","_schema","source","storage","filters","_tree","_statisticFields","_rebuildTree","console","debug","targets","name","mesh","sweepFeatures","forEachSet","has","lookupByDisplayIdUnsafe","_remove","sweepClusters","forEach","releaseDisplayId","unsetAttributeData","delete","onTileData","addOrUpdate","_getTransforms","getCursor","next","_update","status","Array","params","clusterRadius","_getClustersForTile","fromOptimizedFeatures","attachStorage","end","getDisplayId","computed","unset","setComputedAttributes","scale","emit","valueRanges","onTileUpdate","added","removed","length","level","_setGeohashLevel","key","id","_markTileClustersForDeletion","getAggregate","get","getFeatureDisplayIdsForAggregate","getRegionDisplayIds","xLL","yLL","xTR","yTR","getDisplayIdForReferenceId","getAggregateValueRanges","size","clear","getXHydrate","getYHydrate","removeCursor","isVisible","_setGeohash","insertCursor","set","isWebMercator","radius","Math","floor","PI","atan","exp","clusterPixelBuffer","_getGeohashLevel","ceil","row","col","j","w","tileInfoView","getLODInfoAt","wrap","_lookupCluster","left","right","tile","clone","push","min","originPosition","resolution","translate","bounds","valid","_getClusterId","_markForDeletion","_getClusterBounds","getXForColumn","getYForRow","geohashX","geohashY","V","F","S","D","T","getRegionStatistics","k","xTotal","B","yTotal","G","O","U","A","E","X","_updateAggregateValueRangeForCluster","minValue","maxValue","max","ClusterInfo","ClusterStore"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport\"../../../../../geometry.js\";import e from\"../../../../../core/Evented.js\";import t from\"../../../../../core/has.js\";import{isNone as s,isSome as r,andThen as a}from\"../../../../../core/maybe.js\";import{diff as i,hasDiff as o}from\"../../../../../core/accessorSupport/diffUtils.js\";import{GeohashTree as h}from\"../../../../../geohash/GeohashTree.js\";import{setGeohashBuf as l,setGeohashXY as n}from\"../../../../../geohash/geohashUtils.js\";import{earth as u}from\"../../../../../geometry/support/Ellipsoid.js\";import{getInfo as c}from\"../../../../../geometry/support/spatialReferenceUtils.js\";import{quantizeX as g,quantizeY as d}from\"../../../../../layers/graphics/featureConversionUtils.js\";import p from\"../../../../../layers/graphics/OptimizedFeature.js\";import f from\"../../../../../layers/graphics/OptimizedGeometry.js\";import{checkProjectionSupport as _,project as m}from\"../../../../../layers/graphics/data/projectionSupport.js\";import{TILE_SIZE as y}from\"../../../engine/webgl/definitions.js\";import{Store2D as I}from\"../Store2D.js\";import{FeatureSetReaderJSON as b}from\"./FeatureSetReaderJSON.js\";import v from\"../../../../../geometry/SpatialReference.js\";const R=12,C=1;class M extends p{constructor(e,t,s,r,a){super(new f([],[t,s]),r,null,e),this.geohashBoundsInfo=a}get count(){return this.attributes.cluster_count}static create(e,t,s,r,a,i,o,h){const l=new M(t,s,r,i,o);return l.displayId=e.createDisplayId(!0),l.referenceId=h,l.tileLevel=a,l}update(e,t,s,r,a,i){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=a,this.referenceId=null,this.referenceId=i,this}toJSON(){return{objectId:this.objectId,referenceId:1===this.attributes.cluster_count?this.referenceId:null,attributes:{...this.attributes,clusterId:this.objectId},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function x(e){return 57.29577951308232*e}class L extends I{constructor(t,s,r){super(t,r),this.events=new e,this._geohashLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this.geometryInfo=t.geometryInfo,this._spatialReference=s,this._projectionSupportCheck=_(s,v.WGS84),this._bitsets.geohash=r.getBitset(r.createBitset()),this._bitsets.inserted=r.getBitset(r.createBitset())}async updateSchema(e,r){const a=this._schema;try{await super.updateSchema(e,r),await this._projectionSupportCheck}catch(n){}const l=i(a,r);r&&(!s(l)||e.source||e.storage.filters)?((o(l,\"params.fields\")||!this._tree||e.source)&&(this._tree=new h(this._statisticFields),this._rebuildTree(),t(\"esri-2d-update-debug\")&&console.debug(\"Aggregate mesh needs update due to tree changing\")),t(\"esri-2d-update-debug\")&&console.debug(\"Applying Update - ClusterStore:\",l),e.targets[r.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):a&&(e.mesh=!0)}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepClusters(e,t,s){this._clusters.forEach(((r,a)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(a))}))}onTileData(e,t,r,a,i=!0){if(!this._schema||s(t.addOrUpdate))return t;const o=this._tree,h=this._getTransforms(e,this._spatialReference);{const e=t.addOrUpdate.getCursor();for(;e.next();)this._update(e,a,o)}if(t.status.mesh||!i)return t;const l=new Array,n=this._schema.params.clusterRadius;this._getClustersForTile(l,e,n,r,o,h),t.addOrUpdate=b.fromOptimizedFeatures(l,\"esriGeometryPoint\"),t.addOrUpdate.attachStorage(r),t.end=!0;{const s=t.addOrUpdate.getCursor();for(;s.next();){const t=s.getDisplayId();this._bitsets.computed.unset(t),this.setComputedAttributes(r,s,t,e.scale)}}return this._aggregateValueRangesChanged&&t.end&&(this.events.emit(\"valueRangesChanged\",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),t}onTileUpdate({added:e,removed:t}){if(e.length){const t=e[0].level;this._setGeohashLevel(t)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach((e=>{this._tiles.delete(e.key.id),this._markTileClustersForDeletion(e,s)}))}getAggregate(e){let t=null;return this._clusters.forEach((s=>{s&&s.displayId===e&&(t=s.toJSON())})),t}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);if(!t)return[];const s=t.geohashBoundsInfo;return this._tree.getRegionDisplayIds(s.xLL,s.yLL,s.xTR,s.yTR,s.level)}getDisplayIdForReferenceId(e){let t;return this._clusters.forEach((s=>{s&&s.referenceId===e&&(t=s.displayId)})),t}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){this._clusters.forEach(((t,s)=>{t&&e(t,s)}))}size(){let e=0;return this.forEach((t=>e++)),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrate(),r=e.getYHydrate(),a=this._geohashBuf[2*t],i=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,a,i,this._geohashLevel))}_update(e,t,s){const r=e.getDisplayId(),a=this._bitsets.inserted,i=t.isVisible(r);if(i===a.has(r))return;if(!i)return void this._remove(e);const o=e.getXHydrate(),h=e.getYHydrate();if(!this._setGeohash(r,o,h))return;const l=this._geohashBuf[2*r],n=this._geohashBuf[2*r+1];s.insertCursor(e,r,o,h,l,n,this._geohashLevel),a.set(r)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const a=x(t/u.radius),i=a-360*Math.floor((a+180)/360),o=x(Math.PI/2-2*Math.atan(Math.exp(-1*s/u.radius)));l(r,e,o,i,R)}else{const a=m({x:t,y:s},this._spatialReference,v.WGS84);if(!a)return!1;l(r,e,a.y,a.x,R)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,t,i,o,h,l,n=!0){const u=this._schema.params.clusterPixelBuffer,c=2*i,f=this._getGeohashLevel(t.key.level),_=Math.ceil(2**t.key.level*y/c),m=Math.ceil(u/c)+0,I=Math.ceil(y/c),{row:b,col:v}=t.key,R=v*y,C=b*y,M=Math.floor(R/c)-m,x=Math.floor(C/c)-m,L=M+I+2*m,j=x+I+2*m,w=t.tileInfoView.getLODInfoAt(t.key.level);for(let y=M;y<=L;y++)for(let i=x;i<=j;i++){let u=y;w.wrap&&(u=y<0?y+_:y%_);const c=w.wrap&&y<0,m=w.wrap&&y%_!==y,I=this._lookupCluster(o,w,t.key.level,u,i,f,h);if(r(I)){const t=a(l,(e=>c?e.left:m?e.right:e.tile));if(n&&s(t))continue;if(!I.count)continue;if(r(t)&&n){const s=I.geometry.clone();let a=I.attributes;s.coords[0]=g(t,s.coords[0]),s.coords[1]=d(t,s.coords[1]),1===I.count&&r(I.referenceId)&&(a={...I.attributes,referenceId:I.referenceId});const i=new p(s,a);i.displayId=I.displayId,e.push(i)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),R)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=(Math.floor(t/C)+1)*C-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:\"upperLeft\",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=c(t);if(!r)return{tile:s,left:null,right:null};const[a,i]=r.valid;return{tile:s,left:{...s,translate:[i,e.bounds[3]]},right:{...s,translate:[a-i+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,a=2*r;let i=s%2?t*a:t*a-r;const o=s*a;let h=i+a;const l=o-a,n=2**e.level*y;e.wrap&&i<0&&(i=0),e.wrap&&h>n&&(h=n);const u=i/y,c=o/y,g=h/y,d=l/y;return[e.getXForColumn(u),e.getYForRow(c),e.getXForColumn(g),e.getYForRow(d)]}_lookupCluster(e,t,s,a,i,o,h){const l=this._getClusterId(s,a,i),c=this._clusters.get(l),[g,d,p,f]=this._getClusterBounds(t,a,i),_={x:g,y:d},y={x:p,y:f};let I=0,b=0,R=0,C=0;if(this._spatialReference.isWebMercator){{const e=x(_.x/u.radius);I=e-360*Math.floor((e+180)/360),b=x(Math.PI/2-2*Math.atan(Math.exp(-1*_.y/u.radius)))}{const e=x(y.x/u.radius);R=e-360*Math.floor((e+180)/360),C=x(Math.PI/2-2*Math.atan(Math.exp(-1*y.y/u.radius)))}}else{const e=m(_,this._spatialReference,v.WGS84),t=m(y,this._spatialReference,v.WGS84);if(!e||!t)return null;I=e.x,b=e.y,R=t.x,C=t.y}const L={geohashX:0,geohashY:0},j={geohashX:0,geohashY:0};n(L,b,I,o),n(j,C,R,o);const w=L.geohashX,V=L.geohashY,F=j.geohashX,S=j.geohashY,D={xLL:w,yLL:V,xTR:F,yTR:S,level:o},T=h.getRegionStatistics(w,V,F,S,o),{count:k,xTotal:B,yTotal:G,referenceId:O}=T,U=k?B/k:0,A=k?G/k:0;if(0===k)return this._clusters.set(l,null),null;const E={cluster_count:k,...T.attributes},X=r(c)?c.update(U,A,s,E,D,O):M.create(e,l,U,A,s,E,D,O);return 0===k&&(X.geometry.coords[0]=(g+p)/2,X.geometry.coords[1]=(d+f)/2),this._clusters.set(l,X),this._updateAggregateValueRangeForCluster(X,X.tileLevel),X}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,a=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(a,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&a===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(y/s),{row:a,col:i}=e.key,o=i*y,h=a*y,l=Math.floor(o/s),n=Math.floor(h/s);for(let u=l;u<l+r;u++)for(let t=n;t<n+r;t++)this._markForDeletion(e.key.level,u,t)}}export{M as ClusterInfo,L as ClusterStore};\n"]},"metadata":{},"sourceType":"module"}