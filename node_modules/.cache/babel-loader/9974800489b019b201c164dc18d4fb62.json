{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { neverReached as t } from \"../../../core/compilerUtils.js\";\nimport { generateUID as e } from \"../../../core/uid.js\";\nimport r from \"../../../geometry/SpatialReference.js\";\nimport { DehydratedFeatureSetClass as s, DehydratedFeatureClass as o } from \"../../../layers/graphics/dehydratedFeatures.js\";\nimport { unquantizeOptimizedGeometry as i, convertToGeometry as n } from \"../../../layers/graphics/featureConversionUtils.js\";\nimport a from \"../../../layers/support/Field.js\";\nimport { getGeometryZScaler as h } from \"./zscale.js\";\n\nfunction u(t, e) {\n  return e;\n}\n\nfunction l(t, e, r, s) {\n  switch (r) {\n    case 0:\n      return f(t, e + s, 0);\n\n    case 1:\n      return \"lowerLeft\" === t.originPosition ? f(t, e + s, 1) : y(t, e + s, 1);\n  }\n}\n\nfunction c(t, e, r, s) {\n  switch (r) {\n    case 2:\n      return f(t, e, 2);\n\n    default:\n      return l(t, e, r, s);\n  }\n}\n\nfunction d(t, e, r, s) {\n  switch (r) {\n    case 2:\n      return f(t, e, 3);\n\n    default:\n      return l(t, e, r, s);\n  }\n}\n\nfunction p(t, e, r, s) {\n  switch (r) {\n    case 3:\n      return f(t, e, 3);\n\n    default:\n      return c(t, e, r, s);\n  }\n}\n\nfunction f({\n  translate: t,\n  scale: e\n}, r, s) {\n  return t[s] + r * e[s];\n}\n\nfunction y({\n  translate: t,\n  scale: e\n}, r, s) {\n  return t[s] - r * e[s];\n}\n\nclass m {\n  constructor(t) {\n    this.options = t, this.geometryTypes = [\"point\", \"multipoint\", \"polyline\", \"polygon\"], this.previousCoordinate = [0, 0], this.transform = null, this.applyTransform = u, this.lengths = [], this.currentLengthIndex = 0, this.toAddInCurrentPath = 0, this.vertexDimension = 0, this.coordinateBuffer = null, this.coordinateBufferPtr = 0, this.AttributesConstructor = function () {};\n  }\n\n  createFeatureResult() {\n    return new s();\n  }\n\n  finishFeatureResult(t) {\n    if (this.options.applyTransform && (t.transform = null), this.AttributesConstructor = function () {}, this.coordinateBuffer = null, this.lengths.length = 0, !t.hasZ) return;\n    const e = h(t.geometryType, this.options.sourceSpatialReference, t.spatialReference);\n    if (e) for (const r of t.features) e(r.geometry);\n  }\n\n  createSpatialReference() {\n    return new r();\n  }\n\n  addField(t, e) {\n    t.fields.push(a.fromJSON(e));\n    const r = t.fields.map(t => t.name);\n\n    this.AttributesConstructor = function () {\n      for (const t of r) this[t] = null;\n    };\n  }\n\n  addFeature(t, e) {\n    const r = this.options.maxStringAttributeLength ? this.options.maxStringAttributeLength : 0;\n    if (r > 0) for (const s in e.attributes) {\n      const t = e.attributes[s];\n      \"string\" == typeof t && t.length > r && (e.attributes[s] = \"\");\n    }\n    t.features.push(e);\n  }\n\n  addQueryGeometry(t, e) {\n    const {\n      queryGeometry: r,\n      queryGeometryType: s\n    } = e,\n          o = i(r.clone(), r, !1, !1, this.transform),\n          a = n(o, s, !1, !1);\n    let h = null;\n\n    switch (s) {\n      case \"esriGeometryPoint\":\n        h = \"point\";\n        break;\n\n      case \"esriGeometryPolygon\":\n        h = \"polygon\";\n        break;\n\n      case \"esriGeometryPolyline\":\n        h = \"polyline\";\n        break;\n\n      case \"esriGeometryMultipoint\":\n        h = \"multipoint\";\n    }\n\n    a.type = h, t.queryGeometryType = s, t.queryGeometry = a;\n  }\n\n  prepareFeatures(e) {\n    switch (this.transform = e.transform, this.options.applyTransform && e.transform && (this.applyTransform = this.deriveApplyTransform(e)), this.vertexDimension = 2, e.hasZ && this.vertexDimension++, e.hasM && this.vertexDimension++, e.geometryType) {\n      case \"point\":\n        this.addCoordinate = (t, e, r) => this.addCoordinatePoint(t, e, r), this.createGeometry = t => this.createPointGeometry(t);\n        break;\n\n      case \"polygon\":\n        this.addCoordinate = (t, e, r) => this.addCoordinatePolygon(t, e, r), this.createGeometry = t => this.createPolygonGeometry(t);\n        break;\n\n      case \"polyline\":\n        this.addCoordinate = (t, e, r) => this.addCoordinatePolyline(t, e, r), this.createGeometry = t => this.createPolylineGeometry(t);\n        break;\n\n      case \"multipoint\":\n        this.addCoordinate = (t, e, r) => this.addCoordinateMultipoint(t, e, r), this.createGeometry = t => this.createMultipointGeometry(t);\n        break;\n\n      case \"mesh\":\n      case \"extent\":\n        break;\n\n      default:\n        t(e.geometryType);\n    }\n  }\n\n  createFeature() {\n    return this.lengths.length = 0, this.currentLengthIndex = 0, this.previousCoordinate[0] = 0, this.previousCoordinate[1] = 0, new o(e(), null, new this.AttributesConstructor());\n  }\n\n  allocateCoordinates() {\n    const t = this.lengths.reduce((t, e) => t + e, 0);\n    this.coordinateBuffer = new Float64Array(t * this.vertexDimension), this.coordinateBufferPtr = 0;\n  }\n\n  addLength(t, e, r) {\n    0 === this.lengths.length && (this.toAddInCurrentPath = e), this.lengths.push(e);\n  }\n\n  createPointGeometry(t) {\n    const e = {\n      type: \"point\",\n      x: 0,\n      y: 0,\n      spatialReference: t.spatialReference,\n      hasZ: !!t.hasZ,\n      hasM: !!t.hasM\n    };\n    return e.hasZ && (e.z = 0), e.hasM && (e.m = 0), e;\n  }\n\n  addCoordinatePoint(t, e, r) {\n    switch (e = this.applyTransform(this.transform, e, r, 0), r) {\n      case 0:\n        t.x = e;\n        break;\n\n      case 1:\n        t.y = e;\n        break;\n\n      case 2:\n        t.hasZ ? t.z = e : t.m = e;\n        break;\n\n      case 3:\n        t.m = e;\n    }\n  }\n\n  transformPathLikeValue(t, e) {\n    let r = 0;\n    return e <= 1 && (r = this.previousCoordinate[e], this.previousCoordinate[e] += t), this.applyTransform(this.transform, t, e, r);\n  }\n\n  addCoordinatePolyline(t, e, r) {\n    this.dehydratedAddPointsCoordinate(t.paths, e, r);\n  }\n\n  addCoordinatePolygon(t, e, r) {\n    this.dehydratedAddPointsCoordinate(t.rings, e, r);\n  }\n\n  addCoordinateMultipoint(t, e, r) {\n    0 === r && t.points.push([]);\n    const s = this.transformPathLikeValue(e, r);\n    t.points[t.points.length - 1].push(s);\n  }\n\n  createPolygonGeometry(t) {\n    return {\n      type: \"polygon\",\n      rings: [[]],\n      spatialReference: t.spatialReference,\n      hasZ: !!t.hasZ,\n      hasM: !!t.hasM\n    };\n  }\n\n  createPolylineGeometry(t) {\n    return {\n      type: \"polyline\",\n      paths: [[]],\n      spatialReference: t.spatialReference,\n      hasZ: !!t.hasZ,\n      hasM: !!t.hasM\n    };\n  }\n\n  createMultipointGeometry(t) {\n    return {\n      type: \"multipoint\",\n      points: [],\n      spatialReference: t.spatialReference,\n      hasZ: !!t.hasZ,\n      hasM: !!t.hasM\n    };\n  }\n\n  dehydratedAddPointsCoordinate(t, e, r) {\n    0 === r && 0 == this.toAddInCurrentPath-- && (t.push([]), this.toAddInCurrentPath = this.lengths[++this.currentLengthIndex] - 1, this.previousCoordinate[0] = 0, this.previousCoordinate[1] = 0);\n    const s = this.transformPathLikeValue(e, r),\n          o = t[t.length - 1];\n    0 === r && o.push(new Float64Array(this.coordinateBuffer.buffer, this.coordinateBufferPtr * Float64Array.BYTES_PER_ELEMENT, this.vertexDimension)), this.coordinateBuffer[this.coordinateBufferPtr++] = s;\n  }\n\n  deriveApplyTransform(t) {\n    const {\n      hasZ: e,\n      hasM: r\n    } = t;\n    return e && r ? p : e ? c : r ? d : l;\n  }\n\n}\n\nexport { m as DehydratedFeatureSetParserContext };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/rest/query/operations/pbfDehydratedFeatureSet.js"],"names":["neverReached","t","generateUID","e","r","DehydratedFeatureSetClass","s","DehydratedFeatureClass","o","unquantizeOptimizedGeometry","i","convertToGeometry","n","a","getGeometryZScaler","h","u","l","f","originPosition","y","c","d","p","translate","scale","m","constructor","options","geometryTypes","previousCoordinate","transform","applyTransform","lengths","currentLengthIndex","toAddInCurrentPath","vertexDimension","coordinateBuffer","coordinateBufferPtr","AttributesConstructor","createFeatureResult","finishFeatureResult","length","hasZ","geometryType","sourceSpatialReference","spatialReference","features","geometry","createSpatialReference","addField","fields","push","fromJSON","map","name","addFeature","maxStringAttributeLength","attributes","addQueryGeometry","queryGeometry","queryGeometryType","clone","type","prepareFeatures","deriveApplyTransform","hasM","addCoordinate","addCoordinatePoint","createGeometry","createPointGeometry","addCoordinatePolygon","createPolygonGeometry","addCoordinatePolyline","createPolylineGeometry","addCoordinateMultipoint","createMultipointGeometry","createFeature","allocateCoordinates","reduce","Float64Array","addLength","x","z","transformPathLikeValue","dehydratedAddPointsCoordinate","paths","rings","points","buffer","BYTES_PER_ELEMENT","DehydratedFeatureSetParserContext"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{neverReached as t}from\"../../../core/compilerUtils.js\";import{generateUID as e}from\"../../../core/uid.js\";import r from\"../../../geometry/SpatialReference.js\";import{DehydratedFeatureSetClass as s,DehydratedFeatureClass as o}from\"../../../layers/graphics/dehydratedFeatures.js\";import{unquantizeOptimizedGeometry as i,convertToGeometry as n}from\"../../../layers/graphics/featureConversionUtils.js\";import a from\"../../../layers/support/Field.js\";import{getGeometryZScaler as h}from\"./zscale.js\";function u(t,e){return e}function l(t,e,r,s){switch(r){case 0:return f(t,e+s,0);case 1:return\"lowerLeft\"===t.originPosition?f(t,e+s,1):y(t,e+s,1)}}function c(t,e,r,s){switch(r){case 2:return f(t,e,2);default:return l(t,e,r,s)}}function d(t,e,r,s){switch(r){case 2:return f(t,e,3);default:return l(t,e,r,s)}}function p(t,e,r,s){switch(r){case 3:return f(t,e,3);default:return c(t,e,r,s)}}function f({translate:t,scale:e},r,s){return t[s]+r*e[s]}function y({translate:t,scale:e},r,s){return t[s]-r*e[s]}class m{constructor(t){this.options=t,this.geometryTypes=[\"point\",\"multipoint\",\"polyline\",\"polygon\"],this.previousCoordinate=[0,0],this.transform=null,this.applyTransform=u,this.lengths=[],this.currentLengthIndex=0,this.toAddInCurrentPath=0,this.vertexDimension=0,this.coordinateBuffer=null,this.coordinateBufferPtr=0,this.AttributesConstructor=function(){}}createFeatureResult(){return new s}finishFeatureResult(t){if(this.options.applyTransform&&(t.transform=null),this.AttributesConstructor=function(){},this.coordinateBuffer=null,this.lengths.length=0,!t.hasZ)return;const e=h(t.geometryType,this.options.sourceSpatialReference,t.spatialReference);if(e)for(const r of t.features)e(r.geometry)}createSpatialReference(){return new r}addField(t,e){t.fields.push(a.fromJSON(e));const r=t.fields.map((t=>t.name));this.AttributesConstructor=function(){for(const t of r)this[t]=null}}addFeature(t,e){const r=this.options.maxStringAttributeLength?this.options.maxStringAttributeLength:0;if(r>0)for(const s in e.attributes){const t=e.attributes[s];\"string\"==typeof t&&t.length>r&&(e.attributes[s]=\"\")}t.features.push(e)}addQueryGeometry(t,e){const{queryGeometry:r,queryGeometryType:s}=e,o=i(r.clone(),r,!1,!1,this.transform),a=n(o,s,!1,!1);let h=null;switch(s){case\"esriGeometryPoint\":h=\"point\";break;case\"esriGeometryPolygon\":h=\"polygon\";break;case\"esriGeometryPolyline\":h=\"polyline\";break;case\"esriGeometryMultipoint\":h=\"multipoint\"}a.type=h,t.queryGeometryType=s,t.queryGeometry=a}prepareFeatures(e){switch(this.transform=e.transform,this.options.applyTransform&&e.transform&&(this.applyTransform=this.deriveApplyTransform(e)),this.vertexDimension=2,e.hasZ&&this.vertexDimension++,e.hasM&&this.vertexDimension++,e.geometryType){case\"point\":this.addCoordinate=(t,e,r)=>this.addCoordinatePoint(t,e,r),this.createGeometry=t=>this.createPointGeometry(t);break;case\"polygon\":this.addCoordinate=(t,e,r)=>this.addCoordinatePolygon(t,e,r),this.createGeometry=t=>this.createPolygonGeometry(t);break;case\"polyline\":this.addCoordinate=(t,e,r)=>this.addCoordinatePolyline(t,e,r),this.createGeometry=t=>this.createPolylineGeometry(t);break;case\"multipoint\":this.addCoordinate=(t,e,r)=>this.addCoordinateMultipoint(t,e,r),this.createGeometry=t=>this.createMultipointGeometry(t);break;case\"mesh\":case\"extent\":break;default:t(e.geometryType)}}createFeature(){return this.lengths.length=0,this.currentLengthIndex=0,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0,new o(e(),null,new this.AttributesConstructor)}allocateCoordinates(){const t=this.lengths.reduce(((t,e)=>t+e),0);this.coordinateBuffer=new Float64Array(t*this.vertexDimension),this.coordinateBufferPtr=0}addLength(t,e,r){0===this.lengths.length&&(this.toAddInCurrentPath=e),this.lengths.push(e)}createPointGeometry(t){const e={type:\"point\",x:0,y:0,spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM};return e.hasZ&&(e.z=0),e.hasM&&(e.m=0),e}addCoordinatePoint(t,e,r){switch(e=this.applyTransform(this.transform,e,r,0),r){case 0:t.x=e;break;case 1:t.y=e;break;case 2:t.hasZ?t.z=e:t.m=e;break;case 3:t.m=e}}transformPathLikeValue(t,e){let r=0;return e<=1&&(r=this.previousCoordinate[e],this.previousCoordinate[e]+=t),this.applyTransform(this.transform,t,e,r)}addCoordinatePolyline(t,e,r){this.dehydratedAddPointsCoordinate(t.paths,e,r)}addCoordinatePolygon(t,e,r){this.dehydratedAddPointsCoordinate(t.rings,e,r)}addCoordinateMultipoint(t,e,r){0===r&&t.points.push([]);const s=this.transformPathLikeValue(e,r);t.points[t.points.length-1].push(s)}createPolygonGeometry(t){return{type:\"polygon\",rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}createPolylineGeometry(t){return{type:\"polyline\",paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}createMultipointGeometry(t){return{type:\"multipoint\",points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}dehydratedAddPointsCoordinate(t,e,r){0===r&&0==this.toAddInCurrentPath--&&(t.push([]),this.toAddInCurrentPath=this.lengths[++this.currentLengthIndex]-1,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0);const s=this.transformPathLikeValue(e,r),o=t[t.length-1];0===r&&o.push(new Float64Array(this.coordinateBuffer.buffer,this.coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT,this.vertexDimension)),this.coordinateBuffer[this.coordinateBufferPtr++]=s}deriveApplyTransform(t){const{hasZ:e,hasM:r}=t;return e&&r?p:e?c:r?d:l}}export{m as DehydratedFeatureSetParserContext};\n"]},"metadata":{},"sourceType":"module"}