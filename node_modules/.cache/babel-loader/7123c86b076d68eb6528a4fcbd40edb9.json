{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isSome as e } from \"../../../../core/maybe.js\";\nimport t from \"../../../../core/PerformanceSampler.js\";\nimport { once as s } from \"../../../../core/accessorSupport/utils.js\";\nimport { startMeasurement as r } from \"../../../webgl/Measurement.js\";\nconst i = [\"prepare\", \"shadowmap\", \"lineardepth\", \"normals\", \"ssao\", \"opaque\", \"opaque edges\", \"transparent\", \"transparent edges\", \"hudvisibility\", \"transparent terrain\", \"atmosphere\", \"laserline\", \"occluded\", \"antialiasing\", \"highlights\", \"hudOccluded\", \"hudNotoccluded\"];\n\nclass a {\n  constructor() {\n    this.triangles = 0, this.drawCalls = 0;\n  }\n\n  reset() {\n    this.triangles = 0, this.drawCalls = 0;\n  }\n\n}\n\nfunction o(t, s, r) {\n  e(r) && (r.drawCalls += t, r.triangles += s);\n}\n\nclass n extends t {\n  constructor() {\n    super(\"total\"), this.total = 0, this.frameCount = 0;\n  }\n\n}\n\nclass l {\n  constructor() {\n    this._startTime = 0, this._lastSample = 0, this._enableGPUTimer = 0, this.totalTime = new n(), this.gpuTime = new t(\"gpu\", 9), this.renderPassTimings = i.map(e => new t(e)), this.stats = new a();\n  }\n\n  enableGPUTimer() {\n    return ++this._enableGPUTimer, {\n      remove: s(() => --this._enableGPUTimer)\n    };\n  }\n\n  prerender(e) {\n    this._startTime = this._lastSample = performance.now(), this._enableGPUTimer && (this._gpuTimer = r(e));\n  }\n\n  advance(e) {\n    const t = performance.now();\n    this.renderPassTimings[e].record(t - this._lastSample), this._lastSample = t;\n  }\n\n  postrender() {\n    e(this._gpuTimer) && (this._gpuTimer.stop(t => e(t) && this.gpuTime.record(t), 16), this._gpuTimer = null);\n\n    const t = performance.now() - this._startTime;\n\n    this.totalTime.record(t), this.totalTime.total += t, this.totalTime.frameCount++;\n  }\n\n}\n\nexport { a as RenderStats, n as RenderTime, l as RendererPerformanceInfo, o as addToRenderStats, i as performanceStatsCategories };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/statistics/RendererPerformanceInfo.js"],"names":["isSome","e","t","once","s","startMeasurement","r","i","a","constructor","triangles","drawCalls","reset","o","n","total","frameCount","l","_startTime","_lastSample","_enableGPUTimer","totalTime","gpuTime","renderPassTimings","map","stats","enableGPUTimer","remove","prerender","performance","now","_gpuTimer","advance","record","postrender","stop","RenderStats","RenderTime","RendererPerformanceInfo","addToRenderStats","performanceStatsCategories"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../core/maybe.js\";import t from\"../../../../core/PerformanceSampler.js\";import{once as s}from\"../../../../core/accessorSupport/utils.js\";import{startMeasurement as r}from\"../../../webgl/Measurement.js\";const i=[\"prepare\",\"shadowmap\",\"lineardepth\",\"normals\",\"ssao\",\"opaque\",\"opaque edges\",\"transparent\",\"transparent edges\",\"hudvisibility\",\"transparent terrain\",\"atmosphere\",\"laserline\",\"occluded\",\"antialiasing\",\"highlights\",\"hudOccluded\",\"hudNotoccluded\"];class a{constructor(){this.triangles=0,this.drawCalls=0}reset(){this.triangles=0,this.drawCalls=0}}function o(t,s,r){e(r)&&(r.drawCalls+=t,r.triangles+=s)}class n extends t{constructor(){super(\"total\"),this.total=0,this.frameCount=0}}class l{constructor(){this._startTime=0,this._lastSample=0,this._enableGPUTimer=0,this.totalTime=new n,this.gpuTime=new t(\"gpu\",9),this.renderPassTimings=i.map((e=>new t(e))),this.stats=new a}enableGPUTimer(){return++this._enableGPUTimer,{remove:s((()=>--this._enableGPUTimer))}}prerender(e){this._startTime=this._lastSample=performance.now(),this._enableGPUTimer&&(this._gpuTimer=r(e))}advance(e){const t=performance.now();this.renderPassTimings[e].record(t-this._lastSample),this._lastSample=t}postrender(){e(this._gpuTimer)&&(this._gpuTimer.stop((t=>e(t)&&this.gpuTime.record(t)),16),this._gpuTimer=null);const t=performance.now()-this._startTime;this.totalTime.record(t),this.totalTime.total+=t,this.totalTime.frameCount++}}export{a as RenderStats,n as RenderTime,l as RendererPerformanceInfo,o as addToRenderStats,i as performanceStatsCategories};\n"]},"metadata":{},"sourceType":"module"}