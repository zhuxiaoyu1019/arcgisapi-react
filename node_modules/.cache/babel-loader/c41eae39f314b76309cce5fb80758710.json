{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { DoublePrecision as o } from \"../../../core/shaderLibrary/util/DoublePrecision.glsl.js\";\nimport { glsl as e } from \"../../../core/shaderModules/interfaces.js\";\n\nfunction t(t, n) {\n  const r = t.vertex;\n  r.uniforms.add(\"uDistanceFalloffFactor\", \"float\"), r.code.add(e`float distanceBasedPerspectiveFactor(float distance) {\nreturn clamp(sqrt(uDistanceFalloffFactor / distance), 0.0, 1.0);\n}`), r.uniforms.add(\"uComponentDataTex\", \"sampler2D\"), r.uniforms.add(\"uComponentDataTexInvDim\", \"vec2\"), t.attributes.add(\"componentIndex\", \"float\"), r.constants.add(\"componentColorFieldOffset\", \"float\", 0), r.constants.add(\"componentOtherFieldOffset\", \"float\", 1), r.constants.add(\"componentFieldCount\", \"float\", 2), r.constants.add(\"lineWidthFractionFactor\", \"float\", 8), r.constants.add(\"extensionLengthOffset\", \"float\", 128), r.constants.add(\"componentTexWidth\", \"float\", 4096), r.code.add(e`vec2 _componentTextureCoords(float componentIndex, float fieldOffset) {\nfloat fieldIndex = componentFieldCount * componentIndex + fieldOffset;\nfloat rowIndex = floor(fieldIndex / componentTexWidth);\nfloat colIndex = mod(fieldIndex, componentTexWidth);\nvec2 linearIndex = vec2(\n(colIndex + 0.5) / componentTexWidth,\n(rowIndex + 0.5) * uComponentDataTexInvDim.y\n);\nreturn linearIndex;\n}\nstruct ComponentData {\nvec4 color;\nfloat lineWidth;\nfloat extensionLength;\nfloat type;\n};\nComponentData readComponentData() {\nvec2 colorIndex = _componentTextureCoords(componentIndex, componentColorFieldOffset);\nvec2 otherIndex = _componentTextureCoords(componentIndex, componentOtherFieldOffset);\nvec4 colorValue = texture2D(uComponentDataTex, colorIndex);\nvec4 otherValue = texture2D(uComponentDataTex, otherIndex);\nreturn ComponentData(\nvec4(colorValue.rgb, colorValue.a * otherValue.w),\notherValue.x * (255.0 / lineWidthFractionFactor),\notherValue.y * 255.0 - extensionLengthOffset,\n-(otherValue.z * 255.0) + 0.5\n);\n}`), n.legacy ? r.code.add(e`vec3 _modelToWorldNormal(vec3 normal) {\nreturn (uModel * vec4(normal, 0.0)).xyz;\n}\nvec3 _modelToViewNormal(vec3 normal) {\nreturn (uView * uModel * vec4(normal, 0.0)).xyz;\n}`) : (r.uniforms.add(\"uTransformNormal_GlobalFromModel \", \"mat3\"), r.code.add(e`vec3 _modelToWorldNormal(vec3 normal) {\nreturn uTransformNormal_GlobalFromModel * normal;\n}`)), n.silhouette ? (t.attributes.add(\"normalA\", \"vec3\"), t.attributes.add(\"normalB\", \"vec3\"), r.code.add(e`vec3 worldNormal() {\nreturn _modelToWorldNormal(normalize(normalA + normalB));\n}`)) : (t.attributes.add(\"normal\", \"vec3\"), r.code.add(e`vec3 worldNormal() {\nreturn _modelToWorldNormal(normal);\n}`)), n.legacy ? r.code.add(e`vec3 worldFromModelPosition(vec3 position) {\nreturn (uModel * vec4(position, 1.0)).xyz;\n}\nvec3 viewFromModelPosition(vec3 position) {\nreturn (uView * vec4(worldFromModelPosition(position), 1.0)).xyz;\n}\nvec4 projFromViewPosition(vec3 position) {\nreturn uProj * vec4(position, 1.0);\n}`) : (t.vertex.include(o, n), r.code.add(e`vec3 worldFromModelPosition(vec3 position) {\nvec3 rotatedModelPosition = uTransform_WorldFromModel_RS * position;\nvec3 transform_CameraRelativeFromModel = dpAdd(\nuTransform_WorldFromModel_TL,\nuTransform_WorldFromModel_TH,\n-uTransform_WorldFromView_TL,\n-uTransform_WorldFromView_TH\n);\nreturn transform_CameraRelativeFromModel + rotatedModelPosition;\n}\nvec3 viewFromModelPosition(vec3 position) {\nreturn uTransform_ViewFromCameraRelative_RS * worldFromModelPosition(position);\n}\nvec4 projFromViewPosition(vec3 position) {\nreturn uTransform_ProjFromView * vec4(position, 1.0);\n}`)), r.code.add(e`float calculateExtensionLength(float extensionLength, float lineLength) {\nreturn extensionLength / (log2(max(1.0, 256.0 / lineLength)) * 0.2 + 1.0);\n}`);\n}\n\n!function (o) {\n  function e(o) {\n    return 1 === o.mode || 2 === o.mode;\n  }\n\n  function t(o) {\n    return 0 === o.mode || 2 === o.mode;\n  }\n\n  o.usesSketchLogic = e, o.usesSolidLogic = t;\n}(t || (t = {}));\nexport { t as EdgeUtil };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js"],"names":["DoublePrecision","o","glsl","e","t","n","r","vertex","uniforms","add","code","attributes","constants","legacy","silhouette","include","mode","usesSketchLogic","usesSolidLogic","EdgeUtil"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{DoublePrecision as o}from\"../../../core/shaderLibrary/util/DoublePrecision.glsl.js\";import{glsl as e}from\"../../../core/shaderModules/interfaces.js\";function t(t,n){const r=t.vertex;r.uniforms.add(\"uDistanceFalloffFactor\",\"float\"),r.code.add(e`float distanceBasedPerspectiveFactor(float distance) {\nreturn clamp(sqrt(uDistanceFalloffFactor / distance), 0.0, 1.0);\n}`),r.uniforms.add(\"uComponentDataTex\",\"sampler2D\"),r.uniforms.add(\"uComponentDataTexInvDim\",\"vec2\"),t.attributes.add(\"componentIndex\",\"float\"),r.constants.add(\"componentColorFieldOffset\",\"float\",0),r.constants.add(\"componentOtherFieldOffset\",\"float\",1),r.constants.add(\"componentFieldCount\",\"float\",2),r.constants.add(\"lineWidthFractionFactor\",\"float\",8),r.constants.add(\"extensionLengthOffset\",\"float\",128),r.constants.add(\"componentTexWidth\",\"float\",4096),r.code.add(e`vec2 _componentTextureCoords(float componentIndex, float fieldOffset) {\nfloat fieldIndex = componentFieldCount * componentIndex + fieldOffset;\nfloat rowIndex = floor(fieldIndex / componentTexWidth);\nfloat colIndex = mod(fieldIndex, componentTexWidth);\nvec2 linearIndex = vec2(\n(colIndex + 0.5) / componentTexWidth,\n(rowIndex + 0.5) * uComponentDataTexInvDim.y\n);\nreturn linearIndex;\n}\nstruct ComponentData {\nvec4 color;\nfloat lineWidth;\nfloat extensionLength;\nfloat type;\n};\nComponentData readComponentData() {\nvec2 colorIndex = _componentTextureCoords(componentIndex, componentColorFieldOffset);\nvec2 otherIndex = _componentTextureCoords(componentIndex, componentOtherFieldOffset);\nvec4 colorValue = texture2D(uComponentDataTex, colorIndex);\nvec4 otherValue = texture2D(uComponentDataTex, otherIndex);\nreturn ComponentData(\nvec4(colorValue.rgb, colorValue.a * otherValue.w),\notherValue.x * (255.0 / lineWidthFractionFactor),\notherValue.y * 255.0 - extensionLengthOffset,\n-(otherValue.z * 255.0) + 0.5\n);\n}`),n.legacy?r.code.add(e`vec3 _modelToWorldNormal(vec3 normal) {\nreturn (uModel * vec4(normal, 0.0)).xyz;\n}\nvec3 _modelToViewNormal(vec3 normal) {\nreturn (uView * uModel * vec4(normal, 0.0)).xyz;\n}`):(r.uniforms.add(\"uTransformNormal_GlobalFromModel \",\"mat3\"),r.code.add(e`vec3 _modelToWorldNormal(vec3 normal) {\nreturn uTransformNormal_GlobalFromModel * normal;\n}`)),n.silhouette?(t.attributes.add(\"normalA\",\"vec3\"),t.attributes.add(\"normalB\",\"vec3\"),r.code.add(e`vec3 worldNormal() {\nreturn _modelToWorldNormal(normalize(normalA + normalB));\n}`)):(t.attributes.add(\"normal\",\"vec3\"),r.code.add(e`vec3 worldNormal() {\nreturn _modelToWorldNormal(normal);\n}`)),n.legacy?r.code.add(e`vec3 worldFromModelPosition(vec3 position) {\nreturn (uModel * vec4(position, 1.0)).xyz;\n}\nvec3 viewFromModelPosition(vec3 position) {\nreturn (uView * vec4(worldFromModelPosition(position), 1.0)).xyz;\n}\nvec4 projFromViewPosition(vec3 position) {\nreturn uProj * vec4(position, 1.0);\n}`):(t.vertex.include(o,n),r.code.add(e`vec3 worldFromModelPosition(vec3 position) {\nvec3 rotatedModelPosition = uTransform_WorldFromModel_RS * position;\nvec3 transform_CameraRelativeFromModel = dpAdd(\nuTransform_WorldFromModel_TL,\nuTransform_WorldFromModel_TH,\n-uTransform_WorldFromView_TL,\n-uTransform_WorldFromView_TH\n);\nreturn transform_CameraRelativeFromModel + rotatedModelPosition;\n}\nvec3 viewFromModelPosition(vec3 position) {\nreturn uTransform_ViewFromCameraRelative_RS * worldFromModelPosition(position);\n}\nvec4 projFromViewPosition(vec3 position) {\nreturn uTransform_ProjFromView * vec4(position, 1.0);\n}`)),r.code.add(e`float calculateExtensionLength(float extensionLength, float lineLength) {\nreturn extensionLength / (log2(max(1.0, 256.0 / lineLength)) * 0.2 + 1.0);\n}`)}!function(o){function e(o){return 1===o.mode||2===o.mode}function t(o){return 0===o.mode||2===o.mode}o.usesSketchLogic=e,o.usesSolidLogic=t}(t||(t={}));export{t as EdgeUtil};\n"]},"metadata":{},"sourceType":"module"}