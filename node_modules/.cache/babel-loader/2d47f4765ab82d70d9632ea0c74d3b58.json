{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isSome as e, isNone as t } from \"../../../core/maybe.js\";\nimport { b as o } from \"../../../chunks/mat4f64.js\";\nimport { DefaultErrorContext as s } from \"./DefaultErrorContext.js\";\nimport { makeMaterialParameters as r, makeTextureSource as a } from \"./LoaderResult.js\";\nimport { Resource as i } from \"./internal/Resource.js\";\nlet n = 0;\n\nasync function l(s, r, a = {}, l = !0) {\n  const m = await i.load(s, p, r, a),\n        x = \"gltf_\" + n++,\n        h = {\n    lods: [],\n    materials: new Map(),\n    textures: new Map(),\n    meta: u(m)\n  },\n        T = !(!m.json.asset.extras || \"symbolResource\" !== m.json.asset.extras.ESRI_type);\n  return await c(m, async (s, r, i, n) => {\n    const u = void 0 !== s.mode ? s.mode : 4,\n          c = 4 === u || 5 === u || 6 === u ? u : null;\n    if (t(c)) return void p.warnUnsupported(\"Unsupported primitive mode (\" + f[u] + \"). Skipping primitive.\");\n    if (!m.hasPositions(s)) return void p.warn(\"Skipping primitive without POSITION vertex attribute.\");\n    const T = await m.getMaterial(s, a, l),\n          g = {\n      transform: o(r),\n      attributes: {\n        position: await m.getPositionData(s, a),\n        normal: null,\n        texCoord0: null,\n        color: null,\n        tangent: null\n      },\n      indices: await m.getIndexData(s, a),\n      primitiveType: c,\n      material: d(h, T, x)\n    };\n    m.hasNormals(s) && (g.attributes.normal = await m.getNormalData(s, a)), m.hasTangents(s) && (g.attributes.tangent = await m.getTangentData(s, a)), m.hasTextureCoordinates(s) && (g.attributes.texCoord0 = await m.getTextureCoordinates(s, a)), m.hasVertexColors(s) && (g.attributes.color = await m.getVertexColors(s, a));\n    let w = null;\n    e(h.meta) && e(h.meta.ESRI_lod) && \"screenSpaceRadius\" === h.meta.ESRI_lod.metric && (w = h.meta.ESRI_lod.thresholds[i]), h.lods[i] = h.lods[i] || {\n      parts: [],\n      name: n,\n      lodThreshold: w\n    }, h.lods[i].parts.push(g);\n  }), {\n    model: h,\n    meta: {\n      isEsriSymbolResource: T,\n      uri: m.uri\n    },\n    customMeta: {}\n  };\n}\n\nfunction u(t) {\n  const o = t.json;\n  let s = null;\n  return o.nodes.forEach(t => {\n    const o = t.extras;\n    e(o) && (o.ESRI_proxyEllipsoid || o.ESRI_lod) && (s = o);\n  }), s;\n}\n\nasync function c(e, t) {\n  const o = e.json,\n        s = o.scenes[o.scene || 0].nodes,\n        r = s.length > 1;\n\n  for (const i of s) {\n    const e = o.nodes[i],\n          t = [a(i, 0)];\n\n    if (m(e) && !r) {\n      const o = e.extensions.MSFT_lod.ids;\n      t.push(...o.map((e, t) => a(e, t + 1)));\n    }\n\n    await Promise.all(t);\n  }\n\n  async function a(s, r) {\n    const i = o.nodes[s],\n          n = e.getNodeTransform(s);\n\n    if (p.warnUnsupportedIf(null != i.weights, \"Morph targets are not supported.\"), null != i.mesh) {\n      const e = o.meshes[i.mesh];\n\n      for (const o of e.primitives) await t(o, n, r, e.name);\n    }\n\n    for (const e of i.children || []) await a(e, r);\n  }\n}\n\nfunction m(e) {\n  return e.extensions && e.extensions.MSFT_lod && Array.isArray(e.extensions.MSFT_lod.ids);\n}\n\nfunction d(e, t, o) {\n  const s = t => {\n    const s = `${o}_tex_${t && t.id}${t && t.name ? \"_\" + t.name : \"\"}`;\n\n    if (t && !e.textures.has(s)) {\n      const o = a(t.data, {\n        wrap: {\n          s: t.wrapS,\n          t: t.wrapT\n        },\n        mipmap: x.some(e => e === t.minFilter),\n        noUnpackFlip: !0\n      });\n      e.textures.set(s, o);\n    }\n\n    return s;\n  },\n        i = `${o}_mat_${t.id}_${t.name}`;\n\n  if (!e.materials.has(i)) {\n    const o = r({\n      color: [t.color[0], t.color[1], t.color[2]],\n      opacity: t.color[3],\n      alphaMode: t.alphaMode,\n      alphaCutoff: t.alphaCutoff,\n      doubleSided: t.doubleSided,\n      colorMixMode: t.ESRI_externalColorMixMode,\n      textureColor: t.colorTexture ? s(t.colorTexture) : void 0,\n      textureNormal: t.normalTexture ? s(t.normalTexture) : void 0,\n      textureOcclusion: t.occlusionTexture ? s(t.occlusionTexture) : void 0,\n      textureEmissive: t.emissiveTexture ? s(t.emissiveTexture) : void 0,\n      textureMetallicRoughness: t.metallicRoughnessTexture ? s(t.metallicRoughnessTexture) : void 0,\n      emissiveFactor: [t.emissiveFactor[0], t.emissiveFactor[1], t.emissiveFactor[2]],\n      metallicFactor: t.metallicFactor,\n      roughnessFactor: t.roughnessFactor\n    });\n    e.materials.set(i, o);\n  }\n\n  return i;\n}\n\nconst p = new s(),\n      x = [9987, 9985],\n      f = [\"POINTS\", \"LINES\", \"LINE_LOOP\", \"LINE_STRIP\", \"TRIANGLES\", \"TRIANGLE_STRIP\", \"TRIANGLE_FAN\"];\nexport { l as load };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/glTF/loader.js"],"names":["isSome","e","isNone","t","b","o","DefaultErrorContext","s","makeMaterialParameters","r","makeTextureSource","a","Resource","i","n","l","m","load","p","x","h","lods","materials","Map","textures","meta","u","T","json","asset","extras","ESRI_type","c","mode","warnUnsupported","f","hasPositions","warn","getMaterial","g","transform","attributes","position","getPositionData","normal","texCoord0","color","tangent","indices","getIndexData","primitiveType","material","d","hasNormals","getNormalData","hasTangents","getTangentData","hasTextureCoordinates","getTextureCoordinates","hasVertexColors","getVertexColors","w","ESRI_lod","metric","thresholds","parts","name","lodThreshold","push","model","isEsriSymbolResource","uri","customMeta","nodes","forEach","ESRI_proxyEllipsoid","scenes","scene","length","extensions","MSFT_lod","ids","map","Promise","all","getNodeTransform","warnUnsupportedIf","weights","mesh","meshes","primitives","children","Array","isArray","id","has","data","wrap","wrapS","wrapT","mipmap","some","minFilter","noUnpackFlip","set","opacity","alphaMode","alphaCutoff","doubleSided","colorMixMode","ESRI_externalColorMixMode","textureColor","colorTexture","textureNormal","normalTexture","textureOcclusion","occlusionTexture","textureEmissive","emissiveTexture","textureMetallicRoughness","metallicRoughnessTexture","emissiveFactor","metallicFactor","roughnessFactor"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isSome as e,isNone as t}from\"../../../core/maybe.js\";import{b as o}from\"../../../chunks/mat4f64.js\";import{DefaultErrorContext as s}from\"./DefaultErrorContext.js\";import{makeMaterialParameters as r,makeTextureSource as a}from\"./LoaderResult.js\";import{Resource as i}from\"./internal/Resource.js\";let n=0;async function l(s,r,a={},l=!0){const m=await i.load(s,p,r,a),x=\"gltf_\"+n++,h={lods:[],materials:new Map,textures:new Map,meta:u(m)},T=!(!m.json.asset.extras||\"symbolResource\"!==m.json.asset.extras.ESRI_type);return await c(m,(async(s,r,i,n)=>{const u=void 0!==s.mode?s.mode:4,c=4===u||5===u||6===u?u:null;if(t(c))return void p.warnUnsupported(\"Unsupported primitive mode (\"+f[u]+\"). Skipping primitive.\");if(!m.hasPositions(s))return void p.warn(\"Skipping primitive without POSITION vertex attribute.\");const T=await m.getMaterial(s,a,l),g={transform:o(r),attributes:{position:await m.getPositionData(s,a),normal:null,texCoord0:null,color:null,tangent:null},indices:await m.getIndexData(s,a),primitiveType:c,material:d(h,T,x)};m.hasNormals(s)&&(g.attributes.normal=await m.getNormalData(s,a)),m.hasTangents(s)&&(g.attributes.tangent=await m.getTangentData(s,a)),m.hasTextureCoordinates(s)&&(g.attributes.texCoord0=await m.getTextureCoordinates(s,a)),m.hasVertexColors(s)&&(g.attributes.color=await m.getVertexColors(s,a));let w=null;e(h.meta)&&e(h.meta.ESRI_lod)&&\"screenSpaceRadius\"===h.meta.ESRI_lod.metric&&(w=h.meta.ESRI_lod.thresholds[i]),h.lods[i]=h.lods[i]||{parts:[],name:n,lodThreshold:w},h.lods[i].parts.push(g)})),{model:h,meta:{isEsriSymbolResource:T,uri:m.uri},customMeta:{}}}function u(t){const o=t.json;let s=null;return o.nodes.forEach((t=>{const o=t.extras;e(o)&&(o.ESRI_proxyEllipsoid||o.ESRI_lod)&&(s=o)})),s}async function c(e,t){const o=e.json,s=o.scenes[o.scene||0].nodes,r=s.length>1;for(const i of s){const e=o.nodes[i],t=[a(i,0)];if(m(e)&&!r){const o=e.extensions.MSFT_lod.ids;t.push(...o.map(((e,t)=>a(e,t+1))))}await Promise.all(t)}async function a(s,r){const i=o.nodes[s],n=e.getNodeTransform(s);if(p.warnUnsupportedIf(null!=i.weights,\"Morph targets are not supported.\"),null!=i.mesh){const e=o.meshes[i.mesh];for(const o of e.primitives)await t(o,n,r,e.name)}for(const e of i.children||[])await a(e,r)}}function m(e){return e.extensions&&e.extensions.MSFT_lod&&Array.isArray(e.extensions.MSFT_lod.ids)}function d(e,t,o){const s=t=>{const s=`${o}_tex_${t&&t.id}${t&&t.name?\"_\"+t.name:\"\"}`;if(t&&!e.textures.has(s)){const o=a(t.data,{wrap:{s:t.wrapS,t:t.wrapT},mipmap:x.some((e=>e===t.minFilter)),noUnpackFlip:!0});e.textures.set(s,o)}return s},i=`${o}_mat_${t.id}_${t.name}`;if(!e.materials.has(i)){const o=r({color:[t.color[0],t.color[1],t.color[2]],opacity:t.color[3],alphaMode:t.alphaMode,alphaCutoff:t.alphaCutoff,doubleSided:t.doubleSided,colorMixMode:t.ESRI_externalColorMixMode,textureColor:t.colorTexture?s(t.colorTexture):void 0,textureNormal:t.normalTexture?s(t.normalTexture):void 0,textureOcclusion:t.occlusionTexture?s(t.occlusionTexture):void 0,textureEmissive:t.emissiveTexture?s(t.emissiveTexture):void 0,textureMetallicRoughness:t.metallicRoughnessTexture?s(t.metallicRoughnessTexture):void 0,emissiveFactor:[t.emissiveFactor[0],t.emissiveFactor[1],t.emissiveFactor[2]],metallicFactor:t.metallicFactor,roughnessFactor:t.roughnessFactor});e.materials.set(i,o)}return i}const p=new s,x=[9987,9985],f=[\"POINTS\",\"LINES\",\"LINE_LOOP\",\"LINE_STRIP\",\"TRIANGLES\",\"TRIANGLE_STRIP\",\"TRIANGLE_FAN\"];export{l as load};\n"]},"metadata":{},"sourceType":"module"}