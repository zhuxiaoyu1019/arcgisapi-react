{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { lerp as t } from \"../../../core/mathUtils.js\";\nimport { n as i, s, h as e } from \"../../../chunks/vec3.js\";\nimport { c as r, d as o } from \"../../../chunks/vec3f64.js\";\nimport { lonLatToSphericalPCPF as h } from \"../../../geometry/projection.js\";\nimport { getReferenceEllipsoid as a } from \"../../../geometry/projectionEllipsoid.js\";\nimport { intersectsSphere as n } from \"../../../geometry/support/frustum.js\";\nimport { copy as l, isPointOutside as d, create as p } from \"../../../geometry/support/plane.js\";\nimport { createSphericalGlobePatch as c } from \"./PatchGeometryFactory.js\";\nimport u from \"./Tile.js\";\n\nclass m extends u {\n  constructor(t, i, s) {\n    super(f), this.obb = new Array(8), this.isWebMercator = !1;\n\n    for (let e = 0; e < 8; e++) this.obb[e] = r();\n\n    void 0 !== t && this.init(t, i, s);\n  }\n\n  init(s, e, r) {\n    super.init(s, e, r), this.isWebMercator = r.tilingScheme.spatialReference.isWebMercator;\n    const a = this.ellipsoid.radius,\n          n = this.extentInRadians[0],\n          l = this.extentInRadians[1],\n          d = this.extentInRadians[2],\n          p = this.extentInRadians[3],\n          c = s[0],\n          u = t(l, p, .5),\n          m = t(n, d, .5),\n          f = 0 === c ? 0 : Math.min(Math.abs(l), Math.abs(p));\n    this._edgeLen = (d - n) * Math.cos(f) * a, this._edgeLen2 = this._edgeLen * this._edgeLen, this._curvatureHeight = a - Math.sqrt(a * a - this._edgeLen2 / 4), h(this.centerAtSeaLevel, m, u, this.ellipsoid.radius, 0);\n\n    const _ = o(this.centerAtSeaLevel);\n\n    i(_, _), this.up = _, this._updateOBB(), this.updateRadiusAndCenter();\n  }\n\n  updateRadiusAndCenter() {\n    if (0 === this.lij[0]) s(this._center[1], 0, 0, 0), s(this._center[0], 0, 0, 0), s(this._center[2], 0, 0, 0), this.ellipsoid || (this.ellipsoid = a(this.surface.tilingScheme.spatialReference)), this._center[1][3] = this.ellipsoid.radius + this.elevationBounds[1];else {\n      this._updateCenter();\n\n      const t = Math.max(e(this._center[1], this.obb[0]), e(this._center[1], this.obb[1]));\n      this._center[1][3] = Math.sqrt(t);\n    }\n  }\n\n  _isVisible(t) {\n    if (!this.intersectsClippingArea) return !1;\n    if (this.lij[0] < 10) return n(t, this._center[1]);\n    const i = this.obb;\n\n    for (let s = 0; s < 6; s++) {\n      let e,\n          r = t[s];\n\n      for (4 === s && (r = l(r, _), _[3] -= this.surface.view.state.camera.near), e = 0; e < 8 && !d(r, i[e]); e++);\n\n      if (8 === e) return !1;\n    }\n\n    return !0;\n  }\n\n  computeElevationBounds() {\n    super.computeElevationBounds(), this._updateOBB();\n  }\n\n  createGeometry(t, i) {\n    const s = this._isPole(this.lij[1], this.lij[0]);\n\n    c(t, this.extent, i, this.renderData, this.extentInRadians, this.isWebMercator, this.ellipsoid, s), this.setMemoryDirty();\n  }\n\n  _updateOBB() {\n    const t = this.extentInRadians,\n          i = this.obb;\n\n    for (let s = 0; s < 2; s++) {\n      const e = this.elevationBounds[s];\n      let r = 4 * s;\n      h(i[r++], t[0], t[1], this.ellipsoid.radius, e), h(i[r++], t[0], t[3], this.ellipsoid.radius, e), h(i[r++], t[2], t[3], this.ellipsoid.radius, e), h(i[r++], t[2], t[1], this.ellipsoid.radius, e);\n    }\n\n    if (this.isWebMercator) {\n      const t = this._isPole(this.lij[1], this.lij[0]);\n\n      2 === t ? (s(i[1], 0, 0, this.ellipsoid.radius), s(i[2], 0, 0, this.ellipsoid.radius), s(i[5], 0, 0, this.ellipsoid.radius), s(i[6], 0, 0, this.ellipsoid.radius)) : 1 === t && (s(i[0], 0, 0, -this.ellipsoid.radius), s(i[3], 0, 0, -this.ellipsoid.radius), s(i[4], 0, 0, -this.ellipsoid.radius), s(i[7], 0, 0, -this.ellipsoid.radius));\n    }\n  }\n\n  _isPole(t, i) {\n    let s = 0;\n    return t === (1 << i) - 1 && (s += 1), 0 === t && (s += 2), s;\n  }\n\n}\n\nconst f = [128, 64, 32, 16, 16, 8, 8, 4],\n      _ = p();\n\nexport { m as SphericalPatch };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/terrain/SphericalPatch.js"],"names":["lerp","t","n","i","s","h","e","c","r","d","o","lonLatToSphericalPCPF","getReferenceEllipsoid","a","intersectsSphere","copy","l","isPointOutside","create","p","createSphericalGlobePatch","u","m","constructor","f","obb","Array","isWebMercator","init","tilingScheme","spatialReference","ellipsoid","radius","extentInRadians","Math","min","abs","_edgeLen","cos","_edgeLen2","_curvatureHeight","sqrt","centerAtSeaLevel","_","up","_updateOBB","updateRadiusAndCenter","lij","_center","surface","elevationBounds","_updateCenter","max","_isVisible","intersectsClippingArea","view","state","camera","near","computeElevationBounds","createGeometry","_isPole","extent","renderData","setMemoryDirty","SphericalPatch"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{lerp as t}from\"../../../core/mathUtils.js\";import{n as i,s,h as e}from\"../../../chunks/vec3.js\";import{c as r,d as o}from\"../../../chunks/vec3f64.js\";import{lonLatToSphericalPCPF as h}from\"../../../geometry/projection.js\";import{getReferenceEllipsoid as a}from\"../../../geometry/projectionEllipsoid.js\";import{intersectsSphere as n}from\"../../../geometry/support/frustum.js\";import{copy as l,isPointOutside as d,create as p}from\"../../../geometry/support/plane.js\";import{createSphericalGlobePatch as c}from\"./PatchGeometryFactory.js\";import u from\"./Tile.js\";class m extends u{constructor(t,i,s){super(f),this.obb=new Array(8),this.isWebMercator=!1;for(let e=0;e<8;e++)this.obb[e]=r();void 0!==t&&this.init(t,i,s)}init(s,e,r){super.init(s,e,r),this.isWebMercator=r.tilingScheme.spatialReference.isWebMercator;const a=this.ellipsoid.radius,n=this.extentInRadians[0],l=this.extentInRadians[1],d=this.extentInRadians[2],p=this.extentInRadians[3],c=s[0],u=t(l,p,.5),m=t(n,d,.5),f=0===c?0:Math.min(Math.abs(l),Math.abs(p));this._edgeLen=(d-n)*Math.cos(f)*a,this._edgeLen2=this._edgeLen*this._edgeLen,this._curvatureHeight=a-Math.sqrt(a*a-this._edgeLen2/4),h(this.centerAtSeaLevel,m,u,this.ellipsoid.radius,0);const _=o(this.centerAtSeaLevel);i(_,_),this.up=_,this._updateOBB(),this.updateRadiusAndCenter()}updateRadiusAndCenter(){if(0===this.lij[0])s(this._center[1],0,0,0),s(this._center[0],0,0,0),s(this._center[2],0,0,0),this.ellipsoid||(this.ellipsoid=a(this.surface.tilingScheme.spatialReference)),this._center[1][3]=this.ellipsoid.radius+this.elevationBounds[1];else{this._updateCenter();const t=Math.max(e(this._center[1],this.obb[0]),e(this._center[1],this.obb[1]));this._center[1][3]=Math.sqrt(t)}}_isVisible(t){if(!this.intersectsClippingArea)return!1;if(this.lij[0]<10)return n(t,this._center[1]);const i=this.obb;for(let s=0;s<6;s++){let e,r=t[s];for(4===s&&(r=l(r,_),_[3]-=this.surface.view.state.camera.near),e=0;e<8&&!d(r,i[e]);e++);if(8===e)return!1}return!0}computeElevationBounds(){super.computeElevationBounds(),this._updateOBB()}createGeometry(t,i){const s=this._isPole(this.lij[1],this.lij[0]);c(t,this.extent,i,this.renderData,this.extentInRadians,this.isWebMercator,this.ellipsoid,s),this.setMemoryDirty()}_updateOBB(){const t=this.extentInRadians,i=this.obb;for(let s=0;s<2;s++){const e=this.elevationBounds[s];let r=4*s;h(i[r++],t[0],t[1],this.ellipsoid.radius,e),h(i[r++],t[0],t[3],this.ellipsoid.radius,e),h(i[r++],t[2],t[3],this.ellipsoid.radius,e),h(i[r++],t[2],t[1],this.ellipsoid.radius,e)}if(this.isWebMercator){const t=this._isPole(this.lij[1],this.lij[0]);2===t?(s(i[1],0,0,this.ellipsoid.radius),s(i[2],0,0,this.ellipsoid.radius),s(i[5],0,0,this.ellipsoid.radius),s(i[6],0,0,this.ellipsoid.radius)):1===t&&(s(i[0],0,0,-this.ellipsoid.radius),s(i[3],0,0,-this.ellipsoid.radius),s(i[4],0,0,-this.ellipsoid.radius),s(i[7],0,0,-this.ellipsoid.radius))}}_isPole(t,i){let s=0;return t===(1<<i)-1&&(s+=1),0===t&&(s+=2),s}}const f=[128,64,32,16,16,8,8,4],_=p();export{m as SphericalPatch};\n"]},"metadata":{},"sourceType":"module"}