{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../chunks/tslib.es6.js\";\nimport { T as r } from \"../../../../chunks/TextureOnly.glsl.js\";\nimport { ReloadableShaderModule as o } from \"../core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as t } from \"../core/shaderTechnique/ShaderTechnique.js\";\nimport { ShaderTechniqueConfiguration as i, parameter as s } from \"../core/shaderTechnique/ShaderTechniqueConfiguration.js\";\nimport { Default3D as a } from \"./DefaultVertexAttributeLocations.js\";\nimport { Program as n } from \"./Program.js\";\nimport { makePipelineState as l, separateBlendingParams as h, defaultColorWriteParams as c } from \"../../../webgl/renderState.js\";\n\nclass u extends t {\n  initializeProgram(e) {\n    const r = u.shader.get().build();\n    return new n(e.rctx, r, a);\n  }\n\n  initializePipeline() {\n    return this.configuration.hasAlpha ? l({\n      blending: h(770, 1, 771, 771),\n      colorWrite: c\n    }) : l({\n      colorWrite: c\n    });\n  }\n\n}\n\nu.shader = new o(r, () => import(\"../core/shaderLibrary/util/TextureOnly.glsl.js\"));\n\nclass m extends i {\n  constructor() {\n    super(...arguments), this.hasAlpha = !1;\n  }\n\n}\n\ne([s()], m.prototype, \"hasAlpha\", void 0);\nexport { u as TextureTechnique, m as TextureTechniqueConfiguration };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureTechnique.js"],"names":["_","e","T","r","ReloadableShaderModule","o","ShaderTechnique","t","ShaderTechniqueConfiguration","i","parameter","s","Default3D","a","Program","n","makePipelineState","l","separateBlendingParams","h","defaultColorWriteParams","c","u","initializeProgram","shader","get","build","rctx","initializePipeline","configuration","hasAlpha","blending","colorWrite","m","constructor","arguments","prototype","TextureTechnique","TextureTechniqueConfiguration"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,iCAAlB;AAAoD,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,wCAAlB;AAA2D,SAAOC,sBAAsB,IAAIC,CAAjC,QAAuC,mDAAvC;AAA2F,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,4CAAhC;AAA6E,SAAOC,4BAA4B,IAAIC,CAAvC,EAAyCC,SAAS,IAAIC,CAAtD,QAA4D,yDAA5D;AAAsH,SAAOC,SAAS,IAAIC,CAApB,QAA0B,sCAA1B;AAAiE,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,cAAxB;AAAuC,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,sBAAsB,IAAIC,CAAxD,EAA0DC,uBAAuB,IAAIC,CAArF,QAA2F,+BAA3F;;AAA2H,MAAMC,CAAN,SAAgBf,CAAhB,CAAiB;AAACgB,EAAAA,iBAAiB,CAACtB,CAAD,EAAG;AAAC,UAAME,CAAC,GAACmB,CAAC,CAACE,MAAF,CAASC,GAAT,GAAeC,KAAf,EAAR;AAA+B,WAAO,IAAIX,CAAJ,CAAMd,CAAC,CAAC0B,IAAR,EAAaxB,CAAb,EAAeU,CAAf,CAAP;AAAyB;;AAAAe,EAAAA,kBAAkB,GAAE;AAAC,WAAO,KAAKC,aAAL,CAAmBC,QAAnB,GAA4Bb,CAAC,CAAC;AAACc,MAAAA,QAAQ,EAACZ,CAAC,CAAC,GAAD,EAAK,CAAL,EAAO,GAAP,EAAW,GAAX,CAAX;AAA2Ba,MAAAA,UAAU,EAACX;AAAtC,KAAD,CAA7B,GAAwEJ,CAAC,CAAC;AAACe,MAAAA,UAAU,EAACX;AAAZ,KAAD,CAAhF;AAAiG;;AAApM;;AAAqMC,CAAC,CAACE,MAAF,GAAS,IAAInB,CAAJ,CAAMF,CAAN,EAAS,MAAI,OAAO,gDAAP,CAAb,CAAT;;AAAiF,MAAM8B,CAAN,SAAgBxB,CAAhB,CAAiB;AAACyB,EAAAA,WAAW,GAAE;AAAC,UAAM,GAAGC,SAAT,GAAoB,KAAKL,QAAL,GAAc,CAAC,CAAnC;AAAqC;;AAApD;;AAAqD7B,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOsB,CAAC,CAACG,SAAT,EAAmB,UAAnB,EAA8B,KAAK,CAAnC,CAAD;AAAuC,SAAOd,CAAC,IAAIe,gBAAZ,EAA6BJ,CAAC,IAAIK,6BAAlC","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../chunks/tslib.es6.js\";import{T as r}from\"../../../../chunks/TextureOnly.glsl.js\";import{ReloadableShaderModule as o}from\"../core/shaderTechnique/ReloadableShaderModule.js\";import{ShaderTechnique as t}from\"../core/shaderTechnique/ShaderTechnique.js\";import{ShaderTechniqueConfiguration as i,parameter as s}from\"../core/shaderTechnique/ShaderTechniqueConfiguration.js\";import{Default3D as a}from\"./DefaultVertexAttributeLocations.js\";import{Program as n}from\"./Program.js\";import{makePipelineState as l,separateBlendingParams as h,defaultColorWriteParams as c}from\"../../../webgl/renderState.js\";class u extends t{initializeProgram(e){const r=u.shader.get().build();return new n(e.rctx,r,a)}initializePipeline(){return this.configuration.hasAlpha?l({blending:h(770,1,771,771),colorWrite:c}):l({colorWrite:c})}}u.shader=new o(r,(()=>import(\"../core/shaderLibrary/util/TextureOnly.glsl.js\")));class m extends i{constructor(){super(...arguments),this.hasAlpha=!1}}e([s()],m.prototype,\"hasAlpha\",void 0);export{u as TextureTechnique,m as TextureTechniqueConfiguration};\n"]},"metadata":{},"sourceType":"module"}