{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { getInfo as e } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport t from \"./LODInfo.js\";\nimport o from \"./TileCoverage.js\";\nimport l from \"./TileKey.js\";\nimport s from \"./TileSpan.js\";\nconst i = new l(\"0/0/0/0\");\n\nclass n {\n  constructor(e, t, o, l, s, i, n, r) {\n    this.x = e, this.ymin = t, this.ymax = o, this.invM = l, this.leftAdjust = s, this.rightAdjust = i, this.leftBound = n, this.rightBound = r;\n  }\n\n  static create(e, t) {\n    e[1] > t[1] && ([e, t] = [t, e]);\n    const [o, l] = e,\n          [s, i] = t,\n          r = s - o,\n          a = i - l,\n          h = 0 !== a ? r / a : 0,\n          c = (Math.ceil(l) - l) * h,\n          f = (Math.floor(l) - l) * h;\n    return new n(o, Math.floor(l), Math.ceil(i), h, r < 0 ? c : f, r < 0 ? f : c, r < 0 ? s : o, r < 0 ? o : s);\n  }\n\n  incrRow() {\n    this.x += this.invM;\n  }\n\n  getLeftCol() {\n    return Math.max(this.x + this.leftAdjust, this.leftBound);\n  }\n\n  getRightCol() {\n    return Math.min(this.x + this.rightAdjust, this.rightBound);\n  }\n\n}\n\nconst r = [[0, 0], [0, 0], [0, 0], [0, 0]],\n      a = 1e-6;\n\nclass h {\n  constructor(e, o) {\n    this.tileInfo = e, this.fullExtent = o, this.scales = [], this._lodInfos = null, this._infoByScale = {}, this._infoByLevel = {};\n    const l = e.lods.slice();\n    l.sort(function (e, t) {\n      return t.scale - e.scale;\n    });\n    const s = this._lodInfos = l.map(l => t.create(e, l, o));\n    l.forEach((e, t) => {\n      this._infoByLevel[e.level] = s[t], this._infoByScale[e.scale] = s[t], this.scales[t] = e.scale;\n    }, this), this._wrap = e.isWrappable;\n  }\n\n  get spatialReference() {\n    return this.tileInfo.spatialReference;\n  }\n\n  getLODInfoAt(e) {\n    return this._infoByLevel[\"number\" == typeof e ? e : e.level];\n  }\n\n  getTileBounds(e, t, o = !1) {\n    i.set(t);\n    const l = this._infoByLevel[i.level];\n    return l ? l.getTileBounds(e, i, o) : e;\n  }\n\n  getTileCoords(e, t, o = !1) {\n    i.set(t);\n    const l = this._infoByLevel[i.level];\n    return l ? l.getTileCoords(e, i, o) : e;\n  }\n\n  getTileCoverage(e, t = 192, l = \"closest\") {\n    const i = \"closest\" === l ? this.getClosestInfoForScale(e.scale) : this.getSmallestInfoForScale(e.scale),\n          a = o.pool.acquire(i),\n          h = this._wrap;\n    let c,\n        f,\n        u,\n        m = 1 / 0,\n        g = -1 / 0;\n    const d = a.spans;\n    r[0][0] = r[0][1] = r[1][1] = r[3][0] = -t, r[1][0] = r[2][0] = e.size[0] + t, r[2][1] = r[3][1] = e.size[1] + t;\n\n    for (const o of r) e.toMap(o, o), o[0] = i.getColumnForX(o[0]), o[1] = i.getRowForY(o[1]);\n\n    const y = [];\n    let _ = 3;\n\n    for (let o = 0; o < 4; o++) {\n      if (r[o][1] === r[_][1]) {\n        _ = o;\n        continue;\n      }\n\n      const e = n.create(r[o], r[_]);\n      m = Math.min(e.ymin, m), g = Math.max(e.ymax, g), void 0 === y[e.ymin] && (y[e.ymin] = []), y[e.ymin].push(e), _ = o;\n    }\n\n    if (null == m || null == g || g - m > 100) return null;\n    let v = [];\n\n    for (c = m; c < g;) {\n      null != y[c] && (v = v.concat(y[c])), f = 1 / 0, u = -1 / 0;\n\n      for (let e = v.length - 1; e >= 0; e--) {\n        const t = v[e];\n        f = Math.min(f, t.getLeftCol()), u = Math.max(u, t.getRightCol());\n      }\n\n      if (f = Math.floor(f), u = Math.floor(u), c >= i.first[1] && c <= i.last[1]) if (h) {\n        if (i.size[0] < i.worldSize[0]) {\n          const e = Math.floor(u / i.worldSize[0]);\n\n          for (let t = Math.floor(f / i.worldSize[0]); t <= e; t++) d.push(new s(c, Math.max(i.getFirstColumnForWorld(t), f), Math.min(i.getLastColumnForWorld(t), u)));\n        } else d.push(new s(c, f, u));\n      } else f > i.last[0] || u < i.first[0] || (f = Math.max(f, i.first[0]), u = Math.min(u, i.last[0]), d.push(new s(c, f, u)));\n      c += 1;\n\n      for (let e = v.length - 1; e >= 0; e--) {\n        const t = v[e];\n        t.ymax >= c ? t.incrRow() : v.splice(e, 1);\n      }\n    }\n\n    return a;\n  }\n\n  getTileParentId(e) {\n    i.set(e);\n    const t = this._infoByLevel[i.level],\n          o = this._lodInfos.indexOf(t) - 1;\n    return o < 0 ? null : (this._getTileIdAtLOD(i, this._lodInfos[o], i), i.id);\n  }\n\n  getTileResolution(e) {\n    const t = this._infoByLevel[\"object\" == typeof e ? e.level : e];\n    return t ? t.resolution : -1;\n  }\n\n  getTileScale(e) {\n    const t = this._infoByLevel[e.level];\n    return t ? t.scale : -1;\n  }\n\n  intersects(e, t) {\n    i.set(t);\n    const o = this._infoByLevel[i.level],\n          l = e.lodInfo;\n\n    if (l.resolution > o.resolution) {\n      this._getTileIdAtLOD(i, l, i);\n\n      const t = l.denormalizeCol(i.col, i.world);\n\n      for (const o of e.spans) if (o.row === i.row && o.colFrom <= t && o.colTo >= t) return !0;\n    }\n\n    if (l.resolution < o.resolution) {\n      const [t, s, n, r] = e.spans.reduce((e, t) => (e[0] = Math.min(e[0], t.row), e[1] = Math.max(e[1], t.row), e[2] = Math.min(e[2], t.colFrom), e[3] = Math.max(e[3], t.colTo), e), [1 / 0, -1 / 0, 1 / 0, -1 / 0]),\n            a = o.denormalizeCol(i.col, i.world),\n            h = l.getColumnForX(o.getXForColumn(a)),\n            c = l.getRowForY(o.getYForRow(i.row)),\n            f = l.getColumnForX(o.getXForColumn(a + 1)) - 1,\n            u = l.getRowForY(o.getYForRow(i.row + 1)) - 1;\n      return !(h > r || f < n || c > s || u < t);\n    }\n\n    const s = l.denormalizeCol(i.col, i.world);\n    return e.spans.some(e => e.row === i.row && e.colFrom <= s && e.colTo >= s);\n  }\n\n  normalizeBounds(t, o, l) {\n    if (t[0] = o[0], t[1] = o[1], t[2] = o[2], t[3] = o[3], this._wrap) {\n      const o = e(this.tileInfo.spatialReference),\n            s = -l * (o.valid[1] - o.valid[0]);\n      t[0] += s, t[2] += s;\n    }\n\n    return t;\n  }\n\n  getSmallestInfoForScale(e) {\n    const t = this.scales;\n    if (this._infoByScale[e]) return this._infoByScale[e];\n    if (e > t[0]) return this._infoByScale[t[0]];\n\n    for (let o = 1; o < t.length - 1; o++) if (e > t[o] + a) return this._infoByScale[t[o - 1]];\n\n    return this._infoByScale[t[t.length - 1]];\n  }\n\n  getClosestInfoForScale(e) {\n    const t = this.scales;\n    return this._infoByScale[e] || (e = t.reduce((t, o) => Math.abs(o - e) < Math.abs(t - e) ? o : t, t[0])), this._infoByScale[e];\n  }\n\n  scaleToLevel(e) {\n    const t = this.scales;\n    if (this._infoByScale[e]) return this._infoByScale[e].level;\n\n    for (let o = t.length - 1; o >= 0; o--) if (e < t[o]) {\n      if (o === t.length - 1) return this._infoByScale[t[t.length - 1]].level;\n      return this._infoByScale[t[o]].level + (t[o] - e) / (t[o] - t[o + 1]);\n    }\n\n    return this._infoByScale[t[0]].level;\n  }\n\n  scaleToZoom(e) {\n    return this.tileInfo.scaleToZoom(e);\n  }\n\n  _getTileIdAtLOD(e, t, o) {\n    const l = this._infoByLevel[o.level];\n    return e.set(o), t.resolution < l.resolution ? null : (t.resolution === l.resolution || (e.level = t.level, e.col = Math.floor(o.col * l.resolution / t.resolution + .01), e.row = Math.floor(o.row * l.resolution / t.resolution + .01)), e);\n  }\n\n}\n\nexport default h;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/2d/tiling/TileInfoView.js"],"names":["getInfo","e","t","o","l","s","i","n","constructor","r","x","ymin","ymax","invM","leftAdjust","rightAdjust","leftBound","rightBound","create","a","h","c","Math","ceil","f","floor","incrRow","getLeftCol","max","getRightCol","min","tileInfo","fullExtent","scales","_lodInfos","_infoByScale","_infoByLevel","lods","slice","sort","scale","map","forEach","level","_wrap","isWrappable","spatialReference","getLODInfoAt","getTileBounds","set","getTileCoords","getTileCoverage","getClosestInfoForScale","getSmallestInfoForScale","pool","acquire","u","m","g","d","spans","size","toMap","getColumnForX","getRowForY","y","_","push","v","concat","length","first","last","worldSize","getFirstColumnForWorld","getLastColumnForWorld","splice","getTileParentId","indexOf","_getTileIdAtLOD","id","getTileResolution","resolution","getTileScale","intersects","lodInfo","denormalizeCol","col","world","row","colFrom","colTo","reduce","getXForColumn","getYForRow","some","normalizeBounds","valid","abs","scaleToLevel","scaleToZoom"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,OAAO,IAAIC,CAAlB,QAAwB,oDAAxB;AAA6E,OAAOC,CAAP,MAAa,cAAb;AAA4B,OAAOC,CAAP,MAAa,mBAAb;AAAiC,OAAOC,CAAP,MAAa,cAAb;AAA4B,OAAOC,CAAP,MAAa,eAAb;AAA6B,MAAMC,CAAC,GAAC,IAAIF,CAAJ,CAAM,SAAN,CAAR;;AAAyB,MAAMG,CAAN,CAAO;AAACC,EAAAA,WAAW,CAACP,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOC,CAAP,EAASC,CAAT,EAAWC,CAAX,EAAaC,CAAb,EAAeE,CAAf,EAAiB;AAAC,SAAKC,CAAL,GAAOT,CAAP,EAAS,KAAKU,IAAL,GAAUT,CAAnB,EAAqB,KAAKU,IAAL,GAAUT,CAA/B,EAAiC,KAAKU,IAAL,GAAUT,CAA3C,EAA6C,KAAKU,UAAL,GAAgBT,CAA7D,EAA+D,KAAKU,WAAL,GAAiBT,CAAhF,EAAkF,KAAKU,SAAL,GAAeT,CAAjG,EAAmG,KAAKU,UAAL,GAAgBR,CAAnH;AAAqH;;AAAa,SAANS,MAAM,CAACjB,CAAD,EAAGC,CAAH,EAAK;AAACD,IAAAA,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAC,CAAC,CAAD,CAAN,KAAY,CAACD,CAAD,EAAGC,CAAH,IAAM,CAACA,CAAD,EAAGD,CAAH,CAAlB;AAAyB,UAAK,CAACE,CAAD,EAAGC,CAAH,IAAMH,CAAX;AAAA,UAAa,CAACI,CAAD,EAAGC,CAAH,IAAMJ,CAAnB;AAAA,UAAqBO,CAAC,GAACJ,CAAC,GAACF,CAAzB;AAAA,UAA2BgB,CAAC,GAACb,CAAC,GAACF,CAA/B;AAAA,UAAiCgB,CAAC,GAAC,MAAID,CAAJ,GAAMV,CAAC,GAACU,CAAR,GAAU,CAA7C;AAAA,UAA+CE,CAAC,GAAC,CAACC,IAAI,CAACC,IAAL,CAAUnB,CAAV,IAAaA,CAAd,IAAiBgB,CAAlE;AAAA,UAAoEI,CAAC,GAAC,CAACF,IAAI,CAACG,KAAL,CAAWrB,CAAX,IAAcA,CAAf,IAAkBgB,CAAxF;AAA0F,WAAO,IAAIb,CAAJ,CAAMJ,CAAN,EAAQmB,IAAI,CAACG,KAAL,CAAWrB,CAAX,CAAR,EAAsBkB,IAAI,CAACC,IAAL,CAAUjB,CAAV,CAAtB,EAAmCc,CAAnC,EAAqCX,CAAC,GAAC,CAAF,GAAIY,CAAJ,GAAMG,CAA3C,EAA6Cf,CAAC,GAAC,CAAF,GAAIe,CAAJ,GAAMH,CAAnD,EAAqDZ,CAAC,GAAC,CAAF,GAAIJ,CAAJ,GAAMF,CAA3D,EAA6DM,CAAC,GAAC,CAAF,GAAIN,CAAJ,GAAME,CAAnE,CAAP;AAA6E;;AAAAqB,EAAAA,OAAO,GAAE;AAAC,SAAKhB,CAAL,IAAQ,KAAKG,IAAb;AAAkB;;AAAAc,EAAAA,UAAU,GAAE;AAAC,WAAOL,IAAI,CAACM,GAAL,CAAS,KAAKlB,CAAL,GAAO,KAAKI,UAArB,EAAgC,KAAKE,SAArC,CAAP;AAAuD;;AAAAa,EAAAA,WAAW,GAAE;AAAC,WAAOP,IAAI,CAACQ,GAAL,CAAS,KAAKpB,CAAL,GAAO,KAAKK,WAArB,EAAiC,KAAKE,UAAtC,CAAP;AAAyD;;AAA7gB;;AAA8gB,MAAMR,CAAC,GAAC,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAO,CAAC,CAAD,EAAG,CAAH,CAAP,EAAa,CAAC,CAAD,EAAG,CAAH,CAAb,EAAmB,CAAC,CAAD,EAAG,CAAH,CAAnB,CAAR;AAAA,MAAkCU,CAAC,GAAC,IAApC;;AAAyC,MAAMC,CAAN,CAAO;AAACZ,EAAAA,WAAW,CAACP,CAAD,EAAGE,CAAH,EAAK;AAAC,SAAK4B,QAAL,GAAc9B,CAAd,EAAgB,KAAK+B,UAAL,GAAgB7B,CAAhC,EAAkC,KAAK8B,MAAL,GAAY,EAA9C,EAAiD,KAAKC,SAAL,GAAe,IAAhE,EAAqE,KAAKC,YAAL,GAAkB,EAAvF,EAA0F,KAAKC,YAAL,GAAkB,EAA5G;AAA+G,UAAMhC,CAAC,GAACH,CAAC,CAACoC,IAAF,CAAOC,KAAP,EAAR;AAAuBlC,IAAAA,CAAC,CAACmC,IAAF,CAAQ,UAAStC,CAAT,EAAWC,CAAX,EAAa;AAAC,aAAOA,CAAC,CAACsC,KAAF,GAAQvC,CAAC,CAACuC,KAAjB;AAAuB,KAA7C;AAAgD,UAAMnC,CAAC,GAAC,KAAK6B,SAAL,GAAe9B,CAAC,CAACqC,GAAF,CAAOrC,CAAC,IAAEF,CAAC,CAACgB,MAAF,CAASjB,CAAT,EAAWG,CAAX,EAAaD,CAAb,CAAV,CAAvB;AAAmDC,IAAAA,CAAC,CAACsC,OAAF,CAAW,CAACzC,CAAD,EAAGC,CAAH,KAAO;AAAC,WAAKkC,YAAL,CAAkBnC,CAAC,CAAC0C,KAApB,IAA2BtC,CAAC,CAACH,CAAD,CAA5B,EAAgC,KAAKiC,YAAL,CAAkBlC,CAAC,CAACuC,KAApB,IAA2BnC,CAAC,CAACH,CAAD,CAA5D,EAAgE,KAAK+B,MAAL,CAAY/B,CAAZ,IAAeD,CAAC,CAACuC,KAAjF;AAAuF,KAA1G,EAA4G,IAA5G,GAAkH,KAAKI,KAAL,GAAW3C,CAAC,CAAC4C,WAA/H;AAA2I;;AAAoB,MAAhBC,gBAAgB,GAAE;AAAC,WAAO,KAAKf,QAAL,CAAce,gBAArB;AAAsC;;AAAAC,EAAAA,YAAY,CAAC9C,CAAD,EAAG;AAAC,WAAO,KAAKmC,YAAL,CAAkB,YAAU,OAAOnC,CAAjB,GAAmBA,CAAnB,GAAqBA,CAAC,CAAC0C,KAAzC,CAAP;AAAuD;;AAAAK,EAAAA,aAAa,CAAC/C,CAAD,EAAGC,CAAH,EAAKC,CAAC,GAAC,CAAC,CAAR,EAAU;AAACG,IAAAA,CAAC,CAAC2C,GAAF,CAAM/C,CAAN;AAAS,UAAME,CAAC,GAAC,KAAKgC,YAAL,CAAkB9B,CAAC,CAACqC,KAApB,CAAR;AAAmC,WAAOvC,CAAC,GAACA,CAAC,CAAC4C,aAAF,CAAgB/C,CAAhB,EAAkBK,CAAlB,EAAoBH,CAApB,CAAD,GAAwBF,CAAhC;AAAkC;;AAAAiD,EAAAA,aAAa,CAACjD,CAAD,EAAGC,CAAH,EAAKC,CAAC,GAAC,CAAC,CAAR,EAAU;AAACG,IAAAA,CAAC,CAAC2C,GAAF,CAAM/C,CAAN;AAAS,UAAME,CAAC,GAAC,KAAKgC,YAAL,CAAkB9B,CAAC,CAACqC,KAApB,CAAR;AAAmC,WAAOvC,CAAC,GAACA,CAAC,CAAC8C,aAAF,CAAgBjD,CAAhB,EAAkBK,CAAlB,EAAoBH,CAApB,CAAD,GAAwBF,CAAhC;AAAkC;;AAAAkD,EAAAA,eAAe,CAAClD,CAAD,EAAGC,CAAC,GAAC,GAAL,EAASE,CAAC,GAAC,SAAX,EAAqB;AAAC,UAAME,CAAC,GAAC,cAAYF,CAAZ,GAAc,KAAKgD,sBAAL,CAA4BnD,CAAC,CAACuC,KAA9B,CAAd,GAAmD,KAAKa,uBAAL,CAA6BpD,CAAC,CAACuC,KAA/B,CAA3D;AAAA,UAAiGrB,CAAC,GAAChB,CAAC,CAACmD,IAAF,CAAOC,OAAP,CAAejD,CAAf,CAAnG;AAAA,UAAqHc,CAAC,GAAC,KAAKwB,KAA5H;AAAkI,QAAIvB,CAAJ;AAAA,QAAMG,CAAN;AAAA,QAAQgC,CAAR;AAAA,QAAUC,CAAC,GAAC,IAAE,CAAd;AAAA,QAAgBC,CAAC,GAAC,CAAC,CAAD,GAAG,CAArB;AAAuB,UAAMC,CAAC,GAACxC,CAAC,CAACyC,KAAV;AAAgBnD,IAAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAQA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAQA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAQA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAQ,CAACP,CAAjC,EAAmCO,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAQA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAQR,CAAC,CAAC4D,IAAF,CAAO,CAAP,IAAU3D,CAA7D,EAA+DO,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAQA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAQR,CAAC,CAAC4D,IAAF,CAAO,CAAP,IAAU3D,CAAzF;;AAA2F,SAAI,MAAMC,CAAV,IAAeM,CAAf,EAAiBR,CAAC,CAAC6D,KAAF,CAAQ3D,CAAR,EAAUA,CAAV,GAAaA,CAAC,CAAC,CAAD,CAAD,GAAKG,CAAC,CAACyD,aAAF,CAAgB5D,CAAC,CAAC,CAAD,CAAjB,CAAlB,EAAwCA,CAAC,CAAC,CAAD,CAAD,GAAKG,CAAC,CAAC0D,UAAF,CAAa7D,CAAC,CAAC,CAAD,CAAd,CAA7C;;AAAgE,UAAM8D,CAAC,GAAC,EAAR;AAAW,QAAIC,CAAC,GAAC,CAAN;;AAAQ,SAAI,IAAI/D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAAC,UAAGM,CAAC,CAACN,CAAD,CAAD,CAAK,CAAL,MAAUM,CAAC,CAACyD,CAAD,CAAD,CAAK,CAAL,CAAb,EAAqB;AAACA,QAAAA,CAAC,GAAC/D,CAAF;AAAI;AAAS;;AAAA,YAAMF,CAAC,GAACM,CAAC,CAACW,MAAF,CAAST,CAAC,CAACN,CAAD,CAAV,EAAcM,CAAC,CAACyD,CAAD,CAAf,CAAR;AAA4BT,MAAAA,CAAC,GAACnC,IAAI,CAACQ,GAAL,CAAS7B,CAAC,CAACU,IAAX,EAAgB8C,CAAhB,CAAF,EAAqBC,CAAC,GAACpC,IAAI,CAACM,GAAL,CAAS3B,CAAC,CAACW,IAAX,EAAgB8C,CAAhB,CAAvB,EAA0C,KAAK,CAAL,KAASO,CAAC,CAAChE,CAAC,CAACU,IAAH,CAAV,KAAqBsD,CAAC,CAAChE,CAAC,CAACU,IAAH,CAAD,GAAU,EAA/B,CAA1C,EAA6EsD,CAAC,CAAChE,CAAC,CAACU,IAAH,CAAD,CAAUwD,IAAV,CAAelE,CAAf,CAA7E,EAA+FiE,CAAC,GAAC/D,CAAjG;AAAmG;;AAAA,QAAG,QAAMsD,CAAN,IAAS,QAAMC,CAAf,IAAkBA,CAAC,GAACD,CAAF,GAAI,GAAzB,EAA6B,OAAO,IAAP;AAAY,QAAIW,CAAC,GAAC,EAAN;;AAAS,SAAI/C,CAAC,GAACoC,CAAN,EAAQpC,CAAC,GAACqC,CAAV,GAAa;AAAC,cAAMO,CAAC,CAAC5C,CAAD,CAAP,KAAa+C,CAAC,GAACA,CAAC,CAACC,MAAF,CAASJ,CAAC,CAAC5C,CAAD,CAAV,CAAf,GAA+BG,CAAC,GAAC,IAAE,CAAnC,EAAqCgC,CAAC,GAAC,CAAC,CAAD,GAAG,CAA1C;;AAA4C,WAAI,IAAIvD,CAAC,GAACmE,CAAC,CAACE,MAAF,GAAS,CAAnB,EAAqBrE,CAAC,IAAE,CAAxB,EAA0BA,CAAC,EAA3B,EAA8B;AAAC,cAAMC,CAAC,GAACkE,CAAC,CAACnE,CAAD,CAAT;AAAauB,QAAAA,CAAC,GAACF,IAAI,CAACQ,GAAL,CAASN,CAAT,EAAWtB,CAAC,CAACyB,UAAF,EAAX,CAAF,EAA6B6B,CAAC,GAAClC,IAAI,CAACM,GAAL,CAAS4B,CAAT,EAAWtD,CAAC,CAAC2B,WAAF,EAAX,CAA/B;AAA2D;;AAAA,UAAGL,CAAC,GAACF,IAAI,CAACG,KAAL,CAAWD,CAAX,CAAF,EAAgBgC,CAAC,GAAClC,IAAI,CAACG,KAAL,CAAW+B,CAAX,CAAlB,EAAgCnC,CAAC,IAAEf,CAAC,CAACiE,KAAF,CAAQ,CAAR,CAAH,IAAelD,CAAC,IAAEf,CAAC,CAACkE,IAAF,CAAO,CAAP,CAArD,EAA+D,IAAGpD,CAAH;AAAK,YAAGd,CAAC,CAACuD,IAAF,CAAO,CAAP,IAAUvD,CAAC,CAACmE,SAAF,CAAY,CAAZ,CAAb,EAA4B;AAAC,gBAAMxE,CAAC,GAACqB,IAAI,CAACG,KAAL,CAAW+B,CAAC,GAAClD,CAAC,CAACmE,SAAF,CAAY,CAAZ,CAAb,CAAR;;AAAqC,eAAI,IAAIvE,CAAC,GAACoB,IAAI,CAACG,KAAL,CAAWD,CAAC,GAAClB,CAAC,CAACmE,SAAF,CAAY,CAAZ,CAAb,CAAV,EAAuCvE,CAAC,IAAED,CAA1C,EAA4CC,CAAC,EAA7C,EAAgDyD,CAAC,CAACQ,IAAF,CAAO,IAAI9D,CAAJ,CAAMgB,CAAN,EAAQC,IAAI,CAACM,GAAL,CAAStB,CAAC,CAACoE,sBAAF,CAAyBxE,CAAzB,CAAT,EAAqCsB,CAArC,CAAR,EAAgDF,IAAI,CAACQ,GAAL,CAASxB,CAAC,CAACqE,qBAAF,CAAwBzE,CAAxB,CAAT,EAAoCsD,CAApC,CAAhD,CAAP;AAAgG,SAAlN,MAAuNG,CAAC,CAACQ,IAAF,CAAO,IAAI9D,CAAJ,CAAMgB,CAAN,EAAQG,CAAR,EAAUgC,CAAV,CAAP;AAA5N,aAAsPhC,CAAC,GAAClB,CAAC,CAACkE,IAAF,CAAO,CAAP,CAAF,IAAahB,CAAC,GAAClD,CAAC,CAACiE,KAAF,CAAQ,CAAR,CAAf,KAA4B/C,CAAC,GAACF,IAAI,CAACM,GAAL,CAASJ,CAAT,EAAWlB,CAAC,CAACiE,KAAF,CAAQ,CAAR,CAAX,CAAF,EAAyBf,CAAC,GAAClC,IAAI,CAACQ,GAAL,CAAS0B,CAAT,EAAWlD,CAAC,CAACkE,IAAF,CAAO,CAAP,CAAX,CAA3B,EAAiDb,CAAC,CAACQ,IAAF,CAAO,IAAI9D,CAAJ,CAAMgB,CAAN,EAAQG,CAAR,EAAUgC,CAAV,CAAP,CAA7E;AAAmGnC,MAAAA,CAAC,IAAE,CAAH;;AAAK,WAAI,IAAIpB,CAAC,GAACmE,CAAC,CAACE,MAAF,GAAS,CAAnB,EAAqBrE,CAAC,IAAE,CAAxB,EAA0BA,CAAC,EAA3B,EAA8B;AAAC,cAAMC,CAAC,GAACkE,CAAC,CAACnE,CAAD,CAAT;AAAaC,QAAAA,CAAC,CAACU,IAAF,IAAQS,CAAR,GAAUnB,CAAC,CAACwB,OAAF,EAAV,GAAsB0C,CAAC,CAACQ,MAAF,CAAS3E,CAAT,EAAW,CAAX,CAAtB;AAAoC;AAAC;;AAAA,WAAOkB,CAAP;AAAS;;AAAA0D,EAAAA,eAAe,CAAC5E,CAAD,EAAG;AAACK,IAAAA,CAAC,CAAC2C,GAAF,CAAMhD,CAAN;AAAS,UAAMC,CAAC,GAAC,KAAKkC,YAAL,CAAkB9B,CAAC,CAACqC,KAApB,CAAR;AAAA,UAAmCxC,CAAC,GAAC,KAAK+B,SAAL,CAAe4C,OAAf,CAAuB5E,CAAvB,IAA0B,CAA/D;AAAiE,WAAOC,CAAC,GAAC,CAAF,GAAI,IAAJ,IAAU,KAAK4E,eAAL,CAAqBzE,CAArB,EAAuB,KAAK4B,SAAL,CAAe/B,CAAf,CAAvB,EAAyCG,CAAzC,GAA4CA,CAAC,CAAC0E,EAAxD,CAAP;AAAmE;;AAAAC,EAAAA,iBAAiB,CAAChF,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKkC,YAAL,CAAkB,YAAU,OAAOnC,CAAjB,GAAmBA,CAAC,CAAC0C,KAArB,GAA2B1C,CAA7C,CAAR;AAAwD,WAAOC,CAAC,GAACA,CAAC,CAACgF,UAAH,GAAc,CAAC,CAAvB;AAAyB;;AAAAC,EAAAA,YAAY,CAAClF,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKkC,YAAL,CAAkBnC,CAAC,CAAC0C,KAApB,CAAR;AAAmC,WAAOzC,CAAC,GAACA,CAAC,CAACsC,KAAH,GAAS,CAAC,CAAlB;AAAoB;;AAAA4C,EAAAA,UAAU,CAACnF,CAAD,EAAGC,CAAH,EAAK;AAACI,IAAAA,CAAC,CAAC2C,GAAF,CAAM/C,CAAN;AAAS,UAAMC,CAAC,GAAC,KAAKiC,YAAL,CAAkB9B,CAAC,CAACqC,KAApB,CAAR;AAAA,UAAmCvC,CAAC,GAACH,CAAC,CAACoF,OAAvC;;AAA+C,QAAGjF,CAAC,CAAC8E,UAAF,GAAa/E,CAAC,CAAC+E,UAAlB,EAA6B;AAAC,WAAKH,eAAL,CAAqBzE,CAArB,EAAuBF,CAAvB,EAAyBE,CAAzB;;AAA4B,YAAMJ,CAAC,GAACE,CAAC,CAACkF,cAAF,CAAiBhF,CAAC,CAACiF,GAAnB,EAAuBjF,CAAC,CAACkF,KAAzB,CAAR;;AAAwC,WAAI,MAAMrF,CAAV,IAAeF,CAAC,CAAC2D,KAAjB,EAAuB,IAAGzD,CAAC,CAACsF,GAAF,KAAQnF,CAAC,CAACmF,GAAV,IAAetF,CAAC,CAACuF,OAAF,IAAWxF,CAA1B,IAA6BC,CAAC,CAACwF,KAAF,IAASzF,CAAzC,EAA2C,OAAM,CAAC,CAAP;AAAS;;AAAA,QAAGE,CAAC,CAAC8E,UAAF,GAAa/E,CAAC,CAAC+E,UAAlB,EAA6B;AAAC,YAAK,CAAChF,CAAD,EAAGG,CAAH,EAAKE,CAAL,EAAOE,CAAP,IAAUR,CAAC,CAAC2D,KAAF,CAAQgC,MAAR,CAAgB,CAAC3F,CAAD,EAAGC,CAAH,MAAQD,CAAC,CAAC,CAAD,CAAD,GAAKqB,IAAI,CAACQ,GAAL,CAAS7B,CAAC,CAAC,CAAD,CAAV,EAAcC,CAAC,CAACuF,GAAhB,CAAL,EAA0BxF,CAAC,CAAC,CAAD,CAAD,GAAKqB,IAAI,CAACM,GAAL,CAAS3B,CAAC,CAAC,CAAD,CAAV,EAAcC,CAAC,CAACuF,GAAhB,CAA/B,EAAoDxF,CAAC,CAAC,CAAD,CAAD,GAAKqB,IAAI,CAACQ,GAAL,CAAS7B,CAAC,CAAC,CAAD,CAAV,EAAcC,CAAC,CAACwF,OAAhB,CAAzD,EAAkFzF,CAAC,CAAC,CAAD,CAAD,GAAKqB,IAAI,CAACM,GAAL,CAAS3B,CAAC,CAAC,CAAD,CAAV,EAAcC,CAAC,CAACyF,KAAhB,CAAvF,EAA8G1F,CAAtH,CAAhB,EAA0I,CAAC,IAAE,CAAH,EAAK,CAAC,CAAD,GAAG,CAAR,EAAU,IAAE,CAAZ,EAAc,CAAC,CAAD,GAAG,CAAjB,CAA1I,CAAf;AAAA,YAA8KkB,CAAC,GAAChB,CAAC,CAACmF,cAAF,CAAiBhF,CAAC,CAACiF,GAAnB,EAAuBjF,CAAC,CAACkF,KAAzB,CAAhL;AAAA,YAAgNpE,CAAC,GAAChB,CAAC,CAAC2D,aAAF,CAAgB5D,CAAC,CAAC0F,aAAF,CAAgB1E,CAAhB,CAAhB,CAAlN;AAAA,YAAsPE,CAAC,GAACjB,CAAC,CAAC4D,UAAF,CAAa7D,CAAC,CAAC2F,UAAF,CAAaxF,CAAC,CAACmF,GAAf,CAAb,CAAxP;AAAA,YAA0RjE,CAAC,GAACpB,CAAC,CAAC2D,aAAF,CAAgB5D,CAAC,CAAC0F,aAAF,CAAgB1E,CAAC,GAAC,CAAlB,CAAhB,IAAsC,CAAlU;AAAA,YAAoUqC,CAAC,GAACpD,CAAC,CAAC4D,UAAF,CAAa7D,CAAC,CAAC2F,UAAF,CAAaxF,CAAC,CAACmF,GAAF,GAAM,CAAnB,CAAb,IAAoC,CAA1W;AAA4W,aAAM,EAAErE,CAAC,GAACX,CAAF,IAAKe,CAAC,GAACjB,CAAP,IAAUc,CAAC,GAAChB,CAAZ,IAAemD,CAAC,GAACtD,CAAnB,CAAN;AAA4B;;AAAA,UAAMG,CAAC,GAACD,CAAC,CAACkF,cAAF,CAAiBhF,CAAC,CAACiF,GAAnB,EAAuBjF,CAAC,CAACkF,KAAzB,CAAR;AAAwC,WAAOvF,CAAC,CAAC2D,KAAF,CAAQmC,IAAR,CAAc9F,CAAC,IAAEA,CAAC,CAACwF,GAAF,KAAQnF,CAAC,CAACmF,GAAV,IAAexF,CAAC,CAACyF,OAAF,IAAWrF,CAA1B,IAA6BJ,CAAC,CAAC0F,KAAF,IAAStF,CAAvD,CAAP;AAAkE;;AAAA2F,EAAAA,eAAe,CAAC9F,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAO;AAAC,QAAGF,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAC,CAAC,CAAD,CAAN,EAAUD,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAC,CAAC,CAAD,CAAhB,EAAoBD,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAC,CAAC,CAAD,CAA1B,EAA8BD,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAC,CAAC,CAAD,CAApC,EAAwC,KAAKyC,KAAhD,EAAsD;AAAC,YAAMzC,CAAC,GAACF,CAAC,CAAC,KAAK8B,QAAL,CAAce,gBAAf,CAAT;AAAA,YAA0CzC,CAAC,GAAC,CAACD,CAAD,IAAID,CAAC,CAAC8F,KAAF,CAAQ,CAAR,IAAW9F,CAAC,CAAC8F,KAAF,CAAQ,CAAR,CAAf,CAA5C;AAAuE/F,MAAAA,CAAC,CAAC,CAAD,CAAD,IAAMG,CAAN,EAAQH,CAAC,CAAC,CAAD,CAAD,IAAMG,CAAd;AAAgB;;AAAA,WAAOH,CAAP;AAAS;;AAAAmD,EAAAA,uBAAuB,CAACpD,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAK+B,MAAb;AAAoB,QAAG,KAAKE,YAAL,CAAkBlC,CAAlB,CAAH,EAAwB,OAAO,KAAKkC,YAAL,CAAkBlC,CAAlB,CAAP;AAA4B,QAAGA,CAAC,GAACC,CAAC,CAAC,CAAD,CAAN,EAAU,OAAO,KAAKiC,YAAL,CAAkBjC,CAAC,CAAC,CAAD,CAAnB,CAAP;;AAA+B,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAC,CAACoE,MAAF,GAAS,CAAvB,EAAyBnE,CAAC,EAA1B,EAA6B,IAAGF,CAAC,GAACC,CAAC,CAACC,CAAD,CAAD,GAAKgB,CAAV,EAAY,OAAO,KAAKgB,YAAL,CAAkBjC,CAAC,CAACC,CAAC,GAAC,CAAH,CAAnB,CAAP;;AAAiC,WAAO,KAAKgC,YAAL,CAAkBjC,CAAC,CAACA,CAAC,CAACoE,MAAF,GAAS,CAAV,CAAnB,CAAP;AAAwC;;AAAAlB,EAAAA,sBAAsB,CAACnD,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAK+B,MAAb;AAAoB,WAAO,KAAKE,YAAL,CAAkBlC,CAAlB,MAAuBA,CAAC,GAACC,CAAC,CAAC0F,MAAF,CAAU,CAAC1F,CAAD,EAAGC,CAAH,KAAOmB,IAAI,CAAC4E,GAAL,CAAS/F,CAAC,GAACF,CAAX,IAAcqB,IAAI,CAAC4E,GAAL,CAAShG,CAAC,GAACD,CAAX,CAAd,GAA4BE,CAA5B,GAA8BD,CAA/C,EAAkDA,CAAC,CAAC,CAAD,CAAnD,CAAzB,GAAkF,KAAKiC,YAAL,CAAkBlC,CAAlB,CAAzF;AAA8G;;AAAAkG,EAAAA,YAAY,CAAClG,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAK+B,MAAb;AAAoB,QAAG,KAAKE,YAAL,CAAkBlC,CAAlB,CAAH,EAAwB,OAAO,KAAKkC,YAAL,CAAkBlC,CAAlB,EAAqB0C,KAA5B;;AAAkC,SAAI,IAAIxC,CAAC,GAACD,CAAC,CAACoE,MAAF,GAAS,CAAnB,EAAqBnE,CAAC,IAAE,CAAxB,EAA0BA,CAAC,EAA3B,EAA8B,IAAGF,CAAC,GAACC,CAAC,CAACC,CAAD,CAAN,EAAU;AAAC,UAAGA,CAAC,KAAGD,CAAC,CAACoE,MAAF,GAAS,CAAhB,EAAkB,OAAO,KAAKnC,YAAL,CAAkBjC,CAAC,CAACA,CAAC,CAACoE,MAAF,GAAS,CAAV,CAAnB,EAAiC3B,KAAxC;AAA8C,aAAO,KAAKR,YAAL,CAAkBjC,CAAC,CAACC,CAAD,CAAnB,EAAwBwC,KAAxB,GAA8B,CAACzC,CAAC,CAACC,CAAD,CAAD,GAAKF,CAAN,KAAUC,CAAC,CAACC,CAAD,CAAD,GAAKD,CAAC,CAACC,CAAC,GAAC,CAAH,CAAhB,CAArC;AAA4D;;AAAA,WAAO,KAAKgC,YAAL,CAAkBjC,CAAC,CAAC,CAAD,CAAnB,EAAwByC,KAA/B;AAAqC;;AAAAyD,EAAAA,WAAW,CAACnG,CAAD,EAAG;AAAC,WAAO,KAAK8B,QAAL,CAAcqE,WAAd,CAA0BnG,CAA1B,CAAP;AAAoC;;AAAA8E,EAAAA,eAAe,CAAC9E,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAO;AAAC,UAAMC,CAAC,GAAC,KAAKgC,YAAL,CAAkBjC,CAAC,CAACwC,KAApB,CAAR;AAAmC,WAAO1C,CAAC,CAACgD,GAAF,CAAM9C,CAAN,GAASD,CAAC,CAACgF,UAAF,GAAa9E,CAAC,CAAC8E,UAAf,GAA0B,IAA1B,IAAgChF,CAAC,CAACgF,UAAF,KAAe9E,CAAC,CAAC8E,UAAjB,KAA8BjF,CAAC,CAAC0C,KAAF,GAAQzC,CAAC,CAACyC,KAAV,EAAgB1C,CAAC,CAACsF,GAAF,GAAMjE,IAAI,CAACG,KAAL,CAAWtB,CAAC,CAACoF,GAAF,GAAMnF,CAAC,CAAC8E,UAAR,GAAmBhF,CAAC,CAACgF,UAArB,GAAgC,GAA3C,CAAtB,EAAsEjF,CAAC,CAACwF,GAAF,GAAMnE,IAAI,CAACG,KAAL,CAAWtB,CAAC,CAACsF,GAAF,GAAMrF,CAAC,CAAC8E,UAAR,GAAmBhF,CAAC,CAACgF,UAArB,GAAgC,GAA3C,CAA1G,GAA2JjF,CAA3L,CAAhB;AAA8M;;AAAjuI;;AAAkuI,eAAemB,CAAf","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{getInfo as e}from\"../../../geometry/support/spatialReferenceUtils.js\";import t from\"./LODInfo.js\";import o from\"./TileCoverage.js\";import l from\"./TileKey.js\";import s from\"./TileSpan.js\";const i=new l(\"0/0/0/0\");class n{constructor(e,t,o,l,s,i,n,r){this.x=e,this.ymin=t,this.ymax=o,this.invM=l,this.leftAdjust=s,this.rightAdjust=i,this.leftBound=n,this.rightBound=r}static create(e,t){e[1]>t[1]&&([e,t]=[t,e]);const[o,l]=e,[s,i]=t,r=s-o,a=i-l,h=0!==a?r/a:0,c=(Math.ceil(l)-l)*h,f=(Math.floor(l)-l)*h;return new n(o,Math.floor(l),Math.ceil(i),h,r<0?c:f,r<0?f:c,r<0?s:o,r<0?o:s)}incrRow(){this.x+=this.invM}getLeftCol(){return Math.max(this.x+this.leftAdjust,this.leftBound)}getRightCol(){return Math.min(this.x+this.rightAdjust,this.rightBound)}}const r=[[0,0],[0,0],[0,0],[0,0]],a=1e-6;class h{constructor(e,o){this.tileInfo=e,this.fullExtent=o,this.scales=[],this._lodInfos=null,this._infoByScale={},this._infoByLevel={};const l=e.lods.slice();l.sort((function(e,t){return t.scale-e.scale}));const s=this._lodInfos=l.map((l=>t.create(e,l,o)));l.forEach(((e,t)=>{this._infoByLevel[e.level]=s[t],this._infoByScale[e.scale]=s[t],this.scales[t]=e.scale}),this),this._wrap=e.isWrappable}get spatialReference(){return this.tileInfo.spatialReference}getLODInfoAt(e){return this._infoByLevel[\"number\"==typeof e?e:e.level]}getTileBounds(e,t,o=!1){i.set(t);const l=this._infoByLevel[i.level];return l?l.getTileBounds(e,i,o):e}getTileCoords(e,t,o=!1){i.set(t);const l=this._infoByLevel[i.level];return l?l.getTileCoords(e,i,o):e}getTileCoverage(e,t=192,l=\"closest\"){const i=\"closest\"===l?this.getClosestInfoForScale(e.scale):this.getSmallestInfoForScale(e.scale),a=o.pool.acquire(i),h=this._wrap;let c,f,u,m=1/0,g=-1/0;const d=a.spans;r[0][0]=r[0][1]=r[1][1]=r[3][0]=-t,r[1][0]=r[2][0]=e.size[0]+t,r[2][1]=r[3][1]=e.size[1]+t;for(const o of r)e.toMap(o,o),o[0]=i.getColumnForX(o[0]),o[1]=i.getRowForY(o[1]);const y=[];let _=3;for(let o=0;o<4;o++){if(r[o][1]===r[_][1]){_=o;continue}const e=n.create(r[o],r[_]);m=Math.min(e.ymin,m),g=Math.max(e.ymax,g),void 0===y[e.ymin]&&(y[e.ymin]=[]),y[e.ymin].push(e),_=o}if(null==m||null==g||g-m>100)return null;let v=[];for(c=m;c<g;){null!=y[c]&&(v=v.concat(y[c])),f=1/0,u=-1/0;for(let e=v.length-1;e>=0;e--){const t=v[e];f=Math.min(f,t.getLeftCol()),u=Math.max(u,t.getRightCol())}if(f=Math.floor(f),u=Math.floor(u),c>=i.first[1]&&c<=i.last[1])if(h)if(i.size[0]<i.worldSize[0]){const e=Math.floor(u/i.worldSize[0]);for(let t=Math.floor(f/i.worldSize[0]);t<=e;t++)d.push(new s(c,Math.max(i.getFirstColumnForWorld(t),f),Math.min(i.getLastColumnForWorld(t),u)))}else d.push(new s(c,f,u));else f>i.last[0]||u<i.first[0]||(f=Math.max(f,i.first[0]),u=Math.min(u,i.last[0]),d.push(new s(c,f,u)));c+=1;for(let e=v.length-1;e>=0;e--){const t=v[e];t.ymax>=c?t.incrRow():v.splice(e,1)}}return a}getTileParentId(e){i.set(e);const t=this._infoByLevel[i.level],o=this._lodInfos.indexOf(t)-1;return o<0?null:(this._getTileIdAtLOD(i,this._lodInfos[o],i),i.id)}getTileResolution(e){const t=this._infoByLevel[\"object\"==typeof e?e.level:e];return t?t.resolution:-1}getTileScale(e){const t=this._infoByLevel[e.level];return t?t.scale:-1}intersects(e,t){i.set(t);const o=this._infoByLevel[i.level],l=e.lodInfo;if(l.resolution>o.resolution){this._getTileIdAtLOD(i,l,i);const t=l.denormalizeCol(i.col,i.world);for(const o of e.spans)if(o.row===i.row&&o.colFrom<=t&&o.colTo>=t)return!0}if(l.resolution<o.resolution){const[t,s,n,r]=e.spans.reduce(((e,t)=>(e[0]=Math.min(e[0],t.row),e[1]=Math.max(e[1],t.row),e[2]=Math.min(e[2],t.colFrom),e[3]=Math.max(e[3],t.colTo),e)),[1/0,-1/0,1/0,-1/0]),a=o.denormalizeCol(i.col,i.world),h=l.getColumnForX(o.getXForColumn(a)),c=l.getRowForY(o.getYForRow(i.row)),f=l.getColumnForX(o.getXForColumn(a+1))-1,u=l.getRowForY(o.getYForRow(i.row+1))-1;return!(h>r||f<n||c>s||u<t)}const s=l.denormalizeCol(i.col,i.world);return e.spans.some((e=>e.row===i.row&&e.colFrom<=s&&e.colTo>=s))}normalizeBounds(t,o,l){if(t[0]=o[0],t[1]=o[1],t[2]=o[2],t[3]=o[3],this._wrap){const o=e(this.tileInfo.spatialReference),s=-l*(o.valid[1]-o.valid[0]);t[0]+=s,t[2]+=s}return t}getSmallestInfoForScale(e){const t=this.scales;if(this._infoByScale[e])return this._infoByScale[e];if(e>t[0])return this._infoByScale[t[0]];for(let o=1;o<t.length-1;o++)if(e>t[o]+a)return this._infoByScale[t[o-1]];return this._infoByScale[t[t.length-1]]}getClosestInfoForScale(e){const t=this.scales;return this._infoByScale[e]||(e=t.reduce(((t,o)=>Math.abs(o-e)<Math.abs(t-e)?o:t),t[0])),this._infoByScale[e]}scaleToLevel(e){const t=this.scales;if(this._infoByScale[e])return this._infoByScale[e].level;for(let o=t.length-1;o>=0;o--)if(e<t[o]){if(o===t.length-1)return this._infoByScale[t[t.length-1]].level;return this._infoByScale[t[o]].level+(t[o]-e)/(t[o]-t[o+1])}return this._infoByScale[t[0]].level}scaleToZoom(e){return this.tileInfo.scaleToZoom(e)}_getTileIdAtLOD(e,t,o){const l=this._infoByLevel[o.level];return e.set(o),t.resolution<l.resolution?null:(t.resolution===l.resolution||(e.level=t.level,e.col=Math.floor(o.col*l.resolution/t.resolution+.01),e.row=Math.floor(o.row*l.resolution/t.resolution+.01)),e)}}export default h;\n"]},"metadata":{},"sourceType":"module"}