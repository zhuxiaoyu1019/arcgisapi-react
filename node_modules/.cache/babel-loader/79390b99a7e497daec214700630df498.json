{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport \"../../../../../core/has.js\";\nimport e from \"../../../../../core/Error.js\";\nimport { isSome as t, isNone as n } from \"../../../../../core/maybe.js\";\n\nfunction r(e) {\n  const n = a(e);\n  return t(n) ? n.toDataURL() : \"\";\n}\n\nasync function o(t) {\n  const r = a(t);\n  if (n(r)) throw new e(\"imageToArrayBuffer\", \"Unsupported image type\");\n\n  const o = async t => {\n    if (!t) throw new e(\"imageToArrayBuffer\", \"Unable to convert image to PNG\");\n    const n = new FileReader(),\n          r = new Promise(e => {\n      n.addEventListener(\"loadend\", () => {\n        e(n.result);\n      });\n    });\n    return n.readAsArrayBuffer(t), r;\n  };\n\n  if (r.toBlob) return new Promise((e, t) => {\n    r.toBlob(n => {\n      o(n).then(e, t);\n    }, \"image/png\");\n  });\n  if (\"msToBlob\" in r) return o(r.msToBlob());\n  throw new e(\"imageToArrayBuffer\", \"Could not convert canvas to blob\");\n}\n\nfunction a(e) {\n  if (e instanceof HTMLCanvasElement) return e;\n  if (e instanceof HTMLVideoElement) return null;\n  const t = document.createElement(\"canvas\");\n  t.width = e.width, t.height = e.height;\n  const n = t.getContext(\"2d\");\n  return e instanceof HTMLImageElement ? n.drawImage(e, 0, 0, e.width, e.height) : e instanceof ImageData && n.putImageData(e, e.width, e.height), t;\n}\n\nfunction i(e) {\n  const t = [],\n        n = new Uint8Array(e);\n\n  for (let r = 0; r < n.length; r++) t.push(String.fromCharCode(n[r]));\n\n  return \"data:application/octet-stream;base64,\" + btoa(t.join(\"\"));\n}\n\nfunction s(e) {\n  if (e.byteLength < 8) return !1;\n  const t = new Uint8Array(e);\n  return 137 === t[0] && 80 === t[1] && 78 === t[2] && 71 === t[3] && 13 === t[4] && 10 === t[5] && 26 === t[6] && 10 === t[7];\n}\n\nexport { i as encodeBase64DataUri, o as imageToArrayBuffer, r as imageToDataURI, s as isArrayBufferPNG };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/geometry/support/meshUtils/exporters/gltf/imageutils.js"],"names":["e","isSome","t","isNone","n","r","a","toDataURL","o","FileReader","Promise","addEventListener","result","readAsArrayBuffer","toBlob","then","msToBlob","HTMLCanvasElement","HTMLVideoElement","document","createElement","width","height","getContext","HTMLImageElement","drawImage","ImageData","putImageData","i","Uint8Array","length","push","String","fromCharCode","btoa","join","s","byteLength","encodeBase64DataUri","imageToArrayBuffer","imageToDataURI","isArrayBufferPNG"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport\"../../../../../core/has.js\";import e from\"../../../../../core/Error.js\";import{isSome as t,isNone as n}from\"../../../../../core/maybe.js\";function r(e){const n=a(e);return t(n)?n.toDataURL():\"\"}async function o(t){const r=a(t);if(n(r))throw new e(\"imageToArrayBuffer\",\"Unsupported image type\");const o=async t=>{if(!t)throw new e(\"imageToArrayBuffer\",\"Unable to convert image to PNG\");const n=new FileReader,r=new Promise((e=>{n.addEventListener(\"loadend\",(()=>{e(n.result)}))}));return n.readAsArrayBuffer(t),r};if(r.toBlob)return new Promise(((e,t)=>{r.toBlob((n=>{o(n).then(e,t)}),\"image/png\")}));if(\"msToBlob\"in r)return o(r.msToBlob());throw new e(\"imageToArrayBuffer\",\"Could not convert canvas to blob\")}function a(e){if(e instanceof HTMLCanvasElement)return e;if(e instanceof HTMLVideoElement)return null;const t=document.createElement(\"canvas\");t.width=e.width,t.height=e.height;const n=t.getContext(\"2d\");return e instanceof HTMLImageElement?n.drawImage(e,0,0,e.width,e.height):e instanceof ImageData&&n.putImageData(e,e.width,e.height),t}function i(e){const t=[],n=new Uint8Array(e);for(let r=0;r<n.length;r++)t.push(String.fromCharCode(n[r]));return\"data:application/octet-stream;base64,\"+btoa(t.join(\"\"))}function s(e){if(e.byteLength<8)return!1;const t=new Uint8Array(e);return 137===t[0]&&80===t[1]&&78===t[2]&&71===t[3]&&13===t[4]&&10===t[5]&&26===t[6]&&10===t[7]}export{i as encodeBase64DataUri,o as imageToArrayBuffer,r as imageToDataURI,s as isArrayBufferPNG};\n"]},"metadata":{},"sourceType":"module"}