{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as i } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\n\nfunction t(t) {\n  const o = new i(),\n        r = o.vertex.code,\n        l = o.fragment.code;\n  return o.attributes.add(\"position\", \"vec2\"), 2 === t.highlightStage && (r.add(e`void main() {\ngl_Position = vec4(vec2(1.0) - position * 2.0, 0.0, 1.0);\n}`), o.fragment.uniforms.add(\"tex\", \"sampler2D\"), o.fragment.uniforms.add(\"invFramebufferDim\", \"vec2\"), l.add(e`void main() {\nvec2 coord = gl_FragCoord.xy * invFramebufferDim;\nvec4 value = texture2D(tex, coord);\nfloat mx = floor(max(value.g, value.b));\ngl_FragColor = vec4(ceil(value.r), mx, mx, 1.0);\n}`)), 0 === t.highlightStage && (o.attributes.add(\"uv0\", \"vec2\"), t.gridOptimization ? (o.vertex.uniforms.add(\"coverageTex\", \"sampler2D\"), o.fragment.uniforms.add(\"blurSize\", \"vec2\"), o.varyings.add(\"blurCoordinate\", \"vec3\")) : (o.vertex.uniforms.add(\"blurSize\", \"vec2\"), o.varyings.add(\"blurCoordinates[5]\", \"vec2\")), r.add(e`\n    void main() {\n      gl_Position = vec4(position, 0.0, 1.0);\n      ${t.gridOptimization ? e`\n      vec4 cov = texture2D(coverageTex, uv0);\n      if (cov.r == 0.0) {\n        gl_Position = vec4(0.0);\n      }\n      blurCoordinate = vec3(gl_Position.xy * 0.5 + vec2(0.5), max(cov.g, cov.b));\n      ` : e`\n      vec2 uv = position.xy * 0.5 + vec2(0.5);\n      blurCoordinates[0] = uv;\n      blurCoordinates[1] = uv + blurSize * 1.407333;\n      blurCoordinates[2] = uv - blurSize * 1.407333;\n      blurCoordinates[3] = uv + blurSize * 3.294215;\n      blurCoordinates[4] = uv - blurSize * 3.294215;\n          `}\n    }`), o.fragment.uniforms.add(\"tex\", \"sampler2D\"), l.add(e`\n    void main() {\n      ${t.gridOptimization ? e`\n          vec2 uv = blurCoordinate.xy;\n          vec4 center = texture2D(tex, uv);\n\n          // do not blur if no pixel or all pixels in neighborhood are set\n          if (blurCoordinate.z == 1.0) {\n            gl_FragColor = center;\n          } else {\n            vec4 sum = vec4(0.0);\n            sum += center * 0.204164;\n            sum += texture2D(tex, uv + blurSize * 1.407333) * 0.304005;\n            sum += texture2D(tex, uv - blurSize * 1.407333) * 0.304005;\n            sum += texture2D(tex, uv + blurSize * 3.294215) * 0.093913;\n            sum += texture2D(tex, uv - blurSize * 3.294215) * 0.093913;\n            gl_FragColor = sum;\n          }` : e`\n          vec4 sum = vec4(0.0);\n          sum += texture2D(tex, blurCoordinates[0]) * 0.204164;\n          sum += texture2D(tex, blurCoordinates[1]) * 0.304005;\n          sum += texture2D(tex, blurCoordinates[2]) * 0.304005;\n          sum += texture2D(tex, blurCoordinates[3]) * 0.093913;\n          sum += texture2D(tex, blurCoordinates[4]) * 0.093913;\n          gl_FragColor = sum;`}\n    }`)), 1 === t.highlightStage && (o.varyings.add(\"uv\", \"vec2\"), t.gridOptimization && (o.attributes.add(\"uv0\", \"vec2\"), o.vertex.uniforms.add(\"coverageTex\", \"sampler2D\")), r.add(e`\n      void main() {\n        ${t.gridOptimization ? e`\n            vec4 cov = texture2D(coverageTex, uv0);\n            // if no highlight pixel set in this block, hide block\n            if (cov.r == 0.0) {\n              gl_Position = vec4(0.0);\n              return;\n            }` : \"\"}\n        gl_Position = vec4(position, 0.0, 1.0);\n        uv = position.xy * 0.5 + vec2(0.5);\n      }`), o.fragment.uniforms.add(\"tex\", \"sampler2D\"), o.fragment.uniforms.add(\"origin\", \"sampler2D\"), o.fragment.uniforms.add(\"color\", \"vec4\"), o.fragment.uniforms.add(\"haloColor\", \"vec4\"), o.fragment.uniforms.add(\"outlineSize\", \"float\"), o.fragment.uniforms.add(\"blurSize\", \"float\"), o.fragment.uniforms.add(\"opacities\", \"vec4\"), l.add(e`void main() {\nvec4 blurredHighlightValue = texture2D(tex, uv);\nfloat highlightIntensity = blurredHighlightValue.a;\nif (highlightIntensity == 0.0) {\ndiscard;\n}\nvec4 origin_color = texture2D(origin, uv);\nfloat outlineIntensity;\nfloat fillIntensity;\nif (blurredHighlightValue.g > blurredHighlightValue.b) {\noutlineIntensity = haloColor.w * opacities[1];\nfillIntensity = color.w * opacities[3];\n}\nelse {\noutlineIntensity = haloColor.w * opacities[0];\nfillIntensity = color.w * opacities[2];\n}\nfloat inner = 1.0 - outlineSize / 9.0;\nfloat outer = 1.0 - (outlineSize + blurSize) / 9.0;\nfloat outlineFactor = smoothstep(outer, inner, highlightIntensity);\nfloat fillFactor = any(notEqual(origin_color, vec4(0.0, 0.0, 0.0, 0.0))) ? 1.0 : 0.0;\nfloat intensity = outlineIntensity * outlineFactor * (1.0 - fillFactor) + fillIntensity * fillFactor;\ngl_FragColor = vec4(mix(haloColor.rgb, color.rgb, fillFactor), intensity);\n}`)), o;\n}\n\nvar o = Object.freeze({\n  __proto__: null,\n  build: t\n});\nexport { o as H, t as b };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/chunks/HighlightComposition.glsl.js"],"names":["glsl","e","ShaderBuilder","i","t","o","r","vertex","code","l","fragment","attributes","add","highlightStage","uniforms","gridOptimization","varyings","Object","freeze","__proto__","build","H","b"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as i}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";function t(t){const o=new i,r=o.vertex.code,l=o.fragment.code;return o.attributes.add(\"position\",\"vec2\"),2===t.highlightStage&&(r.add(e`void main() {\ngl_Position = vec4(vec2(1.0) - position * 2.0, 0.0, 1.0);\n}`),o.fragment.uniforms.add(\"tex\",\"sampler2D\"),o.fragment.uniforms.add(\"invFramebufferDim\",\"vec2\"),l.add(e`void main() {\nvec2 coord = gl_FragCoord.xy * invFramebufferDim;\nvec4 value = texture2D(tex, coord);\nfloat mx = floor(max(value.g, value.b));\ngl_FragColor = vec4(ceil(value.r), mx, mx, 1.0);\n}`)),0===t.highlightStage&&(o.attributes.add(\"uv0\",\"vec2\"),t.gridOptimization?(o.vertex.uniforms.add(\"coverageTex\",\"sampler2D\"),o.fragment.uniforms.add(\"blurSize\",\"vec2\"),o.varyings.add(\"blurCoordinate\",\"vec3\")):(o.vertex.uniforms.add(\"blurSize\",\"vec2\"),o.varyings.add(\"blurCoordinates[5]\",\"vec2\")),r.add(e`\n    void main() {\n      gl_Position = vec4(position, 0.0, 1.0);\n      ${t.gridOptimization?e`\n      vec4 cov = texture2D(coverageTex, uv0);\n      if (cov.r == 0.0) {\n        gl_Position = vec4(0.0);\n      }\n      blurCoordinate = vec3(gl_Position.xy * 0.5 + vec2(0.5), max(cov.g, cov.b));\n      `:e`\n      vec2 uv = position.xy * 0.5 + vec2(0.5);\n      blurCoordinates[0] = uv;\n      blurCoordinates[1] = uv + blurSize * 1.407333;\n      blurCoordinates[2] = uv - blurSize * 1.407333;\n      blurCoordinates[3] = uv + blurSize * 3.294215;\n      blurCoordinates[4] = uv - blurSize * 3.294215;\n          `}\n    }`),o.fragment.uniforms.add(\"tex\",\"sampler2D\"),l.add(e`\n    void main() {\n      ${t.gridOptimization?e`\n          vec2 uv = blurCoordinate.xy;\n          vec4 center = texture2D(tex, uv);\n\n          // do not blur if no pixel or all pixels in neighborhood are set\n          if (blurCoordinate.z == 1.0) {\n            gl_FragColor = center;\n          } else {\n            vec4 sum = vec4(0.0);\n            sum += center * 0.204164;\n            sum += texture2D(tex, uv + blurSize * 1.407333) * 0.304005;\n            sum += texture2D(tex, uv - blurSize * 1.407333) * 0.304005;\n            sum += texture2D(tex, uv + blurSize * 3.294215) * 0.093913;\n            sum += texture2D(tex, uv - blurSize * 3.294215) * 0.093913;\n            gl_FragColor = sum;\n          }`:e`\n          vec4 sum = vec4(0.0);\n          sum += texture2D(tex, blurCoordinates[0]) * 0.204164;\n          sum += texture2D(tex, blurCoordinates[1]) * 0.304005;\n          sum += texture2D(tex, blurCoordinates[2]) * 0.304005;\n          sum += texture2D(tex, blurCoordinates[3]) * 0.093913;\n          sum += texture2D(tex, blurCoordinates[4]) * 0.093913;\n          gl_FragColor = sum;`}\n    }`)),1===t.highlightStage&&(o.varyings.add(\"uv\",\"vec2\"),t.gridOptimization&&(o.attributes.add(\"uv0\",\"vec2\"),o.vertex.uniforms.add(\"coverageTex\",\"sampler2D\")),r.add(e`\n      void main() {\n        ${t.gridOptimization?e`\n            vec4 cov = texture2D(coverageTex, uv0);\n            // if no highlight pixel set in this block, hide block\n            if (cov.r == 0.0) {\n              gl_Position = vec4(0.0);\n              return;\n            }`:\"\"}\n        gl_Position = vec4(position, 0.0, 1.0);\n        uv = position.xy * 0.5 + vec2(0.5);\n      }`),o.fragment.uniforms.add(\"tex\",\"sampler2D\"),o.fragment.uniforms.add(\"origin\",\"sampler2D\"),o.fragment.uniforms.add(\"color\",\"vec4\"),o.fragment.uniforms.add(\"haloColor\",\"vec4\"),o.fragment.uniforms.add(\"outlineSize\",\"float\"),o.fragment.uniforms.add(\"blurSize\",\"float\"),o.fragment.uniforms.add(\"opacities\",\"vec4\"),l.add(e`void main() {\nvec4 blurredHighlightValue = texture2D(tex, uv);\nfloat highlightIntensity = blurredHighlightValue.a;\nif (highlightIntensity == 0.0) {\ndiscard;\n}\nvec4 origin_color = texture2D(origin, uv);\nfloat outlineIntensity;\nfloat fillIntensity;\nif (blurredHighlightValue.g > blurredHighlightValue.b) {\noutlineIntensity = haloColor.w * opacities[1];\nfillIntensity = color.w * opacities[3];\n}\nelse {\noutlineIntensity = haloColor.w * opacities[0];\nfillIntensity = color.w * opacities[2];\n}\nfloat inner = 1.0 - outlineSize / 9.0;\nfloat outer = 1.0 - (outlineSize + blurSize) / 9.0;\nfloat outlineFactor = smoothstep(outer, inner, highlightIntensity);\nfloat fillFactor = any(notEqual(origin_color, vec4(0.0, 0.0, 0.0, 0.0))) ? 1.0 : 0.0;\nfloat intensity = outlineIntensity * outlineFactor * (1.0 - fillFactor) + fillIntensity * fillFactor;\ngl_FragColor = vec4(mix(haloColor.rgb, color.rgb, fillFactor), intensity);\n}`)),o}var o=Object.freeze({__proto__:null,build:t});export{o as H,t as b};\n"]},"metadata":{},"sourceType":"module"}