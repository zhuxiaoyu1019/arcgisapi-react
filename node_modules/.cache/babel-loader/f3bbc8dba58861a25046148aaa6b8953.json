{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport { rasterRendererTypes as t } from \"../../rasterRenderers.js\";\nimport i from \"../../request.js\";\nimport r from \"../../core/Logger.js\";\nimport { isSome as s } from \"../../core/maybe.js\";\nimport { aliasOf as n } from \"../../core/accessorSupport/decorators/aliasOf.js\";\nimport \"../../core/has.js\";\nimport \"../../core/accessorSupport/ensureType.js\";\nimport { property as o } from \"../../core/accessorSupport/decorators/property.js\";\nimport { subclass as a } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { getInfo as l } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { sanitizeUrl as d } from \"../support/arcgisLayerUrl.js\";\nimport { url as m } from \"../support/commonProperties.js\";\nimport p from \"../support/DimensionalDefinition.js\";\nimport h from \"../support/RasterJobHandler.js\";\nimport u from \"../support/TileInfo.js\";\nimport { normalizeRendererJSON as c, getDefaultInterpolation as f, getDefaultBandCombination as y, createDefaultRenderer as b } from \"../../renderers/support/rasterRendererHelper.js\";\nimport g from \"../../renderers/support/RasterSymbolizer.js\";\nimport _ from \"../../geometry/Extent.js\";\nimport I from \"../../geometry/SpatialReference.js\";\n\nconst J = r.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),\n      v = r => {\n  let v = class extends r {\n    constructor() {\n      super(...arguments), this._rasterJobHandler = {\n        instance: null,\n        refCount: 0,\n        connectionPromise: null\n      }, this.bandIds = null, this.copyright = null, this.fullExtent = null, this.interpolation = \"nearest\", this.raster = null, this.rasterInfo = null, this.sourceJSON = null, this.spatialReference = null, this.tileInfo = null, this.symbolizer = null;\n    }\n\n    set multidimensionalDefinition(e) {\n      this.raster && (this._sliceId = this.raster.getSliceIndex(e)), this._set(\"multidimensionalDefinition\", e);\n    }\n\n    set url(e) {\n      this._set(\"url\", d(e, J));\n    }\n\n    set renderer(e) {\n      this._set(\"renderer\", e), this.updateRenderer();\n    }\n\n    async updateRenderer() {\n      if (!this.loaded) return;\n      if (JSON.stringify(this._cachedRendererJson) === JSON.stringify(this.renderer)) return;\n      const e = this._rasterJobHandler.instance;\n      e && (this.symbolizer.rendererJSON = c(this.renderer.toJSON()), this.symbolizer.bind(), await e.updateSymbolizer(this.symbolizer), this._cachedRendererJson = this.renderer.toJSON());\n    }\n\n    async applyRenderer(e, t) {\n      const i = e && e.pixelBlock;\n      if (!(i && i.pixels && i.pixels.length > 0)) return null;\n      let r;\n      this.updateRenderer();\n      const s = this._rasterJobHandler.instance,\n            {\n        bandIds: n\n      } = this;\n      return r = s ? await s.symbolize({ ...e,\n        simpleStretchParams: t,\n        bandIds: n\n      }) : this.symbolizer.symbolize({ ...e,\n        simpleStretchParams: t,\n        bandIds: n\n      }), r;\n    }\n\n    getTileUrl(e, t, i) {\n      return \"RasterTileServer\" === this.raster.datasetFormat ? `${this.url}/tile/${e}/${t}/${i}` : \"\";\n    }\n\n    getCompatibleTileInfo(e, t, i = !1) {\n      if (!this.loaded) return null;\n      if (i && e.equals(this.spatialReference)) return this.tileInfo;\n      const r = l(e);\n      return u.create({\n        size: 256,\n        spatialReference: e,\n        origin: r ? {\n          x: r.origin[0],\n          y: r.origin[1]\n        } : {\n          x: t.xmin,\n          y: t.ymax\n        }\n      });\n    }\n\n    getCompatibleFullExtent(e) {\n      return this.loaded ? (this._compatibleFullExtent && this._compatibleFullExtent.spatialReference.equals(e) || (this._compatibleFullExtent = this.raster.computeExtent(e)), this._compatibleFullExtent) : null;\n    }\n\n    async fetchTile(e, t, r, s = {}) {\n      if (s.requestAsImageElement) {\n        const n = this.getTileUrl(e, t, r);\n        return i(n, {\n          responseType: \"image\",\n          query: {\n            sliceId: this._sliceId,\n            _ts: s.timestamp,\n            ...this.raster.ioConfig.customFetchParameters\n          },\n          signal: s.signal\n        }).then(e => e.data);\n      }\n\n      await this._initJobHandler();\n      const n = \"raster-shaded-relief\" === this.renderer.type ? {\n        cols: 1,\n        rows: 1\n      } : null;\n\n      if (this.multidimensionalDefinition) {\n        const e = this._sliceId;\n        s = {\n          multidimensionalDefinition: this.multidimensionalDefinition,\n          sliceId: e,\n          buffer: n,\n          ...s\n        };\n      }\n\n      return this.raster.fetchTile(e, t, r, s);\n    }\n\n    async fetchPixels(e, t, i, r) {\n      if (await this._initJobHandler(), this.multidimensionalDefinition) {\n        const e = this._sliceId;\n        r = {\n          multidimensionalDefinition: this.multidimensionalDefinition,\n          sliceId: e,\n          ...r\n        };\n      }\n\n      return this.raster.fetchPixels(e, t, i, r);\n    }\n\n    identify(e, t = {}) {\n      return this.multidimensionalDefinition && !t.multidimensionalDefinition && (t = { ...t,\n        multidimensionalDefinition: this.multidimensionalDefinition\n      }), this.raster.identify(e, t);\n    }\n\n    increaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount++;\n    }\n\n    decreaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n    }\n\n    hasStandardTime() {\n      var e;\n      const t = this.rasterInfo.multidimensionalInfo;\n      if (!s(t) || \"standard-time\" !== this.rasterInfo.dataType) return !1;\n      const i = null == (e = this.multidimensionalDefinition[0]) ? void 0 : e.variableName;\n      return t.variables.some(e => e.name === i && e.dimensions.some(e => \"StdTime\" === e.name));\n    }\n\n    getStandardTimeValue(e) {\n      return new Date(24 * (e - 25569) * 3600 * 1e3).toString();\n    }\n\n    _configDefaultSettings() {\n      this._configDefaultInterpolation(), this._configDefaultSlice(), this._configDefaultRenderer();\n    }\n\n    _initJobHandler() {\n      if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n      const e = new h();\n      return this._rasterJobHandler.connectionPromise = e.initialize().then(() => {\n        this._rasterJobHandler.instance = e, this.raster.rasterJobHandler = e, this.renderer && this.updateRenderer();\n      }).catch(() => null), this._rasterJobHandler.connectionPromise;\n    }\n\n    _shutdownJobHandler() {\n      this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0, this.raster.rasterJobHandler = null;\n    }\n\n    _configDefaultInterpolation() {\n      if (null == this.interpolation) {\n        var e;\n        const t = f(this.rasterInfo, this.raster.tileType, null == (e = this.sourceJSON) ? void 0 : e.defaultResamplingMethod);\n\n        this._set(\"interpolation\", t);\n      }\n    }\n\n    _configDefaultSlice() {\n      const {\n        multidimensionalInfo: e\n      } = this.raster.rasterInfo;\n\n      if (s(e)) {\n        if (!this.multidimensionalDefinition) {\n          const t = e.variables[0],\n                i = [];\n          t.dimensions.forEach(e => {\n            i.push(new p({\n              variableName: t.name,\n              dimensionName: e.name,\n              values: e.hasRegularIntervals ? e.extent[0] : e.values[0],\n              isSlice: !0\n            }));\n          }), this.multidimensionalDefinition = i;\n        }\n\n        this._sliceId = this.raster.getSliceIndex(this.multidimensionalDefinition);\n      }\n    }\n\n    _configDefaultRenderer() {\n      const e = this.raster.rasterInfo;\n      var t, i;\n      (this.bandIds || (this.bandIds = y(e)), this.renderer) || (this.renderer = b(e, {\n        bandIds: this.bandIds,\n        variableName: null == (t = this.multidimensionalDefinition) || null == (i = t[0]) ? void 0 : i.variableName\n      }));\n      this.symbolizer ? (this.symbolizer.rendererJSON = c(this.renderer.toJSON()), this.symbolizer.rasterInfo = e) : this.symbolizer = new g({\n        rendererJSON: this.renderer.toJSON(),\n        rasterInfo: e\n      }), this.symbolizer.bind() || J.warn(\"imagery-tile-mixin\", \"The given renderer is not supported by the layer.\");\n    }\n\n  };\n  return e([o()], v.prototype, \"_cachedRendererJson\", void 0), e([o()], v.prototype, \"_sliceId\", void 0), e([o()], v.prototype, \"_compatibleFullExtent\", void 0), e([o()], v.prototype, \"_rasterJobHandler\", void 0), e([o()], v.prototype, \"bandIds\", void 0), e([o()], v.prototype, \"copyright\", void 0), e([o({\n    type: _\n  }), n(\"rasterInfo.extent\")], v.prototype, \"fullExtent\", void 0), e([o()], v.prototype, \"interpolation\", void 0), e([o()], v.prototype, \"ioConfig\", void 0), e([o({\n    type: [p]\n  })], v.prototype, \"multidimensionalDefinition\", null), e([o()], v.prototype, \"raster\", void 0), e([o({\n    readOnly: !0\n  }), n(\"raster.rasterInfo\")], v.prototype, \"rasterInfo\", void 0), e([o()], v.prototype, \"sourceJSON\", void 0), e([o({\n    type: I\n  }), n(\"rasterInfo.spatialReference\")], v.prototype, \"spatialReference\", void 0), e([o({\n    type: u\n  }), n(\"rasterInfo.storageInfo.tileInfo\")], v.prototype, \"tileInfo\", void 0), e([o(m)], v.prototype, \"url\", null), e([o({\n    types: t\n  })], v.prototype, \"renderer\", null), e([o()], v.prototype, \"symbolizer\", void 0), v = e([a(\"esri.layers.ImageryTileMixin\")], v), v;\n};\n\nexport { v as ImageryTileMixin };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js"],"names":["_","e","rasterRendererTypes","t","i","r","isSome","s","aliasOf","n","property","o","subclass","a","getInfo","l","sanitizeUrl","d","url","m","p","h","u","normalizeRendererJSON","c","getDefaultInterpolation","f","getDefaultBandCombination","y","createDefaultRenderer","b","g","I","J","getLogger","v","constructor","arguments","_rasterJobHandler","instance","refCount","connectionPromise","bandIds","copyright","fullExtent","interpolation","raster","rasterInfo","sourceJSON","spatialReference","tileInfo","symbolizer","multidimensionalDefinition","_sliceId","getSliceIndex","_set","renderer","updateRenderer","loaded","JSON","stringify","_cachedRendererJson","rendererJSON","toJSON","bind","updateSymbolizer","applyRenderer","pixelBlock","pixels","length","symbolize","simpleStretchParams","getTileUrl","datasetFormat","getCompatibleTileInfo","equals","create","size","origin","x","xmin","ymax","getCompatibleFullExtent","_compatibleFullExtent","computeExtent","fetchTile","requestAsImageElement","responseType","query","sliceId","_ts","timestamp","ioConfig","customFetchParameters","signal","then","data","_initJobHandler","type","cols","rows","buffer","fetchPixels","identify","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_shutdownJobHandler","hasStandardTime","multidimensionalInfo","dataType","variableName","variables","some","name","dimensions","getStandardTimeValue","Date","toString","_configDefaultSettings","_configDefaultInterpolation","_configDefaultSlice","_configDefaultRenderer","initialize","rasterJobHandler","catch","destroy","tileType","defaultResamplingMethod","forEach","push","dimensionName","values","hasRegularIntervals","extent","isSlice","warn","prototype","readOnly","types","ImageryTileMixin"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,2BAAlB;AAA8C,OAAM,mBAAN;AAA0B,SAAOC,mBAAmB,IAAIC,CAA9B,QAAoC,0BAApC;AAA+D,OAAOC,CAAP,MAAa,kBAAb;AAAgC,OAAOC,CAAP,MAAa,sBAAb;AAAoC,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,qBAAvB;AAA6C,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,kDAAxB;AAA2E,OAAM,mBAAN;AAA0B,OAAM,0CAAN;AAAiD,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,mDAAzB;AAA6E,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,mDAAzB;AAA6E,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,iDAAxB;AAA0E,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,8BAA5B;AAA2D,SAAOC,GAAG,IAAIC,CAAd,QAAoB,gCAApB;AAAqD,OAAOC,CAAP,MAAa,qCAAb;AAAmD,OAAOC,CAAP,MAAa,gCAAb;AAA8C,OAAOC,CAAP,MAAa,wBAAb;AAAsC,SAAOC,qBAAqB,IAAIC,CAAhC,EAAkCC,uBAAuB,IAAIC,CAA7D,EAA+DC,yBAAyB,IAAIC,CAA5F,EAA8FC,qBAAqB,IAAIC,CAAvH,QAA6H,iDAA7H;AAA+K,OAAOC,CAAP,MAAa,6CAAb;AAA2D,OAAO/B,CAAP,MAAa,0BAAb;AAAwC,OAAOgC,CAAP,MAAa,oCAAb;;AAAkD,MAAMC,CAAC,GAAC5B,CAAC,CAAC6B,SAAF,CAAY,qCAAZ,CAAR;AAAA,MAA2DC,CAAC,GAAC9B,CAAC,IAAE;AAAC,MAAI8B,CAAC,GAAC,cAAc9B,CAAd,CAAe;AAAC+B,IAAAA,WAAW,GAAE;AAAC,YAAM,GAAGC,SAAT,GAAoB,KAAKC,iBAAL,GAAuB;AAACC,QAAAA,QAAQ,EAAC,IAAV;AAAeC,QAAAA,QAAQ,EAAC,CAAxB;AAA0BC,QAAAA,iBAAiB,EAAC;AAA5C,OAA3C,EAA6F,KAAKC,OAAL,GAAa,IAA1G,EAA+G,KAAKC,SAAL,GAAe,IAA9H,EAAmI,KAAKC,UAAL,GAAgB,IAAnJ,EAAwJ,KAAKC,aAAL,GAAmB,SAA3K,EAAqL,KAAKC,MAAL,GAAY,IAAjM,EAAsM,KAAKC,UAAL,GAAgB,IAAtN,EAA2N,KAAKC,UAAL,GAAgB,IAA3O,EAAgP,KAAKC,gBAAL,GAAsB,IAAtQ,EAA2Q,KAAKC,QAAL,GAAc,IAAzR,EAA8R,KAAKC,UAAL,GAAgB,IAA9S;AAAmT;;AAA8B,QAA1BC,0BAA0B,CAACnD,CAAD,EAAG;AAAC,WAAK6C,MAAL,KAAc,KAAKO,QAAL,GAAc,KAAKP,MAAL,CAAYQ,aAAZ,CAA0BrD,CAA1B,CAA5B,GAA0D,KAAKsD,IAAL,CAAU,4BAAV,EAAuCtD,CAAvC,CAA1D;AAAoG;;AAAO,QAAHiB,GAAG,CAACjB,CAAD,EAAG;AAAC,WAAKsD,IAAL,CAAU,KAAV,EAAgBtC,CAAC,CAAChB,CAAD,EAAGgC,CAAH,CAAjB;AAAwB;;AAAY,QAARuB,QAAQ,CAACvD,CAAD,EAAG;AAAC,WAAKsD,IAAL,CAAU,UAAV,EAAqBtD,CAArB,GAAwB,KAAKwD,cAAL,EAAxB;AAA8C;;AAAoB,UAAdA,cAAc,GAAE;AAAC,UAAG,CAAC,KAAKC,MAAT,EAAgB;AAAO,UAAGC,IAAI,CAACC,SAAL,CAAe,KAAKC,mBAApB,MAA2CF,IAAI,CAACC,SAAL,CAAe,KAAKJ,QAApB,CAA9C,EAA4E;AAAO,YAAMvD,CAAC,GAAC,KAAKqC,iBAAL,CAAuBC,QAA/B;AAAwCtC,MAAAA,CAAC,KAAG,KAAKkD,UAAL,CAAgBW,YAAhB,GAA6BtC,CAAC,CAAC,KAAKgC,QAAL,CAAcO,MAAd,EAAD,CAA9B,EAAuD,KAAKZ,UAAL,CAAgBa,IAAhB,EAAvD,EAA8E,MAAM/D,CAAC,CAACgE,gBAAF,CAAmB,KAAKd,UAAxB,CAApF,EAAwH,KAAKU,mBAAL,GAAyB,KAAKL,QAAL,CAAcO,MAAd,EAApJ,CAAD;AAA6K;;AAAmB,UAAbG,aAAa,CAACjE,CAAD,EAAGE,CAAH,EAAK;AAAC,YAAMC,CAAC,GAACH,CAAC,IAAEA,CAAC,CAACkE,UAAb;AAAwB,UAAG,EAAE/D,CAAC,IAAEA,CAAC,CAACgE,MAAL,IAAahE,CAAC,CAACgE,MAAF,CAASC,MAAT,GAAgB,CAA/B,CAAH,EAAqC,OAAO,IAAP;AAAY,UAAIhE,CAAJ;AAAM,WAAKoD,cAAL;AAAsB,YAAMlD,CAAC,GAAC,KAAK+B,iBAAL,CAAuBC,QAA/B;AAAA,YAAwC;AAACG,QAAAA,OAAO,EAACjC;AAAT,UAAY,IAApD;AAAyD,aAAOJ,CAAC,GAACE,CAAC,GAAC,MAAMA,CAAC,CAAC+D,SAAF,CAAY,EAAC,GAAGrE,CAAJ;AAAMsE,QAAAA,mBAAmB,EAACpE,CAA1B;AAA4BuC,QAAAA,OAAO,EAACjC;AAApC,OAAZ,CAAP,GAA2D,KAAK0C,UAAL,CAAgBmB,SAAhB,CAA0B,EAAC,GAAGrE,CAAJ;AAAMsE,QAAAA,mBAAmB,EAACpE,CAA1B;AAA4BuC,QAAAA,OAAO,EAACjC;AAApC,OAA1B,CAA9D,EAAgIJ,CAAvI;AAAyI;;AAAAmE,IAAAA,UAAU,CAACvE,CAAD,EAAGE,CAAH,EAAKC,CAAL,EAAO;AAAC,aAAM,uBAAqB,KAAK0C,MAAL,CAAY2B,aAAjC,GAAgD,GAAE,KAAKvD,GAAI,SAAQjB,CAAE,IAAGE,CAAE,IAAGC,CAAE,EAA/E,GAAiF,EAAvF;AAA0F;;AAAAsE,IAAAA,qBAAqB,CAACzE,CAAD,EAAGE,CAAH,EAAKC,CAAC,GAAC,CAAC,CAAR,EAAU;AAAC,UAAG,CAAC,KAAKsD,MAAT,EAAgB,OAAO,IAAP;AAAY,UAAGtD,CAAC,IAAEH,CAAC,CAAC0E,MAAF,CAAS,KAAK1B,gBAAd,CAAN,EAAsC,OAAO,KAAKC,QAAZ;AAAqB,YAAM7C,CAAC,GAACU,CAAC,CAACd,CAAD,CAAT;AAAa,aAAOqB,CAAC,CAACsD,MAAF,CAAS;AAACC,QAAAA,IAAI,EAAC,GAAN;AAAU5B,QAAAA,gBAAgB,EAAChD,CAA3B;AAA6B6E,QAAAA,MAAM,EAACzE,CAAC,GAAC;AAAC0E,UAAAA,CAAC,EAAC1E,CAAC,CAACyE,MAAF,CAAS,CAAT,CAAH;AAAelD,UAAAA,CAAC,EAACvB,CAAC,CAACyE,MAAF,CAAS,CAAT;AAAjB,SAAD,GAA+B;AAACC,UAAAA,CAAC,EAAC5E,CAAC,CAAC6E,IAAL;AAAUpD,UAAAA,CAAC,EAACzB,CAAC,CAAC8E;AAAd;AAApE,OAAT,CAAP;AAA0G;;AAAAC,IAAAA,uBAAuB,CAACjF,CAAD,EAAG;AAAC,aAAO,KAAKyD,MAAL,IAAa,KAAKyB,qBAAL,IAA4B,KAAKA,qBAAL,CAA2BlC,gBAA3B,CAA4C0B,MAA5C,CAAmD1E,CAAnD,CAA5B,KAAoF,KAAKkF,qBAAL,GAA2B,KAAKrC,MAAL,CAAYsC,aAAZ,CAA0BnF,CAA1B,CAA/G,GAA6I,KAAKkF,qBAA/J,IAAsL,IAA7L;AAAkM;;AAAe,UAATE,SAAS,CAACpF,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAOE,CAAC,GAAC,EAAT,EAAY;AAAC,UAAGA,CAAC,CAAC+E,qBAAL,EAA2B;AAAC,cAAM7E,CAAC,GAAC,KAAK+D,UAAL,CAAgBvE,CAAhB,EAAkBE,CAAlB,EAAoBE,CAApB,CAAR;AAA+B,eAAOD,CAAC,CAACK,CAAD,EAAG;AAAC8E,UAAAA,YAAY,EAAC,OAAd;AAAsBC,UAAAA,KAAK,EAAC;AAACC,YAAAA,OAAO,EAAC,KAAKpC,QAAd;AAAuBqC,YAAAA,GAAG,EAACnF,CAAC,CAACoF,SAA7B;AAAuC,eAAG,KAAK7C,MAAL,CAAY8C,QAAZ,CAAqBC;AAA/D,WAA5B;AAAkHC,UAAAA,MAAM,EAACvF,CAAC,CAACuF;AAA3H,SAAH,CAAD,CAAwIC,IAAxI,CAA8I9F,CAAC,IAAEA,CAAC,CAAC+F,IAAnJ,CAAP;AAAiK;;AAAA,YAAM,KAAKC,eAAL,EAAN;AAA6B,YAAMxF,CAAC,GAAC,2BAAyB,KAAK+C,QAAL,CAAc0C,IAAvC,GAA4C;AAACC,QAAAA,IAAI,EAAC,CAAN;AAAQC,QAAAA,IAAI,EAAC;AAAb,OAA5C,GAA4D,IAApE;;AAAyE,UAAG,KAAKhD,0BAAR,EAAmC;AAAC,cAAMnD,CAAC,GAAC,KAAKoD,QAAb;AAAsB9C,QAAAA,CAAC,GAAC;AAAC6C,UAAAA,0BAA0B,EAAC,KAAKA,0BAAjC;AAA4DqC,UAAAA,OAAO,EAACxF,CAApE;AAAsEoG,UAAAA,MAAM,EAAC5F,CAA7E;AAA+E,aAAGF;AAAlF,SAAF;AAAuF;;AAAA,aAAO,KAAKuC,MAAL,CAAYuC,SAAZ,CAAsBpF,CAAtB,EAAwBE,CAAxB,EAA0BE,CAA1B,EAA4BE,CAA5B,CAAP;AAAsC;;AAAiB,UAAX+F,WAAW,CAACrG,CAAD,EAAGE,CAAH,EAAKC,CAAL,EAAOC,CAAP,EAAS;AAAC,UAAG,MAAM,KAAK4F,eAAL,EAAN,EAA6B,KAAK7C,0BAArC,EAAgE;AAAC,cAAMnD,CAAC,GAAC,KAAKoD,QAAb;AAAsBhD,QAAAA,CAAC,GAAC;AAAC+C,UAAAA,0BAA0B,EAAC,KAAKA,0BAAjC;AAA4DqC,UAAAA,OAAO,EAACxF,CAApE;AAAsE,aAAGI;AAAzE,SAAF;AAA8E;;AAAA,aAAO,KAAKyC,MAAL,CAAYwD,WAAZ,CAAwBrG,CAAxB,EAA0BE,CAA1B,EAA4BC,CAA5B,EAA8BC,CAA9B,CAAP;AAAwC;;AAAAkG,IAAAA,QAAQ,CAACtG,CAAD,EAAGE,CAAC,GAAC,EAAL,EAAQ;AAAC,aAAO,KAAKiD,0BAAL,IAAiC,CAACjD,CAAC,CAACiD,0BAApC,KAAiEjD,CAAC,GAAC,EAAC,GAAGA,CAAJ;AAAMiD,QAAAA,0BAA0B,EAAC,KAAKA;AAAtC,OAAnE,GAAsI,KAAKN,MAAL,CAAYyD,QAAZ,CAAqBtG,CAArB,EAAuBE,CAAvB,CAA7I;AAAuK;;AAAAqG,IAAAA,6BAA6B,GAAE;AAAC,WAAKlE,iBAAL,CAAuBE,QAAvB;AAAkC;;AAAAiE,IAAAA,6BAA6B,GAAE;AAAC,WAAKnE,iBAAL,CAAuBE,QAAvB,IAAkC,KAAKF,iBAAL,CAAuBE,QAAvB,IAAiC,CAAjC,IAAoC,KAAKkE,mBAAL,EAAtE;AAAiG;;AAAAC,IAAAA,eAAe,GAAE;AAAC,UAAI1G,CAAJ;AAAM,YAAME,CAAC,GAAC,KAAK4C,UAAL,CAAgB6D,oBAAxB;AAA6C,UAAG,CAACrG,CAAC,CAACJ,CAAD,CAAF,IAAO,oBAAkB,KAAK4C,UAAL,CAAgB8D,QAA5C,EAAqD,OAAM,CAAC,CAAP;AAAS,YAAMzG,CAAC,GAAC,SAAOH,CAAC,GAAC,KAAKmD,0BAAL,CAAgC,CAAhC,CAAT,IAA6C,KAAK,CAAlD,GAAoDnD,CAAC,CAAC6G,YAA9D;AAA2E,aAAO3G,CAAC,CAAC4G,SAAF,CAAYC,IAAZ,CAAkB/G,CAAC,IAAEA,CAAC,CAACgH,IAAF,KAAS7G,CAAT,IAAYH,CAAC,CAACiH,UAAF,CAAaF,IAAb,CAAmB/G,CAAC,IAAE,cAAYA,CAAC,CAACgH,IAApC,CAAjC,CAAP;AAAqF;;AAAAE,IAAAA,oBAAoB,CAAClH,CAAD,EAAG;AAAC,aAAO,IAAImH,IAAJ,CAAS,MAAInH,CAAC,GAAC,KAAN,IAAa,IAAb,GAAkB,GAA3B,EAAgCoH,QAAhC,EAAP;AAAkD;;AAAAC,IAAAA,sBAAsB,GAAE;AAAC,WAAKC,2BAAL,IAAmC,KAAKC,mBAAL,EAAnC,EAA8D,KAAKC,sBAAL,EAA9D;AAA4F;;AAAAxB,IAAAA,eAAe,GAAE;AAAC,UAAG,QAAM,KAAK3D,iBAAL,CAAuBG,iBAAhC,EAAkD,OAAO,KAAKH,iBAAL,CAAuBG,iBAA9B;AAAgD,YAAMxC,CAAC,GAAC,IAAIoB,CAAJ,EAAR;AAAc,aAAO,KAAKiB,iBAAL,CAAuBG,iBAAvB,GAAyCxC,CAAC,CAACyH,UAAF,GAAe3B,IAAf,CAAqB,MAAI;AAAC,aAAKzD,iBAAL,CAAuBC,QAAvB,GAAgCtC,CAAhC,EAAkC,KAAK6C,MAAL,CAAY6E,gBAAZ,GAA6B1H,CAA/D,EAAiE,KAAKuD,QAAL,IAAe,KAAKC,cAAL,EAAhF;AAAsG,OAAhI,EAAmImE,KAAnI,CAA0I,MAAI,IAA9I,CAAzC,EAA8L,KAAKtF,iBAAL,CAAuBG,iBAA5N;AAA8O;;AAAAiE,IAAAA,mBAAmB,GAAE;AAAC,WAAKpE,iBAAL,CAAuBC,QAAvB,IAAiC,KAAKD,iBAAL,CAAuBC,QAAvB,CAAgCsF,OAAhC,EAAjC,EAA2E,KAAKvF,iBAAL,CAAuBC,QAAvB,GAAgC,IAA3G,EAAgH,KAAKD,iBAAL,CAAuBG,iBAAvB,GAAyC,IAAzJ,EAA8J,KAAKH,iBAAL,CAAuBE,QAAvB,GAAgC,CAA9L,EAAgM,KAAKM,MAAL,CAAY6E,gBAAZ,GAA6B,IAA7N;AAAkO;;AAAAJ,IAAAA,2BAA2B,GAAE;AAAC,UAAG,QAAM,KAAK1E,aAAd,EAA4B;AAAC,YAAI5C,CAAJ;AAAM,cAAME,CAAC,GAACuB,CAAC,CAAC,KAAKqB,UAAN,EAAiB,KAAKD,MAAL,CAAYgF,QAA7B,EAAsC,SAAO7H,CAAC,GAAC,KAAK+C,UAAd,IAA0B,KAAK,CAA/B,GAAiC/C,CAAC,CAAC8H,uBAAzE,CAAT;;AAA2G,aAAKxE,IAAL,CAAU,eAAV,EAA0BpD,CAA1B;AAA6B;AAAC;;AAAAqH,IAAAA,mBAAmB,GAAE;AAAC,YAAK;AAACZ,QAAAA,oBAAoB,EAAC3G;AAAtB,UAAyB,KAAK6C,MAAL,CAAYC,UAA1C;;AAAqD,UAAGxC,CAAC,CAACN,CAAD,CAAJ,EAAQ;AAAC,YAAG,CAAC,KAAKmD,0BAAT,EAAoC;AAAC,gBAAMjD,CAAC,GAACF,CAAC,CAAC8G,SAAF,CAAY,CAAZ,CAAR;AAAA,gBAAuB3G,CAAC,GAAC,EAAzB;AAA4BD,UAAAA,CAAC,CAAC+G,UAAF,CAAac,OAAb,CAAsB/H,CAAC,IAAE;AAACG,YAAAA,CAAC,CAAC6H,IAAF,CAAO,IAAI7G,CAAJ,CAAM;AAAC0F,cAAAA,YAAY,EAAC3G,CAAC,CAAC8G,IAAhB;AAAqBiB,cAAAA,aAAa,EAACjI,CAAC,CAACgH,IAArC;AAA0CkB,cAAAA,MAAM,EAAClI,CAAC,CAACmI,mBAAF,GAAsBnI,CAAC,CAACoI,MAAF,CAAS,CAAT,CAAtB,GAAkCpI,CAAC,CAACkI,MAAF,CAAS,CAAT,CAAnF;AAA+FG,cAAAA,OAAO,EAAC,CAAC;AAAxG,aAAN,CAAP;AAA0H,WAApJ,GAAuJ,KAAKlF,0BAAL,GAAgChD,CAAvL;AAAyL;;AAAA,aAAKiD,QAAL,GAAc,KAAKP,MAAL,CAAYQ,aAAZ,CAA0B,KAAKF,0BAA/B,CAAd;AAAyE;AAAC;;AAAAqE,IAAAA,sBAAsB,GAAE;AAAC,YAAMxH,CAAC,GAAC,KAAK6C,MAAL,CAAYC,UAApB;AAA+B,UAAI5C,CAAJ,EAAMC,CAAN;AAAQ,OAAC,KAAKsC,OAAL,KAAe,KAAKA,OAAL,GAAad,CAAC,CAAC3B,CAAD,CAA7B,GAAkC,KAAKuD,QAAxC,MAAoD,KAAKA,QAAL,GAAc1B,CAAC,CAAC7B,CAAD,EAAG;AAACyC,QAAAA,OAAO,EAAC,KAAKA,OAAd;AAAsBoE,QAAAA,YAAY,EAAC,SAAO3G,CAAC,GAAC,KAAKiD,0BAAd,KAA2C,SAAOhD,CAAC,GAACD,CAAC,CAAC,CAAD,CAAV,CAA3C,GAA0D,KAAK,CAA/D,GAAiEC,CAAC,CAAC0G;AAAtG,OAAH,CAAnE;AAA4L,WAAK3D,UAAL,IAAiB,KAAKA,UAAL,CAAgBW,YAAhB,GAA6BtC,CAAC,CAAC,KAAKgC,QAAL,CAAcO,MAAd,EAAD,CAA9B,EAAuD,KAAKZ,UAAL,CAAgBJ,UAAhB,GAA2B9C,CAAnG,IAAsG,KAAKkD,UAAL,GAAgB,IAAIpB,CAAJ,CAAM;AAAC+B,QAAAA,YAAY,EAAC,KAAKN,QAAL,CAAcO,MAAd,EAAd;AAAqChB,QAAAA,UAAU,EAAC9C;AAAhD,OAAN,CAAtH,EAAgL,KAAKkD,UAAL,CAAgBa,IAAhB,MAAwB/B,CAAC,CAACsG,IAAF,CAAO,oBAAP,EAA4B,mDAA5B,CAAxM;AAAyR;;AAA/iK,GAArB;AAAskK,SAAOtI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,qBAAnB,EAAyC,KAAK,CAA9C,CAAD,EAAkDvI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,UAAnB,EAA8B,KAAK,CAAnC,CAAnD,EAAyFvI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,uBAAnB,EAA2C,KAAK,CAAhD,CAA1F,EAA6IvI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,mBAAnB,EAAuC,KAAK,CAA5C,CAA9I,EAA6LvI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,SAAnB,EAA6B,KAAK,CAAlC,CAA9L,EAAmOvI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,WAAnB,EAA+B,KAAK,CAApC,CAApO,EAA2QvI,CAAC,CAAC,CAACU,CAAC,CAAC;AAACuF,IAAAA,IAAI,EAAClG;AAAN,GAAD,CAAF,EAAaS,CAAC,CAAC,mBAAD,CAAd,CAAD,EAAsC0B,CAAC,CAACqG,SAAxC,EAAkD,YAAlD,EAA+D,KAAK,CAApE,CAA5Q,EAAmVvI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,eAAnB,EAAmC,KAAK,CAAxC,CAApV,EAA+XvI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,UAAnB,EAA8B,KAAK,CAAnC,CAAhY,EAAsavI,CAAC,CAAC,CAACU,CAAC,CAAC;AAACuF,IAAAA,IAAI,EAAC,CAAC9E,CAAD;AAAN,GAAD,CAAF,CAAD,EAAiBe,CAAC,CAACqG,SAAnB,EAA6B,4BAA7B,EAA0D,IAA1D,CAAva,EAAuevI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,QAAnB,EAA4B,KAAK,CAAjC,CAAxe,EAA4gBvI,CAAC,CAAC,CAACU,CAAC,CAAC;AAAC8H,IAAAA,QAAQ,EAAC,CAAC;AAAX,GAAD,CAAF,EAAkBhI,CAAC,CAAC,mBAAD,CAAnB,CAAD,EAA2C0B,CAAC,CAACqG,SAA7C,EAAuD,YAAvD,EAAoE,KAAK,CAAzE,CAA7gB,EAAylBvI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,YAAnB,EAAgC,KAAK,CAArC,CAA1lB,EAAkoBvI,CAAC,CAAC,CAACU,CAAC,CAAC;AAACuF,IAAAA,IAAI,EAAClE;AAAN,GAAD,CAAF,EAAavB,CAAC,CAAC,6BAAD,CAAd,CAAD,EAAgD0B,CAAC,CAACqG,SAAlD,EAA4D,kBAA5D,EAA+E,KAAK,CAApF,CAAnoB,EAA0tBvI,CAAC,CAAC,CAACU,CAAC,CAAC;AAACuF,IAAAA,IAAI,EAAC5E;AAAN,GAAD,CAAF,EAAab,CAAC,CAAC,iCAAD,CAAd,CAAD,EAAoD0B,CAAC,CAACqG,SAAtD,EAAgE,UAAhE,EAA2E,KAAK,CAAhF,CAA3tB,EAA8yBvI,CAAC,CAAC,CAACU,CAAC,CAACQ,CAAD,CAAF,CAAD,EAAQgB,CAAC,CAACqG,SAAV,EAAoB,KAApB,EAA0B,IAA1B,CAA/yB,EAA+0BvI,CAAC,CAAC,CAACU,CAAC,CAAC;AAAC+H,IAAAA,KAAK,EAACvI;AAAP,GAAD,CAAF,CAAD,EAAgBgC,CAAC,CAACqG,SAAlB,EAA4B,UAA5B,EAAuC,IAAvC,CAAh1B,EAA63BvI,CAAC,CAAC,CAACU,CAAC,EAAF,CAAD,EAAOwB,CAAC,CAACqG,SAAT,EAAmB,YAAnB,EAAgC,KAAK,CAArC,CAA93B,EAAs6BrG,CAAC,GAAClC,CAAC,CAAC,CAACY,CAAC,CAAC,8BAAD,CAAF,CAAD,EAAqCsB,CAArC,CAAz6B,EAAi9BA,CAAx9B;AAA09B,CAAjmM;;AAAkmM,SAAOA,CAAC,IAAIwG,gBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import{rasterRendererTypes as t}from\"../../rasterRenderers.js\";import i from\"../../request.js\";import r from\"../../core/Logger.js\";import{isSome as s}from\"../../core/maybe.js\";import{aliasOf as n}from\"../../core/accessorSupport/decorators/aliasOf.js\";import\"../../core/has.js\";import\"../../core/accessorSupport/ensureType.js\";import{property as o}from\"../../core/accessorSupport/decorators/property.js\";import{subclass as a}from\"../../core/accessorSupport/decorators/subclass.js\";import{getInfo as l}from\"../../geometry/support/spatialReferenceUtils.js\";import{sanitizeUrl as d}from\"../support/arcgisLayerUrl.js\";import{url as m}from\"../support/commonProperties.js\";import p from\"../support/DimensionalDefinition.js\";import h from\"../support/RasterJobHandler.js\";import u from\"../support/TileInfo.js\";import{normalizeRendererJSON as c,getDefaultInterpolation as f,getDefaultBandCombination as y,createDefaultRenderer as b}from\"../../renderers/support/rasterRendererHelper.js\";import g from\"../../renderers/support/RasterSymbolizer.js\";import _ from\"../../geometry/Extent.js\";import I from\"../../geometry/SpatialReference.js\";const J=r.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),v=r=>{let v=class extends r{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation=\"nearest\",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set(\"multidimensionalDefinition\",e)}set url(e){this._set(\"url\",d(e,J))}set renderer(e){this._set(\"renderer\",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=c(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let r;this.updateRenderer();const s=this._rasterJobHandler.instance,{bandIds:n}=this;return r=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),r}getTileUrl(e,t,i){return\"RasterTileServer\"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:\"\"}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded)return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const r=l(e);return u.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,s={}){if(s.requestAsImageElement){const n=this.getTileUrl(e,t,r);return i(n,{responseType:\"image\",query:{sliceId:this._sliceId,_ts:s.timestamp,...this.raster.ioConfig.customFetchParameters},signal:s.signal}).then((e=>e.data))}await this._initJobHandler();const n=\"raster-shaded-relief\"===this.renderer.type?{cols:1,rows:1}:null;if(this.multidimensionalDefinition){const e=this._sliceId;s={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,buffer:n,...s}}return this.raster.fetchTile(e,t,r,s)}async fetchPixels(e,t,i,r){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;r={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...r}}return this.raster.fetchPixels(e,t,i,r)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!s(t)||\"standard-time\"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some((e=>e.name===i&&e.dimensions.some((e=>\"StdTime\"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new h;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=f(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set(\"interpolation\",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(s(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach((e=>{i.push(new p({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,i;(this.bandIds||(this.bandIds=y(e)),this.renderer)||(this.renderer=b(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(i=t[0])?void 0:i.variableName}));this.symbolizer?(this.symbolizer.rendererJSON=c(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new g({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||J.warn(\"imagery-tile-mixin\",\"The given renderer is not supported by the layer.\")}};return e([o()],v.prototype,\"_cachedRendererJson\",void 0),e([o()],v.prototype,\"_sliceId\",void 0),e([o()],v.prototype,\"_compatibleFullExtent\",void 0),e([o()],v.prototype,\"_rasterJobHandler\",void 0),e([o()],v.prototype,\"bandIds\",void 0),e([o()],v.prototype,\"copyright\",void 0),e([o({type:_}),n(\"rasterInfo.extent\")],v.prototype,\"fullExtent\",void 0),e([o()],v.prototype,\"interpolation\",void 0),e([o()],v.prototype,\"ioConfig\",void 0),e([o({type:[p]})],v.prototype,\"multidimensionalDefinition\",null),e([o()],v.prototype,\"raster\",void 0),e([o({readOnly:!0}),n(\"raster.rasterInfo\")],v.prototype,\"rasterInfo\",void 0),e([o()],v.prototype,\"sourceJSON\",void 0),e([o({type:I}),n(\"rasterInfo.spatialReference\")],v.prototype,\"spatialReference\",void 0),e([o({type:u}),n(\"rasterInfo.storageInfo.tileInfo\")],v.prototype,\"tileInfo\",void 0),e([o(m)],v.prototype,\"url\",null),e([o({types:t})],v.prototype,\"renderer\",null),e([o()],v.prototype,\"symbolizer\",void 0),v=e([a(\"esri.layers.ImageryTileMixin\")],v),v};export{v as ImageryTileMixin};\n"]},"metadata":{},"sourceType":"module"}