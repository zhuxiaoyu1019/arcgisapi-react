{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { version as e } from \"../../kernel.js\";\nimport s from \"../Error.js\";\nimport { on as t } from \"../events.js\";\nimport { isSome as o } from \"../maybe.js\";\nimport { onAbortOrThrow as n, createAbortError as r, createAbortController as i, isPromiseLike as l, isAbortError as a } from \"../promiseUtils.js\";\nimport { registry as h } from \"./registry.js\";\nimport { newJobId as c, MessageType as p, receiveMessage as _, toInvokeError as u, postMessage as d } from \"./utils.js\";\nimport { commitHash as m, buildDate as b } from \"../../support/revision.js\";\nconst {\n  CLOSE: g,\n  ABORT: v,\n  INVOKE: f,\n  RESPONSE: M,\n  OPEN_PORT: y,\n  ON: j\n} = p;\n\nclass k {\n  constructor(e) {\n    this._timer = null, this._cancelledJobIds = new Set(), this._invokeMessages = [], this._invoke = e, this._timer = null, this._process = this._process.bind(this);\n  }\n\n  push(e) {\n    e.type === p.ABORT ? this._cancelledJobIds.add(e.jobId) : (this._invokeMessages.push(e), null === this._timer && (this._timer = setTimeout(this._process, 0)));\n  }\n\n  clear() {\n    this._invokeMessages.length = 0, this._cancelledJobIds.clear(), this._timer = null;\n  }\n\n  _process() {\n    this._timer = null;\n\n    for (const e of this._invokeMessages) this._cancelledJobIds.has(e.jobId) || this._invoke(e);\n\n    this._cancelledJobIds.clear(), this._invokeMessages.length = 0;\n  }\n\n}\n\nclass I {\n  constructor(e, s) {\n    this._port = e, this._outJobs = new Map(), this._inJobs = new Map(), this._invokeQueue = new k(e => this._onInvokeMessage(e)), this._client = s.client, this._onMessage = this._onMessage.bind(this), this._channel = s.channel, this._schedule = s.schedule, this._port.addEventListener(\"message\", this._onMessage), this._port.start();\n  }\n\n  static connect(e) {\n    const s = new MessageChannel();\n    let t;\n    t = \"function\" == typeof e ? new e() : \"default\" in e && \"function\" == typeof e.default ? new e.default() : e;\n    const o = new I(s.port1, {\n      channel: s,\n      client: t\n    });\n    return \"object\" == typeof t && \"remoteClient\" in t && (t.remoteClient = o), I.clients.set(o, t), s.port2;\n  }\n\n  static loadWorker(e) {\n    const s = h[e];\n    return s ? s() : Promise.resolve(null);\n  }\n\n  close() {\n    this._post({\n      type: g\n    }), this._close();\n  }\n\n  isBusy() {\n    return this._outJobs.size > 0;\n  }\n\n  invoke(e, t, o) {\n    const i = o && o.signal,\n          l = o && o.transferList;\n    if (!this._port) return Promise.reject(new s(\"worker:port-closed\", `Cannot call invoke('${e}'), port is closed`, {\n      methodName: e,\n      data: t\n    }));\n    const a = c();\n    return new Promise((s, o) => {\n      const h = n(i, () => {\n        var e;\n\n        const s = this._outJobs.get(a);\n\n        s && (this._outJobs.delete(a), null == (e = s.abortHandle) || e.remove(), this._post({\n          type: v,\n          jobId: a\n        }), o(r()));\n      }),\n            c = {\n        resolve: s,\n        reject: o,\n        abortHandle: h,\n        debugInfo: e\n      };\n      this._outJobs.set(a, c), this._post({\n        type: f,\n        jobId: a,\n        methodName: e,\n        abortable: null != i\n      }, t, l);\n    });\n  }\n\n  on(e, s) {\n    const t = new MessageChannel();\n\n    function o(e) {\n      s(e.data);\n    }\n\n    return this._port.postMessage({\n      type: p.ON,\n      eventType: e,\n      port: t.port2\n    }, [t.port2]), t.port1.addEventListener(\"message\", o), t.port1.start(), {\n      remove() {\n        t.port1.postMessage({\n          type: p.CLOSE\n        }), t.port1.close(), t.port1.removeEventListener(\"message\", o);\n      }\n\n    };\n  }\n\n  openPort() {\n    const e = new MessageChannel();\n    return this._post({\n      type: y,\n      port: e.port2\n    }), e.port1;\n  }\n\n  _close() {\n    this._channel && (this._channel = null), this._port.removeEventListener(\"message\", this._onMessage), this._port.close(), this._outJobs.forEach(e => {\n      var s;\n      null == (s = e.abortHandle) || s.remove(), e.reject(r(`Worker closing, aborting job calling '${e.debugInfo}'`));\n    }), this._inJobs.clear(), this._outJobs.clear(), this._invokeQueue.clear(), this._port = this._client = this._schedule = null;\n  }\n\n  _onMessage(e) {\n    o(this._schedule) ? this._schedule(() => this._processMessage(e)) : this._processMessage(e);\n  }\n\n  _processMessage(e) {\n    const s = _(e);\n\n    if (s) switch (s.type) {\n      case M:\n        this._onResponseMessage(s);\n\n        break;\n\n      case f:\n        this._invokeQueue.push(s);\n\n        break;\n\n      case v:\n        this._onAbortMessage(s);\n\n        break;\n\n      case g:\n        this._onCloseMessage();\n\n        break;\n\n      case y:\n        this._onOpenPortMessage(s);\n\n        break;\n\n      case j:\n        this._onOnMessage(s);\n\n    }\n  }\n\n  _onAbortMessage(e) {\n    const s = this._inJobs,\n          t = e.jobId,\n          o = s.get(t);\n    this._invokeQueue.push(e), o && (o.controller && o.controller.abort(), s.delete(t));\n  }\n\n  _onCloseMessage() {\n    const e = this._client;\n    this._close(), e && \"destroy\" in e && I.clients.get(this) === e && e.destroy(), I.clients.delete(this), e && e.remoteClient && (e.remoteClient = null);\n  }\n\n  _onInvokeMessage(e) {\n    const {\n      methodName: s,\n      jobId: t,\n      data: o,\n      abortable: n\n    } = e,\n          r = n ? i() : null,\n          h = this._inJobs;\n    let c,\n        p = this._client,\n        _ = p[s];\n\n    try {\n      if (!_ && s && -1 !== s.indexOf(\".\")) {\n        const e = s.split(\".\");\n\n        for (let s = 0; s < e.length - 1; s++) p = p[e[s]], _ = p[e[s + 1]];\n      }\n\n      if (\"function\" != typeof _) throw new TypeError(`${s} is not a function`);\n      c = _.call(p, o, {\n        client: this,\n        signal: r ? r.signal : null\n      });\n    } catch (d) {\n      return void this._post({\n        type: M,\n        jobId: t,\n        error: u(d)\n      });\n    }\n\n    l(c) ? (h.set(t, {\n      controller: r,\n      promise: c\n    }), c.then(e => {\n      h.has(t) && (h.delete(t), this._post({\n        type: M,\n        jobId: t\n      }, e));\n    }, e => {\n      h.has(t) && (h.delete(t), a(e) || this._post({\n        type: M,\n        jobId: t,\n        error: u(e || {\n          message: `Error encountered at method ${s}`\n        })\n      }));\n    })) : this._post({\n      type: M,\n      jobId: t\n    }, c);\n  }\n\n  _onOpenPortMessage(e) {\n    new I(e.port, {\n      client: this._client\n    });\n  }\n\n  _onOnMessage(e) {\n    const {\n      port: s\n    } = e,\n          o = this._client.on(e.eventType, e => {\n      s.postMessage(e);\n    }),\n          n = t(e.port, \"message\", e => {\n      _(e).type === p.CLOSE && (n.remove(), o.remove(), s.close());\n    });\n  }\n\n  _onResponseMessage(e) {\n    var t;\n    const {\n      jobId: o,\n      error: n,\n      data: r\n    } = e,\n          i = this._outJobs;\n    if (!i.has(o)) return;\n    const l = i.get(o);\n    i.delete(o), null == (t = l.abortHandle) || t.remove(), n ? l.reject(s.fromJSON(JSON.parse(n))) : l.resolve(r);\n  }\n\n  _post(e, s, t) {\n    return d(this._port, e, s, t);\n  }\n\n}\n\nI.kernelInfo = {\n  revision: m,\n  version: e,\n  buildDate: b\n}, I.clients = new Map();\nexport default I;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/core/workers/RemoteClient.js"],"names":["version","e","s","on","t","isSome","o","onAbortOrThrow","n","createAbortError","r","createAbortController","i","isPromiseLike","l","isAbortError","a","registry","h","newJobId","c","MessageType","p","receiveMessage","_","toInvokeError","u","postMessage","d","commitHash","m","buildDate","b","CLOSE","g","ABORT","v","INVOKE","f","RESPONSE","M","OPEN_PORT","y","ON","j","k","constructor","_timer","_cancelledJobIds","Set","_invokeMessages","_invoke","_process","bind","push","type","add","jobId","setTimeout","clear","length","has","I","_port","_outJobs","Map","_inJobs","_invokeQueue","_onInvokeMessage","_client","client","_onMessage","_channel","channel","_schedule","schedule","addEventListener","start","connect","MessageChannel","default","port1","remoteClient","clients","set","port2","loadWorker","Promise","resolve","close","_post","_close","isBusy","size","invoke","signal","transferList","reject","methodName","data","get","delete","abortHandle","remove","debugInfo","abortable","eventType","port","removeEventListener","openPort","forEach","_processMessage","_onResponseMessage","_onAbortMessage","_onCloseMessage","_onOpenPortMessage","_onOnMessage","controller","abort","destroy","indexOf","split","TypeError","call","error","promise","then","message","fromJSON","JSON","parse","kernelInfo","revision"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{version as e}from\"../../kernel.js\";import s from\"../Error.js\";import{on as t}from\"../events.js\";import{isSome as o}from\"../maybe.js\";import{onAbortOrThrow as n,createAbortError as r,createAbortController as i,isPromiseLike as l,isAbortError as a}from\"../promiseUtils.js\";import{registry as h}from\"./registry.js\";import{newJobId as c,MessageType as p,receiveMessage as _,toInvokeError as u,postMessage as d}from\"./utils.js\";import{commitHash as m,buildDate as b}from\"../../support/revision.js\";const{CLOSE:g,ABORT:v,INVOKE:f,RESPONSE:M,OPEN_PORT:y,ON:j}=p;class k{constructor(e){this._timer=null,this._cancelledJobIds=new Set,this._invokeMessages=[],this._invoke=e,this._timer=null,this._process=this._process.bind(this)}push(e){e.type===p.ABORT?this._cancelledJobIds.add(e.jobId):(this._invokeMessages.push(e),null===this._timer&&(this._timer=setTimeout(this._process,0)))}clear(){this._invokeMessages.length=0,this._cancelledJobIds.clear(),this._timer=null}_process(){this._timer=null;for(const e of this._invokeMessages)this._cancelledJobIds.has(e.jobId)||this._invoke(e);this._cancelledJobIds.clear(),this._invokeMessages.length=0}}class I{constructor(e,s){this._port=e,this._outJobs=new Map,this._inJobs=new Map,this._invokeQueue=new k((e=>this._onInvokeMessage(e))),this._client=s.client,this._onMessage=this._onMessage.bind(this),this._channel=s.channel,this._schedule=s.schedule,this._port.addEventListener(\"message\",this._onMessage),this._port.start()}static connect(e){const s=new MessageChannel;let t;t=\"function\"==typeof e?new e:\"default\"in e&&\"function\"==typeof e.default?new e.default:e;const o=new I(s.port1,{channel:s,client:t});return\"object\"==typeof t&&\"remoteClient\"in t&&(t.remoteClient=o),I.clients.set(o,t),s.port2}static loadWorker(e){const s=h[e];return s?s():Promise.resolve(null)}close(){this._post({type:g}),this._close()}isBusy(){return this._outJobs.size>0}invoke(e,t,o){const i=o&&o.signal,l=o&&o.transferList;if(!this._port)return Promise.reject(new s(\"worker:port-closed\",`Cannot call invoke('${e}'), port is closed`,{methodName:e,data:t}));const a=c();return new Promise(((s,o)=>{const h=n(i,(()=>{var e;const s=this._outJobs.get(a);s&&(this._outJobs.delete(a),null==(e=s.abortHandle)||e.remove(),this._post({type:v,jobId:a}),o(r()))})),c={resolve:s,reject:o,abortHandle:h,debugInfo:e};this._outJobs.set(a,c),this._post({type:f,jobId:a,methodName:e,abortable:null!=i},t,l)}))}on(e,s){const t=new MessageChannel;function o(e){s(e.data)}return this._port.postMessage({type:p.ON,eventType:e,port:t.port2},[t.port2]),t.port1.addEventListener(\"message\",o),t.port1.start(),{remove(){t.port1.postMessage({type:p.CLOSE}),t.port1.close(),t.port1.removeEventListener(\"message\",o)}}}openPort(){const e=new MessageChannel;return this._post({type:y,port:e.port2}),e.port1}_close(){this._channel&&(this._channel=null),this._port.removeEventListener(\"message\",this._onMessage),this._port.close(),this._outJobs.forEach((e=>{var s;null==(s=e.abortHandle)||s.remove(),e.reject(r(`Worker closing, aborting job calling '${e.debugInfo}'`))})),this._inJobs.clear(),this._outJobs.clear(),this._invokeQueue.clear(),this._port=this._client=this._schedule=null}_onMessage(e){o(this._schedule)?this._schedule((()=>this._processMessage(e))):this._processMessage(e)}_processMessage(e){const s=_(e);if(s)switch(s.type){case M:this._onResponseMessage(s);break;case f:this._invokeQueue.push(s);break;case v:this._onAbortMessage(s);break;case g:this._onCloseMessage();break;case y:this._onOpenPortMessage(s);break;case j:this._onOnMessage(s)}}_onAbortMessage(e){const s=this._inJobs,t=e.jobId,o=s.get(t);this._invokeQueue.push(e),o&&(o.controller&&o.controller.abort(),s.delete(t))}_onCloseMessage(){const e=this._client;this._close(),e&&\"destroy\"in e&&I.clients.get(this)===e&&e.destroy(),I.clients.delete(this),e&&e.remoteClient&&(e.remoteClient=null)}_onInvokeMessage(e){const{methodName:s,jobId:t,data:o,abortable:n}=e,r=n?i():null,h=this._inJobs;let c,p=this._client,_=p[s];try{if(!_&&s&&-1!==s.indexOf(\".\")){const e=s.split(\".\");for(let s=0;s<e.length-1;s++)p=p[e[s]],_=p[e[s+1]]}if(\"function\"!=typeof _)throw new TypeError(`${s} is not a function`);c=_.call(p,o,{client:this,signal:r?r.signal:null})}catch(d){return void this._post({type:M,jobId:t,error:u(d)})}l(c)?(h.set(t,{controller:r,promise:c}),c.then((e=>{h.has(t)&&(h.delete(t),this._post({type:M,jobId:t},e))}),(e=>{h.has(t)&&(h.delete(t),a(e)||this._post({type:M,jobId:t,error:u(e||{message:`Error encountered at method ${s}`})}))}))):this._post({type:M,jobId:t},c)}_onOpenPortMessage(e){new I(e.port,{client:this._client})}_onOnMessage(e){const{port:s}=e,o=this._client.on(e.eventType,(e=>{s.postMessage(e)})),n=t(e.port,\"message\",(e=>{_(e).type===p.CLOSE&&(n.remove(),o.remove(),s.close())}))}_onResponseMessage(e){var t;const{jobId:o,error:n,data:r}=e,i=this._outJobs;if(!i.has(o))return;const l=i.get(o);i.delete(o),null==(t=l.abortHandle)||t.remove(),n?l.reject(s.fromJSON(JSON.parse(n))):l.resolve(r)}_post(e,s,t){return d(this._port,e,s,t)}}I.kernelInfo={revision:m,version:e,buildDate:b},I.clients=new Map;export default I;\n"]},"metadata":{},"sourceType":"module"}