{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { handlesGroup as e } from \"../handleUtils.js\";\nimport t from \"../Logger.js\";\nimport { isPromiseLike as s, throwIfAborted as i } from \"../promiseUtils.js\";\nimport n from \"./RemoteClient.js\";\nconst r = t.getLogger(\"esri.core.workers.Connection\");\n\nclass l {\n  constructor() {\n    this._clients = new Array(), this._clientPromises = new Array(), this._clientIdx = 0;\n  }\n\n  destroy() {\n    this.close();\n  }\n\n  get closed() {\n    return !this._clients || !this._clients.length;\n  }\n\n  open(e, t) {\n    return new Promise((r, l) => {\n      let o = !0;\n\n      const h = e => {\n        i(t.signal), o && (o = !1, e());\n      };\n\n      this._clients.length = e.length, this._clientPromises.length = e.length;\n\n      for (let i = 0; i < e.length; ++i) {\n        const o = e[i];\n        s(o) ? this._clientPromises[i] = o.then(e => (this._clients[i] = new n(e, t), h(r), this._clients[i]), () => (h(l), null)) : (this._clients[i] = new n(o, t), this._clientPromises[i] = Promise.resolve(this._clients[i]), h(r));\n      }\n    });\n  }\n\n  broadcast(e, t, s) {\n    const i = new Array(this._clientPromises.length);\n\n    for (let n = 0; n < this._clientPromises.length; ++n) {\n      const r = this._clientPromises[n];\n      i[n] = r.then(i => i.invoke(e, t, s));\n    }\n\n    return i;\n  }\n\n  close() {\n    for (const e of this._clientPromises) e.then(e => e.close());\n\n    this._clients.length = 0, this._clientPromises.length = 0;\n  }\n\n  getAvailableClient() {\n    let e;\n\n    for (let t = 0; t < this._clients.length; ++t) {\n      const s = this._clients[t];\n\n      if (s) {\n        if (!s.isBusy()) return Promise.resolve(s);\n      } else e = e || [], e.push(this._clientPromises[t]);\n    }\n\n    return e ? Promise.race(e) : (this._clientIdx = (this._clientIdx + 1) % this._clients.length, Promise.resolve(this._clients[this._clientIdx]));\n  }\n\n  invoke(e, t, s) {\n    let i = null;\n    if (Array.isArray(s) ? (r.warn(\"invoke()\", \"The transferList parameter is deprecated, use the options object instead\"), i = {\n      transferList: s\n    }) : i = s, this.closed) return Promise.reject(new Error(\"Connection closed\"));\n    return this.getAvailableClient().then(s => s.invoke(e, t, i));\n  }\n\n  on(t, s) {\n    return Promise.all(this._clientPromises).then(() => e(this._clients.map(e => e.on(t, s))));\n  }\n\n  openPorts() {\n    return new Promise(e => {\n      const t = new Array(this._clientPromises.length);\n      let s = t.length;\n\n      for (let i = 0; i < this._clientPromises.length; ++i) {\n        this._clientPromises[i].then(n => {\n          t[i] = n.openPort(), 0 == --s && e(t);\n        });\n      }\n    });\n  }\n\n  get test() {\n    return {\n      numClients: this._clients.length\n    };\n  }\n\n}\n\nexport default l;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/core/workers/Connection.js"],"names":["handlesGroup","e","t","isPromiseLike","s","throwIfAborted","i","n","r","getLogger","l","constructor","_clients","Array","_clientPromises","_clientIdx","destroy","close","closed","length","open","Promise","o","h","signal","then","resolve","broadcast","invoke","getAvailableClient","isBusy","push","race","isArray","warn","transferList","reject","Error","on","all","map","openPorts","openPort","test","numClients"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{handlesGroup as e}from\"../handleUtils.js\";import t from\"../Logger.js\";import{isPromiseLike as s,throwIfAborted as i}from\"../promiseUtils.js\";import n from\"./RemoteClient.js\";const r=t.getLogger(\"esri.core.workers.Connection\");class l{constructor(){this._clients=new Array,this._clientPromises=new Array,this._clientIdx=0}destroy(){this.close()}get closed(){return!this._clients||!this._clients.length}open(e,t){return new Promise(((r,l)=>{let o=!0;const h=e=>{i(t.signal),o&&(o=!1,e())};this._clients.length=e.length,this._clientPromises.length=e.length;for(let i=0;i<e.length;++i){const o=e[i];s(o)?this._clientPromises[i]=o.then((e=>(this._clients[i]=new n(e,t),h(r),this._clients[i])),(()=>(h(l),null))):(this._clients[i]=new n(o,t),this._clientPromises[i]=Promise.resolve(this._clients[i]),h(r))}}))}broadcast(e,t,s){const i=new Array(this._clientPromises.length);for(let n=0;n<this._clientPromises.length;++n){const r=this._clientPromises[n];i[n]=r.then((i=>i.invoke(e,t,s)))}return i}close(){for(const e of this._clientPromises)e.then((e=>e.close()));this._clients.length=0,this._clientPromises.length=0}getAvailableClient(){let e;for(let t=0;t<this._clients.length;++t){const s=this._clients[t];if(s){if(!s.isBusy())return Promise.resolve(s)}else e=e||[],e.push(this._clientPromises[t])}return e?Promise.race(e):(this._clientIdx=(this._clientIdx+1)%this._clients.length,Promise.resolve(this._clients[this._clientIdx]))}invoke(e,t,s){let i=null;if(Array.isArray(s)?(r.warn(\"invoke()\",\"The transferList parameter is deprecated, use the options object instead\"),i={transferList:s}):i=s,this.closed)return Promise.reject(new Error(\"Connection closed\"));return this.getAvailableClient().then((s=>s.invoke(e,t,i)))}on(t,s){return Promise.all(this._clientPromises).then((()=>e(this._clients.map((e=>e.on(t,s))))))}openPorts(){return new Promise((e=>{const t=new Array(this._clientPromises.length);let s=t.length;for(let i=0;i<this._clientPromises.length;++i){this._clientPromises[i].then((n=>{t[i]=n.openPort(),0==--s&&e(t)}))}}))}get test(){return{numClients:this._clients.length}}}export default l;\n"]},"metadata":{},"sourceType":"module"}