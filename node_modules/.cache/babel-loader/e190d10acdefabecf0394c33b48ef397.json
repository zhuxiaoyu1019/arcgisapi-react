{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isNone as e, isSome as t } from \"../../../../core/maybe.js\";\nimport r from \"../../../../core/PooledArray.js\";\nimport { Program as s } from \"../../../webgl/Program.js\";\nimport { webglDebugEnabled as i } from \"../../../webgl/RenderingContext.js\";\n\nclass n extends s {\n  constructor(e, t, s) {\n    super(e, t.generateSource(\"vertex\"), t.generateSource(\"fragment\"), s), this._textures = new Map(), this._freeTextureUnits = new r({\n      deallocator: null\n    }), this._fragmentUniforms = i() ? t.fragmentUniforms.entries : null;\n  }\n\n  stop() {\n    this._textures.clear(), this._freeTextureUnits.clear();\n  }\n\n  bindTexture(t, r) {\n    if (e(t) || null == t.glName) {\n      const e = this._textures.get(r);\n\n      return e && (this._context.bindTexture(null, e.unit), this._freeTextureUnit(e), this._textures.delete(r)), null;\n    }\n\n    let s = this._textures.get(r);\n\n    return null == s ? (s = this._allocTextureUnit(t), this._textures.set(r, s)) : s.texture = t, this._context.useProgram(this), this.setUniform1i(r, s.unit), this._context.bindTexture(t, s.unit), s.unit;\n  }\n\n  rebindTextures() {\n    this._context.useProgram(this), this._textures.forEach((e, t) => {\n      this._context.bindTexture(e.texture, e.unit), this.setUniform1i(t, e.unit);\n    }), t(this._fragmentUniforms) && this._fragmentUniforms.forEach(e => {\n      if ((\"sampler2D\" === e.type || \"samplerCube\" === e.type) && !this._textures.has(e.name)) throw new Error(`Texture sampler ${e.name} has no bound texture`);\n    });\n  }\n\n  _allocTextureUnit(e) {\n    return {\n      texture: e,\n      unit: 0 === this._freeTextureUnits.length ? this._textures.size : this._freeTextureUnits.pop()\n    };\n  }\n\n  _freeTextureUnit(e) {\n    this._freeTextureUnits.push(e.unit);\n  }\n\n}\n\nexport { n as Program };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/lib/Program.js"],"names":["isNone","e","isSome","t","r","Program","s","webglDebugEnabled","i","n","constructor","generateSource","_textures","Map","_freeTextureUnits","deallocator","_fragmentUniforms","fragmentUniforms","entries","stop","clear","bindTexture","glName","get","_context","unit","_freeTextureUnit","delete","_allocTextureUnit","set","texture","useProgram","setUniform1i","rebindTextures","forEach","type","has","name","Error","length","size","pop","push"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isNone as e,isSome as t}from\"../../../../core/maybe.js\";import r from\"../../../../core/PooledArray.js\";import{Program as s}from\"../../../webgl/Program.js\";import{webglDebugEnabled as i}from\"../../../webgl/RenderingContext.js\";class n extends s{constructor(e,t,s){super(e,t.generateSource(\"vertex\"),t.generateSource(\"fragment\"),s),this._textures=new Map,this._freeTextureUnits=new r({deallocator:null}),this._fragmentUniforms=i()?t.fragmentUniforms.entries:null}stop(){this._textures.clear(),this._freeTextureUnits.clear()}bindTexture(t,r){if(e(t)||null==t.glName){const e=this._textures.get(r);return e&&(this._context.bindTexture(null,e.unit),this._freeTextureUnit(e),this._textures.delete(r)),null}let s=this._textures.get(r);return null==s?(s=this._allocTextureUnit(t),this._textures.set(r,s)):s.texture=t,this._context.useProgram(this),this.setUniform1i(r,s.unit),this._context.bindTexture(t,s.unit),s.unit}rebindTextures(){this._context.useProgram(this),this._textures.forEach(((e,t)=>{this._context.bindTexture(e.texture,e.unit),this.setUniform1i(t,e.unit)})),t(this._fragmentUniforms)&&this._fragmentUniforms.forEach((e=>{if((\"sampler2D\"===e.type||\"samplerCube\"===e.type)&&!this._textures.has(e.name))throw new Error(`Texture sampler ${e.name} has no bound texture`)}))}_allocTextureUnit(e){return{texture:e,unit:0===this._freeTextureUnits.length?this._textures.size:this._freeTextureUnits.pop()}}_freeTextureUnit(e){this._freeTextureUnits.push(e.unit)}}export{n as Program};\n"]},"metadata":{},"sourceType":"module"}