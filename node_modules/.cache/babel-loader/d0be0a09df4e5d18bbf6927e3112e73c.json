{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../../../core/Error.js\";\nimport { isNone as t, get as r, isSome as n } from \"../../../../core/maybe.js\";\nimport { pt2px as s } from \"../../../../core/screenUtils.js\";\nimport { a as o } from \"../../../../chunks/vec2f64.js\";\nimport { isCalloutSupport as i } from \"../../../../symbols/callouts/calloutUtils.js\";\nimport { perObjectElevationAligner as a } from \"./ElevationAligners.js\";\nimport { SymbolUpdateType as l, needsElevationUpdates2D as c } from \"./elevationAlignmentUtils.js\";\nimport { ElevationContext as d } from \"./ElevationContext.js\";\nimport { Graphics3DObject3DGraphicLayer as h } from \"./Graphics3DObject3DGraphicLayer.js\";\nimport { Graphics3DSymbolLayer as f } from \"./Graphics3DSymbolLayer.js\";\nimport { validateSymbolLayerSize as m, namedAnchorToHUDMaterialAnchorPos as p } from \"./graphicUtils.js\";\nimport { placePointOnGeometry as u, createStageObjectForHUD as g, extendPointGraphicElevationContext as y } from \"./pointUtils.js\";\nimport x from \"../../webgl-engine/lib/GeometryUtil.js\";\nimport { TextRenderParameters as v } from \"../../webgl-engine/lib/TextRenderParameters.js\";\nimport b from \"../../webgl-engine/lib/TextTexture.js\";\nimport { HUDMaterial as O } from \"../../webgl-engine/materials/HUDMaterial.js\";\nconst P = [0, 0, 1];\n\nclass E extends f {\n  constructor(e, t, r, n) {\n    super(e, t, r, n), this._elevationOptions = {\n      supportsOffsetAdjustment: !0,\n      supportsOnTheGround: !1\n    }, this.ensureDrapedStatus(!1);\n  }\n\n  async doLoad() {\n    if (!this._drivenProperties.size) {\n      const t = m(this.symbolLayer.size);\n      if (t) throw new e(\"graphics3dtextsymbollayer:invalid-size\", t);\n    }\n\n    this._createTextRenderParameters();\n  }\n\n  _createTextRenderParameters() {\n    const e = this._context.layerView.view.pixelRatio;\n    this._textRenderParameters = v.fromSymbol(this.symbolLayer, e);\n  }\n\n  destroy() {\n    super.destroy();\n  }\n\n  createGraphics3DGraphic(e) {\n    const r = e.graphic,\n          n = u(r.geometry);\n    if (t(n)) return this.logger.warn(`unsupported geometry type for text symbol: ${r.geometry.type}`), null;\n    const s = this.symbolLayer.text;\n    if (!s) return null;\n    const o = i(this.symbol) && this.symbol.hasVisibleVerticalOffset() ? this.symbol : null;\n    return this._createAs3DShape(r, n, s, o);\n  }\n\n  createLabel(e, r, n, s) {\n    const o = e.graphic,\n          i = u(o.geometry);\n    if (t(i)) return this.logger.warn(`unsupported geometry type for label: ${o.geometry.type}`), null;\n    const a = r.text;\n    return !a || /^\\s+$/.test(a) ? null : this._createAs3DShape(o, i, a, r, r, n, s);\n  }\n\n  setGraphicElevationContext(e, t, r = 0) {\n    const n = super.setGraphicElevationContext(e, t);\n    return n.addOffsetRenderUnits(r), n;\n  }\n\n  layerOpacityChanged() {\n    return this.logger.warn(\"layer opacity change not yet implemented in Graphics3DTextSymbolLayer\"), !1;\n  }\n\n  layerElevationInfoChanged(e, t) {\n    return S(e, t, (e, t) => {\n      this.updateGraphicElevationContext(t, e);\n    }), l.UPDATE;\n  }\n\n  slicePlaneEnabledChanged(e, t) {\n    return S(e, t, e => {\n      for (const t of e.stageObject.geometryRecords) t.material.setParameterValues({\n        slicePlaneEnabled: this._context.slicePlaneEnabled\n      });\n    }), !0;\n  }\n\n  physicalBasedRenderingChanged() {\n    return !0;\n  }\n\n  pixelRatioChanged() {\n    return !1;\n  }\n\n  updateGraphicElevationContext(e, t) {\n    this.setGraphicElevationContext(e, t.elevationContext, t.metadata.elevationOffset), t.needsElevationUpdates = c(t.elevationContext.mode) || \"absolute-height\" === t.elevationContext.mode;\n  }\n\n  _defaultElevationInfoNoZ() {\n    return w;\n  }\n\n  _createAs3DShape(e, i, l, f, m = j, u, v) {\n    const E = this.setGraphicElevationContext(e, new d(), m.elevationOffset),\n          S = \"polyline\" === r(e.geometry, \"type\"),\n          w = e.uid,\n          _ = this._context.stage.renderView.renderingContext,\n          C = m.anchor in p ? m.anchor : \"center\",\n          G = p[C],\n          L = t(v) ? new b(_, l, this._textRenderParameters) : null,\n          D = {\n      occlusionTest: !0,\n      screenOffset: m.screenOffset,\n      anchorPos: G,\n      polygonOffset: !0,\n      color: [1, 1, 1, 1],\n      centerOffsetUnits: m.centerOffsetUnits,\n      debugDrawBorder: m.debugDrawBorder,\n      drawInSecondSlot: !0\n    };\n\n    if (n(L) && (D.textureId = L.id, D.texCoordScale = L.texcoordScale), n(v) && (D.textureId = v.id), n(f) && n(f.verticalOffset)) {\n      const {\n        screenLength: e,\n        minWorldLength: t,\n        maxWorldLength: r\n      } = f.verticalOffset;\n      D.verticalOffset = {\n        screenLength: s(e),\n        minWorldLength: t || 0,\n        maxWorldLength: null != r ? r : 1 / 0\n      };\n    }\n\n    if (this._context.screenSizePerspectiveEnabled) {\n      const {\n        screenSizePerspectiveSettings: e,\n        screenSizePerspectiveSettingsLabels: t\n      } = this._context.sharedResources;\n      D.screenSizePerspective = t.overridePadding(this._textRenderParameters.haloSize), D.screenSizePerspectiveAlignment = e;\n    }\n\n    let U;\n\n    if (S && (D.shaderPolygonOffset = 1e-4), D.slicePlaneEnabled = this._context.slicePlaneEnabled, n(u)) {\n      const e = JSON.stringify(D);\n      U = u.get(e), t(U) && (U = new O(D), u.add(e, U));\n    } else U = new O(D);\n\n    const R = [U],\n          z = m.translation,\n          T = n(L) ? [L.displayWidth, L.displayHeight] : [0, 0],\n          A = m.centerOffset,\n          W = P,\n          I = [0, 0],\n          V = [x.createPointGeometry(W, z, null, T, A, I, null)],\n          B = this._context.layer.uid,\n          H = g(this._context, i, V, R, null, null, E, B, w);\n    if (null === H) return null;\n    const $ = a,\n          N = new h(this, H.object, V, t(u) ? R : null, n(L) ? [L] : null, $, E);\n    N.alignedSampledElevation = H.sampledElevation, N.needsElevationUpdates = c(E.mode) || \"absolute-height\" === E.mode;\n    const {\n      displayWidth: k,\n      displayHeight: J\n    } = n(L) ? L : m;\n\n    N.getScreenSize = (e = o()) => (e[0] = k, e[1] = J, e);\n\n    const M = {\n      labelText: l,\n      elevationOffset: m.elevationOffset\n    };\n    return N.metadata = M, y(N, i, this._context.elevationProvider), N;\n  }\n\n}\n\nfunction S(e, t, r) {\n  e && e.forEach(e => {\n    const s = t(e);\n    n(s) && r(s, e.graphic);\n  });\n}\n\nconst w = {\n  mode: \"relative-to-ground\",\n  offset: 0\n},\n      j = {\n  text: null,\n  translation: [0, 0, 0],\n  elevationOffset: 0,\n  centerOffset: [0, 0, 0, 1],\n  screenOffset: [0, 0],\n  anchor: \"center\",\n  verticalOffset: null,\n  centerOffsetUnits: null,\n  debugDrawBorder: !1,\n  displayWidth: 0,\n  displayHeight: 0\n};\nexport default E;\nexport { E as Graphics3DTextSymbolLayer };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DTextSymbolLayer.js"],"names":["e","isNone","t","get","r","isSome","n","pt2px","s","a","o","isCalloutSupport","i","perObjectElevationAligner","SymbolUpdateType","l","needsElevationUpdates2D","c","ElevationContext","d","Graphics3DObject3DGraphicLayer","h","Graphics3DSymbolLayer","f","validateSymbolLayerSize","m","namedAnchorToHUDMaterialAnchorPos","p","placePointOnGeometry","u","createStageObjectForHUD","g","extendPointGraphicElevationContext","y","x","TextRenderParameters","v","b","HUDMaterial","O","P","E","constructor","_elevationOptions","supportsOffsetAdjustment","supportsOnTheGround","ensureDrapedStatus","doLoad","_drivenProperties","size","symbolLayer","_createTextRenderParameters","_context","layerView","view","pixelRatio","_textRenderParameters","fromSymbol","destroy","createGraphics3DGraphic","graphic","geometry","logger","warn","type","text","symbol","hasVisibleVerticalOffset","_createAs3DShape","createLabel","test","setGraphicElevationContext","addOffsetRenderUnits","layerOpacityChanged","layerElevationInfoChanged","S","updateGraphicElevationContext","UPDATE","slicePlaneEnabledChanged","stageObject","geometryRecords","material","setParameterValues","slicePlaneEnabled","physicalBasedRenderingChanged","pixelRatioChanged","elevationContext","metadata","elevationOffset","needsElevationUpdates","mode","_defaultElevationInfoNoZ","w","j","uid","_","stage","renderView","renderingContext","C","anchor","G","L","D","occlusionTest","screenOffset","anchorPos","polygonOffset","color","centerOffsetUnits","debugDrawBorder","drawInSecondSlot","textureId","id","texCoordScale","texcoordScale","verticalOffset","screenLength","minWorldLength","maxWorldLength","screenSizePerspectiveEnabled","screenSizePerspectiveSettings","screenSizePerspectiveSettingsLabels","sharedResources","screenSizePerspective","overridePadding","haloSize","screenSizePerspectiveAlignment","U","shaderPolygonOffset","JSON","stringify","add","R","z","translation","T","displayWidth","displayHeight","A","centerOffset","W","I","V","createPointGeometry","B","layer","H","$","N","object","alignedSampledElevation","sampledElevation","k","J","getScreenSize","M","labelText","elevationProvider","forEach","offset","Graphics3DTextSymbolLayer"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import{isNone as t,get as r,isSome as n}from\"../../../../core/maybe.js\";import{pt2px as s}from\"../../../../core/screenUtils.js\";import{a as o}from\"../../../../chunks/vec2f64.js\";import{isCalloutSupport as i}from\"../../../../symbols/callouts/calloutUtils.js\";import{perObjectElevationAligner as a}from\"./ElevationAligners.js\";import{SymbolUpdateType as l,needsElevationUpdates2D as c}from\"./elevationAlignmentUtils.js\";import{ElevationContext as d}from\"./ElevationContext.js\";import{Graphics3DObject3DGraphicLayer as h}from\"./Graphics3DObject3DGraphicLayer.js\";import{Graphics3DSymbolLayer as f}from\"./Graphics3DSymbolLayer.js\";import{validateSymbolLayerSize as m,namedAnchorToHUDMaterialAnchorPos as p}from\"./graphicUtils.js\";import{placePointOnGeometry as u,createStageObjectForHUD as g,extendPointGraphicElevationContext as y}from\"./pointUtils.js\";import x from\"../../webgl-engine/lib/GeometryUtil.js\";import{TextRenderParameters as v}from\"../../webgl-engine/lib/TextRenderParameters.js\";import b from\"../../webgl-engine/lib/TextTexture.js\";import{HUDMaterial as O}from\"../../webgl-engine/materials/HUDMaterial.js\";const P=[0,0,1];class E extends f{constructor(e,t,r,n){super(e,t,r,n),this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1},this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const t=m(this.symbolLayer.size);if(t)throw new e(\"graphics3dtextsymbollayer:invalid-size\",t)}this._createTextRenderParameters()}_createTextRenderParameters(){const e=this._context.layerView.view.pixelRatio;this._textRenderParameters=v.fromSymbol(this.symbolLayer,e)}destroy(){super.destroy()}createGraphics3DGraphic(e){const r=e.graphic,n=u(r.geometry);if(t(n))return this.logger.warn(`unsupported geometry type for text symbol: ${r.geometry.type}`),null;const s=this.symbolLayer.text;if(!s)return null;const o=i(this.symbol)&&this.symbol.hasVisibleVerticalOffset()?this.symbol:null;return this._createAs3DShape(r,n,s,o)}createLabel(e,r,n,s){const o=e.graphic,i=u(o.geometry);if(t(i))return this.logger.warn(`unsupported geometry type for label: ${o.geometry.type}`),null;const a=r.text;return!a||/^\\s+$/.test(a)?null:this._createAs3DShape(o,i,a,r,r,n,s)}setGraphicElevationContext(e,t,r=0){const n=super.setGraphicElevationContext(e,t);return n.addOffsetRenderUnits(r),n}layerOpacityChanged(){return this.logger.warn(\"layer opacity change not yet implemented in Graphics3DTextSymbolLayer\"),!1}layerElevationInfoChanged(e,t){return S(e,t,((e,t)=>{this.updateGraphicElevationContext(t,e)})),l.UPDATE}slicePlaneEnabledChanged(e,t){return S(e,t,(e=>{for(const t of e.stageObject.geometryRecords)t.material.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled})})),!0}physicalBasedRenderingChanged(){return!0}pixelRatioChanged(){return!1}updateGraphicElevationContext(e,t){this.setGraphicElevationContext(e,t.elevationContext,t.metadata.elevationOffset),t.needsElevationUpdates=c(t.elevationContext.mode)||\"absolute-height\"===t.elevationContext.mode}_defaultElevationInfoNoZ(){return w}_createAs3DShape(e,i,l,f,m=j,u,v){const E=this.setGraphicElevationContext(e,new d,m.elevationOffset),S=\"polyline\"===r(e.geometry,\"type\"),w=e.uid,_=this._context.stage.renderView.renderingContext,C=m.anchor in p?m.anchor:\"center\",G=p[C],L=t(v)?new b(_,l,this._textRenderParameters):null,D={occlusionTest:!0,screenOffset:m.screenOffset,anchorPos:G,polygonOffset:!0,color:[1,1,1,1],centerOffsetUnits:m.centerOffsetUnits,debugDrawBorder:m.debugDrawBorder,drawInSecondSlot:!0};if(n(L)&&(D.textureId=L.id,D.texCoordScale=L.texcoordScale),n(v)&&(D.textureId=v.id),n(f)&&n(f.verticalOffset)){const{screenLength:e,minWorldLength:t,maxWorldLength:r}=f.verticalOffset;D.verticalOffset={screenLength:s(e),minWorldLength:t||0,maxWorldLength:null!=r?r:1/0}}if(this._context.screenSizePerspectiveEnabled){const{screenSizePerspectiveSettings:e,screenSizePerspectiveSettingsLabels:t}=this._context.sharedResources;D.screenSizePerspective=t.overridePadding(this._textRenderParameters.haloSize),D.screenSizePerspectiveAlignment=e}let U;if(S&&(D.shaderPolygonOffset=1e-4),D.slicePlaneEnabled=this._context.slicePlaneEnabled,n(u)){const e=JSON.stringify(D);U=u.get(e),t(U)&&(U=new O(D),u.add(e,U))}else U=new O(D);const R=[U],z=m.translation,T=n(L)?[L.displayWidth,L.displayHeight]:[0,0],A=m.centerOffset,W=P,I=[0,0],V=[x.createPointGeometry(W,z,null,T,A,I,null)],B=this._context.layer.uid,H=g(this._context,i,V,R,null,null,E,B,w);if(null===H)return null;const $=a,N=new h(this,H.object,V,t(u)?R:null,n(L)?[L]:null,$,E);N.alignedSampledElevation=H.sampledElevation,N.needsElevationUpdates=c(E.mode)||\"absolute-height\"===E.mode;const{displayWidth:k,displayHeight:J}=n(L)?L:m;N.getScreenSize=(e=o())=>(e[0]=k,e[1]=J,e);const M={labelText:l,elevationOffset:m.elevationOffset};return N.metadata=M,y(N,i,this._context.elevationProvider),N}}function S(e,t,r){e&&e.forEach((e=>{const s=t(e);n(s)&&r(s,e.graphic)}))}const w={mode:\"relative-to-ground\",offset:0},j={text:null,translation:[0,0,0],elevationOffset:0,centerOffset:[0,0,0,1],screenOffset:[0,0],anchor:\"center\",verticalOffset:null,centerOffsetUnits:null,debugDrawBorder:!1,displayWidth:0,displayHeight:0};export default E;export{E as Graphics3DTextSymbolLayer};\n"]},"metadata":{},"sourceType":"module"}