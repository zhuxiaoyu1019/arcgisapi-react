{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../../../core/Error.js\";\nimport t from \"../../OptimizedFeature.js\";\nimport n from \"../../OptimizedGeometry.js\";\nconst o = {\n  LineString: \"esriGeometryPolyline\",\n  MultiLineString: \"esriGeometryPolyline\",\n  MultiPoint: \"esriGeometryMultipoint\",\n  Point: \"esriGeometryPoint\",\n  Polygon: \"esriGeometryPolygon\",\n  MultiPolygon: \"esriGeometryPolygon\"\n};\n\nfunction r(e) {\n  return o[e];\n}\n\nfunction* i(e) {\n  switch (e.type) {\n    case \"Feature\":\n      yield e;\n      break;\n\n    case \"FeatureCollection\":\n      for (const t of e.features) t && (yield t);\n\n  }\n}\n\nfunction* s(e) {\n  if (!e) return null;\n\n  switch (e.type) {\n    case \"Point\":\n      yield e.coordinates;\n      break;\n\n    case \"LineString\":\n    case \"MultiPoint\":\n      yield* e.coordinates;\n      break;\n\n    case \"MultiLineString\":\n    case \"Polygon\":\n      for (const t of e.coordinates) yield* t;\n\n      break;\n\n    case \"MultiPolygon\":\n      for (const t of e.coordinates) for (const e of t) yield* e;\n\n  }\n}\n\nfunction* c(e, o = {}) {\n  const {\n    geometryType: i,\n    objectIdField: s\n  } = o;\n\n  for (const u of e) {\n    var c;\n    const {\n      geometry: e,\n      properties: l,\n      id: f\n    } = u;\n    if (e && r(e.type) !== i) continue;\n    const a = l || {};\n    let y = null != (c = a[s]) ? c : null;\n    s && null != f && !a[s] && (a[s] = y = f);\n    const d = new t(e ? p(new n(), e, o) : null, a, null, y);\n    yield d;\n  }\n}\n\nfunction u(e) {\n  for (const t of e) if (t.length > 2) return !0;\n\n  return !1;\n}\n\nfunction l(e) {\n  return !a(e);\n}\n\nfunction f(e) {\n  return a(e);\n}\n\nfunction a(e) {\n  let t = 0;\n\n  for (let n = 0; n < e.length; n++) {\n    const o = e[n],\n          r = e[(n + 1) % e.length];\n    t += o[0] * r[1] - r[0] * o[1];\n  }\n\n  return t <= 0;\n}\n\nfunction y(e) {\n  const t = e[0],\n        n = e[e.length - 1];\n  return t[0] === n[0] && t[1] === n[1] && t[2] === n[2] || e.push(t), e;\n}\n\nfunction p(e, t, n) {\n  switch (t.type) {\n    case \"LineString\":\n      return d(e, t, n);\n\n    case \"MultiLineString\":\n      return g(e, t, n);\n\n    case \"MultiPoint\":\n      return m(e, t, n);\n\n    case \"MultiPolygon\":\n      return h(e, t, n);\n\n    case \"Point\":\n      return w(e, t, n);\n\n    case \"Polygon\":\n      return P(e, t, n);\n  }\n}\n\nfunction d(e, t, n) {\n  return S(e, t.coordinates, n), e;\n}\n\nfunction g(e, t, n) {\n  for (const o of t.coordinates) S(e, o, n);\n\n  return e;\n}\n\nfunction m(e, t, n) {\n  return S(e, t.coordinates, n), e;\n}\n\nfunction h(e, t, n) {\n  for (const o of t.coordinates) {\n    b(e, o[0], n);\n\n    for (let t = 1; t < o.length; t++) j(e, o[t], n);\n  }\n\n  return e;\n}\n\nfunction w(e, t, n) {\n  return G(e, t.coordinates, n), e;\n}\n\nfunction P(e, t, n) {\n  const o = t.coordinates;\n  b(e, o[0], n);\n\n  for (let r = 1; r < o.length; r++) j(e, o[r], n);\n\n  return e;\n}\n\nfunction b(e, t, n) {\n  const o = y(t);\n  l(o) ? F(e, o, n) : S(e, o, n);\n}\n\nfunction j(e, t, n) {\n  const o = y(t);\n  f(o) ? F(e, o, n) : S(e, o, n);\n}\n\nfunction S(e, t, n) {\n  for (const o of t) G(e, o, n);\n\n  e.lengths.push(t.length);\n}\n\nfunction F(e, t, n) {\n  for (let o = t.length - 1; o >= 0; o--) G(e, t[o], n);\n\n  e.lengths.push(t.length);\n}\n\nfunction G(e, t, n) {\n  const [o, r, i] = t;\n  e.coords.push(o, r), n.hasZ && e.coords.push(i || 0);\n}\n\nfunction M(e) {\n  switch (typeof e) {\n    case \"string\":\n      return \"esriFieldTypeString\";\n\n    case \"number\":\n      return \"esriFieldTypeDouble\";\n\n    default:\n      return \"unknown\";\n  }\n}\n\nfunction I(t) {\n  if (!t) throw new e(\"geojson-layer:empty\", \"GeoJSON data is empty\");\n  if (\"Feature\" !== t.type && \"FeatureCollection\" !== t.type) throw new e(\"geojson-layer:unsupported-geojson-object\", \"missing or not supported GeoJSON object type\", {\n    data: t\n  });\n  const {\n    crs: n\n  } = t;\n  if (!n) return;\n  const o = \"string\" == typeof n ? n : \"name\" === n.type ? n.properties.name : \"EPSG\" === n.type ? n.properties.code : null,\n        r = new RegExp(\".*(CRS84H?|4326)$\", \"i\");\n  if (!o || !r.test(o)) throw new e(\"geojson-layer:unsupported-crs\", \"unsupported GeoJSON 'crs' member\", {\n    crs: n\n  });\n}\n\nfunction T(e, t = {}) {\n  const n = [],\n        o = new Set(),\n        c = new Set();\n  let l,\n      f = !1,\n      a = Number.NEGATIVE_INFINITY,\n      y = null,\n      p = !1,\n      {\n    geometryType: d = null\n  } = t,\n      g = !1;\n\n  for (const h of i(e)) {\n    const {\n      geometry: e,\n      properties: t,\n      id: i\n    } = h;\n\n    if (!e || (d || (d = r(e.type)), r(e.type) === d)) {\n      if (!f) {\n        f = u(s(e));\n      }\n\n      if (p || (p = null != i, p && (l = typeof i, \"number\" === l && (y = Object.keys(t).filter(e => t[e] === i)))), p && \"number\" === l && null != i && (a = Math.max(a, i), y.length > 1 ? y = y.filter(e => t[e] === i) : 1 === y.length && (y = t[y[0]] === i ? y : [])), !g && t) {\n        let e = !0;\n\n        for (const r in t) {\n          if (o.has(r)) continue;\n          const i = t[r];\n\n          if (null == i) {\n            e = !1, c.add(r);\n            continue;\n          }\n\n          const s = M(i);\n          \"unknown\" !== s ? (c.delete(r), o.add(r), n.push({\n            name: r,\n            alias: r,\n            type: s\n          })) : c.add(r);\n        }\n\n        g = e;\n      }\n    }\n  }\n\n  const m = y && 1 === y.length && y[0] || null;\n  if (m) for (const r of n) r.name === m && (r.type = \"esriFieldTypeOID\");\n  return {\n    fields: n,\n    geometryType: d,\n    hasZ: f,\n    maxObjectId: Math.max(0, a),\n    objectIdFieldName: m,\n    objectIdFieldType: l,\n    unknownFields: Array.from(c)\n  };\n}\n\nfunction k(e, t) {\n  return Array.from(c(i(e), t));\n}\n\nexport { k as createOptimizedFeatures, r as getGeometryType, T as inferLayerProperties, I as validateGeoJSON };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js"],"names":["e","t","n","o","LineString","MultiLineString","MultiPoint","Point","Polygon","MultiPolygon","r","i","type","features","s","coordinates","c","geometryType","objectIdField","u","geometry","properties","l","id","f","a","y","d","p","length","push","g","m","h","w","P","S","b","j","G","F","lengths","coords","hasZ","M","I","data","crs","name","code","RegExp","test","T","Set","Number","NEGATIVE_INFINITY","Object","keys","filter","Math","max","has","add","delete","alias","fields","maxObjectId","objectIdFieldName","objectIdFieldType","unknownFields","Array","from","k","createOptimizedFeatures","getGeometryType","inferLayerProperties","validateGeoJSON"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../OptimizedFeature.js\";import n from\"../../OptimizedGeometry.js\";const o={LineString:\"esriGeometryPolyline\",MultiLineString:\"esriGeometryPolyline\",MultiPoint:\"esriGeometryMultipoint\",Point:\"esriGeometryPoint\",Polygon:\"esriGeometryPolygon\",MultiPolygon:\"esriGeometryPolygon\"};function r(e){return o[e]}function*i(e){switch(e.type){case\"Feature\":yield e;break;case\"FeatureCollection\":for(const t of e.features)t&&(yield t)}}function*s(e){if(!e)return null;switch(e.type){case\"Point\":yield e.coordinates;break;case\"LineString\":case\"MultiPoint\":yield*e.coordinates;break;case\"MultiLineString\":case\"Polygon\":for(const t of e.coordinates)yield*t;break;case\"MultiPolygon\":for(const t of e.coordinates)for(const e of t)yield*e}}function*c(e,o={}){const{geometryType:i,objectIdField:s}=o;for(const u of e){var c;const{geometry:e,properties:l,id:f}=u;if(e&&r(e.type)!==i)continue;const a=l||{};let y=null!=(c=a[s])?c:null;s&&null!=f&&!a[s]&&(a[s]=y=f);const d=new t(e?p(new n,e,o):null,a,null,y);yield d}}function u(e){for(const t of e)if(t.length>2)return!0;return!1}function l(e){return!a(e)}function f(e){return a(e)}function a(e){let t=0;for(let n=0;n<e.length;n++){const o=e[n],r=e[(n+1)%e.length];t+=o[0]*r[1]-r[0]*o[1]}return t<=0}function y(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function p(e,t,n){switch(t.type){case\"LineString\":return d(e,t,n);case\"MultiLineString\":return g(e,t,n);case\"MultiPoint\":return m(e,t,n);case\"MultiPolygon\":return h(e,t,n);case\"Point\":return w(e,t,n);case\"Polygon\":return P(e,t,n)}}function d(e,t,n){return S(e,t.coordinates,n),e}function g(e,t,n){for(const o of t.coordinates)S(e,o,n);return e}function m(e,t,n){return S(e,t.coordinates,n),e}function h(e,t,n){for(const o of t.coordinates){b(e,o[0],n);for(let t=1;t<o.length;t++)j(e,o[t],n)}return e}function w(e,t,n){return G(e,t.coordinates,n),e}function P(e,t,n){const o=t.coordinates;b(e,o[0],n);for(let r=1;r<o.length;r++)j(e,o[r],n);return e}function b(e,t,n){const o=y(t);l(o)?F(e,o,n):S(e,o,n)}function j(e,t,n){const o=y(t);f(o)?F(e,o,n):S(e,o,n)}function S(e,t,n){for(const o of t)G(e,o,n);e.lengths.push(t.length)}function F(e,t,n){for(let o=t.length-1;o>=0;o--)G(e,t[o],n);e.lengths.push(t.length)}function G(e,t,n){const[o,r,i]=t;e.coords.push(o,r),n.hasZ&&e.coords.push(i||0)}function M(e){switch(typeof e){case\"string\":return\"esriFieldTypeString\";case\"number\":return\"esriFieldTypeDouble\";default:return\"unknown\"}}function I(t){if(!t)throw new e(\"geojson-layer:empty\",\"GeoJSON data is empty\");if(\"Feature\"!==t.type&&\"FeatureCollection\"!==t.type)throw new e(\"geojson-layer:unsupported-geojson-object\",\"missing or not supported GeoJSON object type\",{data:t});const{crs:n}=t;if(!n)return;const o=\"string\"==typeof n?n:\"name\"===n.type?n.properties.name:\"EPSG\"===n.type?n.properties.code:null,r=new RegExp(\".*(CRS84H?|4326)$\",\"i\");if(!o||!r.test(o))throw new e(\"geojson-layer:unsupported-crs\",\"unsupported GeoJSON 'crs' member\",{crs:n})}function T(e,t={}){const n=[],o=new Set,c=new Set;let l,f=!1,a=Number.NEGATIVE_INFINITY,y=null,p=!1,{geometryType:d=null}=t,g=!1;for(const h of i(e)){const{geometry:e,properties:t,id:i}=h;if(!e||(d||(d=r(e.type)),r(e.type)===d)){if(!f){f=u(s(e))}if(p||(p=null!=i,p&&(l=typeof i,\"number\"===l&&(y=Object.keys(t).filter((e=>t[e]===i))))),p&&\"number\"===l&&null!=i&&(a=Math.max(a,i),y.length>1?y=y.filter((e=>t[e]===i)):1===y.length&&(y=t[y[0]]===i?y:[])),!g&&t){let e=!0;for(const r in t){if(o.has(r))continue;const i=t[r];if(null==i){e=!1,c.add(r);continue}const s=M(i);\"unknown\"!==s?(c.delete(r),o.add(r),n.push({name:r,alias:r,type:s})):c.add(r)}g=e}}}const m=y&&1===y.length&&y[0]||null;if(m)for(const r of n)r.name===m&&(r.type=\"esriFieldTypeOID\");return{fields:n,geometryType:d,hasZ:f,maxObjectId:Math.max(0,a),objectIdFieldName:m,objectIdFieldType:l,unknownFields:Array.from(c)}}function k(e,t){return Array.from(c(i(e),t))}export{k as createOptimizedFeatures,r as getGeometryType,T as inferLayerProperties,I as validateGeoJSON};\n"]},"metadata":{},"sourceType":"module"}