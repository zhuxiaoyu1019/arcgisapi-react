{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { workerMessages as e } from \"../../kernel.js\";\nimport t from \"../Error.js\";\nimport o from \"../Logger.js\";\nimport { onAbortOrThrow as s, createAbortController as r, isPromiseLike as n, isAbortError as a } from \"../promiseUtils.js\";\nimport { newJobId as i, receiveMessage as l, toInvokeError as d, postMessage as h, MessageType as c } from \"./utils.js\";\nimport { createWorker as p } from \"./workerFactory.js\";\nconst b = o.getLogger(\"esri.core.workers\"),\n      {\n  ABORT: m,\n  INVOKE: _,\n  OPEN: u,\n  OPENED: g,\n  RESPONSE: j\n} = c;\n\nclass f {\n  constructor(e, t) {\n    this._outJobs = new Map(), this._inJobs = new Map(), this.worker = e, this.id = t, e.addEventListener(\"message\", this._onMessage.bind(this)), e.addEventListener(\"error\", e => {\n      e.preventDefault(), b.error(e);\n    });\n  }\n\n  static async create(e) {\n    const t = await p();\n    return new f(t, e);\n  }\n\n  terminate() {\n    this.worker.terminate();\n  }\n\n  async open(e, t = {}) {\n    const {\n      signal: o\n    } = t,\n          r = i();\n    return new Promise((t, n) => {\n      const a = {\n        resolve: t,\n        reject: n,\n        abortHandle: s(o, () => {\n          this._outJobs.delete(r), this._post({\n            type: m,\n            jobId: r\n          });\n        })\n      };\n      this._outJobs.set(r, a), this._post({\n        type: u,\n        jobId: r,\n        modulePath: e\n      });\n    });\n  }\n\n  _onMessage(e) {\n    const t = l(e);\n    if (t) switch (t.type) {\n      case g:\n        this._onOpenedMessage(t);\n\n        break;\n\n      case j:\n        this._onResponseMessage(t);\n\n        break;\n\n      case m:\n        this._onAbortMessage(t);\n\n        break;\n\n      case _:\n        this._onInvokeMessage(t);\n\n    }\n  }\n\n  _onAbortMessage(e) {\n    const t = this._inJobs,\n          o = e.jobId,\n          s = t.get(o);\n    s && (s.controller && s.controller.abort(), t.delete(o));\n  }\n\n  _onInvokeMessage(t) {\n    const {\n      methodName: o,\n      jobId: s,\n      data: i,\n      abortable: l\n    } = t,\n          h = l ? r() : null,\n          c = this._inJobs,\n          p = e[o];\n    let b;\n\n    try {\n      if (\"function\" != typeof p) throw new TypeError(`${o} is not a function`);\n      b = p.call(null, i, {\n        signal: h ? h.signal : null\n      });\n    } catch (m) {\n      return void this._post({\n        type: j,\n        jobId: s,\n        error: d(m)\n      });\n    }\n\n    n(b) ? (c.set(s, {\n      controller: h,\n      promise: b\n    }), b.then(e => {\n      c.has(s) && (c.delete(s), this._post({\n        type: j,\n        jobId: s\n      }, e));\n    }, e => {\n      c.has(s) && (c.delete(s), e || (e = {\n        message: \"Error encountered at method\" + o\n      }), a(e) || this._post({\n        type: j,\n        jobId: s,\n        error: d(e || {\n          message: `Error encountered at method ${o}`\n        })\n      }));\n    })) : this._post({\n      type: j,\n      jobId: s\n    }, b);\n  }\n\n  _onOpenedMessage(e) {\n    var t;\n\n    const {\n      jobId: o,\n      data: s\n    } = e,\n          r = this._outJobs.get(o);\n\n    r && (this._outJobs.delete(o), null == (t = r.abortHandle) || t.remove(), r.resolve(s));\n  }\n\n  _onResponseMessage(e) {\n    var o;\n\n    const {\n      jobId: s,\n      error: r,\n      data: n\n    } = e,\n          a = this._outJobs.get(s);\n\n    a && (this._outJobs.delete(s), null == (o = a.abortHandle) || o.remove(), r ? a.reject(t.fromJSON(JSON.parse(r))) : a.resolve(n));\n  }\n\n  _post(e, t, o) {\n    return h(this.worker, e, t, o);\n  }\n\n}\n\nexport default f;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/core/workers/WorkerOwner.js"],"names":["workerMessages","e","t","o","onAbortOrThrow","s","createAbortController","r","isPromiseLike","n","isAbortError","a","newJobId","i","receiveMessage","l","toInvokeError","d","postMessage","h","MessageType","c","createWorker","p","b","getLogger","ABORT","m","INVOKE","_","OPEN","u","OPENED","g","RESPONSE","j","f","constructor","_outJobs","Map","_inJobs","worker","id","addEventListener","_onMessage","bind","preventDefault","error","create","terminate","open","signal","Promise","resolve","reject","abortHandle","delete","_post","type","jobId","set","modulePath","_onOpenedMessage","_onResponseMessage","_onAbortMessage","_onInvokeMessage","get","controller","abort","methodName","data","abortable","TypeError","call","promise","then","has","message","remove","fromJSON","JSON","parse"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{workerMessages as e}from\"../../kernel.js\";import t from\"../Error.js\";import o from\"../Logger.js\";import{onAbortOrThrow as s,createAbortController as r,isPromiseLike as n,isAbortError as a}from\"../promiseUtils.js\";import{newJobId as i,receiveMessage as l,toInvokeError as d,postMessage as h,MessageType as c}from\"./utils.js\";import{createWorker as p}from\"./workerFactory.js\";const b=o.getLogger(\"esri.core.workers\"),{ABORT:m,INVOKE:_,OPEN:u,OPENED:g,RESPONSE:j}=c;class f{constructor(e,t){this._outJobs=new Map,this._inJobs=new Map,this.worker=e,this.id=t,e.addEventListener(\"message\",this._onMessage.bind(this)),e.addEventListener(\"error\",(e=>{e.preventDefault(),b.error(e)}))}static async create(e){const t=await p();return new f(t,e)}terminate(){this.worker.terminate()}async open(e,t={}){const{signal:o}=t,r=i();return new Promise(((t,n)=>{const a={resolve:t,reject:n,abortHandle:s(o,(()=>{this._outJobs.delete(r),this._post({type:m,jobId:r})}))};this._outJobs.set(r,a),this._post({type:u,jobId:r,modulePath:e})}))}_onMessage(e){const t=l(e);if(t)switch(t.type){case g:this._onOpenedMessage(t);break;case j:this._onResponseMessage(t);break;case m:this._onAbortMessage(t);break;case _:this._onInvokeMessage(t)}}_onAbortMessage(e){const t=this._inJobs,o=e.jobId,s=t.get(o);s&&(s.controller&&s.controller.abort(),t.delete(o))}_onInvokeMessage(t){const{methodName:o,jobId:s,data:i,abortable:l}=t,h=l?r():null,c=this._inJobs,p=e[o];let b;try{if(\"function\"!=typeof p)throw new TypeError(`${o} is not a function`);b=p.call(null,i,{signal:h?h.signal:null})}catch(m){return void this._post({type:j,jobId:s,error:d(m)})}n(b)?(c.set(s,{controller:h,promise:b}),b.then((e=>{c.has(s)&&(c.delete(s),this._post({type:j,jobId:s},e))}),(e=>{c.has(s)&&(c.delete(s),e||(e={message:\"Error encountered at method\"+o}),a(e)||this._post({type:j,jobId:s,error:d(e||{message:`Error encountered at method ${o}`})}))}))):this._post({type:j,jobId:s},b)}_onOpenedMessage(e){var t;const{jobId:o,data:s}=e,r=this._outJobs.get(o);r&&(this._outJobs.delete(o),null==(t=r.abortHandle)||t.remove(),r.resolve(s))}_onResponseMessage(e){var o;const{jobId:s,error:r,data:n}=e,a=this._outJobs.get(s);a&&(this._outJobs.delete(s),null==(o=a.abortHandle)||o.remove(),r?a.reject(t.fromJSON(JSON.parse(r))):a.resolve(n))}_post(e,t,o){return h(this.worker,e,t,o)}}export default f;\n"]},"metadata":{},"sourceType":"module"}