{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isPowerOfTwo as t } from \"../../core/mathUtils.js\";\nimport { isSome as e } from \"../../core/maybe.js\";\nimport { ResourceType as i } from \"./enums.js\";\nimport a from \"./capabilities/isWebGL2Context.js\";\nconst s = 4;\n\nclass r {\n  constructor(t, e, a = null) {\n    this._context = t, this.type = \"texture\", this._glName = null, this._descriptor = void 0, this._samplingModeDirty = !1, this._wrapModeDirty = !1, t.instanceCounter.increment(i.Texture, this), this._descriptor = {\n      target: 3553,\n      samplingMode: 9729,\n      wrapMode: 10497,\n      flipped: !1,\n      hasMipmap: !1,\n      isOpaque: !1,\n      unpackAlignment: 4,\n      preMultiplyAlpha: !1,\n      ...e\n    }, this.setData(a);\n  }\n\n  get glName() {\n    return this._glName;\n  }\n\n  get descriptor() {\n    return this._descriptor;\n  }\n\n  dispose() {\n    this._context.gl && this._glName && (this._context.unbindTextureAllUnits(this), this._context.gl.deleteTexture(this._glName), this._glName = null, this._context.instanceCounter.decrement(i.Texture, this));\n  }\n\n  release() {\n    this.dispose();\n  }\n\n  resize(t, e) {\n    const i = this._descriptor;\n    i.width === t && i.height === e || (i.width = t, i.height = e, this.setData(null));\n  }\n\n  setData(t) {\n    if (!this._context || !this._context.gl) return;\n    const i = this._context.gl;\n    this._glName || (this._glName = i.createTexture()), void 0 === t && (t = null), null === t && (this._descriptor.width = this._descriptor.width || s, this._descriptor.height = this._descriptor.height || s);\n\n    const a = this._context.bindTexture(this, r.TEXTURE_UNIT_FOR_UPDATES),\n          p = this._descriptor;\n\n    r._validateTexture(this._context, p), i.pixelStorei(i.UNPACK_ALIGNMENT, p.unpackAlignment), i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL, p.flipped ? 1 : 0), i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL, p.preMultiplyAlpha ? 1 : 0);\n    const n = p.pixelFormat;\n    let h = p.internalFormat ? p.internalFormat : n;\n\n    if (t instanceof ImageData || t instanceof HTMLImageElement || t instanceof HTMLCanvasElement || t instanceof HTMLVideoElement) {\n      let e = t.width,\n          a = t.height;\n      t instanceof HTMLVideoElement && (e = t.videoWidth, a = t.videoHeight), p.width && p.height, i.texImage2D(i.TEXTURE_2D, 0, h, n, p.dataType, t), p.hasMipmap && this.generateMipmap(), void 0 === p.width && (p.width = e), void 0 === p.height && (p.height = a);\n    } else {\n      null != p.width && null != p.height || console.error(\"Width and height must be specified!\"), i.DEPTH24_STENCIL8 && h === i.DEPTH_STENCIL && (h = i.DEPTH24_STENCIL8);\n      let a = p.width,\n          s = p.height;\n\n      if (o(t)) {\n        const e = Math.round(Math.log(Math.max(a, s)) / Math.LN2) + 1;\n        p.hasMipmap = p.hasMipmap && e === t.levels.length;\n\n        for (let r = 0;; ++r) {\n          const e = t.levels[Math.min(r, t.levels.length - 1)];\n          if (i.compressedTexImage2D(i.TEXTURE_2D, r, h, a, s, 0, e), 1 === a && 1 === s || !p.hasMipmap) break;\n          a = Math.max(1, a >> 1), s = Math.max(1, s >> 1);\n        }\n      } else if (e(t)) i.texImage2D(i.TEXTURE_2D, 0, h, a, s, 0, n, p.dataType, t), p.hasMipmap && this.generateMipmap();else for (let t = 0; i.texImage2D(i.TEXTURE_2D, t, h, a, s, 0, n, p.dataType, null), (1 !== a || 1 !== s) && p.hasMipmap; ++t) a = Math.max(1, a >> 1), s = Math.max(1, s >> 1);\n    }\n\n    r._applySamplingMode(i, this._descriptor), r._applyWrapMode(i, this._descriptor), r._applyAnisotropicFilteringParameters(this._context, this._descriptor), this._context.bindTexture(a, r.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  updateData(t, e, i, a, s, o) {\n    o || console.error(\"An attempt to use uninitialized data!\"), this._glName || console.error(\"An attempt to update uninitialized texture!\");\n\n    const p = this._context.gl,\n          n = this._descriptor,\n          h = this._context.bindTexture(this, r.TEXTURE_UNIT_FOR_UPDATES);\n\n    (e < 0 || i < 0 || a > n.width || s > n.height || e + a > n.width || i + s > n.height) && console.error(\"An attempt to update out of bounds of the texture!\"), p.pixelStorei(p.UNPACK_ALIGNMENT, n.unpackAlignment), p.pixelStorei(p.UNPACK_FLIP_Y_WEBGL, n.flipped ? 1 : 0), p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL, n.preMultiplyAlpha ? 1 : 0), o instanceof ImageData || o instanceof HTMLImageElement || o instanceof HTMLCanvasElement || o instanceof HTMLVideoElement ? p.texSubImage2D(p.TEXTURE_2D, t, e, i, n.pixelFormat, n.dataType, o) : p.texSubImage2D(p.TEXTURE_2D, t, e, i, a, s, n.pixelFormat, n.dataType, o), this._context.bindTexture(h, r.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  generateMipmap() {\n    const t = this._descriptor;\n    t.hasMipmap || (t.hasMipmap = !0, this._samplingModeDirty = !0, r._validateTexture(this._context, t)), 9729 === t.samplingMode ? (this._samplingModeDirty = !0, t.samplingMode = 9985) : 9728 === t.samplingMode && (this._samplingModeDirty = !0, t.samplingMode = 9984);\n\n    const e = this._context.bindTexture(this, r.TEXTURE_UNIT_FOR_UPDATES),\n          i = this._context.gl;\n\n    i.generateMipmap(i.TEXTURE_2D), this._context.bindTexture(e, r.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  setSamplingMode(t) {\n    t !== this._descriptor.samplingMode && (this._descriptor.samplingMode = t, this._samplingModeDirty = !0);\n  }\n\n  setWrapMode(t) {\n    t !== this._descriptor.wrapMode && (this._descriptor.wrapMode = t, r._validateTexture(this._context, this._descriptor), this._wrapModeDirty = !0);\n  }\n\n  applyChanges() {\n    const t = this._context.gl,\n          e = this._descriptor;\n    this._samplingModeDirty && (r._applySamplingMode(t, e), this._samplingModeDirty = !1), this._wrapModeDirty && (r._applyWrapMode(t, e), this._wrapModeDirty = !1);\n  }\n\n  static _validateTexture(e, i) {\n    (i.width < 0 || i.height < 0) && console.error(\"Negative dimension parameters are not allowed!\");\n    const s = t(i.width) && t(i.height);\n    a(e.gl) || s || (\"number\" == typeof i.wrapMode ? 33071 !== i.wrapMode && console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\") : 33071 === i.wrapMode.s && 33071 === i.wrapMode.t || console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"), i.hasMipmap && console.error(\"Mipmapping requires power-of-two textures!\"));\n  }\n\n  static _applySamplingMode(t, e) {\n    let i = e.samplingMode,\n        a = e.samplingMode;\n    9985 === i || 9987 === i ? (i = 9729, e.hasMipmap || (a = 9729)) : 9984 !== i && 9986 !== i || (i = 9728, e.hasMipmap || (a = 9728)), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, i), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, a);\n  }\n\n  static _applyWrapMode(t, e) {\n    \"number\" == typeof e.wrapMode ? (t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, e.wrapMode), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, e.wrapMode)) : (t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, e.wrapMode.s), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, e.wrapMode.t));\n  }\n\n  static _applyAnisotropicFilteringParameters(t, e) {\n    var i;\n    const a = t.capabilities.textureFilterAnisotropic;\n    if (!a) return;\n    const s = t.gl;\n    s.texParameterf(s.TEXTURE_2D, a.TEXTURE_MAX_ANISOTROPY, null != (i = e.maxAnisotropy) ? i : 1);\n  }\n\n}\n\nfunction o(t) {\n  return e(t) && \"type\" in t && \"compressed\" === t.type;\n}\n\nr.TEXTURE_UNIT_FOR_UPDATES = 0;\nexport default r;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/webgl/Texture.js"],"names":["isPowerOfTwo","t","isSome","e","ResourceType","i","a","s","r","constructor","_context","type","_glName","_descriptor","_samplingModeDirty","_wrapModeDirty","instanceCounter","increment","Texture","target","samplingMode","wrapMode","flipped","hasMipmap","isOpaque","unpackAlignment","preMultiplyAlpha","setData","glName","descriptor","dispose","gl","unbindTextureAllUnits","deleteTexture","decrement","release","resize","width","height","createTexture","bindTexture","TEXTURE_UNIT_FOR_UPDATES","p","_validateTexture","pixelStorei","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","n","pixelFormat","h","internalFormat","ImageData","HTMLImageElement","HTMLCanvasElement","HTMLVideoElement","videoWidth","videoHeight","texImage2D","TEXTURE_2D","dataType","generateMipmap","console","error","DEPTH24_STENCIL8","DEPTH_STENCIL","o","Math","round","log","max","LN2","levels","length","min","compressedTexImage2D","_applySamplingMode","_applyWrapMode","_applyAnisotropicFilteringParameters","updateData","texSubImage2D","setSamplingMode","setWrapMode","applyChanges","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","capabilities","textureFilterAnisotropic","texParameterf","TEXTURE_MAX_ANISOTROPY","maxAnisotropy"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isPowerOfTwo as t}from\"../../core/mathUtils.js\";import{isSome as e}from\"../../core/maybe.js\";import{ResourceType as i}from\"./enums.js\";import a from\"./capabilities/isWebGL2Context.js\";const s=4;class r{constructor(t,e,a=null){this._context=t,this.type=\"texture\",this._glName=null,this._descriptor=void 0,this._samplingModeDirty=!1,this._wrapModeDirty=!1,t.instanceCounter.increment(i.Texture,this),this._descriptor={target:3553,samplingMode:9729,wrapMode:10497,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,...e},this.setData(a)}get glName(){return this._glName}get descriptor(){return this._descriptor}dispose(){this._context.gl&&this._glName&&(this._context.unbindTextureAllUnits(this),this._context.gl.deleteTexture(this._glName),this._glName=null,this._context.instanceCounter.decrement(i.Texture,this))}release(){this.dispose()}resize(t,e){const i=this._descriptor;i.width===t&&i.height===e||(i.width=t,i.height=e,this.setData(null))}setData(t){if(!this._context||!this._context.gl)return;const i=this._context.gl;this._glName||(this._glName=i.createTexture()),void 0===t&&(t=null),null===t&&(this._descriptor.width=this._descriptor.width||s,this._descriptor.height=this._descriptor.height||s);const a=this._context.bindTexture(this,r.TEXTURE_UNIT_FOR_UPDATES),p=this._descriptor;r._validateTexture(this._context,p),i.pixelStorei(i.UNPACK_ALIGNMENT,p.unpackAlignment),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,p.flipped?1:0),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,p.preMultiplyAlpha?1:0);const n=p.pixelFormat;let h=p.internalFormat?p.internalFormat:n;if(t instanceof ImageData||t instanceof HTMLImageElement||t instanceof HTMLCanvasElement||t instanceof HTMLVideoElement){let e=t.width,a=t.height;t instanceof HTMLVideoElement&&(e=t.videoWidth,a=t.videoHeight),p.width&&p.height,i.texImage2D(i.TEXTURE_2D,0,h,n,p.dataType,t),p.hasMipmap&&this.generateMipmap(),void 0===p.width&&(p.width=e),void 0===p.height&&(p.height=a)}else{null!=p.width&&null!=p.height||console.error(\"Width and height must be specified!\"),i.DEPTH24_STENCIL8&&h===i.DEPTH_STENCIL&&(h=i.DEPTH24_STENCIL8);let a=p.width,s=p.height;if(o(t)){const e=Math.round(Math.log(Math.max(a,s))/Math.LN2)+1;p.hasMipmap=p.hasMipmap&&e===t.levels.length;for(let r=0;;++r){const e=t.levels[Math.min(r,t.levels.length-1)];if(i.compressedTexImage2D(i.TEXTURE_2D,r,h,a,s,0,e),1===a&&1===s||!p.hasMipmap)break;a=Math.max(1,a>>1),s=Math.max(1,s>>1)}}else if(e(t))i.texImage2D(i.TEXTURE_2D,0,h,a,s,0,n,p.dataType,t),p.hasMipmap&&this.generateMipmap();else for(let t=0;i.texImage2D(i.TEXTURE_2D,t,h,a,s,0,n,p.dataType,null),(1!==a||1!==s)&&p.hasMipmap;++t)a=Math.max(1,a>>1),s=Math.max(1,s>>1)}r._applySamplingMode(i,this._descriptor),r._applyWrapMode(i,this._descriptor),r._applyAnisotropicFilteringParameters(this._context,this._descriptor),this._context.bindTexture(a,r.TEXTURE_UNIT_FOR_UPDATES)}updateData(t,e,i,a,s,o){o||console.error(\"An attempt to use uninitialized data!\"),this._glName||console.error(\"An attempt to update uninitialized texture!\");const p=this._context.gl,n=this._descriptor,h=this._context.bindTexture(this,r.TEXTURE_UNIT_FOR_UPDATES);(e<0||i<0||a>n.width||s>n.height||e+a>n.width||i+s>n.height)&&console.error(\"An attempt to update out of bounds of the texture!\"),p.pixelStorei(p.UNPACK_ALIGNMENT,n.unpackAlignment),p.pixelStorei(p.UNPACK_FLIP_Y_WEBGL,n.flipped?1:0),p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.preMultiplyAlpha?1:0),o instanceof ImageData||o instanceof HTMLImageElement||o instanceof HTMLCanvasElement||o instanceof HTMLVideoElement?p.texSubImage2D(p.TEXTURE_2D,t,e,i,n.pixelFormat,n.dataType,o):p.texSubImage2D(p.TEXTURE_2D,t,e,i,a,s,n.pixelFormat,n.dataType,o),this._context.bindTexture(h,r.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const t=this._descriptor;t.hasMipmap||(t.hasMipmap=!0,this._samplingModeDirty=!0,r._validateTexture(this._context,t)),9729===t.samplingMode?(this._samplingModeDirty=!0,t.samplingMode=9985):9728===t.samplingMode&&(this._samplingModeDirty=!0,t.samplingMode=9984);const e=this._context.bindTexture(this,r.TEXTURE_UNIT_FOR_UPDATES),i=this._context.gl;i.generateMipmap(i.TEXTURE_2D),this._context.bindTexture(e,r.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(t){t!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=t,this._samplingModeDirty=!0)}setWrapMode(t){t!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=t,r._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const t=this._context.gl,e=this._descriptor;this._samplingModeDirty&&(r._applySamplingMode(t,e),this._samplingModeDirty=!1),this._wrapModeDirty&&(r._applyWrapMode(t,e),this._wrapModeDirty=!1)}static _validateTexture(e,i){(i.width<0||i.height<0)&&console.error(\"Negative dimension parameters are not allowed!\");const s=t(i.width)&&t(i.height);a(e.gl)||s||(\"number\"==typeof i.wrapMode?33071!==i.wrapMode&&console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"):33071===i.wrapMode.s&&33071===i.wrapMode.t||console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"),i.hasMipmap&&console.error(\"Mipmapping requires power-of-two textures!\"))}static _applySamplingMode(t,e){let i=e.samplingMode,a=e.samplingMode;9985===i||9987===i?(i=9729,e.hasMipmap||(a=9729)):9984!==i&&9986!==i||(i=9728,e.hasMipmap||(a=9728)),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,i),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,a)}static _applyWrapMode(t,e){\"number\"==typeof e.wrapMode?(t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,e.wrapMode),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,e.wrapMode)):(t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,e.wrapMode.s),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,e.wrapMode.t))}static _applyAnisotropicFilteringParameters(t,e){var i;const a=t.capabilities.textureFilterAnisotropic;if(!a)return;const s=t.gl;s.texParameterf(s.TEXTURE_2D,a.TEXTURE_MAX_ANISOTROPY,null!=(i=e.maxAnisotropy)?i:1)}}function o(t){return e(t)&&\"type\"in t&&\"compressed\"===t.type}r.TEXTURE_UNIT_FOR_UPDATES=0;export default r;\n"]},"metadata":{},"sourceType":"module"}