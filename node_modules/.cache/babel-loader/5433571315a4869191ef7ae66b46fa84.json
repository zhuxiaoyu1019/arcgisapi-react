{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { assert as e } from \"./assert.js\";\nimport { Character as t } from \"./character.js\";\nimport { Messages as i } from \"./messages.js\";\n\nfunction s(e) {\n  return \"0123456789abcdef\".indexOf(e.toLowerCase());\n}\n\nfunction n(e) {\n  return \"01234567\".indexOf(e);\n}\n\nclass r {\n  constructor(e, t) {\n    this.source = e, this.errorHandler = t, this.trackComment = !1, this.isModule = !1, this.length = e.length, this.index = 0, this.lineNumber = e.length > 0 ? 1 : 0, this.lineStart = 0, this.curlyStack = [];\n  }\n\n  saveState() {\n    return {\n      index: this.index,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      curlyStack: this.curlyStack.slice()\n    };\n  }\n\n  restoreState(e) {\n    this.index = e.index, this.lineNumber = e.lineNumber, this.lineStart = e.lineStart, this.curlyStack = e.curlyStack;\n  }\n\n  eof() {\n    return this.index >= this.length;\n  }\n\n  throwUnexpectedToken(e = i.UnexpectedTokenIllegal) {\n    return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, e);\n  }\n\n  tolerateUnexpectedToken(e = i.UnexpectedTokenIllegal) {\n    this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, e);\n  }\n\n  skipSingleLineComment(e) {\n    let i,\n        s,\n        n = [];\n\n    for (this.trackComment && (n = [], i = this.index - e, s = {\n      start: {\n        line: this.lineNumber,\n        column: this.index - this.lineStart - e\n      },\n      end: {}\n    }); !this.eof();) {\n      const r = this.source.charCodeAt(this.index);\n\n      if (++this.index, t.isLineTerminator(r)) {\n        if (this.trackComment) {\n          s.end = {\n            line: this.lineNumber,\n            column: this.index - this.lineStart - 1\n          };\n          const t = {\n            multiLine: !1,\n            slice: [i + e, this.index - 1],\n            range: [i, this.index - 1],\n            loc: s\n          };\n          n.push(t);\n        }\n\n        return 13 === r && 10 === this.source.charCodeAt(this.index) && ++this.index, ++this.lineNumber, this.lineStart = this.index, n;\n      }\n    }\n\n    if (this.trackComment) {\n      s.end = {\n        line: this.lineNumber,\n        column: this.index - this.lineStart\n      };\n      const t = {\n        multiLine: !1,\n        slice: [i + e, this.index],\n        range: [i, this.index],\n        loc: s\n      };\n      n.push(t);\n    }\n\n    return n;\n  }\n\n  skipMultiLineComment() {\n    let e,\n        i,\n        s = [];\n\n    for (this.trackComment && (s = [], e = this.index - 2, i = {\n      start: {\n        line: this.lineNumber,\n        column: this.index - this.lineStart - 2\n      },\n      end: {}\n    }); !this.eof();) {\n      const n = this.source.charCodeAt(this.index);\n      if (t.isLineTerminator(n)) 13 === n && 10 === this.source.charCodeAt(this.index + 1) && ++this.index, ++this.lineNumber, ++this.index, this.lineStart = this.index;else if (42 === n) {\n        if (47 === this.source.charCodeAt(this.index + 1)) {\n          if (this.index += 2, this.trackComment) {\n            i.end = {\n              line: this.lineNumber,\n              column: this.index - this.lineStart\n            };\n            const t = {\n              multiLine: !0,\n              slice: [e + 2, this.index - 2],\n              range: [e, this.index],\n              loc: i\n            };\n            s.push(t);\n          }\n\n          return s;\n        }\n\n        ++this.index;\n      } else ++this.index;\n    }\n\n    if (this.trackComment) {\n      i.end = {\n        line: this.lineNumber,\n        column: this.index - this.lineStart\n      };\n      const t = {\n        multiLine: !0,\n        slice: [e + 2, this.index],\n        range: [e, this.index],\n        loc: i\n      };\n      s.push(t);\n    }\n\n    return this.tolerateUnexpectedToken(), s;\n  }\n\n  scanComments() {\n    let e;\n    this.trackComment && (e = []);\n    let i = 0 === this.index;\n\n    for (; !this.eof();) {\n      let s = this.source.charCodeAt(this.index);\n      if (t.isWhiteSpace(s)) ++this.index;else if (t.isLineTerminator(s)) ++this.index, 13 === s && 10 === this.source.charCodeAt(this.index) && ++this.index, ++this.lineNumber, this.lineStart = this.index, i = !0;else if (47 === s) {\n        if (s = this.source.charCodeAt(this.index + 1), 47 === s) {\n          this.index += 2;\n          const t = this.skipSingleLineComment(2);\n          this.trackComment && (e = e.concat(t)), i = !0;\n        } else {\n          if (42 !== s) break;\n          {\n            this.index += 2;\n            const t = this.skipMultiLineComment();\n            this.trackComment && (e = e.concat(t));\n          }\n        }\n      } else if (i && 45 === s) {\n        if (45 !== this.source.charCodeAt(this.index + 1) || 62 !== this.source.charCodeAt(this.index + 2)) break;\n        {\n          this.index += 3;\n          const t = this.skipSingleLineComment(3);\n          this.trackComment && (e = e.concat(t));\n        }\n      } else {\n        if (60 !== s || this.isModule) break;\n        if (\"!--\" !== this.source.slice(this.index + 1, this.index + 4)) break;\n        {\n          this.index += 4;\n          const t = this.skipSingleLineComment(4);\n          this.trackComment && (e = e.concat(t));\n        }\n      }\n    }\n\n    return e;\n  }\n\n  isFutureReservedWord(e) {\n    return !1;\n  }\n\n  isStrictModeReservedWord(e) {\n    return !1;\n  }\n\n  isRestrictedWord(e) {\n    return !1;\n  }\n\n  isKeyword(e) {\n    switch ((e = e.toLowerCase()).length) {\n      case 2:\n        return \"if\" === e || \"in\" === e;\n\n      case 3:\n        return \"var\" === e || \"for\" === e;\n\n      case 4:\n        return \"else\" === e;\n\n      case 5:\n        return \"break\" === e;\n\n      case 6:\n        return \"return\" === e;\n\n      case 8:\n        return \"function\" === e || \"continue\" === e;\n\n      default:\n        return !1;\n    }\n  }\n\n  codePointAt(e) {\n    let t = this.source.charCodeAt(e);\n\n    if (t >= 55296 && t <= 56319) {\n      const i = this.source.charCodeAt(e + 1);\n\n      if (i >= 56320 && i <= 57343) {\n        t = 1024 * (t - 55296) + i - 56320 + 65536;\n      }\n    }\n\n    return t;\n  }\n\n  scanHexEscape(e) {\n    const i = \"u\" === e ? 4 : 2;\n    let n = 0;\n\n    for (let r = 0; r < i; ++r) {\n      if (this.eof() || !t.isHexDigit(this.source.charCodeAt(this.index))) return null;\n      n = 16 * n + s(this.source[this.index++]);\n    }\n\n    return String.fromCharCode(n);\n  }\n\n  scanUnicodeCodePointEscape() {\n    let e = this.source[this.index],\n        i = 0;\n\n    for (\"}\" === e && this.throwUnexpectedToken(); !this.eof() && (e = this.source[this.index++], t.isHexDigit(e.charCodeAt(0)));) i = 16 * i + s(e);\n\n    return (i > 1114111 || \"}\" !== e) && this.throwUnexpectedToken(), t.fromCodePoint(i);\n  }\n\n  getIdentifier() {\n    const e = this.index++;\n\n    for (; !this.eof();) {\n      const i = this.source.charCodeAt(this.index);\n      if (92 === i) return this.index = e, this.getComplexIdentifier();\n      if (i >= 55296 && i < 57343) return this.index = e, this.getComplexIdentifier();\n      if (!t.isIdentifierPart(i)) break;\n      ++this.index;\n    }\n\n    return this.source.slice(e, this.index);\n  }\n\n  getComplexIdentifier() {\n    let e,\n        i = this.codePointAt(this.index),\n        s = t.fromCodePoint(i);\n\n    for (this.index += s.length, 92 === i && (117 !== this.source.charCodeAt(this.index) && this.throwUnexpectedToken(), ++this.index, \"{\" === this.source[this.index] ? (++this.index, e = this.scanUnicodeCodePointEscape()) : (e = this.scanHexEscape(\"u\"), null !== e && \"\\\\\" !== e && t.isIdentifierStart(e.charCodeAt(0)) || this.throwUnexpectedToken()), s = e); !this.eof() && (i = this.codePointAt(this.index), t.isIdentifierPart(i));) e = t.fromCodePoint(i), s += e, this.index += e.length, 92 === i && (s = s.substr(0, s.length - 1), 117 !== this.source.charCodeAt(this.index) && this.throwUnexpectedToken(), ++this.index, \"{\" === this.source[this.index] ? (++this.index, e = this.scanUnicodeCodePointEscape()) : (e = this.scanHexEscape(\"u\"), null !== e && \"\\\\\" !== e && t.isIdentifierPart(e.charCodeAt(0)) || this.throwUnexpectedToken()), s += e);\n\n    return s;\n  }\n\n  octalToDecimal(e) {\n    let i = \"0\" !== e,\n        s = n(e);\n    return !this.eof() && t.isOctalDigit(this.source.charCodeAt(this.index)) && (i = !0, s = 8 * s + n(this.source[this.index++]), \"0123\".indexOf(e) >= 0 && !this.eof() && t.isOctalDigit(this.source.charCodeAt(this.index)) && (s = 8 * s + n(this.source[this.index++]))), {\n      code: s,\n      octal: i\n    };\n  }\n\n  scanIdentifier() {\n    let e;\n    const t = this.index,\n          s = 92 === this.source.charCodeAt(t) ? this.getComplexIdentifier() : this.getIdentifier();\n\n    if (e = 1 === s.length ? 3 : this.isKeyword(s) ? 4 : \"null\" === s.toLowerCase() ? 5 : \"true\" === s.toLowerCase() || \"false\" === s.toLowerCase() ? 1 : 3, 3 !== e && t + s.length !== this.index) {\n      const e = this.index;\n      this.index = t, this.tolerateUnexpectedToken(i.InvalidEscapedReservedWord), this.index = e;\n    }\n\n    return {\n      type: e,\n      value: s,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start: t,\n      end: this.index\n    };\n  }\n\n  scanPunctuator() {\n    const e = this.index;\n    let t = this.source[this.index];\n\n    switch (t) {\n      case \"(\":\n      case \"{\":\n        \"{\" === t && this.curlyStack.push(\"{\"), ++this.index;\n        break;\n\n      case \".\":\n        ++this.index, \".\" === this.source[this.index] && \".\" === this.source[this.index + 1] && (this.index += 2, t = \"...\");\n        break;\n\n      case \"}\":\n        ++this.index, this.curlyStack.pop();\n        break;\n\n      case \")\":\n      case \";\":\n      case \",\":\n      case \"[\":\n      case \"]\":\n      case \":\":\n      case \"?\":\n      case \"~\":\n        ++this.index;\n        break;\n\n      default:\n        t = this.source.substr(this.index, 4), \">>>=\" === t ? this.index += 4 : (t = t.substr(0, 3), \"===\" === t || \"!==\" === t || \">>>\" === t || \"<<=\" === t || \">>=\" === t || \"**=\" === t ? this.index += 3 : (t = t.substr(0, 2), \"&&\" === t || \"||\" === t || \"==\" === t || \"!=\" === t || \"+=\" === t || \"-=\" === t || \"*=\" === t || \"/=\" === t || \"++\" === t || \"--\" === t || \"<<\" === t || \">>\" === t || \"&=\" === t || \"|=\" === t || \"^=\" === t || \"%=\" === t || \"<=\" === t || \">=\" === t || \"=>\" === t || \"**\" === t ? this.index += 2 : (t = this.source[this.index], \"<>=!+-*%&|^/\".indexOf(t) >= 0 && ++this.index)));\n    }\n\n    return this.index === e && this.throwUnexpectedToken(), {\n      type: 7,\n      value: t,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start: e,\n      end: this.index\n    };\n  }\n\n  scanHexLiteral(e) {\n    let i = \"\";\n\n    for (; !this.eof() && t.isHexDigit(this.source.charCodeAt(this.index));) i += this.source[this.index++];\n\n    return 0 === i.length && this.throwUnexpectedToken(), t.isIdentifierStart(this.source.charCodeAt(this.index)) && this.throwUnexpectedToken(), {\n      type: 6,\n      value: parseInt(\"0x\" + i, 16),\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start: e,\n      end: this.index\n    };\n  }\n\n  scanBinaryLiteral(e) {\n    let i,\n        s = \"\";\n\n    for (; !this.eof() && (i = this.source[this.index], \"0\" === i || \"1\" === i);) s += this.source[this.index++];\n\n    return 0 === s.length && this.throwUnexpectedToken(), this.eof() || (i = this.source.charCodeAt(this.index), (t.isIdentifierStart(i) || t.isDecimalDigit(i)) && this.throwUnexpectedToken()), {\n      type: 6,\n      value: parseInt(s, 2),\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start: e,\n      end: this.index\n    };\n  }\n\n  scanOctalLiteral(e, i) {\n    let s = \"\",\n        n = !1;\n\n    for (t.isOctalDigit(e.charCodeAt(0)) ? (n = !0, s = \"0\" + this.source[this.index++]) : ++this.index; !this.eof() && t.isOctalDigit(this.source.charCodeAt(this.index));) s += this.source[this.index++];\n\n    return n || 0 !== s.length || this.throwUnexpectedToken(), (t.isIdentifierStart(this.source.charCodeAt(this.index)) || t.isDecimalDigit(this.source.charCodeAt(this.index))) && this.throwUnexpectedToken(), {\n      type: 6,\n      value: parseInt(s, 8),\n      octal: n,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start: i,\n      end: this.index\n    };\n  }\n\n  scanNumericLiteral() {\n    const i = this.index;\n    let s = this.source[i];\n    e(t.isDecimalDigit(s.charCodeAt(0)) || \".\" === s, \"Numeric literal must start with a decimal digit or a decimal point\");\n    let n = \"\";\n\n    if (\".\" !== s) {\n      if (n = this.source[this.index++], s = this.source[this.index], \"0\" === n) {\n        if (\"x\" === s || \"X\" === s) return ++this.index, this.scanHexLiteral(i);\n        if (\"b\" === s || \"B\" === s) return ++this.index, this.scanBinaryLiteral(i);\n        if (\"o\" === s || \"O\" === s) return this.scanOctalLiteral(s, i);\n      }\n\n      for (; t.isDecimalDigit(this.source.charCodeAt(this.index));) n += this.source[this.index++];\n\n      s = this.source[this.index];\n    }\n\n    if (\".\" === s) {\n      for (n += this.source[this.index++]; t.isDecimalDigit(this.source.charCodeAt(this.index));) n += this.source[this.index++];\n\n      s = this.source[this.index];\n    }\n\n    if (\"e\" === s || \"E\" === s) if (n += this.source[this.index++], s = this.source[this.index], \"+\" !== s && \"-\" !== s || (n += this.source[this.index++]), t.isDecimalDigit(this.source.charCodeAt(this.index))) for (; t.isDecimalDigit(this.source.charCodeAt(this.index));) n += this.source[this.index++];else this.throwUnexpectedToken();\n    return t.isIdentifierStart(this.source.charCodeAt(this.index)) && this.throwUnexpectedToken(), {\n      type: 6,\n      value: parseFloat(n),\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start: i,\n      end: this.index\n    };\n  }\n\n  scanStringLiteral() {\n    const s = this.index;\n    let n = this.source[s];\n    e(\"'\" === n || '\"' === n, \"String literal must starts with a quote\"), ++this.index;\n    let r = !1,\n        h = \"\";\n\n    for (; !this.eof();) {\n      let e = this.source[this.index++];\n\n      if (e === n) {\n        n = \"\";\n        break;\n      }\n\n      if (\"\\\\\" === e) {\n        if (e = this.source[this.index++], e && t.isLineTerminator(e.charCodeAt(0))) ++this.lineNumber, \"\\r\" === e && \"\\n\" === this.source[this.index] && ++this.index, this.lineStart = this.index;else switch (e) {\n          case \"u\":\n            if (\"{\" === this.source[this.index]) ++this.index, h += this.scanUnicodeCodePointEscape();else {\n              const t = this.scanHexEscape(e);\n              null === t && this.throwUnexpectedToken(), h += t;\n            }\n            break;\n\n          case \"x\":\n            {\n              const t = this.scanHexEscape(e);\n              null === t && this.throwUnexpectedToken(i.InvalidHexEscapeSequence), h += t;\n              break;\n            }\n\n          case \"n\":\n            h += \"\\n\";\n            break;\n\n          case \"r\":\n            h += \"\\r\";\n            break;\n\n          case \"t\":\n            h += \"\\t\";\n            break;\n\n          case \"b\":\n            h += \"\\b\";\n            break;\n\n          case \"f\":\n            h += \"\\f\";\n            break;\n\n          case \"v\":\n            h += \"\\v\";\n            break;\n\n          case \"8\":\n          case \"9\":\n            h += e, this.tolerateUnexpectedToken();\n            break;\n\n          default:\n            if (e && t.isOctalDigit(e.charCodeAt(0))) {\n              const t = this.octalToDecimal(e);\n              r = t.octal || r, h += String.fromCharCode(t.code);\n            } else h += e;\n\n        }\n      } else {\n        if (t.isLineTerminator(e.charCodeAt(0))) break;\n        h += e;\n      }\n    }\n\n    return \"\" !== n && (this.index = s, this.throwUnexpectedToken()), {\n      type: 8,\n      value: h,\n      octal: r,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start: s,\n      end: this.index\n    };\n  }\n\n  scanTemplate() {\n    let e = \"\",\n        s = !1;\n    const n = this.index,\n          r = \"`\" === this.source[n];\n    let h = !1,\n        c = 2;\n\n    for (++this.index; !this.eof();) {\n      let n = this.source[this.index++];\n\n      if (\"`\" === n) {\n        c = 1, h = !0, s = !0;\n        break;\n      }\n\n      if (\"$\" === n) {\n        if (\"{\" === this.source[this.index]) {\n          this.curlyStack.push(\"${\"), ++this.index, s = !0;\n          break;\n        }\n\n        e += n;\n      } else if (\"\\\\\" === n) {\n        if (n = this.source[this.index++], t.isLineTerminator(n.charCodeAt(0))) ++this.lineNumber, \"\\r\" === n && \"\\n\" === this.source[this.index] && ++this.index, this.lineStart = this.index;else switch (n) {\n          case \"n\":\n            e += \"\\n\";\n            break;\n\n          case \"r\":\n            e += \"\\r\";\n            break;\n\n          case \"t\":\n            e += \"\\t\";\n            break;\n\n          case \"u\":\n            if (\"{\" === this.source[this.index]) ++this.index, e += this.scanUnicodeCodePointEscape();else {\n              const t = this.index,\n                    i = this.scanHexEscape(n);\n              null !== i ? e += i : (this.index = t, e += n);\n            }\n            break;\n\n          case \"x\":\n            {\n              const t = this.scanHexEscape(n);\n              null === t && this.throwUnexpectedToken(i.InvalidHexEscapeSequence), e += t;\n              break;\n            }\n\n          case \"b\":\n            e += \"\\b\";\n            break;\n\n          case \"f\":\n            e += \"\\f\";\n            break;\n\n          case \"v\":\n            e += \"\\v\";\n            break;\n\n          default:\n            \"0\" === n ? (t.isDecimalDigit(this.source.charCodeAt(this.index)) && this.throwUnexpectedToken(i.TemplateOctalLiteral), e += \"\\0\") : t.isOctalDigit(n.charCodeAt(0)) ? this.throwUnexpectedToken(i.TemplateOctalLiteral) : e += n;\n        }\n      } else t.isLineTerminator(n.charCodeAt(0)) ? (++this.lineNumber, \"\\r\" === n && \"\\n\" === this.source[this.index] && ++this.index, this.lineStart = this.index, e += \"\\n\") : e += n;\n    }\n\n    return s || this.throwUnexpectedToken(), r || this.curlyStack.pop(), {\n      type: 10,\n      value: this.source.slice(n + 1, this.index - c),\n      cooked: e,\n      head: r,\n      tail: h,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start: n,\n      end: this.index\n    };\n  }\n\n  testRegExp(e, t) {\n    const s = \"￿\";\n    let n = e;\n    t.indexOf(\"u\") >= 0 && (n = n.replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, (e, t, n) => {\n      const r = parseInt(t || n, 16);\n      return r > 1114111 && this.throwUnexpectedToken(i.InvalidRegExp), r <= 65535 ? String.fromCharCode(r) : s;\n    }).replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, s));\n\n    try {\n      RegExp(n);\n    } catch (r) {\n      this.throwUnexpectedToken(i.InvalidRegExp);\n    }\n\n    try {\n      return new RegExp(e, t);\n    } catch (h) {\n      return null;\n    }\n  }\n\n  scanRegExpBody() {\n    let s = this.source[this.index];\n    e(\"/\" === s, \"Regular expression literal must start with a slash\");\n    let n = this.source[this.index++],\n        r = !1,\n        h = !1;\n\n    for (; !this.eof();) if (s = this.source[this.index++], n += s, \"\\\\\" === s) s = this.source[this.index++], t.isLineTerminator(s.charCodeAt(0)) && this.throwUnexpectedToken(i.UnterminatedRegExp), n += s;else if (t.isLineTerminator(s.charCodeAt(0))) this.throwUnexpectedToken(i.UnterminatedRegExp);else if (r) \"]\" === s && (r = !1);else {\n      if (\"/\" === s) {\n        h = !0;\n        break;\n      }\n\n      \"[\" === s && (r = !0);\n    }\n\n    return h || this.throwUnexpectedToken(i.UnterminatedRegExp), n.substr(1, n.length - 2);\n  }\n\n  scanRegExpFlags() {\n    let e = \"\",\n        i = \"\";\n\n    for (; !this.eof();) {\n      let s = this.source[this.index];\n      if (!t.isIdentifierPart(s.charCodeAt(0))) break;\n      if (++this.index, \"\\\\\" !== s || this.eof()) i += s, e += s;else if (s = this.source[this.index], \"u\" === s) {\n        ++this.index;\n        let t = this.index;\n        const s = this.scanHexEscape(\"u\");\n        if (null !== s) for (i += s, e += \"\\\\u\"; t < this.index; ++t) e += this.source[t];else this.index = t, i += \"u\", e += \"\\\\u\";\n        this.tolerateUnexpectedToken();\n      } else e += \"\\\\\", this.tolerateUnexpectedToken();\n    }\n\n    return i;\n  }\n\n  scanRegExp() {\n    const e = this.index,\n          t = this.scanRegExpBody(),\n          i = this.scanRegExpFlags();\n    return {\n      type: 9,\n      value: \"\",\n      pattern: t,\n      flags: i,\n      regex: this.testRegExp(t, i),\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start: e,\n      end: this.index\n    };\n  }\n\n  lex() {\n    if (this.eof()) return {\n      type: 2,\n      value: \"\",\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start: this.index,\n      end: this.index\n    };\n    const e = this.source.charCodeAt(this.index);\n    return t.isIdentifierStart(e) ? this.scanIdentifier() : 40 === e || 41 === e || 59 === e ? this.scanPunctuator() : 39 === e || 34 === e ? this.scanStringLiteral() : 46 === e ? t.isDecimalDigit(this.source.charCodeAt(this.index + 1)) ? this.scanNumericLiteral() : this.scanPunctuator() : t.isDecimalDigit(e) ? this.scanNumericLiteral() : 96 === e || 125 === e && \"${\" === this.curlyStack[this.curlyStack.length - 1] ? this.scanTemplate() : e >= 55296 && e < 57343 && t.isIdentifierStart(this.codePointAt(this.index)) ? this.scanIdentifier() : this.scanPunctuator();\n  }\n\n}\n\nexport { r as Scanner };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/arcade/lib/scanner.js"],"names":["assert","e","Character","t","Messages","i","s","indexOf","toLowerCase","n","r","constructor","source","errorHandler","trackComment","isModule","length","index","lineNumber","lineStart","curlyStack","saveState","slice","restoreState","eof","throwUnexpectedToken","UnexpectedTokenIllegal","throwError","tolerateUnexpectedToken","tolerateError","skipSingleLineComment","start","line","column","end","charCodeAt","isLineTerminator","multiLine","range","loc","push","skipMultiLineComment","scanComments","isWhiteSpace","concat","isFutureReservedWord","isStrictModeReservedWord","isRestrictedWord","isKeyword","codePointAt","scanHexEscape","isHexDigit","String","fromCharCode","scanUnicodeCodePointEscape","fromCodePoint","getIdentifier","getComplexIdentifier","isIdentifierPart","isIdentifierStart","substr","octalToDecimal","isOctalDigit","code","octal","scanIdentifier","InvalidEscapedReservedWord","type","value","scanPunctuator","pop","scanHexLiteral","parseInt","scanBinaryLiteral","isDecimalDigit","scanOctalLiteral","scanNumericLiteral","parseFloat","scanStringLiteral","h","InvalidHexEscapeSequence","scanTemplate","c","TemplateOctalLiteral","cooked","head","tail","testRegExp","replace","InvalidRegExp","RegExp","scanRegExpBody","UnterminatedRegExp","scanRegExpFlags","scanRegExp","pattern","flags","regex","lex","Scanner"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{assert as e}from\"./assert.js\";import{Character as t}from\"./character.js\";import{Messages as i}from\"./messages.js\";function s(e){return\"0123456789abcdef\".indexOf(e.toLowerCase())}function n(e){return\"01234567\".indexOf(e)}class r{constructor(e,t){this.source=e,this.errorHandler=t,this.trackComment=!1,this.isModule=!1,this.length=e.length,this.index=0,this.lineNumber=e.length>0?1:0,this.lineStart=0,this.curlyStack=[]}saveState(){return{index:this.index,lineNumber:this.lineNumber,lineStart:this.lineStart,curlyStack:this.curlyStack.slice()}}restoreState(e){this.index=e.index,this.lineNumber=e.lineNumber,this.lineStart=e.lineStart,this.curlyStack=e.curlyStack}eof(){return this.index>=this.length}throwUnexpectedToken(e=i.UnexpectedTokenIllegal){return this.errorHandler.throwError(this.index,this.lineNumber,this.index-this.lineStart+1,e)}tolerateUnexpectedToken(e=i.UnexpectedTokenIllegal){this.errorHandler.tolerateError(this.index,this.lineNumber,this.index-this.lineStart+1,e)}skipSingleLineComment(e){let i,s,n=[];for(this.trackComment&&(n=[],i=this.index-e,s={start:{line:this.lineNumber,column:this.index-this.lineStart-e},end:{}});!this.eof();){const r=this.source.charCodeAt(this.index);if(++this.index,t.isLineTerminator(r)){if(this.trackComment){s.end={line:this.lineNumber,column:this.index-this.lineStart-1};const t={multiLine:!1,slice:[i+e,this.index-1],range:[i,this.index-1],loc:s};n.push(t)}return 13===r&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,n}}if(this.trackComment){s.end={line:this.lineNumber,column:this.index-this.lineStart};const t={multiLine:!1,slice:[i+e,this.index],range:[i,this.index],loc:s};n.push(t)}return n}skipMultiLineComment(){let e,i,s=[];for(this.trackComment&&(s=[],e=this.index-2,i={start:{line:this.lineNumber,column:this.index-this.lineStart-2},end:{}});!this.eof();){const n=this.source.charCodeAt(this.index);if(t.isLineTerminator(n))13===n&&10===this.source.charCodeAt(this.index+1)&&++this.index,++this.lineNumber,++this.index,this.lineStart=this.index;else if(42===n){if(47===this.source.charCodeAt(this.index+1)){if(this.index+=2,this.trackComment){i.end={line:this.lineNumber,column:this.index-this.lineStart};const t={multiLine:!0,slice:[e+2,this.index-2],range:[e,this.index],loc:i};s.push(t)}return s}++this.index}else++this.index}if(this.trackComment){i.end={line:this.lineNumber,column:this.index-this.lineStart};const t={multiLine:!0,slice:[e+2,this.index],range:[e,this.index],loc:i};s.push(t)}return this.tolerateUnexpectedToken(),s}scanComments(){let e;this.trackComment&&(e=[]);let i=0===this.index;for(;!this.eof();){let s=this.source.charCodeAt(this.index);if(t.isWhiteSpace(s))++this.index;else if(t.isLineTerminator(s))++this.index,13===s&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,i=!0;else if(47===s)if(s=this.source.charCodeAt(this.index+1),47===s){this.index+=2;const t=this.skipSingleLineComment(2);this.trackComment&&(e=e.concat(t)),i=!0}else{if(42!==s)break;{this.index+=2;const t=this.skipMultiLineComment();this.trackComment&&(e=e.concat(t))}}else if(i&&45===s){if(45!==this.source.charCodeAt(this.index+1)||62!==this.source.charCodeAt(this.index+2))break;{this.index+=3;const t=this.skipSingleLineComment(3);this.trackComment&&(e=e.concat(t))}}else{if(60!==s||this.isModule)break;if(\"!--\"!==this.source.slice(this.index+1,this.index+4))break;{this.index+=4;const t=this.skipSingleLineComment(4);this.trackComment&&(e=e.concat(t))}}}return e}isFutureReservedWord(e){return!1}isStrictModeReservedWord(e){return!1}isRestrictedWord(e){return!1}isKeyword(e){switch((e=e.toLowerCase()).length){case 2:return\"if\"===e||\"in\"===e;case 3:return\"var\"===e||\"for\"===e;case 4:return\"else\"===e;case 5:return\"break\"===e;case 6:return\"return\"===e;case 8:return\"function\"===e||\"continue\"===e;default:return!1}}codePointAt(e){let t=this.source.charCodeAt(e);if(t>=55296&&t<=56319){const i=this.source.charCodeAt(e+1);if(i>=56320&&i<=57343){t=1024*(t-55296)+i-56320+65536}}return t}scanHexEscape(e){const i=\"u\"===e?4:2;let n=0;for(let r=0;r<i;++r){if(this.eof()||!t.isHexDigit(this.source.charCodeAt(this.index)))return null;n=16*n+s(this.source[this.index++])}return String.fromCharCode(n)}scanUnicodeCodePointEscape(){let e=this.source[this.index],i=0;for(\"}\"===e&&this.throwUnexpectedToken();!this.eof()&&(e=this.source[this.index++],t.isHexDigit(e.charCodeAt(0)));)i=16*i+s(e);return(i>1114111||\"}\"!==e)&&this.throwUnexpectedToken(),t.fromCodePoint(i)}getIdentifier(){const e=this.index++;for(;!this.eof();){const i=this.source.charCodeAt(this.index);if(92===i)return this.index=e,this.getComplexIdentifier();if(i>=55296&&i<57343)return this.index=e,this.getComplexIdentifier();if(!t.isIdentifierPart(i))break;++this.index}return this.source.slice(e,this.index)}getComplexIdentifier(){let e,i=this.codePointAt(this.index),s=t.fromCodePoint(i);for(this.index+=s.length,92===i&&(117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,\"{\"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):(e=this.scanHexEscape(\"u\"),null!==e&&\"\\\\\"!==e&&t.isIdentifierStart(e.charCodeAt(0))||this.throwUnexpectedToken()),s=e);!this.eof()&&(i=this.codePointAt(this.index),t.isIdentifierPart(i));)e=t.fromCodePoint(i),s+=e,this.index+=e.length,92===i&&(s=s.substr(0,s.length-1),117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,\"{\"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):(e=this.scanHexEscape(\"u\"),null!==e&&\"\\\\\"!==e&&t.isIdentifierPart(e.charCodeAt(0))||this.throwUnexpectedToken()),s+=e);return s}octalToDecimal(e){let i=\"0\"!==e,s=n(e);return!this.eof()&&t.isOctalDigit(this.source.charCodeAt(this.index))&&(i=!0,s=8*s+n(this.source[this.index++]),\"0123\".indexOf(e)>=0&&!this.eof()&&t.isOctalDigit(this.source.charCodeAt(this.index))&&(s=8*s+n(this.source[this.index++]))),{code:s,octal:i}}scanIdentifier(){let e;const t=this.index,s=92===this.source.charCodeAt(t)?this.getComplexIdentifier():this.getIdentifier();if(e=1===s.length?3:this.isKeyword(s)?4:\"null\"===s.toLowerCase()?5:\"true\"===s.toLowerCase()||\"false\"===s.toLowerCase()?1:3,3!==e&&t+s.length!==this.index){const e=this.index;this.index=t,this.tolerateUnexpectedToken(i.InvalidEscapedReservedWord),this.index=e}return{type:e,value:s,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}}scanPunctuator(){const e=this.index;let t=this.source[this.index];switch(t){case\"(\":case\"{\":\"{\"===t&&this.curlyStack.push(\"{\"),++this.index;break;case\".\":++this.index,\".\"===this.source[this.index]&&\".\"===this.source[this.index+1]&&(this.index+=2,t=\"...\");break;case\"}\":++this.index,this.curlyStack.pop();break;case\")\":case\";\":case\",\":case\"[\":case\"]\":case\":\":case\"?\":case\"~\":++this.index;break;default:t=this.source.substr(this.index,4),\">>>=\"===t?this.index+=4:(t=t.substr(0,3),\"===\"===t||\"!==\"===t||\">>>\"===t||\"<<=\"===t||\">>=\"===t||\"**=\"===t?this.index+=3:(t=t.substr(0,2),\"&&\"===t||\"||\"===t||\"==\"===t||\"!=\"===t||\"+=\"===t||\"-=\"===t||\"*=\"===t||\"/=\"===t||\"++\"===t||\"--\"===t||\"<<\"===t||\">>\"===t||\"&=\"===t||\"|=\"===t||\"^=\"===t||\"%=\"===t||\"<=\"===t||\">=\"===t||\"=>\"===t||\"**\"===t?this.index+=2:(t=this.source[this.index],\"<>=!+-*%&|^/\".indexOf(t)>=0&&++this.index)))}return this.index===e&&this.throwUnexpectedToken(),{type:7,value:t,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}}scanHexLiteral(e){let i=\"\";for(;!this.eof()&&t.isHexDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];return 0===i.length&&this.throwUnexpectedToken(),t.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseInt(\"0x\"+i,16),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}}scanBinaryLiteral(e){let i,s=\"\";for(;!this.eof()&&(i=this.source[this.index],\"0\"===i||\"1\"===i);)s+=this.source[this.index++];return 0===s.length&&this.throwUnexpectedToken(),this.eof()||(i=this.source.charCodeAt(this.index),(t.isIdentifierStart(i)||t.isDecimalDigit(i))&&this.throwUnexpectedToken()),{type:6,value:parseInt(s,2),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}}scanOctalLiteral(e,i){let s=\"\",n=!1;for(t.isOctalDigit(e.charCodeAt(0))?(n=!0,s=\"0\"+this.source[this.index++]):++this.index;!this.eof()&&t.isOctalDigit(this.source.charCodeAt(this.index));)s+=this.source[this.index++];return n||0!==s.length||this.throwUnexpectedToken(),(t.isIdentifierStart(this.source.charCodeAt(this.index))||t.isDecimalDigit(this.source.charCodeAt(this.index)))&&this.throwUnexpectedToken(),{type:6,value:parseInt(s,8),octal:n,lineNumber:this.lineNumber,lineStart:this.lineStart,start:i,end:this.index}}scanNumericLiteral(){const i=this.index;let s=this.source[i];e(t.isDecimalDigit(s.charCodeAt(0))||\".\"===s,\"Numeric literal must start with a decimal digit or a decimal point\");let n=\"\";if(\".\"!==s){if(n=this.source[this.index++],s=this.source[this.index],\"0\"===n){if(\"x\"===s||\"X\"===s)return++this.index,this.scanHexLiteral(i);if(\"b\"===s||\"B\"===s)return++this.index,this.scanBinaryLiteral(i);if(\"o\"===s||\"O\"===s)return this.scanOctalLiteral(s,i)}for(;t.isDecimalDigit(this.source.charCodeAt(this.index));)n+=this.source[this.index++];s=this.source[this.index]}if(\".\"===s){for(n+=this.source[this.index++];t.isDecimalDigit(this.source.charCodeAt(this.index));)n+=this.source[this.index++];s=this.source[this.index]}if(\"e\"===s||\"E\"===s)if(n+=this.source[this.index++],s=this.source[this.index],\"+\"!==s&&\"-\"!==s||(n+=this.source[this.index++]),t.isDecimalDigit(this.source.charCodeAt(this.index)))for(;t.isDecimalDigit(this.source.charCodeAt(this.index));)n+=this.source[this.index++];else this.throwUnexpectedToken();return t.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseFloat(n),lineNumber:this.lineNumber,lineStart:this.lineStart,start:i,end:this.index}}scanStringLiteral(){const s=this.index;let n=this.source[s];e(\"'\"===n||'\"'===n,\"String literal must starts with a quote\"),++this.index;let r=!1,h=\"\";for(;!this.eof();){let e=this.source[this.index++];if(e===n){n=\"\";break}if(\"\\\\\"===e)if(e=this.source[this.index++],e&&t.isLineTerminator(e.charCodeAt(0)))++this.lineNumber,\"\\r\"===e&&\"\\n\"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(e){case\"u\":if(\"{\"===this.source[this.index])++this.index,h+=this.scanUnicodeCodePointEscape();else{const t=this.scanHexEscape(e);null===t&&this.throwUnexpectedToken(),h+=t}break;case\"x\":{const t=this.scanHexEscape(e);null===t&&this.throwUnexpectedToken(i.InvalidHexEscapeSequence),h+=t;break}case\"n\":h+=\"\\n\";break;case\"r\":h+=\"\\r\";break;case\"t\":h+=\"\\t\";break;case\"b\":h+=\"\\b\";break;case\"f\":h+=\"\\f\";break;case\"v\":h+=\"\\v\";break;case\"8\":case\"9\":h+=e,this.tolerateUnexpectedToken();break;default:if(e&&t.isOctalDigit(e.charCodeAt(0))){const t=this.octalToDecimal(e);r=t.octal||r,h+=String.fromCharCode(t.code)}else h+=e}else{if(t.isLineTerminator(e.charCodeAt(0)))break;h+=e}}return\"\"!==n&&(this.index=s,this.throwUnexpectedToken()),{type:8,value:h,octal:r,lineNumber:this.lineNumber,lineStart:this.lineStart,start:s,end:this.index}}scanTemplate(){let e=\"\",s=!1;const n=this.index,r=\"`\"===this.source[n];let h=!1,c=2;for(++this.index;!this.eof();){let n=this.source[this.index++];if(\"`\"===n){c=1,h=!0,s=!0;break}if(\"$\"===n){if(\"{\"===this.source[this.index]){this.curlyStack.push(\"${\"),++this.index,s=!0;break}e+=n}else if(\"\\\\\"===n)if(n=this.source[this.index++],t.isLineTerminator(n.charCodeAt(0)))++this.lineNumber,\"\\r\"===n&&\"\\n\"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(n){case\"n\":e+=\"\\n\";break;case\"r\":e+=\"\\r\";break;case\"t\":e+=\"\\t\";break;case\"u\":if(\"{\"===this.source[this.index])++this.index,e+=this.scanUnicodeCodePointEscape();else{const t=this.index,i=this.scanHexEscape(n);null!==i?e+=i:(this.index=t,e+=n)}break;case\"x\":{const t=this.scanHexEscape(n);null===t&&this.throwUnexpectedToken(i.InvalidHexEscapeSequence),e+=t;break}case\"b\":e+=\"\\b\";break;case\"f\":e+=\"\\f\";break;case\"v\":e+=\"\\v\";break;default:\"0\"===n?(t.isDecimalDigit(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(i.TemplateOctalLiteral),e+=\"\\0\"):t.isOctalDigit(n.charCodeAt(0))?this.throwUnexpectedToken(i.TemplateOctalLiteral):e+=n}else t.isLineTerminator(n.charCodeAt(0))?(++this.lineNumber,\"\\r\"===n&&\"\\n\"===this.source[this.index]&&++this.index,this.lineStart=this.index,e+=\"\\n\"):e+=n}return s||this.throwUnexpectedToken(),r||this.curlyStack.pop(),{type:10,value:this.source.slice(n+1,this.index-c),cooked:e,head:r,tail:h,lineNumber:this.lineNumber,lineStart:this.lineStart,start:n,end:this.index}}testRegExp(e,t){const s=\"￿\";let n=e;t.indexOf(\"u\")>=0&&(n=n.replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g,((e,t,n)=>{const r=parseInt(t||n,16);return r>1114111&&this.throwUnexpectedToken(i.InvalidRegExp),r<=65535?String.fromCharCode(r):s})).replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,s));try{RegExp(n)}catch(r){this.throwUnexpectedToken(i.InvalidRegExp)}try{return new RegExp(e,t)}catch(h){return null}}scanRegExpBody(){let s=this.source[this.index];e(\"/\"===s,\"Regular expression literal must start with a slash\");let n=this.source[this.index++],r=!1,h=!1;for(;!this.eof();)if(s=this.source[this.index++],n+=s,\"\\\\\"===s)s=this.source[this.index++],t.isLineTerminator(s.charCodeAt(0))&&this.throwUnexpectedToken(i.UnterminatedRegExp),n+=s;else if(t.isLineTerminator(s.charCodeAt(0)))this.throwUnexpectedToken(i.UnterminatedRegExp);else if(r)\"]\"===s&&(r=!1);else{if(\"/\"===s){h=!0;break}\"[\"===s&&(r=!0)}return h||this.throwUnexpectedToken(i.UnterminatedRegExp),n.substr(1,n.length-2)}scanRegExpFlags(){let e=\"\",i=\"\";for(;!this.eof();){let s=this.source[this.index];if(!t.isIdentifierPart(s.charCodeAt(0)))break;if(++this.index,\"\\\\\"!==s||this.eof())i+=s,e+=s;else if(s=this.source[this.index],\"u\"===s){++this.index;let t=this.index;const s=this.scanHexEscape(\"u\");if(null!==s)for(i+=s,e+=\"\\\\u\";t<this.index;++t)e+=this.source[t];else this.index=t,i+=\"u\",e+=\"\\\\u\";this.tolerateUnexpectedToken()}else e+=\"\\\\\",this.tolerateUnexpectedToken()}return i}scanRegExp(){const e=this.index,t=this.scanRegExpBody(),i=this.scanRegExpFlags();return{type:9,value:\"\",pattern:t,flags:i,regex:this.testRegExp(t,i),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}}lex(){if(this.eof())return{type:2,value:\"\",lineNumber:this.lineNumber,lineStart:this.lineStart,start:this.index,end:this.index};const e=this.source.charCodeAt(this.index);return t.isIdentifierStart(e)?this.scanIdentifier():40===e||41===e||59===e?this.scanPunctuator():39===e||34===e?this.scanStringLiteral():46===e?t.isDecimalDigit(this.source.charCodeAt(this.index+1))?this.scanNumericLiteral():this.scanPunctuator():t.isDecimalDigit(e)?this.scanNumericLiteral():96===e||125===e&&\"${\"===this.curlyStack[this.curlyStack.length-1]?this.scanTemplate():e>=55296&&e<57343&&t.isIdentifierStart(this.codePointAt(this.index))?this.scanIdentifier():this.scanPunctuator()}}export{r as Scanner};\n"]},"metadata":{},"sourceType":"module"}