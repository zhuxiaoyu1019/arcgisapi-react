{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isSome as t } from \"../../../core/maybe.js\";\nimport { isArrayBuffer as r } from \"../../../core/typedArrayUtil.js\";\nimport { c as e } from \"../../../chunks/quat.js\";\nimport { b as a } from \"../../../chunks/quatf32.js\";\nimport { q as o } from \"../../../chunks/vec3.js\";\nimport { f, c as i } from \"../../../chunks/vec3f32.js\";\nimport { projectBuffer as n } from \"../../../geometry/projection.js\";\nimport s from \"../../../geometry/SpatialReference.js\";\nimport { readGeometry as u, getAttributeValues as l, evaluateRenderer as b, filterInPlace as m } from \"./i3s/PointCloudWorkerUtil.js\";\n\nclass p {\n  transform(e) {\n    const a = this._transform(e),\n          o = [a.points.buffer, a.rgb.buffer];\n\n    t(a.pointIdFilterMap) && o.push(a.pointIdFilterMap.buffer);\n\n    for (const t of a.attributes) \"buffer\" in t.values && r(t.values.buffer) && t.values.buffer !== a.rgb.buffer && o.push(t.values.buffer);\n\n    return Promise.resolve({\n      result: a,\n      transferList: o\n    });\n  }\n\n  _transform(r) {\n    const e = u(r.schema, r.geometryBuffer);\n    let a = e.length / 3,\n        o = null;\n    const f = [],\n          i = l(r.primaryAttributeData, e, a);\n    t(r.primaryAttributeData) && i && f.push({\n      attributeInfo: r.primaryAttributeData.attributeInfo,\n      values: i\n    });\n    const n = l(r.modulationAttributeData, e, a);\n    t(r.modulationAttributeData) && n && f.push({\n      attributeInfo: r.modulationAttributeData.attributeInfo,\n      values: n\n    });\n    let p = b(r.rendererInfo, i, n, a);\n\n    if (r.filterInfo && r.filterInfo.length > 0 && t(r.filterAttributesData)) {\n      const t = r.filterAttributesData.map(t => {\n        const r = l(t, e, a),\n              o = {\n          attributeInfo: t.attributeInfo,\n          values: r\n        };\n        return f.push(o), o;\n      });\n      o = new Uint32Array(a), a = m(e, p, o, r.filterInfo, t);\n    }\n\n    for (const t of r.userAttributesData) {\n      const r = l(t, e, a);\n      f.push({\n        attributeInfo: t.attributeInfo,\n        values: r\n      });\n    }\n\n    3 * a < p.length && (p = new Uint8Array(p.buffer.slice(0, 3 * a))), this._applyElevationOffsetInPlace(e, a, r.elevationOffset);\n\n    const c = this._transformCoordinates(e, a, r.obb, s.fromJSON(r.inSR), s.fromJSON(r.outSR));\n\n    return {\n      obb: r.obb,\n      points: c,\n      rgb: p,\n      attributes: f,\n      pointIdFilterMap: o\n    };\n  }\n\n  _transformCoordinates(t, r, a, s, u) {\n    if (!n(t, s, 0, t, u, 0, r)) throw Error(\"Can't reproject\");\n    const l = f(a.center[0], a.center[1], a.center[2]),\n          b = i(),\n          m = i();\n    e(c, a.quaternion);\n    const p = new Float32Array(3 * r);\n\n    for (let e = 0; e < r; e++) b[0] = t[3 * e] - l[0], b[1] = t[3 * e + 1] - l[1], b[2] = t[3 * e + 2] - l[2], o(m, b, c), a.halfSize[0] = Math.max(a.halfSize[0], Math.abs(m[0])), a.halfSize[1] = Math.max(a.halfSize[1], Math.abs(m[1])), a.halfSize[2] = Math.max(a.halfSize[2], Math.abs(m[2])), p[3 * e] = b[0], p[3 * e + 1] = b[1], p[3 * e + 2] = b[2];\n\n    return p;\n  }\n\n  _applyElevationOffsetInPlace(t, r, e) {\n    if (0 !== e) for (let a = 0; a < r; a++) t[3 * a + 2] += e;\n  }\n\n}\n\nconst c = a();\n\nfunction h() {\n  return new p();\n}\n\nexport default h;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/layers/PointCloudWorker.js"],"names":["isSome","t","isArrayBuffer","r","c","e","b","a","q","o","f","i","projectBuffer","n","s","readGeometry","u","getAttributeValues","l","evaluateRenderer","filterInPlace","m","p","transform","_transform","points","buffer","rgb","pointIdFilterMap","push","attributes","values","Promise","resolve","result","transferList","schema","geometryBuffer","length","primaryAttributeData","attributeInfo","modulationAttributeData","rendererInfo","filterInfo","filterAttributesData","map","Uint32Array","userAttributesData","Uint8Array","slice","_applyElevationOffsetInPlace","elevationOffset","_transformCoordinates","obb","fromJSON","inSR","outSR","Error","center","quaternion","Float32Array","halfSize","Math","max","abs","h"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isSome as t}from\"../../../core/maybe.js\";import{isArrayBuffer as r}from\"../../../core/typedArrayUtil.js\";import{c as e}from\"../../../chunks/quat.js\";import{b as a}from\"../../../chunks/quatf32.js\";import{q as o}from\"../../../chunks/vec3.js\";import{f,c as i}from\"../../../chunks/vec3f32.js\";import{projectBuffer as n}from\"../../../geometry/projection.js\";import s from\"../../../geometry/SpatialReference.js\";import{readGeometry as u,getAttributeValues as l,evaluateRenderer as b,filterInPlace as m}from\"./i3s/PointCloudWorkerUtil.js\";class p{transform(e){const a=this._transform(e),o=[a.points.buffer,a.rgb.buffer];t(a.pointIdFilterMap)&&o.push(a.pointIdFilterMap.buffer);for(const t of a.attributes)\"buffer\"in t.values&&r(t.values.buffer)&&t.values.buffer!==a.rgb.buffer&&o.push(t.values.buffer);return Promise.resolve({result:a,transferList:o})}_transform(r){const e=u(r.schema,r.geometryBuffer);let a=e.length/3,o=null;const f=[],i=l(r.primaryAttributeData,e,a);t(r.primaryAttributeData)&&i&&f.push({attributeInfo:r.primaryAttributeData.attributeInfo,values:i});const n=l(r.modulationAttributeData,e,a);t(r.modulationAttributeData)&&n&&f.push({attributeInfo:r.modulationAttributeData.attributeInfo,values:n});let p=b(r.rendererInfo,i,n,a);if(r.filterInfo&&r.filterInfo.length>0&&t(r.filterAttributesData)){const t=r.filterAttributesData.map((t=>{const r=l(t,e,a),o={attributeInfo:t.attributeInfo,values:r};return f.push(o),o}));o=new Uint32Array(a),a=m(e,p,o,r.filterInfo,t)}for(const t of r.userAttributesData){const r=l(t,e,a);f.push({attributeInfo:t.attributeInfo,values:r})}3*a<p.length&&(p=new Uint8Array(p.buffer.slice(0,3*a))),this._applyElevationOffsetInPlace(e,a,r.elevationOffset);const c=this._transformCoordinates(e,a,r.obb,s.fromJSON(r.inSR),s.fromJSON(r.outSR));return{obb:r.obb,points:c,rgb:p,attributes:f,pointIdFilterMap:o}}_transformCoordinates(t,r,a,s,u){if(!n(t,s,0,t,u,0,r))throw Error(\"Can't reproject\");const l=f(a.center[0],a.center[1],a.center[2]),b=i(),m=i();e(c,a.quaternion);const p=new Float32Array(3*r);for(let e=0;e<r;e++)b[0]=t[3*e]-l[0],b[1]=t[3*e+1]-l[1],b[2]=t[3*e+2]-l[2],o(m,b,c),a.halfSize[0]=Math.max(a.halfSize[0],Math.abs(m[0])),a.halfSize[1]=Math.max(a.halfSize[1],Math.abs(m[1])),a.halfSize[2]=Math.max(a.halfSize[2],Math.abs(m[2])),p[3*e]=b[0],p[3*e+1]=b[1],p[3*e+2]=b[2];return p}_applyElevationOffsetInPlace(t,r,e){if(0!==e)for(let a=0;a<r;a++)t[3*a+2]+=e}}const c=a();function h(){return new p}export default h;\n"]},"metadata":{},"sourceType":"module"}