{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport \"../geometry.js\";\nimport { open as n } from \"../core/workers/workers.js\";\nimport t from \"./Point.js\";\nimport { fromJSON as r } from \"./support/jsonUtils.js\";\n\nfunction e(n) {\n  var t;\n  return Array.isArray(n) ? null == (t = n[0]) ? void 0 : t.spatialReference : null == n ? void 0 : n.spatialReference;\n}\n\nfunction i(n) {\n  return n ? Array.isArray(n) ? n.map(i) : n.toJSON ? n.toJSON() : n : n;\n}\n\nfunction a(n) {\n  return Array.isArray(n) ? n.map(n => r(n)) : r(n);\n}\n\nfunction o(n, t) {\n  let r;\n  return Array.isArray(n) ? r = n : (r = [], r.push(n), null != t && r.push(t)), r;\n}\n\nlet c;\n\nasync function u() {\n  return c || (c = n(\"geometryEngineWorker\", {\n    strategy: \"distributed\"\n  })), c;\n}\n\nasync function s(n, t) {\n  return (await u()).invoke(\"executeGEOperation\", {\n    operation: n,\n    parameters: i(t)\n  });\n}\n\nfunction f(n) {\n  return s(\"extendedSpatialReferenceInfo\", [n]);\n}\n\nasync function l(n, t) {\n  return a(await s(\"clip\", [e(n), n, t]));\n}\n\nasync function y(n, t) {\n  return a(await s(\"cut\", [e(n), n, t]));\n}\n\nfunction p(n, t) {\n  return s(\"contains\", [e(n), n, t]);\n}\n\nfunction w(n, t) {\n  return s(\"crosses\", [e(n), n, t]);\n}\n\nfunction m(n, t, r) {\n  return s(\"distance\", [e(n), n, t, r]);\n}\n\nfunction d(n, t) {\n  return s(\"equals\", [e(n), n, t]);\n}\n\nfunction g(n, t) {\n  return s(\"intersects\", [e(n), n, t]);\n}\n\nfunction A(n, t) {\n  return s(\"touches\", [e(n), n, t]);\n}\n\nfunction x(n, t) {\n  return s(\"within\", [e(n), n, t]);\n}\n\nfunction S(n, t) {\n  return s(\"disjoint\", [e(n), n, t]);\n}\n\nfunction O(n, t) {\n  return s(\"overlaps\", [e(n), n, t]);\n}\n\nfunction h(n, t, r) {\n  return s(\"relate\", [e(n), n, t, r]);\n}\n\nfunction v(n) {\n  return s(\"isSimple\", [e(n), n]);\n}\n\nasync function J(n) {\n  return a(await s(\"simplify\", [e(n), n]));\n}\n\nasync function N(n, t = !1) {\n  return a(await s(\"convexHull\", [e(n), n, t]));\n}\n\nasync function R(n, t) {\n  return a(await s(\"difference\", [e(n), n, t]));\n}\n\nasync function E(n, t) {\n  return a(await s(\"symmetricDifference\", [e(n), n, t]));\n}\n\nasync function j(n, t) {\n  return a(await s(\"intersect\", [e(n), n, t]));\n}\n\nasync function k(n, t = null) {\n  const r = o(n, t);\n  return a(await s(\"union\", [e(r), r]));\n}\n\nasync function I(n, t, r, i, o, c) {\n  return a(await s(\"offset\", [e(n), n, t, r, i, o, c]));\n}\n\nasync function V(n, t, r, i = !1) {\n  const o = [e(n), n, t, r, i];\n  return a(await s(\"buffer\", o));\n}\n\nasync function b(n, t, r, i, o, c) {\n  const u = [e(n), n, t, r, i, o, c];\n  return a(await s(\"geodesicBuffer\", u));\n}\n\nasync function z(n, r, i = !0) {\n  const a = await s(\"nearestCoordinate\", [e(n), n, r, i]);\n  return { ...a,\n    coordinate: t.fromJSON(a.coordinate)\n  };\n}\n\nasync function D(n, r) {\n  const i = await s(\"nearestVertex\", [e(n), n, r]);\n  return { ...i,\n    coordinate: t.fromJSON(i.coordinate)\n  };\n}\n\nasync function H(n, r, i, a) {\n  return (await s(\"nearestVertices\", [e(n), n, r, i, a])).map(n => ({ ...n,\n    coordinate: t.fromJSON(n.coordinate)\n  }));\n}\n\nfunction L(n) {\n  return \"xmin\" in n ? n.center : \"x\" in n ? n : n.extent.center;\n}\n\nasync function q(n, t, r) {\n  var e;\n  if (null == n) throw new Error(\"Illegal Argument Exception\");\n  const i = n.spatialReference;\n  r = null != (e = r) ? e : L(n);\n  const a = n.constructor.fromJSON(await s(\"rotate\", [i, n, t, r]));\n  return a.spatialReference = i, a;\n}\n\nasync function B(n, t) {\n  var r;\n  if (null == n) throw new Error(\"Illegal Argument Exception\");\n  const e = n.spatialReference;\n  t = null != (r = t) ? r : L(n);\n  const i = n.constructor.fromJSON(await s(\"flipHorizontal\", [e, n, t]));\n  return i.spatialReference = e, i;\n}\n\nasync function C(n, t) {\n  var r;\n  if (null == n) throw new Error(\"Illegal Argument Exception\");\n  const e = n.spatialReference;\n  t = null != (r = t) ? r : L(n);\n  const i = n.constructor.fromJSON(await s(\"flipVertical\", [e, n, t]));\n  return i.spatialReference = e, i;\n}\n\nasync function G(n, t, r, i) {\n  return a(await s(\"generalize\", [e(n), n, t, r, i]));\n}\n\nasync function P(n, t, r) {\n  return a(await s(\"densify\", [e(n), n, t, r]));\n}\n\nasync function U(n, t, r, i = 0) {\n  return a(await s(\"geodesicDensify\", [e(n), n, t, r, i]));\n}\n\nfunction W(n, t) {\n  return s(\"planarArea\", [e(n), n, t]);\n}\n\nfunction F(n, t) {\n  return s(\"planarLength\", [e(n), n, t]);\n}\n\nfunction K(n, t, r) {\n  return s(\"geodesicArea\", [e(n), n, t, r]);\n}\n\nfunction M(n, t, r) {\n  return s(\"geodesicLength\", [e(n), n, t, r]);\n}\n\nexport { V as buffer, l as clip, p as contains, N as convexHull, w as crosses, y as cut, P as densify, R as difference, S as disjoint, m as distance, d as equals, f as extendedSpatialReferenceInfo, B as flipHorizontal, C as flipVertical, G as generalize, K as geodesicArea, b as geodesicBuffer, U as geodesicDensify, M as geodesicLength, j as intersect, g as intersects, v as isSimple, z as nearestCoordinate, D as nearestVertex, H as nearestVertices, I as offset, O as overlaps, W as planarArea, F as planarLength, h as relate, q as rotate, J as simplify, E as symmetricDifference, A as touches, k as union, x as within };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/geometry/geometryEngineAsync.js"],"names":["open","n","t","fromJSON","r","e","Array","isArray","spatialReference","i","map","toJSON","a","o","push","c","u","strategy","s","invoke","operation","parameters","f","l","y","p","w","m","d","g","A","x","S","O","h","v","J","N","R","E","j","k","I","V","b","z","coordinate","D","H","L","center","extent","q","Error","constructor","B","C","G","P","U","W","F","K","M","buffer","clip","contains","convexHull","crosses","cut","densify","difference","disjoint","distance","equals","extendedSpatialReferenceInfo","flipHorizontal","flipVertical","generalize","geodesicArea","geodesicBuffer","geodesicDensify","geodesicLength","intersect","intersects","isSimple","nearestCoordinate","nearestVertex","nearestVertices","offset","overlaps","planarArea","planarLength","relate","rotate","simplify","symmetricDifference","touches","union","within"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport\"../geometry.js\";import{open as n}from\"../core/workers/workers.js\";import t from\"./Point.js\";import{fromJSON as r}from\"./support/jsonUtils.js\";function e(n){var t;return Array.isArray(n)?null==(t=n[0])?void 0:t.spatialReference:null==n?void 0:n.spatialReference}function i(n){return n?Array.isArray(n)?n.map(i):n.toJSON?n.toJSON():n:n}function a(n){return Array.isArray(n)?n.map((n=>r(n))):r(n)}function o(n,t){let r;return Array.isArray(n)?r=n:(r=[],r.push(n),null!=t&&r.push(t)),r}let c;async function u(){return c||(c=n(\"geometryEngineWorker\",{strategy:\"distributed\"})),c}async function s(n,t){return(await u()).invoke(\"executeGEOperation\",{operation:n,parameters:i(t)})}function f(n){return s(\"extendedSpatialReferenceInfo\",[n])}async function l(n,t){return a(await s(\"clip\",[e(n),n,t]))}async function y(n,t){return a(await s(\"cut\",[e(n),n,t]))}function p(n,t){return s(\"contains\",[e(n),n,t])}function w(n,t){return s(\"crosses\",[e(n),n,t])}function m(n,t,r){return s(\"distance\",[e(n),n,t,r])}function d(n,t){return s(\"equals\",[e(n),n,t])}function g(n,t){return s(\"intersects\",[e(n),n,t])}function A(n,t){return s(\"touches\",[e(n),n,t])}function x(n,t){return s(\"within\",[e(n),n,t])}function S(n,t){return s(\"disjoint\",[e(n),n,t])}function O(n,t){return s(\"overlaps\",[e(n),n,t])}function h(n,t,r){return s(\"relate\",[e(n),n,t,r])}function v(n){return s(\"isSimple\",[e(n),n])}async function J(n){return a(await s(\"simplify\",[e(n),n]))}async function N(n,t=!1){return a(await s(\"convexHull\",[e(n),n,t]))}async function R(n,t){return a(await s(\"difference\",[e(n),n,t]))}async function E(n,t){return a(await s(\"symmetricDifference\",[e(n),n,t]))}async function j(n,t){return a(await s(\"intersect\",[e(n),n,t]))}async function k(n,t=null){const r=o(n,t);return a(await s(\"union\",[e(r),r]))}async function I(n,t,r,i,o,c){return a(await s(\"offset\",[e(n),n,t,r,i,o,c]))}async function V(n,t,r,i=!1){const o=[e(n),n,t,r,i];return a(await s(\"buffer\",o))}async function b(n,t,r,i,o,c){const u=[e(n),n,t,r,i,o,c];return a(await s(\"geodesicBuffer\",u))}async function z(n,r,i=!0){const a=await s(\"nearestCoordinate\",[e(n),n,r,i]);return{...a,coordinate:t.fromJSON(a.coordinate)}}async function D(n,r){const i=await s(\"nearestVertex\",[e(n),n,r]);return{...i,coordinate:t.fromJSON(i.coordinate)}}async function H(n,r,i,a){return(await s(\"nearestVertices\",[e(n),n,r,i,a])).map((n=>({...n,coordinate:t.fromJSON(n.coordinate)})))}function L(n){return\"xmin\"in n?n.center:\"x\"in n?n:n.extent.center}async function q(n,t,r){var e;if(null==n)throw new Error(\"Illegal Argument Exception\");const i=n.spatialReference;r=null!=(e=r)?e:L(n);const a=n.constructor.fromJSON(await s(\"rotate\",[i,n,t,r]));return a.spatialReference=i,a}async function B(n,t){var r;if(null==n)throw new Error(\"Illegal Argument Exception\");const e=n.spatialReference;t=null!=(r=t)?r:L(n);const i=n.constructor.fromJSON(await s(\"flipHorizontal\",[e,n,t]));return i.spatialReference=e,i}async function C(n,t){var r;if(null==n)throw new Error(\"Illegal Argument Exception\");const e=n.spatialReference;t=null!=(r=t)?r:L(n);const i=n.constructor.fromJSON(await s(\"flipVertical\",[e,n,t]));return i.spatialReference=e,i}async function G(n,t,r,i){return a(await s(\"generalize\",[e(n),n,t,r,i]))}async function P(n,t,r){return a(await s(\"densify\",[e(n),n,t,r]))}async function U(n,t,r,i=0){return a(await s(\"geodesicDensify\",[e(n),n,t,r,i]))}function W(n,t){return s(\"planarArea\",[e(n),n,t])}function F(n,t){return s(\"planarLength\",[e(n),n,t])}function K(n,t,r){return s(\"geodesicArea\",[e(n),n,t,r])}function M(n,t,r){return s(\"geodesicLength\",[e(n),n,t,r])}export{V as buffer,l as clip,p as contains,N as convexHull,w as crosses,y as cut,P as densify,R as difference,S as disjoint,m as distance,d as equals,f as extendedSpatialReferenceInfo,B as flipHorizontal,C as flipVertical,G as generalize,K as geodesicArea,b as geodesicBuffer,U as geodesicDensify,M as geodesicLength,j as intersect,g as intersects,v as isSimple,z as nearestCoordinate,D as nearestVertex,H as nearestVertices,I as offset,O as overlaps,W as planarArea,F as planarLength,h as relate,q as rotate,J as simplify,E as symmetricDifference,A as touches,k as union,x as within};\n"]},"metadata":{},"sourceType":"module"}