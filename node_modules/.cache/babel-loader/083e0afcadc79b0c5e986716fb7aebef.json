{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../../shaderModules/interfaces.js\";\n\nfunction o(o, t) {\n  const r = o.fragment;\n  t.receiveAmbientOcclusion ? (r.uniforms.add(\"ssaoTex\", \"sampler2D\"), r.uniforms.add(\"viewportPixelSz\", \"vec4\"), r.code.add(e`float evaluateAmbientOcclusion() {\nreturn 1.0 - texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;\n}\nfloat evaluateAmbientOcclusionInverse() {\nfloat ssao = texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;\nreturn viewportPixelSz.z < 0.0 ? 1.0 : ssao;\n}`)) : r.code.add(e`float evaluateAmbientOcclusion() { return 0.0; }\nfloat evaluateAmbientOcclusionInverse() { return 1.0; }`);\n}\n\nexport { o as EvaluateAmbientOcclusion };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js"],"names":["glsl","e","o","t","r","fragment","receiveAmbientOcclusion","uniforms","add","code","EvaluateAmbientOcclusion"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,mCAArB;;AAAyD,SAASC,CAAT,CAAWA,CAAX,EAAaC,CAAb,EAAe;AAAC,QAAMC,CAAC,GAACF,CAAC,CAACG,QAAV;AAAmBF,EAAAA,CAAC,CAACG,uBAAF,IAA2BF,CAAC,CAACG,QAAF,CAAWC,GAAX,CAAe,SAAf,EAAyB,WAAzB,GAAsCJ,CAAC,CAACG,QAAF,CAAWC,GAAX,CAAe,iBAAf,EAAiC,MAAjC,CAAtC,EAA+EJ,CAAC,CAACK,IAAF,CAAOD,GAAP,CAAWP,CAAE;AACnN;AACA;AACA;AACA;AACA;AACA,EANsM,CAA1G,IAMvFG,CAAC,CAACK,IAAF,CAAOD,GAAP,CAAWP,CAAE;AAClB,wDADK,CANuF;AAOlC;;AAAA,SAAOC,CAAC,IAAIQ,wBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function o(o,t){const r=o.fragment;t.receiveAmbientOcclusion?(r.uniforms.add(\"ssaoTex\",\"sampler2D\"),r.uniforms.add(\"viewportPixelSz\",\"vec4\"),r.code.add(e`float evaluateAmbientOcclusion() {\nreturn 1.0 - texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;\n}\nfloat evaluateAmbientOcclusionInverse() {\nfloat ssao = texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;\nreturn viewportPixelSz.z < 0.0 ? 1.0 : ssao;\n}`)):r.code.add(e`float evaluateAmbientOcclusion() { return 0.0; }\nfloat evaluateAmbientOcclusionInverse() { return 1.0; }`)}export{o as EvaluateAmbientOcclusion};\n"]},"metadata":{},"sourceType":"module"}