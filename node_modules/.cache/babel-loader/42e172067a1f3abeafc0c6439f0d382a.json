{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../../chunks/tslib.es6.js\";\nimport { autoDispose as r } from \"../lib/AutoDisposable.js\";\nimport e from \"../lib/GLMaterial.js\";\nimport { Material as i, materialParametersDefaults as s } from \"../lib/Material.js\";\nimport { DefaultBufferWriter as o, PositionUVLayout as a } from \"./internal/DefaultBufferWriter.js\";\nimport { intersectTriangleGeometry as n } from \"./internal/MaterialUtil.js\";\nimport { SlicePlaneMaterialTechnique as u } from \"../shaders/SlicePlaneMaterialTechnique.js\";\n\nclass l extends i {\n  constructor(t) {\n    super(t, m);\n  }\n\n  intersect(t, r, e, i, s, o, a) {\n    return n(t, r, i, s, o, void 0, a);\n  }\n\n  createBufferWriter() {\n    return new o(a);\n  }\n\n  getGLMaterial(t) {\n    return 0 === t.output ? new c(t) : void 0;\n  }\n\n}\n\nclass c extends e {\n  constructor(t) {\n    super(t), this._technique = new u(this._techniqueRep.constructionContext, null), this.updateParameters();\n  }\n\n  updateParameters() {}\n\n  beginSlot(t) {\n    return 8 === t;\n  }\n\n  bind(t) {\n    this._technique.bindPass(this._material.params, t);\n  }\n\n}\n\nt([r()], c.prototype, \"_technique\", void 0);\nconst m = {\n  backgroundColor: [1, 0, 0, .5],\n  gridColor: [0, 1, 0, .5],\n  gridWidth: 4,\n  ...s\n};\nexport { l as SlicePlaneMaterial };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/materials/SlicePlaneMaterial.js"],"names":["_","t","autoDispose","r","e","Material","i","materialParametersDefaults","s","DefaultBufferWriter","o","PositionUVLayout","a","intersectTriangleGeometry","n","SlicePlaneMaterialTechnique","u","l","constructor","m","intersect","createBufferWriter","getGLMaterial","output","c","_technique","_techniqueRep","constructionContext","updateParameters","beginSlot","bind","bindPass","_material","params","prototype","backgroundColor","gridColor","gridWidth","SlicePlaneMaterial"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,iCAAlB;AAAoD,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,0BAA5B;AAAuD,OAAOC,CAAP,MAAa,sBAAb;AAAoC,SAAOC,QAAQ,IAAIC,CAAnB,EAAqBC,0BAA0B,IAAIC,CAAnD,QAAyD,oBAAzD;AAA8E,SAAOC,mBAAmB,IAAIC,CAA9B,EAAgCC,gBAAgB,IAAIC,CAApD,QAA0D,mCAA1D;AAA8F,SAAOC,yBAAyB,IAAIC,CAApC,QAA0C,4BAA1C;AAAuE,SAAOC,2BAA2B,IAAIC,CAAtC,QAA4C,2CAA5C;;AAAwF,MAAMC,CAAN,SAAgBX,CAAhB,CAAiB;AAACY,EAAAA,WAAW,CAACjB,CAAD,EAAG;AAAC,UAAMA,CAAN,EAAQkB,CAAR;AAAW;;AAAAC,EAAAA,SAAS,CAACnB,CAAD,EAAGE,CAAH,EAAKC,CAAL,EAAOE,CAAP,EAASE,CAAT,EAAWE,CAAX,EAAaE,CAAb,EAAe;AAAC,WAAOE,CAAC,CAACb,CAAD,EAAGE,CAAH,EAAKG,CAAL,EAAOE,CAAP,EAASE,CAAT,EAAW,KAAK,CAAhB,EAAkBE,CAAlB,CAAR;AAA6B;;AAAAS,EAAAA,kBAAkB,GAAE;AAAC,WAAO,IAAIX,CAAJ,CAAME,CAAN,CAAP;AAAgB;;AAAAU,EAAAA,aAAa,CAACrB,CAAD,EAAG;AAAC,WAAO,MAAIA,CAAC,CAACsB,MAAN,GAAa,IAAIC,CAAJ,CAAMvB,CAAN,CAAb,GAAsB,KAAK,CAAlC;AAAoC;;AAA3K;;AAA4K,MAAMuB,CAAN,SAAgBpB,CAAhB,CAAiB;AAACc,EAAAA,WAAW,CAACjB,CAAD,EAAG;AAAC,UAAMA,CAAN,GAAS,KAAKwB,UAAL,GAAgB,IAAIT,CAAJ,CAAM,KAAKU,aAAL,CAAmBC,mBAAzB,EAA6C,IAA7C,CAAzB,EAA4E,KAAKC,gBAAL,EAA5E;AAAoG;;AAAAA,EAAAA,gBAAgB,GAAE,CAAE;;AAAAC,EAAAA,SAAS,CAAC5B,CAAD,EAAG;AAAC,WAAO,MAAIA,CAAX;AAAa;;AAAA6B,EAAAA,IAAI,CAAC7B,CAAD,EAAG;AAAC,SAAKwB,UAAL,CAAgBM,QAAhB,CAAyB,KAAKC,SAAL,CAAeC,MAAxC,EAA+ChC,CAA/C;AAAkD;;AAA5N;;AAA6NA,CAAC,CAAC,CAACE,CAAC,EAAF,CAAD,EAAOqB,CAAC,CAACU,SAAT,EAAmB,YAAnB,EAAgC,KAAK,CAArC,CAAD;AAAyC,MAAMf,CAAC,GAAC;AAACgB,EAAAA,eAAe,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,CAAjB;AAA4BC,EAAAA,SAAS,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,CAAtC;AAAiDC,EAAAA,SAAS,EAAC,CAA3D;AAA6D,KAAG7B;AAAhE,CAAR;AAA2E,SAAOS,CAAC,IAAIqB,kBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../../chunks/tslib.es6.js\";import{autoDispose as r}from\"../lib/AutoDisposable.js\";import e from\"../lib/GLMaterial.js\";import{Material as i,materialParametersDefaults as s}from\"../lib/Material.js\";import{DefaultBufferWriter as o,PositionUVLayout as a}from\"./internal/DefaultBufferWriter.js\";import{intersectTriangleGeometry as n}from\"./internal/MaterialUtil.js\";import{SlicePlaneMaterialTechnique as u}from\"../shaders/SlicePlaneMaterialTechnique.js\";class l extends i{constructor(t){super(t,m)}intersect(t,r,e,i,s,o,a){return n(t,r,i,s,o,void 0,a)}createBufferWriter(){return new o(a)}getGLMaterial(t){return 0===t.output?new c(t):void 0}}class c extends e{constructor(t){super(t),this._technique=new u(this._techniqueRep.constructionContext,null),this.updateParameters()}updateParameters(){}beginSlot(t){return 8===t}bind(t){this._technique.bindPass(this._material.params,t)}}t([r()],c.prototype,\"_technique\",void 0);const m={backgroundColor:[1,0,0,.5],gridColor:[0,1,0,.5],gridWidth:4,...s};export{l as SlicePlaneMaterial};\n"]},"metadata":{},"sourceType":"module"}