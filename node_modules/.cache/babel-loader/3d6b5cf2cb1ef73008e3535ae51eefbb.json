{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { eachAlways as e } from \"../../../../../core/promiseUtils.js\";\nimport { BufferView as i } from \"./bufferview.js\";\n\nclass r {\n  constructor(e) {\n    this.gltf = e, this.bufferViews = [], this.isFinalized = !1, e.buffers || (e.buffers = []), this.index = e.buffers.length;\n    const i = {\n      byteLength: -1\n    };\n    e.buffers.push(i), this.buffer = i;\n  }\n\n  addBufferView(e, r, t) {\n    if (this.finalizePromise) throw new Error(\"Cannot add buffer view after fiinalizing buffer\");\n    const f = new i(this, this.gltf, e, r, t);\n    return this.bufferViews.push(f), f;\n  }\n\n  getByteOffset(e) {\n    let i = 0;\n\n    for (const r of this.bufferViews) {\n      if (r === e) return i;\n      i += r.size;\n    }\n\n    throw new Error(\"Given bufferView was not present in this buffer\");\n  }\n\n  getViewFinalizePromises(e) {\n    const i = [];\n\n    for (const r of this.bufferViews) {\n      if (e && r === e) return i;\n      i.push(r.finalized);\n    }\n\n    return i;\n  }\n\n  getArrayBuffer() {\n    if (!this.isFinalized) throw new Error(\"Cannot get ArrayBuffer from Buffer before it is finalized\");\n    const e = this.getTotalSize(),\n          i = new ArrayBuffer(e);\n    let r = 0;\n\n    for (const t of this.bufferViews) t.writeOutToBuffer(i, r), r += t.size;\n\n    return i;\n  }\n\n  finalize() {\n    if (this.finalizePromise) throw new Error(`Buffer ${this.index} was already finalized`);\n    return this.finalizePromise = new Promise(i => {\n      i(e(this.getViewFinalizePromises()));\n    }).then(() => {\n      this.isFinalized = !0;\n      const e = this.getArrayBuffer();\n      this.buffer.byteLength = e.byteLength, this.buffer.uri = e;\n    }), this.gltf.extras.promises.push(this.finalizePromise), this.finalizePromise;\n  }\n\n  getTotalSize() {\n    let e = 0;\n\n    for (const i of this.bufferViews) e += i.size;\n\n    return e;\n  }\n\n}\n\nexport { r as Buffer };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/geometry/support/meshUtils/exporters/gltf/buffer.js"],"names":["eachAlways","e","BufferView","i","r","constructor","gltf","bufferViews","isFinalized","buffers","index","length","byteLength","push","buffer","addBufferView","t","finalizePromise","Error","f","getByteOffset","size","getViewFinalizePromises","finalized","getArrayBuffer","getTotalSize","ArrayBuffer","writeOutToBuffer","finalize","Promise","then","uri","extras","promises","Buffer"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{eachAlways as e}from\"../../../../../core/promiseUtils.js\";import{BufferView as i}from\"./bufferview.js\";class r{constructor(e){this.gltf=e,this.bufferViews=[],this.isFinalized=!1,e.buffers||(e.buffers=[]),this.index=e.buffers.length;const i={byteLength:-1};e.buffers.push(i),this.buffer=i}addBufferView(e,r,t){if(this.finalizePromise)throw new Error(\"Cannot add buffer view after fiinalizing buffer\");const f=new i(this,this.gltf,e,r,t);return this.bufferViews.push(f),f}getByteOffset(e){let i=0;for(const r of this.bufferViews){if(r===e)return i;i+=r.size}throw new Error(\"Given bufferView was not present in this buffer\")}getViewFinalizePromises(e){const i=[];for(const r of this.bufferViews){if(e&&r===e)return i;i.push(r.finalized)}return i}getArrayBuffer(){if(!this.isFinalized)throw new Error(\"Cannot get ArrayBuffer from Buffer before it is finalized\");const e=this.getTotalSize(),i=new ArrayBuffer(e);let r=0;for(const t of this.bufferViews)t.writeOutToBuffer(i,r),r+=t.size;return i}finalize(){if(this.finalizePromise)throw new Error(`Buffer ${this.index} was already finalized`);return this.finalizePromise=new Promise((i=>{i(e(this.getViewFinalizePromises()))})).then((()=>{this.isFinalized=!0;const e=this.getArrayBuffer();this.buffer.byteLength=e.byteLength,this.buffer.uri=e})),this.gltf.extras.promises.push(this.finalizePromise),this.finalizePromise}getTotalSize(){let e=0;for(const i of this.bufferViews)e+=i.size;return e}}export{r as Buffer};\n"]},"metadata":{},"sourceType":"module"}