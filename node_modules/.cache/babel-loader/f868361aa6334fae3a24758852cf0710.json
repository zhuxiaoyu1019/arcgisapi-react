{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport r from \"../../../request.js\";\nimport { result as e } from \"../../../core/asyncUtils.js\";\nimport o from \"../../../core/Error.js\";\nimport { isNone as s } from \"../../../core/maybe.js\";\nimport { throwIfAborted as t, throwIfAbortError as a } from \"../../../core/promiseUtils.js\";\nimport { isDataProtocol as i, dataToArrayBuffer as m } from \"../../../core/urlUtils.js\";\n\nclass n {\n  constructor(r) {\n    this.streamDataRequester = r;\n  }\n\n  async loadJSON(r, e) {\n    return this.load(\"json\", r, e);\n  }\n\n  async loadBinary(r, e) {\n    return i(r) ? (t(e), m(r)) : this.load(\"binary\", r, e);\n  }\n\n  async loadImage(r, e) {\n    return this.load(\"image\", r, e);\n  }\n\n  async load(t, i, m) {\n    if (s(this.streamDataRequester)) return (await r(i, {\n      responseType: c[t]\n    })).data;\n    const n = await e(this.streamDataRequester.request(i, t, m));\n    if (!0 === n.ok) return n.value;\n    throw a(n.error), new o(\"\", `Request for resource failed: ${n.error}`);\n  }\n\n}\n\nconst c = {\n  image: \"image\",\n  binary: \"array-buffer\",\n  json: \"json\"\n};\nexport { n as DefaultLoadingContext };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/glTF/DefaultLoadingContext.js"],"names":["r","result","e","o","isNone","s","throwIfAborted","t","throwIfAbortError","a","isDataProtocol","i","dataToArrayBuffer","m","n","constructor","streamDataRequester","loadJSON","load","loadBinary","loadImage","responseType","c","data","request","ok","value","error","image","binary","json","DefaultLoadingContext"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,qBAAb;AAAmC,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,6BAAvB;AAAqD,OAAOC,CAAP,MAAa,wBAAb;AAAsC,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,wBAAvB;AAAgD,SAAOC,cAAc,IAAIC,CAAzB,EAA2BC,iBAAiB,IAAIC,CAAhD,QAAsD,+BAAtD;AAAsF,SAAOC,cAAc,IAAIC,CAAzB,EAA2BC,iBAAiB,IAAIC,CAAhD,QAAsD,2BAAtD;;AAAkF,MAAMC,CAAN,CAAO;AAACC,EAAAA,WAAW,CAACf,CAAD,EAAG;AAAC,SAAKgB,mBAAL,GAAyBhB,CAAzB;AAA2B;;AAAc,QAARiB,QAAQ,CAACjB,CAAD,EAAGE,CAAH,EAAK;AAAC,WAAO,KAAKgB,IAAL,CAAU,MAAV,EAAiBlB,CAAjB,EAAmBE,CAAnB,CAAP;AAA6B;;AAAgB,QAAViB,UAAU,CAACnB,CAAD,EAAGE,CAAH,EAAK;AAAC,WAAOS,CAAC,CAACX,CAAD,CAAD,IAAMO,CAAC,CAACL,CAAD,CAAD,EAAKW,CAAC,CAACb,CAAD,CAAZ,IAAiB,KAAKkB,IAAL,CAAU,QAAV,EAAmBlB,CAAnB,EAAqBE,CAArB,CAAxB;AAAgD;;AAAe,QAATkB,SAAS,CAACpB,CAAD,EAAGE,CAAH,EAAK;AAAC,WAAO,KAAKgB,IAAL,CAAU,OAAV,EAAkBlB,CAAlB,EAAoBE,CAApB,CAAP;AAA8B;;AAAU,QAAJgB,IAAI,CAACX,CAAD,EAAGI,CAAH,EAAKE,CAAL,EAAO;AAAC,QAAGR,CAAC,CAAC,KAAKW,mBAAN,CAAJ,EAA+B,OAAM,CAAC,MAAMhB,CAAC,CAACW,CAAD,EAAG;AAACU,MAAAA,YAAY,EAACC,CAAC,CAACf,CAAD;AAAf,KAAH,CAAR,EAAiCgB,IAAvC;AAA4C,UAAMT,CAAC,GAAC,MAAMZ,CAAC,CAAC,KAAKc,mBAAL,CAAyBQ,OAAzB,CAAiCb,CAAjC,EAAmCJ,CAAnC,EAAqCM,CAArC,CAAD,CAAf;AAAyD,QAAG,CAAC,CAAD,KAAKC,CAAC,CAACW,EAAV,EAAa,OAAOX,CAAC,CAACY,KAAT;AAAe,UAAMjB,CAAC,CAACK,CAAC,CAACa,KAAH,CAAD,EAAW,IAAIxB,CAAJ,CAAM,EAAN,EAAU,gCAA+BW,CAAC,CAACa,KAAM,EAAjD,CAAjB;AAAqE;;AAA5c;;AAA6c,MAAML,CAAC,GAAC;AAACM,EAAAA,KAAK,EAAC,OAAP;AAAeC,EAAAA,MAAM,EAAC,cAAtB;AAAqCC,EAAAA,IAAI,EAAC;AAA1C,CAAR;AAA0D,SAAOhB,CAAC,IAAIiB,qBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport r from\"../../../request.js\";import{result as e}from\"../../../core/asyncUtils.js\";import o from\"../../../core/Error.js\";import{isNone as s}from\"../../../core/maybe.js\";import{throwIfAborted as t,throwIfAbortError as a}from\"../../../core/promiseUtils.js\";import{isDataProtocol as i,dataToArrayBuffer as m}from\"../../../core/urlUtils.js\";class n{constructor(r){this.streamDataRequester=r}async loadJSON(r,e){return this.load(\"json\",r,e)}async loadBinary(r,e){return i(r)?(t(e),m(r)):this.load(\"binary\",r,e)}async loadImage(r,e){return this.load(\"image\",r,e)}async load(t,i,m){if(s(this.streamDataRequester))return(await r(i,{responseType:c[t]})).data;const n=await e(this.streamDataRequester.request(i,t,m));if(!0===n.ok)return n.value;throw a(n.error),new o(\"\",`Request for resource failed: ${n.error}`)}}const c={image:\"image\",binary:\"array-buffer\",json:\"json\"};export{n as DefaultLoadingContext};\n"]},"metadata":{},"sourceType":"module"}