{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { andThen as e, isNone as t, isSome as i, unwrap as r } from \"../../../../../../core/maybe.js\";\nimport { pt2px as s } from \"../../../../../../core/screenUtils.js\";\nimport { deltaDecodeGeometry as o, convertFromGeometry as n } from \"../../../../../../layers/graphics/featureConversionUtils.js\";\nimport { CIMMarkerPlacementHelper as h } from \"../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper.js\";\nimport { MAGIC_LABEL_LINE_HEIGHT as x } from \"../../definitions.js\";\nimport { WGLGeometryType as a } from \"../../enums.js\";\nimport { i8888to32 as l, i1616to32 as d } from \"../../number.js\";\nimport { MaterialKeyBase as m } from \"../../materialKey/MaterialKey.js\";\nimport { shapeGlyphs as c } from \"./shapingUtils.js\";\n\nconst _ = 8,\n      f = f => class extends f {\n  constructor(...e) {\n    super(...e), this._isCIM = !1, this._vertexBoundsScale = 1, this.geometryType = a.TEXT, this._aux = l(0, 0, this._referenceSize, this._bitset);\n  }\n\n  bindTextInfo(t, i) {\n    t && t.length ? this._shapingInfo = e(t, e => c(e, i, {\n      scale: this._scale,\n      angle: this._angle,\n      xOffset: this._xOffset,\n      yOffset: this._yOffset,\n      hAlign: this._xAlignD,\n      vAlign: this._yAlignD,\n      maxLineWidth: Math.max(32, Math.min(this._lineWidth, 512)),\n      lineHeight: x * Math.max(.25, Math.min(this._lineHeight, 4)),\n      decoration: this._decoration,\n      isCIM: this._isCIM\n    })) : this._shapingInfo = null;\n  }\n\n  _write(e, t, i) {\n    const r = t.getDisplayId();\n\n    this._writeGeometry(e, t, r, i);\n  }\n\n  _writeGeometry(e, r, s, h) {\n    const x = this._shapingInfo;\n    if (t(x)) return;\n\n    if (i(this._textPlacement)) {\n      const t = null != h ? h : r.readLegacyGeometry();\n      return this._writePlacedText(e, s, t, x);\n    }\n\n    const a = h ? o(n(h), 2) : \"esriGeometryPolygon\" === r.geometryType ? r.readCentroid() : r.readUnquantizedGeometry();\n\n    if (a) {\n      if (a.isPoint) {\n        const [t, i] = a.coords;\n        return this._writeGlyphs(e, s, {\n          x: t,\n          y: i\n        }, x);\n      }\n\n      a.forEachVertex((t, i) => this._writeGlyphs(e, s, {\n        x: t,\n        y: i\n      }, x));\n    }\n  }\n\n  _writePlacedText(e, t, i, o) {\n    const n = r(this._textPlacement),\n          x = h.getPlacement(i, n, s(1));\n    if (!x) return;\n    let a = x.next();\n\n    for (; null != a;) {\n      const i = a.getAngle();\n      o.setRotation(i), this._writeGlyphs(e, t, {\n        x: a.tx,\n        y: a.ty\n      }, o), o.setRotation(-i), a = x.next();\n    }\n  }\n\n  _writeGlyphs(e, t, i, r) {\n    const s = m.load(this._materialKey),\n          o = d(Math.round(_ * i.x), Math.round(_ * i.y));\n\n    for (const n of r.glyphs) {\n      s.textureBinding = n.textureBinding, e.recordStart(t, s.data, this.geometryType, !1, !0);\n      const i = n.bounds,\n            r = this._vertexBoundsScale;\n      e.vertexBounds(i.x * r, i.y * r, i.width * r, i.height * r), this._writeVertices(e, t, o, n), e.recordEnd();\n    }\n  }\n\n  _writeGlyph(e, t, i, r, s) {\n    const o = m.load(this._materialKey),\n          n = d(Math.round(_ * i), Math.round(_ * r));\n    o.textureBinding = s.textureBinding, e.recordStart(t, o.data, this.geometryType, !1, !0);\n    const h = s.bounds,\n          x = this._vertexBoundsScale;\n    e.vertexBounds(h.x * x, h.y * x, h.width * x, h.height * x), this._writeVertices(e, t, n, s), e.recordEnd();\n  }\n\n  _writeVertices(e, t, i, r) {\n    const s = e.vertexCount();\n    this._writeVertexCommon(e, t, i, r), e.vertexWrite(r.offsets.upperLeft), e.vertexWrite(r.texcoords.upperLeft), e.vertexEnd(), this._writeVertexCommon(e, t, i, r), e.vertexWrite(r.offsets.upperRight), e.vertexWrite(r.texcoords.upperRight), e.vertexEnd(), this._writeVertexCommon(e, t, i, r), e.vertexWrite(r.offsets.lowerLeft), e.vertexWrite(r.texcoords.lowerLeft), e.vertexEnd(), this._writeVertexCommon(e, t, i, r), e.vertexWrite(r.offsets.lowerRight), e.vertexWrite(r.texcoords.lowerRight), e.vertexEnd(), e.indexWrite(s + 0), e.indexWrite(s + 1), e.indexWrite(s + 2), e.indexWrite(s + 1), e.indexWrite(s + 3), e.indexWrite(s + 2);\n  }\n\n  _writeVertexCommon(e, t, i, r) {\n    const s = this._color,\n          o = this._haloColor,\n          n = l(0, 0, this._referenceSize, this._bitset),\n          h = l(0, 0, this._size, this._haloSize);\n    e.vertexWrite(i), e.vertexWrite(t), e.vertexWrite(s), e.vertexWrite(o), e.vertexWrite(h), e.vertexWrite(n), e.vertexWrite(this._minMaxZoom);\n  }\n\n};\n\nexport default f;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/2d/engine/webgl/mesh/templates/WGLBaseTextTemplate.js"],"names":["andThen","e","isNone","t","isSome","i","unwrap","r","pt2px","s","deltaDecodeGeometry","o","convertFromGeometry","n","CIMMarkerPlacementHelper","h","MAGIC_LABEL_LINE_HEIGHT","x","WGLGeometryType","a","i8888to32","l","i1616to32","d","MaterialKeyBase","m","shapeGlyphs","c","_","f","constructor","_isCIM","_vertexBoundsScale","geometryType","TEXT","_aux","_referenceSize","_bitset","bindTextInfo","length","_shapingInfo","scale","_scale","angle","_angle","xOffset","_xOffset","yOffset","_yOffset","hAlign","_xAlignD","vAlign","_yAlignD","maxLineWidth","Math","max","min","_lineWidth","lineHeight","_lineHeight","decoration","_decoration","isCIM","_write","getDisplayId","_writeGeometry","_textPlacement","readLegacyGeometry","_writePlacedText","readCentroid","readUnquantizedGeometry","isPoint","coords","_writeGlyphs","y","forEachVertex","getPlacement","next","getAngle","setRotation","tx","ty","load","_materialKey","round","glyphs","textureBinding","recordStart","data","bounds","vertexBounds","width","height","_writeVertices","recordEnd","_writeGlyph","vertexCount","_writeVertexCommon","vertexWrite","offsets","upperLeft","texcoords","vertexEnd","upperRight","lowerLeft","lowerRight","indexWrite","_color","_haloColor","_size","_haloSize","_minMaxZoom"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{andThen as e,isNone as t,isSome as i,unwrap as r}from\"../../../../../../core/maybe.js\";import{pt2px as s}from\"../../../../../../core/screenUtils.js\";import{deltaDecodeGeometry as o,convertFromGeometry as n}from\"../../../../../../layers/graphics/featureConversionUtils.js\";import{CIMMarkerPlacementHelper as h}from\"../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper.js\";import{MAGIC_LABEL_LINE_HEIGHT as x}from\"../../definitions.js\";import{WGLGeometryType as a}from\"../../enums.js\";import{i8888to32 as l,i1616to32 as d}from\"../../number.js\";import{MaterialKeyBase as m}from\"../../materialKey/MaterialKey.js\";import{shapeGlyphs as c}from\"./shapingUtils.js\";const _=8,f=f=>class extends f{constructor(...e){super(...e),this._isCIM=!1,this._vertexBoundsScale=1,this.geometryType=a.TEXT,this._aux=l(0,0,this._referenceSize,this._bitset)}bindTextInfo(t,i){t&&t.length?this._shapingInfo=e(t,(e=>c(e,i,{scale:this._scale,angle:this._angle,xOffset:this._xOffset,yOffset:this._yOffset,hAlign:this._xAlignD,vAlign:this._yAlignD,maxLineWidth:Math.max(32,Math.min(this._lineWidth,512)),lineHeight:x*Math.max(.25,Math.min(this._lineHeight,4)),decoration:this._decoration,isCIM:this._isCIM}))):this._shapingInfo=null}_write(e,t,i){const r=t.getDisplayId();this._writeGeometry(e,t,r,i)}_writeGeometry(e,r,s,h){const x=this._shapingInfo;if(t(x))return;if(i(this._textPlacement)){const t=null!=h?h:r.readLegacyGeometry();return this._writePlacedText(e,s,t,x)}const a=h?o(n(h),2):\"esriGeometryPolygon\"===r.geometryType?r.readCentroid():r.readUnquantizedGeometry();if(a){if(a.isPoint){const[t,i]=a.coords;return this._writeGlyphs(e,s,{x:t,y:i},x)}a.forEachVertex(((t,i)=>this._writeGlyphs(e,s,{x:t,y:i},x)))}}_writePlacedText(e,t,i,o){const n=r(this._textPlacement),x=h.getPlacement(i,n,s(1));if(!x)return;let a=x.next();for(;null!=a;){const i=a.getAngle();o.setRotation(i),this._writeGlyphs(e,t,{x:a.tx,y:a.ty},o),o.setRotation(-i),a=x.next()}}_writeGlyphs(e,t,i,r){const s=m.load(this._materialKey),o=d(Math.round(_*i.x),Math.round(_*i.y));for(const n of r.glyphs){s.textureBinding=n.textureBinding,e.recordStart(t,s.data,this.geometryType,!1,!0);const i=n.bounds,r=this._vertexBoundsScale;e.vertexBounds(i.x*r,i.y*r,i.width*r,i.height*r),this._writeVertices(e,t,o,n),e.recordEnd()}}_writeGlyph(e,t,i,r,s){const o=m.load(this._materialKey),n=d(Math.round(_*i),Math.round(_*r));o.textureBinding=s.textureBinding,e.recordStart(t,o.data,this.geometryType,!1,!0);const h=s.bounds,x=this._vertexBoundsScale;e.vertexBounds(h.x*x,h.y*x,h.width*x,h.height*x),this._writeVertices(e,t,n,s),e.recordEnd()}_writeVertices(e,t,i,r){const s=e.vertexCount();this._writeVertexCommon(e,t,i,r),e.vertexWrite(r.offsets.upperLeft),e.vertexWrite(r.texcoords.upperLeft),e.vertexEnd(),this._writeVertexCommon(e,t,i,r),e.vertexWrite(r.offsets.upperRight),e.vertexWrite(r.texcoords.upperRight),e.vertexEnd(),this._writeVertexCommon(e,t,i,r),e.vertexWrite(r.offsets.lowerLeft),e.vertexWrite(r.texcoords.lowerLeft),e.vertexEnd(),this._writeVertexCommon(e,t,i,r),e.vertexWrite(r.offsets.lowerRight),e.vertexWrite(r.texcoords.lowerRight),e.vertexEnd(),e.indexWrite(s+0),e.indexWrite(s+1),e.indexWrite(s+2),e.indexWrite(s+1),e.indexWrite(s+3),e.indexWrite(s+2)}_writeVertexCommon(e,t,i,r){const s=this._color,o=this._haloColor,n=l(0,0,this._referenceSize,this._bitset),h=l(0,0,this._size,this._haloSize);e.vertexWrite(i),e.vertexWrite(t),e.vertexWrite(s),e.vertexWrite(o),e.vertexWrite(h),e.vertexWrite(n),e.vertexWrite(this._minMaxZoom)}};export default f;\n"]},"metadata":{},"sourceType":"module"}