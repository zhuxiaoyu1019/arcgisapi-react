{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport e from \"../../request.js\";\nimport { parseUrl as t, asValidOptions as r } from \"../utils.js\";\nimport { encodeGeometries as o } from \"./utils.js\";\nimport s from \"../../geometry/Polygon.js\";\n\nasync function i(i, n, m, p) {\n  const g = n[0].spatialReference,\n        f = t(i),\n        a = { ...f.query,\n    f: \"json\",\n    sr: JSON.stringify(g.toJSON()),\n    polygons: JSON.stringify(o(n).geometries),\n    polylines: JSON.stringify(o(m).geometries)\n  },\n        y = r(a, p);\n  return e(f.path + \"/autoComplete\", y).then(({\n    data: e\n  }) => (e.geometries || []).map(({\n    rings: e\n  }) => new s({\n    spatialReference: g,\n    rings: e\n  })));\n}\n\nexport { i as autoComplete };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/rest/geometryService/autoComplete.js"],"names":["e","parseUrl","t","asValidOptions","r","encodeGeometries","o","s","i","n","m","p","g","spatialReference","f","a","query","sr","JSON","stringify","toJSON","polygons","geometries","polylines","y","path","then","data","map","rings","autoComplete"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAM,mBAAN;AAA0B,OAAOA,CAAP,MAAa,kBAAb;AAAgC,SAAOC,QAAQ,IAAIC,CAAnB,EAAqBC,cAAc,IAAIC,CAAvC,QAA6C,aAA7C;AAA2D,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,YAAjC;AAA8C,OAAOC,CAAP,MAAa,2BAAb;;AAAyC,eAAeC,CAAf,CAAiBA,CAAjB,EAAmBC,CAAnB,EAAqBC,CAArB,EAAuBC,CAAvB,EAAyB;AAAC,QAAMC,CAAC,GAACH,CAAC,CAAC,CAAD,CAAD,CAAKI,gBAAb;AAAA,QAA8BC,CAAC,GAACZ,CAAC,CAACM,CAAD,CAAjC;AAAA,QAAqCO,CAAC,GAAC,EAAC,GAAGD,CAAC,CAACE,KAAN;AAAYF,IAAAA,CAAC,EAAC,MAAd;AAAqBG,IAAAA,EAAE,EAACC,IAAI,CAACC,SAAL,CAAeP,CAAC,CAACQ,MAAF,EAAf,CAAxB;AAAmDC,IAAAA,QAAQ,EAACH,IAAI,CAACC,SAAL,CAAeb,CAAC,CAACG,CAAD,CAAD,CAAKa,UAApB,CAA5D;AAA4FC,IAAAA,SAAS,EAACL,IAAI,CAACC,SAAL,CAAeb,CAAC,CAACI,CAAD,CAAD,CAAKY,UAApB;AAAtG,GAAvC;AAAA,QAA8KE,CAAC,GAACpB,CAAC,CAACW,CAAD,EAAGJ,CAAH,CAAjL;AAAuL,SAAOX,CAAC,CAACc,CAAC,CAACW,IAAF,GAAO,eAAR,EAAwBD,CAAxB,CAAD,CAA4BE,IAA5B,CAAkC,CAAC;AAACC,IAAAA,IAAI,EAAC3B;AAAN,GAAD,KAAY,CAACA,CAAC,CAACsB,UAAF,IAAc,EAAf,EAAmBM,GAAnB,CAAwB,CAAC;AAACC,IAAAA,KAAK,EAAC7B;AAAP,GAAD,KAAa,IAAIO,CAAJ,CAAM;AAACM,IAAAA,gBAAgB,EAACD,CAAlB;AAAoBiB,IAAAA,KAAK,EAAC7B;AAA1B,GAAN,CAArC,CAA9C,CAAP;AAAkI;;AAAA,SAAOQ,CAAC,IAAIsB,YAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import e from\"../../request.js\";import{parseUrl as t,asValidOptions as r}from\"../utils.js\";import{encodeGeometries as o}from\"./utils.js\";import s from\"../../geometry/Polygon.js\";async function i(i,n,m,p){const g=n[0].spatialReference,f=t(i),a={...f.query,f:\"json\",sr:JSON.stringify(g.toJSON()),polygons:JSON.stringify(o(n).geometries),polylines:JSON.stringify(o(m).geometries)},y=r(a,p);return e(f.path+\"/autoComplete\",y).then((({data:e})=>(e.geometries||[]).map((({rings:e})=>new s({spatialReference:g,rings:e})))))}export{i as autoComplete};\n"]},"metadata":{},"sourceType":"module"}