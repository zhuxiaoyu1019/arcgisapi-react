{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { ForwardLinearDepth as e } from \"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";\nimport { Slice as a } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as i } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { PathVertexPosition as o } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/PathVertexPosition.glsl.js\";\nimport { OutputDepth as r } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js\";\nimport { OutputHighlight as l } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { ReadLinearDepth as d } from \"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";\nimport { EvaluateAmbientOcclusion as n } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";\nimport { EvaluateSceneLighting as t } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";\nimport { multipassTerrainTest as s } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { Normals as c } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";\nimport { NormalUtils as m } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js\";\nimport { ReadShadowMap as g } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { ColorConversion as v } from \"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";\nimport { glsl as p } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as u } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\n\nfunction h(h) {\n  const f = new u();\n  return f.vertex.uniforms.add(\"proj\", \"mat4\").add(\"view\", \"mat4\").add(\"camPos\", \"vec3\").add(\"localOrigin\", \"vec3\"), f.varyings.add(\"vpos\", \"vec3\"), f.include(o, h), 0 !== h.output && 7 !== h.output || (f.include(i, {\n    linearDepth: !1\n  }), h.receiveShadows && f.include(g, h), f.include(e, h), f.varyings.add(\"vnormal\", \"vec3\"), f.varyings.add(\"vcolor\", \"vec4\"), h.multipassTerrainEnabled && f.varyings.add(\"depth\", \"float\"), f.vertex.code.add(p`\n      void main() {\n        vpos = calculateVPos();\n        vnormal = normalize(localNormal());\n\n        ${h.multipassTerrainEnabled ? \"depth = (view * vec4(vpos, 1.0)).z;\" : \"\"}\n        gl_Position = transformPosition(proj, view, vpos);\n\n        ${0 === h.output ? \"forwardLinearDepth();\" : \"\"}\n\n        vcolor = getColor();\n      }\n    `)), h.multipassTerrainEnabled && (f.fragment.include(d), f.include(s, h)), 7 === h.output && (f.include(a, h), f.fragment.uniforms.add(\"camPos\", \"vec3\"), f.fragment.uniforms.add(\"localOrigin\", \"vec3\"), f.fragment.uniforms.add(\"opacity\", \"float\"), f.fragment.code.add(p`\n      void main() {\n        discardBySlice(vpos);\n        ${h.multipassTerrainEnabled ? \"terrainDepthTest(gl_FragCoord, depth);\" : \"\"}\n        float combinedOpacity = vcolor.a * opacity;\n        gl_FragColor = vec4(combinedOpacity);\n      }\n    `)), 0 === h.output && (f.include(a, h), f.include(t, h), f.include(n, h), h.receiveShadows && f.include(g, h), f.include(c, h), f.fragment.uniforms.add(\"camPos\", \"vec3\").add(\"localOrigin\", \"vec3\").add(\"ambient\", \"vec3\").add(\"diffuse\", \"vec3\").add(\"specular\", \"vec3\").add(\"opacity\", \"float\"), f.fragment.include(v), f.fragment.code.add(p`\n      void main() {\n        discardBySlice(vpos);\n        ${h.multipassTerrainEnabled ? \"terrainDepthTest(gl_FragCoord, depth);\" : \"\"}\n\n        shadingParams.viewDirection = normalize(vpos - camPos);\n        shadingParams.normalView = vnormal;\n        vec3 normal = shadingNormal(shadingParams);\n        float ssao = evaluateAmbientOcclusionInverse();\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n        vec3 additionalLight = ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n        ${h.receiveShadows ? \"float shadow = readShadowMap(vpos, linearDepth);\" : 1 === h.viewingMode ? \"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\" : \"float shadow = 0.0;\"}\n        vec3 albedo = vcolor.rgb * max(ambient, diffuse); // combine the old material parameters into a single one\n        float combinedOpacity = vcolor.a * opacity;\n        albedo += 0.25 * specular; // don't completely ignore specular for now\n\n        vec3 shadedColor = evaluateSceneLighting(normal, albedo, shadow, 1.0 - ssao, additionalLight);\n        gl_FragColor = vec4(shadedColor, combinedOpacity);\n        gl_FragColor = highlightSlice(gl_FragColor, vpos);\n        ${h.OITEnabled ? \"gl_FragColor = premultiplyAlpha(gl_FragColor);\" : \"\"}\n      }\n    `)), 1 !== h.output && 3 !== h.output || (f.include(i, {\n    linearDepth: !0\n  }), f.vertex.uniforms.add(\"nearFar\", \"vec2\"), f.varyings.add(\"depth\", \"float\"), f.vertex.code.add(p`void main() {\nvpos = calculateVPos();\ngl_Position = transformPositionWithDepth(proj, view, vpos, nearFar, depth);\n}`), f.include(a, h), f.include(r, h), f.fragment.uniforms.add(\"timeElapsed\", \"float\"), f.fragment.code.add(p`void main() {\ndiscardBySlice(vpos);\noutputDepth(depth);\n}`)), 2 === h.output && (f.include(i, {\n    linearDepth: !1\n  }), f.include(m, h), f.vertex.uniforms.add(\"viewNormal\", \"mat4\"), f.varyings.add(\"vnormal\", \"vec3\"), f.vertex.code.add(p`void main(void) {\nvpos = calculateVPos();\nvnormal = normalize((viewNormal * vec4(localNormal(), 1.0)).xyz);\ngl_Position = transformPosition(proj, view, vpos);\n}`), f.include(a, h), f.fragment.uniforms.add(\"waterColor\", \"vec4\"), f.fragment.code.add(p`void main() {\ndiscardBySlice(vpos);\nvec3 normal = normalize(vnormal);\nif (gl_FrontFacing == false) normal = -normal;\ngl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);\n}`)), 4 === h.output && (f.include(i, {\n    linearDepth: !1\n  }), f.include(m, h), f.vertex.uniforms.add(\"viewNormal\", \"mat4\"), f.varyings.add(\"vnormal\", \"vec3\"), f.vertex.code.add(p`void main(void) {\nvpos = calculateVPos();\ngl_Position = transformPosition(proj, view, vpos);\n}`), f.include(a, h), f.include(l), f.fragment.code.add(p`void main() {\ndiscardBySlice(vpos);\noutputHighlight();\n}`)), f;\n}\n\nvar f = Object.freeze({\n  __proto__: null,\n  build: h\n});\nexport { f as P, h as b };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/chunks/Path.glsl.js"],"names":["ForwardLinearDepth","e","Slice","a","Transform","i","PathVertexPosition","o","OutputDepth","r","OutputHighlight","l","ReadLinearDepth","d","EvaluateAmbientOcclusion","n","EvaluateSceneLighting","t","multipassTerrainTest","s","Normals","c","NormalUtils","m","ReadShadowMap","g","ColorConversion","v","glsl","p","ShaderBuilder","u","h","f","vertex","uniforms","add","varyings","include","output","linearDepth","receiveShadows","multipassTerrainEnabled","code","fragment","viewingMode","OITEnabled","Object","freeze","__proto__","build","P","b"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Slice as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{PathVertexPosition as o}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PathVertexPosition.glsl.js\";import{OutputDepth as r}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js\";import{OutputHighlight as l}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{ReadLinearDepth as d}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{EvaluateAmbientOcclusion as n}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as t}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{multipassTerrainTest as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Normals as c}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{NormalUtils as m}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js\";import{ReadShadowMap as g}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{ColorConversion as v}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{glsl as p}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as u}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";function h(h){const f=new u;return f.vertex.uniforms.add(\"proj\",\"mat4\").add(\"view\",\"mat4\").add(\"camPos\",\"vec3\").add(\"localOrigin\",\"vec3\"),f.varyings.add(\"vpos\",\"vec3\"),f.include(o,h),0!==h.output&&7!==h.output||(f.include(i,{linearDepth:!1}),h.receiveShadows&&f.include(g,h),f.include(e,h),f.varyings.add(\"vnormal\",\"vec3\"),f.varyings.add(\"vcolor\",\"vec4\"),h.multipassTerrainEnabled&&f.varyings.add(\"depth\",\"float\"),f.vertex.code.add(p`\n      void main() {\n        vpos = calculateVPos();\n        vnormal = normalize(localNormal());\n\n        ${h.multipassTerrainEnabled?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n        gl_Position = transformPosition(proj, view, vpos);\n\n        ${0===h.output?\"forwardLinearDepth();\":\"\"}\n\n        vcolor = getColor();\n      }\n    `)),h.multipassTerrainEnabled&&(f.fragment.include(d),f.include(s,h)),7===h.output&&(f.include(a,h),f.fragment.uniforms.add(\"camPos\",\"vec3\"),f.fragment.uniforms.add(\"localOrigin\",\"vec3\"),f.fragment.uniforms.add(\"opacity\",\"float\"),f.fragment.code.add(p`\n      void main() {\n        discardBySlice(vpos);\n        ${h.multipassTerrainEnabled?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        float combinedOpacity = vcolor.a * opacity;\n        gl_FragColor = vec4(combinedOpacity);\n      }\n    `)),0===h.output&&(f.include(a,h),f.include(t,h),f.include(n,h),h.receiveShadows&&f.include(g,h),f.include(c,h),f.fragment.uniforms.add(\"camPos\",\"vec3\").add(\"localOrigin\",\"vec3\").add(\"ambient\",\"vec3\").add(\"diffuse\",\"vec3\").add(\"specular\",\"vec3\").add(\"opacity\",\"float\"),f.fragment.include(v),f.fragment.code.add(p`\n      void main() {\n        discardBySlice(vpos);\n        ${h.multipassTerrainEnabled?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n\n        shadingParams.viewDirection = normalize(vpos - camPos);\n        shadingParams.normalView = vnormal;\n        vec3 normal = shadingNormal(shadingParams);\n        float ssao = evaluateAmbientOcclusionInverse();\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n        vec3 additionalLight = ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n        ${h.receiveShadows?\"float shadow = readShadowMap(vpos, linearDepth);\":1===h.viewingMode?\"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\":\"float shadow = 0.0;\"}\n        vec3 albedo = vcolor.rgb * max(ambient, diffuse); // combine the old material parameters into a single one\n        float combinedOpacity = vcolor.a * opacity;\n        albedo += 0.25 * specular; // don't completely ignore specular for now\n\n        vec3 shadedColor = evaluateSceneLighting(normal, albedo, shadow, 1.0 - ssao, additionalLight);\n        gl_FragColor = vec4(shadedColor, combinedOpacity);\n        gl_FragColor = highlightSlice(gl_FragColor, vpos);\n        ${h.OITEnabled?\"gl_FragColor = premultiplyAlpha(gl_FragColor);\":\"\"}\n      }\n    `)),1!==h.output&&3!==h.output||(f.include(i,{linearDepth:!0}),f.vertex.uniforms.add(\"nearFar\",\"vec2\"),f.varyings.add(\"depth\",\"float\"),f.vertex.code.add(p`void main() {\nvpos = calculateVPos();\ngl_Position = transformPositionWithDepth(proj, view, vpos, nearFar, depth);\n}`),f.include(a,h),f.include(r,h),f.fragment.uniforms.add(\"timeElapsed\",\"float\"),f.fragment.code.add(p`void main() {\ndiscardBySlice(vpos);\noutputDepth(depth);\n}`)),2===h.output&&(f.include(i,{linearDepth:!1}),f.include(m,h),f.vertex.uniforms.add(\"viewNormal\",\"mat4\"),f.varyings.add(\"vnormal\",\"vec3\"),f.vertex.code.add(p`void main(void) {\nvpos = calculateVPos();\nvnormal = normalize((viewNormal * vec4(localNormal(), 1.0)).xyz);\ngl_Position = transformPosition(proj, view, vpos);\n}`),f.include(a,h),f.fragment.uniforms.add(\"waterColor\",\"vec4\"),f.fragment.code.add(p`void main() {\ndiscardBySlice(vpos);\nvec3 normal = normalize(vnormal);\nif (gl_FrontFacing == false) normal = -normal;\ngl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);\n}`)),4===h.output&&(f.include(i,{linearDepth:!1}),f.include(m,h),f.vertex.uniforms.add(\"viewNormal\",\"mat4\"),f.varyings.add(\"vnormal\",\"vec3\"),f.vertex.code.add(p`void main(void) {\nvpos = calculateVPos();\ngl_Position = transformPosition(proj, view, vpos);\n}`),f.include(a,h),f.include(l),f.fragment.code.add(p`void main() {\ndiscardBySlice(vpos);\noutputHighlight();\n}`)),f}var f=Object.freeze({__proto__:null,build:h});export{f as P,h as b};\n"]},"metadata":{},"sourceType":"module"}