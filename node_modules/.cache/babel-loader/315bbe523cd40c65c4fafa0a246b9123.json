{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport o from \"../../request.js\";\nimport { parseUrl as r, asValidOptions as s } from \"../utils.js\";\nimport { conversionTypeKebabDict as n } from \"./units.js\";\n\nasync function t(t, i, e) {\n  const c = {};\n  null != i.sr && \"object\" == typeof i.sr ? c.sr = i.sr.wkid || JSON.stringify(i.sr) : c.sr = i.sr, c.strings = JSON.stringify(i.strings);\n  const f = i.conversionType || \"mgrs\";\n  c.conversionType = n.toJSON(f), c.conversionMode = i.conversionMode;\n  const m = r(t),\n        p = { ...m.query,\n    f: \"json\",\n    ...c\n  },\n        u = s(p, e);\n  return o(m.path + \"/fromGeoCoordinateString\", u).then(({\n    data: o\n  }) => o.coordinates);\n}\n\nexport { t as fromGeoCoordinateString };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/rest/geometryService/fromGeoCoordinateString.js"],"names":["o","parseUrl","r","asValidOptions","s","conversionTypeKebabDict","n","t","i","e","c","sr","wkid","JSON","stringify","strings","f","conversionType","toJSON","conversionMode","m","p","query","u","path","then","data","coordinates","fromGeoCoordinateString"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,kBAAb;AAAgC,SAAOC,QAAQ,IAAIC,CAAnB,EAAqBC,cAAc,IAAIC,CAAvC,QAA6C,aAA7C;AAA2D,SAAOC,uBAAuB,IAAIC,CAAlC,QAAwC,YAAxC;;AAAqD,eAAeC,CAAf,CAAiBA,CAAjB,EAAmBC,CAAnB,EAAqBC,CAArB,EAAuB;AAAC,QAAMC,CAAC,GAAC,EAAR;AAAW,UAAMF,CAAC,CAACG,EAAR,IAAY,YAAU,OAAOH,CAAC,CAACG,EAA/B,GAAkCD,CAAC,CAACC,EAAF,GAAKH,CAAC,CAACG,EAAF,CAAKC,IAAL,IAAWC,IAAI,CAACC,SAAL,CAAeN,CAAC,CAACG,EAAjB,CAAlD,GAAuED,CAAC,CAACC,EAAF,GAAKH,CAAC,CAACG,EAA9E,EAAiFD,CAAC,CAACK,OAAF,GAAUF,IAAI,CAACC,SAAL,CAAeN,CAAC,CAACO,OAAjB,CAA3F;AAAqH,QAAMC,CAAC,GAACR,CAAC,CAACS,cAAF,IAAkB,MAA1B;AAAiCP,EAAAA,CAAC,CAACO,cAAF,GAAiBX,CAAC,CAACY,MAAF,CAASF,CAAT,CAAjB,EAA6BN,CAAC,CAACS,cAAF,GAAiBX,CAAC,CAACW,cAAhD;AAA+D,QAAMC,CAAC,GAAClB,CAAC,CAACK,CAAD,CAAT;AAAA,QAAac,CAAC,GAAC,EAAC,GAAGD,CAAC,CAACE,KAAN;AAAYN,IAAAA,CAAC,EAAC,MAAd;AAAqB,OAAGN;AAAxB,GAAf;AAAA,QAA0Ca,CAAC,GAACnB,CAAC,CAACiB,CAAD,EAAGZ,CAAH,CAA7C;AAAmD,SAAOT,CAAC,CAACoB,CAAC,CAACI,IAAF,GAAO,0BAAR,EAAmCD,CAAnC,CAAD,CAAuCE,IAAvC,CAA6C,CAAC;AAACC,IAAAA,IAAI,EAAC1B;AAAN,GAAD,KAAYA,CAAC,CAAC2B,WAA3D,CAAP;AAAgF;;AAAA,SAAOpB,CAAC,IAAIqB,uBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport o from\"../../request.js\";import{parseUrl as r,asValidOptions as s}from\"../utils.js\";import{conversionTypeKebabDict as n}from\"./units.js\";async function t(t,i,e){const c={};null!=i.sr&&\"object\"==typeof i.sr?c.sr=i.sr.wkid||JSON.stringify(i.sr):c.sr=i.sr,c.strings=JSON.stringify(i.strings);const f=i.conversionType||\"mgrs\";c.conversionType=n.toJSON(f),c.conversionMode=i.conversionMode;const m=r(t),p={...m.query,f:\"json\",...c},u=s(p,e);return o(m.path+\"/fromGeoCoordinateString\",u).then((({data:o})=>o.coordinates))}export{t as fromGeoCoordinateString};\n"]},"metadata":{},"sourceType":"module"}