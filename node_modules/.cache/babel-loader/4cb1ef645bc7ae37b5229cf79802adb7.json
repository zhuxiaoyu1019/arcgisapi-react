{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport s from \"./GPOptions.js\";\nimport { constructRequest as t, decode as r } from \"./utils.js\";\nimport e from \"../support/GPMessage.js\";\n\nasync function o(o, m, a, p) {\n  return a = s.from(a || {}), t(o, \"execute\", a, m, p).then(s => {\n    const t = s.data.results || [],\n          o = s.data.messages || [];\n    return {\n      results: t.map(r),\n      messages: o.map(s => e.fromJSON(s))\n    };\n  });\n}\n\nexport { o as execute };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/rest/geoprocessor/execute.js"],"names":["s","constructRequest","t","decode","r","e","o","m","a","p","from","then","data","results","messages","map","fromJSON","execute"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,gBAAb;AAA8B,SAAOC,gBAAgB,IAAIC,CAA3B,EAA6BC,MAAM,IAAIC,CAAvC,QAA6C,YAA7C;AAA0D,OAAOC,CAAP,MAAa,yBAAb;;AAAuC,eAAeC,CAAf,CAAiBA,CAAjB,EAAmBC,CAAnB,EAAqBC,CAArB,EAAuBC,CAAvB,EAAyB;AAAC,SAAOD,CAAC,GAACR,CAAC,CAACU,IAAF,CAAOF,CAAC,IAAE,EAAV,CAAF,EAAgBN,CAAC,CAACI,CAAD,EAAG,SAAH,EAAaE,CAAb,EAAeD,CAAf,EAAiBE,CAAjB,CAAD,CAAqBE,IAArB,CAA2BX,CAAC,IAAE;AAAC,UAAME,CAAC,GAACF,CAAC,CAACY,IAAF,CAAOC,OAAP,IAAgB,EAAxB;AAAA,UAA2BP,CAAC,GAACN,CAAC,CAACY,IAAF,CAAOE,QAAP,IAAiB,EAA9C;AAAiD,WAAM;AAACD,MAAAA,OAAO,EAACX,CAAC,CAACa,GAAF,CAAMX,CAAN,CAAT;AAAkBU,MAAAA,QAAQ,EAACR,CAAC,CAACS,GAAF,CAAOf,CAAC,IAAEK,CAAC,CAACW,QAAF,CAAWhB,CAAX,CAAV;AAA3B,KAAN;AAA4D,GAA5I,CAAvB;AAAsK;;AAAA,SAAOM,CAAC,IAAIW,OAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport s from\"./GPOptions.js\";import{constructRequest as t,decode as r}from\"./utils.js\";import e from\"../support/GPMessage.js\";async function o(o,m,a,p){return a=s.from(a||{}),t(o,\"execute\",a,m,p).then((s=>{const t=s.data.results||[],o=s.data.messages||[];return{results:t.map(r),messages:o.map((s=>e.fromJSON(s)))}}))}export{o as execute};\n"]},"metadata":{},"sourceType":"module"}