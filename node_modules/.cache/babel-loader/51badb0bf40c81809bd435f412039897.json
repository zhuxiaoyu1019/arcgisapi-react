{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../../chunks/tslib.es6.js\";\nimport t from \"../../../../../core/Accessor.js\";\nimport { estimateAttributesObjectSize as s, estimateFixedArraySize as i } from \"../../../../../core/byteSizeEstimations.js\";\nimport { isNone as r, isSome as o } from \"../../../../../core/maybe.js\";\nimport { property as n } from \"../../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../../core/has.js\";\nimport \"../../../../../core/accessorSupport/ensureType.js\";\nimport \"../../../../../core/Logger.js\";\nimport { subclass as l } from \"../../../../../core/accessorSupport/decorators/subclass.js\";\nimport { create as c, intersects as a, fromExtent as h, area as u } from \"../../../../../geometry/support/aaBoundingRect.js\";\nimport { getBoundsOptimizedGeometry as d } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { BoundsStore as f } from \"../../../../../layers/graphics/data/BoundsStore.js\";\nimport { executeQueryForCount as p } from \"../../../../../rest/query/operations/query.js\";\nimport { FeatureServiceTileCache as m } from \"./FeatureServiceTileCache.js\";\nlet g = class extends t {\n  constructor(e) {\n    super(e), this.tileInfo = null, this.extent = null, this.maximumByteSize = 10485760, this.tileBounds = new f(), this.tiles = new m(), this.refCounts = new Map(), this.tileFeatureCounts = new Map(), this.tmpBoundingRect = c();\n  }\n\n  add(e, t) {\n    const s = [];\n\n    for (const i of t) 0 === this.referenceFeature(i.objectId) && s.push(i);\n\n    this.addTileStorage(e, new Set(t.map(({\n      objectId: e\n    }) => e)), this.byteSizeOfFeatures(t)), this.featureStore.addMany(s), this.tiles.applyByteSizeLimit(this.maximumByteSize, e => this.removeTileStorage(e));\n  }\n\n  destroy() {\n    this.clear(), this.tileFeatureCounts.clear();\n  }\n\n  clear() {\n    this.featureStore.clear(), this.tileBounds.clear(), this.tiles.clear(), this.refCounts.clear();\n  }\n\n  refresh() {\n    this.clear(), this.tileFeatureCounts.clear();\n  }\n\n  processEdits(e, t, s) {\n    return this.processEditsDelete(e.deletedFeatures.concat(e.updatedFeatures)), this.processEditsRefetch(e.addedFeatures.concat(e.updatedFeatures), t, s);\n  }\n\n  addTileStorage(e, t, s) {\n    this.tiles.set(e.id, new y(e, t, s)), this.tileBounds.set(e.id, e.extent), this.tileFeatureCounts.set(e.id, t.size);\n  }\n\n  remove({\n    id: e\n  }) {\n    const t = this.tiles.get(e);\n    t && this.removeTileStorage(t);\n  }\n\n  removeTileStorage(e) {\n    const t = [];\n\n    for (const i of e.objectIds) 1 === this.unreferenceFeature(i) && t.push(i);\n\n    this.featureStore.removeManyById(t);\n    const s = e.data.id;\n    this.tiles.delete(s), this.tileBounds.delete(s);\n  }\n\n  processEditsDelete(e) {\n    this.featureStore.removeManyById(e);\n\n    for (const [, t] of this.tiles) {\n      for (const s of e) t.objectIds.delete(s);\n\n      this.tileFeatureCounts.set(t.data.id, t.objectIds.size);\n    }\n\n    for (const t of e) this.refCounts.delete(t);\n  }\n\n  async processEditsRefetch(e, t, s) {\n    const i = (await t(e, s)).features,\n          {\n      hasZ: r,\n      hasM: o\n    } = this.featureStore;\n\n    for (const n of i) {\n      const e = d(this.tmpBoundingRect, n.geometry, r, o);\n      this.tileBounds.forEachInBounds(e, e => {\n        const t = this.tiles.get(e);\n        this.featureStore.add(n), t.objectIds.has(n.objectId) || (t.objectIds.add(n.objectId), this.referenceFeature(n.objectId), this.tileFeatureCounts.set(t.data.id, t.objectIds.size));\n      });\n    }\n  }\n\n  process(e, t = () => !0) {\n    if (r(this.tileInfo) || !e.extent || o(this.extent) && !a(h(this.extent, this.tmpBoundingRect), e.extent)) return new S(e);\n    if (this.tiles.has(e.id)) return new S(e);\n    const s = this.createTileTree(e, this.tileInfo);\n    return this.simplify(s, t, null, 0, 1), this.collectMissingTiles(e, s, this.tileInfo);\n  }\n\n  get debugInfo() {\n    return Array.from(this.tiles.values()).map(({\n      data: e\n    }) => ({\n      data: e,\n      featureCount: this.tileFeatureCounts.get(e.id) || 0\n    }));\n  }\n\n  getFeatureCount(e) {\n    const t = this.tileFeatureCounts.get(e.id);\n    return null != t ? t : 0;\n  }\n\n  async fetchCount(e, t, s, i) {\n    const r = this.tileFeatureCounts.get(e.id);\n    if (null != r) return r;\n    const o = await p(t, s, i);\n    return this.tileFeatureCounts.set(e.id, o.data.count), o.data.count;\n  }\n\n  createTileTree(e, t) {\n    const s = new v(e.level, e.row, e.col);\n    return t.updateTileInfo(s, 1), this.tileBounds.forEachInBounds(e.extent, i => {\n      const r = this.tiles.get(i).data;\n      this.tilesAreRelated(e, r) && this.populateChildren(s, r, t, this.tileFeatureCounts.get(r.id) || 0);\n    }), s;\n  }\n\n  tilesAreRelated(e, t) {\n    if (!e || !t) return !1;\n    if (e.level === t.level) return e.row === t.row && e.col === t.col;\n    const s = e.level < t.level,\n          i = s ? e : t,\n          r = s ? t : e,\n          o = 1 << r.level - i.level;\n    return Math.floor(r.row / o) === i.row && Math.floor(r.col / o) === i.col;\n  }\n\n  populateChildren(e, t, s, i) {\n    const r = t.level - e.level - 1;\n    if (r < 0) return void (e.isLeaf = !0);\n    const n = t.row >> r,\n          l = t.col >> r,\n          c = e.row << 1,\n          a = l - (e.col << 1) + (n - c << 1),\n          h = e.children[a];\n    if (o(h)) this.populateChildren(h, t, s, i);else {\n      const r = new v(e.level + 1, n, l);\n      s.updateTileInfo(r, 1), e.children[a] = r, this.populateChildren(r, t, s, i);\n    }\n  }\n\n  simplify(e, t, s, i, r) {\n    const n = r * r;\n    if (e.isLeaf) return t(this.getFeatureCount(e), r) ? 0 : (this.remove(e), o(s) && (s.children[i] = null), n);\n    const l = r / 2,\n          c = l * l;\n    let a = 0;\n\n    for (let h = 0; h < e.children.length; h++) {\n      const s = e.children[h];\n      a += o(s) ? this.simplify(s, t, e, h, l) : c;\n    }\n\n    return 0 === a ? this.mergeChildren(e) : 1 - a / n < F && (this.purge(e), o(s) && (s.children[i] = null), a = n), a;\n  }\n\n  mergeChildren(e) {\n    const t = new Set();\n    let s = 0;\n    this.forEachLeaf(e, e => {\n      const i = this.tiles.get(e.id);\n\n      if (i) {\n        s += i.byteSize;\n\n        for (const e of i.objectIds) t.has(e) || (t.add(e), this.referenceFeature(e));\n\n        this.remove(e);\n      }\n    }), this.addTileStorage(e, t, s), e.isLeaf = !0, e.children[0] = e.children[1] = e.children[2] = e.children[3] = null, this.tileFeatureCounts.set(e.id, t.size);\n  }\n\n  forEachLeaf(e, t) {\n    for (const s of e.children) r(s) || (s.isLeaf ? t(s) : this.forEachLeaf(s, t));\n  }\n\n  purge(e) {\n    if (!r(e)) if (e.isLeaf) this.remove(e);else for (let t = 0; t < e.children.length; t++) {\n      const s = e.children[t];\n      this.purge(s), e.children[t] = null;\n    }\n  }\n\n  collectMissingTiles(e, t, s) {\n    const i = new C(s, e, this.extent);\n    return this.collectMissingTilesRecurse(t, i, 1), i.info;\n  }\n\n  collectMissingTilesRecurse(e, t, s) {\n    if (e.isLeaf) return;\n    if (!e.hasChildren) return void t.addMissing(e.level, e.row, e.col, s);\n    const i = s / 2;\n\n    for (let o = 0; o < e.children.length; o++) {\n      const s = e.children[o];\n      r(s) ? t.addMissing(e.level + 1, (e.row << 1) + ((2 & o) >> 1), (e.col << 1) + (1 & o), i) : this.collectMissingTilesRecurse(s, t, i);\n    }\n  }\n\n  referenceFeature(e) {\n    const t = (this.refCounts.get(e) || 0) + 1;\n    return this.refCounts.set(e, t), 1 === t ? 0 : 2;\n  }\n\n  unreferenceFeature(e) {\n    const t = (this.refCounts.get(e) || 0) - 1;\n    return 0 === t ? (this.refCounts.delete(e), 1) : (t > 0 && this.refCounts.set(e, t), 2);\n  }\n\n  byteSizeOfFeatures(e) {\n    let t = 0;\n\n    for (const s of e) t += this.byteSizeOfFeature(s);\n\n    return t;\n  }\n\n  byteSizeOfFeature(e) {\n    return 32 + this.byteSizeOfGeometry(e.geometry) + s(e.attributes);\n  }\n\n  byteSizeOfGeometry(e) {\n    if (!e) return 0;\n    const t = i(e.lengths, 4);\n    return 32 + i(e.coords, 8) + t;\n  }\n\n  get test() {\n    return {\n      tiles: Array.from(this.tiles.values()).map(e => `${e.data.id}:[${Array.from(e.objectIds)}]`),\n      featureReferences: Array.from(this.refCounts.keys()).map(e => `${e}:${this.refCounts.get(e)}`)\n    };\n  }\n\n};\ne([n({\n  constructOnly: !0\n})], g.prototype, \"featureStore\", void 0), e([n()], g.prototype, \"tileInfo\", void 0), e([n()], g.prototype, \"extent\", void 0), e([n()], g.prototype, \"maximumByteSize\", void 0), g = e([l(\"esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTileStore\")], g);\n\nclass y {\n  constructor(e, t, s) {\n    this.data = e, this.objectIds = t, this.byteSize = s;\n  }\n\n}\n\nclass v {\n  constructor(e, t, s) {\n    this.level = e, this.row = t, this.col = s, this.isLeaf = !1, this.extent = null, this.children = [null, null, null, null];\n  }\n\n  get hasChildren() {\n    return !this.isLeaf && (o(this.children[0]) || o(this.children[1]) || o(this.children[2]) || o(this.children[3]));\n  }\n\n}\n\nclass S {\n  constructor(e, t = []) {\n    this.missingTiles = t, this.fullArea = 0, this.coveredArea = 0, this.fullArea = u(e.extent), this.coveredArea = this.fullArea;\n  }\n\n  prepend(e) {\n    this.missingTiles = e.missingTiles.concat(this.missingTiles), this.coveredArea += e.coveredArea, this.fullArea += e.fullArea;\n  }\n\n}\n\nclass C {\n  constructor(e, t, s) {\n    this.tileInfo = e, this.extent = null, this.info = new S(t), o(s) && (this.extent = h(s));\n  }\n\n  addMissing(e, t, s, i) {\n    const r = {\n      id: null,\n      level: e,\n      row: t,\n      col: s\n    };\n    this.tileInfo.updateTileInfo(r, 1), !o(r.extent) || o(this.extent) && !a(this.extent, r.extent) || (this.info.missingTiles.push({\n      data: r,\n      resolution: i\n    }), this.info.coveredArea -= u(r.extent));\n  }\n\n}\n\nconst F = .18751;\nexport { g as FeatureServiceTileStore, S as ProcessResult };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/interactive/snapping/featureSources/featureServiceSource/FeatureServiceTileStore.js"],"names":["_","e","t","estimateAttributesObjectSize","s","estimateFixedArraySize","i","isNone","r","isSome","o","property","n","subclass","l","create","c","intersects","a","fromExtent","h","area","u","getBoundsOptimizedGeometry","d","BoundsStore","f","executeQueryForCount","p","FeatureServiceTileCache","m","g","constructor","tileInfo","extent","maximumByteSize","tileBounds","tiles","refCounts","Map","tileFeatureCounts","tmpBoundingRect","add","referenceFeature","objectId","push","addTileStorage","Set","map","byteSizeOfFeatures","featureStore","addMany","applyByteSizeLimit","removeTileStorage","destroy","clear","refresh","processEdits","processEditsDelete","deletedFeatures","concat","updatedFeatures","processEditsRefetch","addedFeatures","set","id","y","size","remove","get","objectIds","unreferenceFeature","removeManyById","data","delete","features","hasZ","hasM","geometry","forEachInBounds","has","process","S","createTileTree","simplify","collectMissingTiles","debugInfo","Array","from","values","featureCount","getFeatureCount","fetchCount","count","v","level","row","col","updateTileInfo","tilesAreRelated","populateChildren","Math","floor","isLeaf","children","length","mergeChildren","F","purge","forEachLeaf","byteSize","C","collectMissingTilesRecurse","info","hasChildren","addMissing","byteSizeOfFeature","byteSizeOfGeometry","attributes","lengths","coords","test","featureReferences","keys","constructOnly","prototype","missingTiles","fullArea","coveredArea","prepend","resolution","FeatureServiceTileStore","ProcessResult"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../../chunks/tslib.es6.js\";import t from\"../../../../../core/Accessor.js\";import{estimateAttributesObjectSize as s,estimateFixedArraySize as i}from\"../../../../../core/byteSizeEstimations.js\";import{isNone as r,isSome as o}from\"../../../../../core/maybe.js\";import{property as n}from\"../../../../../core/accessorSupport/decorators/property.js\";import\"../../../../../core/has.js\";import\"../../../../../core/accessorSupport/ensureType.js\";import\"../../../../../core/Logger.js\";import{subclass as l}from\"../../../../../core/accessorSupport/decorators/subclass.js\";import{create as c,intersects as a,fromExtent as h,area as u}from\"../../../../../geometry/support/aaBoundingRect.js\";import{getBoundsOptimizedGeometry as d}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{BoundsStore as f}from\"../../../../../layers/graphics/data/BoundsStore.js\";import{executeQueryForCount as p}from\"../../../../../rest/query/operations/query.js\";import{FeatureServiceTileCache as m}from\"./FeatureServiceTileCache.js\";let g=class extends t{constructor(e){super(e),this.tileInfo=null,this.extent=null,this.maximumByteSize=10485760,this.tileBounds=new f,this.tiles=new m,this.refCounts=new Map,this.tileFeatureCounts=new Map,this.tmpBoundingRect=c()}add(e,t){const s=[];for(const i of t)0===this.referenceFeature(i.objectId)&&s.push(i);this.addTileStorage(e,new Set(t.map((({objectId:e})=>e))),this.byteSizeOfFeatures(t)),this.featureStore.addMany(s),this.tiles.applyByteSizeLimit(this.maximumByteSize,(e=>this.removeTileStorage(e)))}destroy(){this.clear(),this.tileFeatureCounts.clear()}clear(){this.featureStore.clear(),this.tileBounds.clear(),this.tiles.clear(),this.refCounts.clear()}refresh(){this.clear(),this.tileFeatureCounts.clear()}processEdits(e,t,s){return this.processEditsDelete(e.deletedFeatures.concat(e.updatedFeatures)),this.processEditsRefetch(e.addedFeatures.concat(e.updatedFeatures),t,s)}addTileStorage(e,t,s){this.tiles.set(e.id,new y(e,t,s)),this.tileBounds.set(e.id,e.extent),this.tileFeatureCounts.set(e.id,t.size)}remove({id:e}){const t=this.tiles.get(e);t&&this.removeTileStorage(t)}removeTileStorage(e){const t=[];for(const i of e.objectIds)1===this.unreferenceFeature(i)&&t.push(i);this.featureStore.removeManyById(t);const s=e.data.id;this.tiles.delete(s),this.tileBounds.delete(s)}processEditsDelete(e){this.featureStore.removeManyById(e);for(const[,t]of this.tiles){for(const s of e)t.objectIds.delete(s);this.tileFeatureCounts.set(t.data.id,t.objectIds.size)}for(const t of e)this.refCounts.delete(t)}async processEditsRefetch(e,t,s){const i=(await t(e,s)).features,{hasZ:r,hasM:o}=this.featureStore;for(const n of i){const e=d(this.tmpBoundingRect,n.geometry,r,o);this.tileBounds.forEachInBounds(e,(e=>{const t=this.tiles.get(e);this.featureStore.add(n),t.objectIds.has(n.objectId)||(t.objectIds.add(n.objectId),this.referenceFeature(n.objectId),this.tileFeatureCounts.set(t.data.id,t.objectIds.size))}))}}process(e,t=(()=>!0)){if(r(this.tileInfo)||!e.extent||o(this.extent)&&!a(h(this.extent,this.tmpBoundingRect),e.extent))return new S(e);if(this.tiles.has(e.id))return new S(e);const s=this.createTileTree(e,this.tileInfo);return this.simplify(s,t,null,0,1),this.collectMissingTiles(e,s,this.tileInfo)}get debugInfo(){return Array.from(this.tiles.values()).map((({data:e})=>({data:e,featureCount:this.tileFeatureCounts.get(e.id)||0})))}getFeatureCount(e){const t=this.tileFeatureCounts.get(e.id);return null!=t?t:0}async fetchCount(e,t,s,i){const r=this.tileFeatureCounts.get(e.id);if(null!=r)return r;const o=await p(t,s,i);return this.tileFeatureCounts.set(e.id,o.data.count),o.data.count}createTileTree(e,t){const s=new v(e.level,e.row,e.col);return t.updateTileInfo(s,1),this.tileBounds.forEachInBounds(e.extent,(i=>{const r=this.tiles.get(i).data;this.tilesAreRelated(e,r)&&this.populateChildren(s,r,t,this.tileFeatureCounts.get(r.id)||0)})),s}tilesAreRelated(e,t){if(!e||!t)return!1;if(e.level===t.level)return e.row===t.row&&e.col===t.col;const s=e.level<t.level,i=s?e:t,r=s?t:e,o=1<<r.level-i.level;return Math.floor(r.row/o)===i.row&&Math.floor(r.col/o)===i.col}populateChildren(e,t,s,i){const r=t.level-e.level-1;if(r<0)return void(e.isLeaf=!0);const n=t.row>>r,l=t.col>>r,c=e.row<<1,a=l-(e.col<<1)+(n-c<<1),h=e.children[a];if(o(h))this.populateChildren(h,t,s,i);else{const r=new v(e.level+1,n,l);s.updateTileInfo(r,1),e.children[a]=r,this.populateChildren(r,t,s,i)}}simplify(e,t,s,i,r){const n=r*r;if(e.isLeaf)return t(this.getFeatureCount(e),r)?0:(this.remove(e),o(s)&&(s.children[i]=null),n);const l=r/2,c=l*l;let a=0;for(let h=0;h<e.children.length;h++){const s=e.children[h];a+=o(s)?this.simplify(s,t,e,h,l):c}return 0===a?this.mergeChildren(e):1-a/n<F&&(this.purge(e),o(s)&&(s.children[i]=null),a=n),a}mergeChildren(e){const t=new Set;let s=0;this.forEachLeaf(e,(e=>{const i=this.tiles.get(e.id);if(i){s+=i.byteSize;for(const e of i.objectIds)t.has(e)||(t.add(e),this.referenceFeature(e));this.remove(e)}})),this.addTileStorage(e,t,s),e.isLeaf=!0,e.children[0]=e.children[1]=e.children[2]=e.children[3]=null,this.tileFeatureCounts.set(e.id,t.size)}forEachLeaf(e,t){for(const s of e.children)r(s)||(s.isLeaf?t(s):this.forEachLeaf(s,t))}purge(e){if(!r(e))if(e.isLeaf)this.remove(e);else for(let t=0;t<e.children.length;t++){const s=e.children[t];this.purge(s),e.children[t]=null}}collectMissingTiles(e,t,s){const i=new C(s,e,this.extent);return this.collectMissingTilesRecurse(t,i,1),i.info}collectMissingTilesRecurse(e,t,s){if(e.isLeaf)return;if(!e.hasChildren)return void t.addMissing(e.level,e.row,e.col,s);const i=s/2;for(let o=0;o<e.children.length;o++){const s=e.children[o];r(s)?t.addMissing(e.level+1,(e.row<<1)+((2&o)>>1),(e.col<<1)+(1&o),i):this.collectMissingTilesRecurse(s,t,i)}}referenceFeature(e){const t=(this.refCounts.get(e)||0)+1;return this.refCounts.set(e,t),1===t?0:2}unreferenceFeature(e){const t=(this.refCounts.get(e)||0)-1;return 0===t?(this.refCounts.delete(e),1):(t>0&&this.refCounts.set(e,t),2)}byteSizeOfFeatures(e){let t=0;for(const s of e)t+=this.byteSizeOfFeature(s);return t}byteSizeOfFeature(e){return 32+this.byteSizeOfGeometry(e.geometry)+s(e.attributes)}byteSizeOfGeometry(e){if(!e)return 0;const t=i(e.lengths,4);return 32+i(e.coords,8)+t}get test(){return{tiles:Array.from(this.tiles.values()).map((e=>`${e.data.id}:[${Array.from(e.objectIds)}]`)),featureReferences:Array.from(this.refCounts.keys()).map((e=>`${e}:${this.refCounts.get(e)}`))}}};e([n({constructOnly:!0})],g.prototype,\"featureStore\",void 0),e([n()],g.prototype,\"tileInfo\",void 0),e([n()],g.prototype,\"extent\",void 0),e([n()],g.prototype,\"maximumByteSize\",void 0),g=e([l(\"esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTileStore\")],g);class y{constructor(e,t,s){this.data=e,this.objectIds=t,this.byteSize=s}}class v{constructor(e,t,s){this.level=e,this.row=t,this.col=s,this.isLeaf=!1,this.extent=null,this.children=[null,null,null,null]}get hasChildren(){return!this.isLeaf&&(o(this.children[0])||o(this.children[1])||o(this.children[2])||o(this.children[3]))}}class S{constructor(e,t=[]){this.missingTiles=t,this.fullArea=0,this.coveredArea=0,this.fullArea=u(e.extent),this.coveredArea=this.fullArea}prepend(e){this.missingTiles=e.missingTiles.concat(this.missingTiles),this.coveredArea+=e.coveredArea,this.fullArea+=e.fullArea}}class C{constructor(e,t,s){this.tileInfo=e,this.extent=null,this.info=new S(t),o(s)&&(this.extent=h(s))}addMissing(e,t,s,i){const r={id:null,level:e,row:t,col:s};this.tileInfo.updateTileInfo(r,1),!o(r.extent)||o(this.extent)&&!a(this.extent,r.extent)||(this.info.missingTiles.push({data:r,resolution:i}),this.info.coveredArea-=u(r.extent))}}const F=.18751;export{g as FeatureServiceTileStore,S as ProcessResult};\n"]},"metadata":{},"sourceType":"module"}