{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport e from \"../../../core/Error.js\";\nimport { unwrap as r, isSome as s } from \"../../../core/maybe.js\";\nimport { property as o } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/Logger.js\";\nimport { subclass as i } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport a from \"../PixelBlock.js\";\nimport n from \"../RasterInfo.js\";\nimport l from \"../RasterStorageInfo.js\";\nimport f from \"./BaseRaster.js\";\nimport { parseSpatialReference as c, parsePAMInfo as p } from \"./pamParser.js\";\nimport { getElement as m, getElementValue as h } from \"./xmlUtilities.js\";\nimport { isPlatformLittleEndian as u } from \"../rasterFormats/utils.js\";\nimport { estimateStatisticsFromHistograms as g } from \"../rasterFunctions/pixelUtils.js\";\nimport d from \"../../../geometry/SpatialReference.js\";\nimport y from \"../../../geometry/Extent.js\";\nimport x from \"../../../geometry/Point.js\";\nconst w = new Map();\nw.set(\"Int8\", \"s8\"), w.set(\"UInt8\", \"u8\"), w.set(\"Int16\", \"s16\"), w.set(\"UInt16\", \"u16\"), w.set(\"Int32\", \"s32\"), w.set(\"UInt32\", \"u32\"), w.set(\"Float32\", \"f32\"), w.set(\"Float64\", \"f32\"), w.set(\"Double64\", \"f32\");\nconst I = new Map();\nI.set(\"lerc\", \".lrc\"), I.set(\"none\", \".til\"), I.set(\"deflate\", \".pzp\"), I.set(\"jpeg\", \".jzp\");\nlet b = class extends f {\n  constructor() {\n    super(...arguments), this._files = null, this._storageIndex = null, this.datasetFormat = \"MRF\";\n  }\n\n  async open(t) {\n    var e;\n    await this.init(), this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n\n    const o = t ? r(t.signal) : null,\n          i = await this.request(this.url, {\n      responseType: \"xml\",\n      signal: o\n    }),\n          {\n      rasterInfo: a,\n      files: n\n    } = this._parseHeader(i.data);\n\n    if (-1 === (null == (e = this.ioConfig.skipExtensions) ? void 0 : e.indexOf(\"aux.xml\"))) {\n      const e = await this._fetchAuxiliaryData(t);\n      var l;\n      if (null != e) a.statistics = null != (l = e.statistics) ? l : a.statistics, a.histograms = e.histograms, e.histograms && !s(a.statistics) && (a.statistics = g(e.histograms));\n    }\n\n    this._set(\"rasterInfo\", a), this._files = n;\n    const f = await this.request(n.index, {\n      responseType: \"array-buffer\",\n      signal: o\n    });\n    this._storageIndex = this._parseIndex(f.data);\n    let c,\n        p,\n        m = 0,\n        h = -1;\n    const {\n      blockWidth: u,\n      blockHeight: d,\n      compression: y\n    } = this.rasterInfo.storageInfo,\n          x = this.rasterInfo.storageInfo.pyramidScalingFactor,\n          {\n      width: w,\n      height: I,\n      bandCount: b\n    } = this.rasterInfo,\n          A = [],\n          R = \"none\" === y ? 1 : b;\n\n    for (; m < this._storageIndex.length;) h++, c = Math.ceil(w / u / x ** h), p = Math.ceil(I / d / x ** h), m += c * p * R * 4, A.push({\n      maxRow: p,\n      maxCol: c,\n      minCol: 0,\n      minRow: 0\n    });\n\n    this.rasterInfo.storageInfo.blockBoundary = A, h > 0 && (this.rasterInfo.storageInfo.firstPyramidLevel = 1, this.rasterInfo.storageInfo.maximumPyramidLevel = h), this.updateTileInfo();\n  }\n\n  async fetchRawTile(t, e, r, s = {}) {\n    const {\n      blockWidth: o,\n      blockHeight: i,\n      blockBoundary: n,\n      compression: l\n    } = this.rasterInfo.storageInfo,\n          f = n[t];\n    if (!f || f.maxRow < e || f.maxCol < r || f.minRow > e || f.minCol > r) return null;\n\n    const {\n      bandCount: c,\n      pixelType: p\n    } = this.rasterInfo,\n          {\n      ranges: m,\n      actualTileWidth: h,\n      actualTileHeight: u\n    } = this._getTileLocation(t, e, r);\n\n    if (!m || 0 === m.length) return null;\n\n    if (0 === m[0].from && 0 === m[0].to) {\n      const t = new Uint8Array(o * i);\n      return new a({\n        width: o,\n        height: i,\n        pixels: null,\n        mask: t,\n        validPixelCount: 0\n      });\n    }\n\n    const {\n      bandIds: g\n    } = this.ioConfig,\n          d = \"none\" === l ? 1 : c,\n          y = [];\n    let x = 0;\n\n    for (x = 0; x < d; x++) (!g || g.indexOf[x] > -1) && y.push(this.request(this._files.data, {\n      range: {\n        from: m[x].from,\n        to: m[x].to\n      },\n      responseType: \"array-buffer\",\n      signal: s.signal\n    }));\n\n    const w = await Promise.all(y),\n          I = w.map(t => t.data.byteLength).reduce((t, e) => t + e),\n          b = new Uint8Array(I);\n    let A = 0;\n\n    for (x = 0; x < d; x++) b.set(new Uint8Array(w[x].data), A), A += w[x].data.byteLength;\n\n    const R = \"lerc\" === this.rasterInfo.storageInfo.compression ? \"lerc\" : \"bip\",\n          _ = await this.decodePixelBlock(b.buffer, {\n      width: o,\n      height: i,\n      format: R,\n      pixelType: p\n    });\n\n    let j = 0,\n        F = 0;\n\n    if (h !== o || u !== i) {\n      let t = _.mask;\n      if (t) {\n        for (x = 0; x < i; x++) if (F = x * o, x < u) for (j = h; j < o; j++) t[F + j] = 0;else for (j = 0; j < o; j++) t[F + j] = 0;\n      } else for (t = new Uint8Array(o * i), _.mask = t, x = 0; x < u; x++) for (F = x * o, j = 0; j < h; j++) t[F + j] = 1;\n    }\n\n    return _;\n  }\n\n  _parseIndex(t) {\n    if (t.byteLength % 16 > 0) throw \"invalid array buffer must be multiples of 16\";\n    let e, r, s, o, i, a;\n\n    if (u) {\n      for (r = new Uint8Array(t), o = new ArrayBuffer(t.byteLength), s = new Uint8Array(o), i = 0; i < t.byteLength / 4; i++) for (a = 0; a < 4; a++) s[4 * i + a] = r[4 * i + 3 - a];\n\n      e = new Uint32Array(o);\n    } else e = new Uint32Array(t);\n\n    return e;\n  }\n\n  _getTileLocation(t, e, r) {\n    const {\n      blockWidth: s,\n      blockHeight: o,\n      pyramidScalingFactor: i,\n      compression: a\n    } = this.rasterInfo.storageInfo,\n          {\n      width: n,\n      height: l,\n      bandCount: f\n    } = this.rasterInfo,\n          c = \"none\" === a ? 1 : f;\n    let p,\n        m,\n        h,\n        u = 0,\n        g = 0;\n\n    for (h = 0; h < t; h++) g = i ** h, p = Math.ceil(n / s / g), m = Math.ceil(l / o / g), u += p * m;\n\n    g = i ** t, p = Math.ceil(n / s / g), m = Math.ceil(l / o / g), u += e * p + r, u *= 4 * c;\n\n    const d = this._storageIndex.subarray(u, u + 4 * c);\n\n    let y = 0,\n        x = 0;\n    const w = [];\n\n    for (let I = 0; I < c; I++) y = d[4 * I + 0] * 2 ** 32 + d[4 * I + 1], x = y + d[4 * I + 2] * 2 ** 32 + d[4 * I + 3], w.push({\n      from: y,\n      to: x\n    });\n\n    return {\n      ranges: w,\n      actualTileWidth: r < p - 1 ? s : Math.ceil(n / g) - s * (p - 1),\n      actualTileHeight: e < m - 1 ? o : Math.ceil(l / g) - o * (m - 1)\n    };\n  }\n\n  _parseHeader(t) {\n    const r = m(t, \"MRF_META/Raster\");\n    if (!r) throw new e(\"mrf:open\", \"not a valid MRF format\");\n    const s = m(r, \"Size\"),\n          o = parseInt(s.getAttribute(\"x\"), 10),\n          i = parseInt(s.getAttribute(\"y\"), 10),\n          a = parseInt(s.getAttribute(\"c\"), 10),\n          f = (h(r, \"Compression\") || \"none\").toLowerCase();\n    if (!f || -1 === [\"none\", \"lerc\"].indexOf(f)) throw new e(\"mrf:open\", \"currently does not support compression \" + f);\n    const p = h(r, \"DataType\") || \"UInt8\",\n          u = w.get(p);\n    if (null == u) throw new e(\"mrf:open\", \"currently does not support pixel type \" + p);\n    const g = m(r, \"PageSize\"),\n          b = parseInt(g.getAttribute(\"x\"), 10),\n          A = parseInt(g.getAttribute(\"y\"), 10),\n          R = m(r, \"DataValues\");\n\n    let _, j;\n\n    R && (j = R.getAttribute(\"NoData\"), null != j && (_ = j.trim().split(\" \").map(t => parseFloat(t))));\n    if (m(t, \"MRF_META/CachedSource\")) throw new e(\"mrf:open\", \"currently does not support MRF referencing other data files\");\n    const F = m(t, \"MRF_META/GeoTags\"),\n          M = m(F, \"BoundingBox\");\n    if (null == M) throw new e(\"mrf:open\", \"missing node MRF_META/GeoTags/BoundingBox\");\n    const T = parseFloat(M.getAttribute(\"minx\")),\n          k = parseFloat(M.getAttribute(\"miny\")),\n          C = parseFloat(M.getAttribute(\"maxx\")),\n          L = parseFloat(M.getAttribute(\"maxy\")),\n          S = h(F, \"Projection\") || \"\",\n          U = h(t, \"datafile\"),\n          v = h(t, \"IndexFile\");\n    let B;\n    if (\"LOCAL_CS[]\" !== S) if (S.toLowerCase().startsWith(\"epsg:\")) {\n      const t = Number(S.slice(5));\n      isNaN(t) || 0 === t || (B = new d({\n        wkid: t\n      }));\n    } else B = c(S);\n    const P = new y(T, k, C, L);\n    P.spatialReference = B;\n    const H = m(t, \"MRF_META/Rsets\"),\n          E = parseInt(H && H.getAttribute(\"scale\") || \"2\", 10),\n          W = new l({\n      origin: new x({\n        x: P.xmin,\n        y: P.ymax,\n        spatialReference: B\n      }),\n      blockWidth: b,\n      blockHeight: A,\n      pyramidBlockWidth: b,\n      pyramidBlockHeight: A,\n      compression: f,\n      pyramidScalingFactor: E\n    }),\n          D = new x({\n      x: (C - T) / o,\n      y: (L - k) / i,\n      spatialReference: B\n    });\n    return {\n      rasterInfo: new n({\n        width: o,\n        height: i,\n        extent: P,\n        spatialReference: B,\n        bandCount: a,\n        pixelType: u,\n        pixelSize: D,\n        noDataValue: _,\n        storageInfo: W\n      }),\n      files: {\n        mrf: this.url,\n        index: v || this.url.replace(\".mrf\", \".idx\"),\n        data: U || this.url.replace(\".mrf\", I.get(f))\n      }\n    };\n  }\n\n  async _fetchAuxiliaryData(t) {\n    try {\n      const {\n        data: e\n      } = await this.request(this.url + \".aux.xml\", {\n        responseType: \"xml\",\n        signal: null == t ? void 0 : t.signal\n      });\n      return p(e);\n    } catch {\n      return null;\n    }\n  }\n\n};\nt([o()], b.prototype, \"_files\", void 0), t([o()], b.prototype, \"_storageIndex\", void 0), t([o({\n  type: String,\n  json: {\n    write: !0\n  }\n})], b.prototype, \"datasetFormat\", void 0), b = t([i(\"esri.layers.support.rasterIO.MRFRaster\")], b);\nvar A = b;\nexport default A;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/layers/support/rasterDatasets/MRFRaster.js"],"names":["_","t","e","unwrap","r","isSome","s","property","o","subclass","i","a","n","l","f","parseSpatialReference","c","parsePAMInfo","p","getElement","m","getElementValue","h","isPlatformLittleEndian","u","estimateStatisticsFromHistograms","g","d","y","x","w","Map","set","I","b","constructor","arguments","_files","_storageIndex","datasetFormat","open","init","datasetName","url","slice","lastIndexOf","signal","request","responseType","rasterInfo","files","_parseHeader","data","ioConfig","skipExtensions","indexOf","_fetchAuxiliaryData","statistics","histograms","_set","index","_parseIndex","blockWidth","blockHeight","compression","storageInfo","pyramidScalingFactor","width","height","bandCount","A","R","length","Math","ceil","push","maxRow","maxCol","minCol","minRow","blockBoundary","firstPyramidLevel","maximumPyramidLevel","updateTileInfo","fetchRawTile","pixelType","ranges","actualTileWidth","actualTileHeight","_getTileLocation","from","to","Uint8Array","pixels","mask","validPixelCount","bandIds","range","Promise","all","map","byteLength","reduce","decodePixelBlock","buffer","format","j","F","ArrayBuffer","Uint32Array","subarray","parseInt","getAttribute","toLowerCase","get","trim","split","parseFloat","M","T","k","C","L","S","U","v","B","startsWith","Number","isNaN","wkid","P","spatialReference","H","E","W","origin","xmin","ymax","pyramidBlockWidth","pyramidBlockHeight","D","extent","pixelSize","noDataValue","mrf","replace","prototype","type","String","json","write"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import e from\"../../../core/Error.js\";import{unwrap as r,isSome as s}from\"../../../core/maybe.js\";import{property as o}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/Logger.js\";import{subclass as i}from\"../../../core/accessorSupport/decorators/subclass.js\";import a from\"../PixelBlock.js\";import n from\"../RasterInfo.js\";import l from\"../RasterStorageInfo.js\";import f from\"./BaseRaster.js\";import{parseSpatialReference as c,parsePAMInfo as p}from\"./pamParser.js\";import{getElement as m,getElementValue as h}from\"./xmlUtilities.js\";import{isPlatformLittleEndian as u}from\"../rasterFormats/utils.js\";import{estimateStatisticsFromHistograms as g}from\"../rasterFunctions/pixelUtils.js\";import d from\"../../../geometry/SpatialReference.js\";import y from\"../../../geometry/Extent.js\";import x from\"../../../geometry/Point.js\";const w=new Map;w.set(\"Int8\",\"s8\"),w.set(\"UInt8\",\"u8\"),w.set(\"Int16\",\"s16\"),w.set(\"UInt16\",\"u16\"),w.set(\"Int32\",\"s32\"),w.set(\"UInt32\",\"u32\"),w.set(\"Float32\",\"f32\"),w.set(\"Float64\",\"f32\"),w.set(\"Double64\",\"f32\");const I=new Map;I.set(\"lerc\",\".lrc\"),I.set(\"none\",\".til\"),I.set(\"deflate\",\".pzp\"),I.set(\"jpeg\",\".jzp\");let b=class extends f{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat=\"MRF\"}async open(t){var e;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const o=t?r(t.signal):null,i=await this.request(this.url,{responseType:\"xml\",signal:o}),{rasterInfo:a,files:n}=this._parseHeader(i.data);if(-1===(null==(e=this.ioConfig.skipExtensions)?void 0:e.indexOf(\"aux.xml\"))){const e=await this._fetchAuxiliaryData(t);var l;if(null!=e)a.statistics=null!=(l=e.statistics)?l:a.statistics,a.histograms=e.histograms,e.histograms&&!s(a.statistics)&&(a.statistics=g(e.histograms))}this._set(\"rasterInfo\",a),this._files=n;const f=await this.request(n.index,{responseType:\"array-buffer\",signal:o});this._storageIndex=this._parseIndex(f.data);let c,p,m=0,h=-1;const{blockWidth:u,blockHeight:d,compression:y}=this.rasterInfo.storageInfo,x=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:w,height:I,bandCount:b}=this.rasterInfo,A=[],R=\"none\"===y?1:b;for(;m<this._storageIndex.length;)h++,c=Math.ceil(w/u/x**h),p=Math.ceil(I/d/x**h),m+=c*p*R*4,A.push({maxRow:p,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=A,h>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=h),this.updateTileInfo()}async fetchRawTile(t,e,r,s={}){const{blockWidth:o,blockHeight:i,blockBoundary:n,compression:l}=this.rasterInfo.storageInfo,f=n[t];if(!f||f.maxRow<e||f.maxCol<r||f.minRow>e||f.minCol>r)return null;const{bandCount:c,pixelType:p}=this.rasterInfo,{ranges:m,actualTileWidth:h,actualTileHeight:u}=this._getTileLocation(t,e,r);if(!m||0===m.length)return null;if(0===m[0].from&&0===m[0].to){const t=new Uint8Array(o*i);return new a({width:o,height:i,pixels:null,mask:t,validPixelCount:0})}const{bandIds:g}=this.ioConfig,d=\"none\"===l?1:c,y=[];let x=0;for(x=0;x<d;x++)(!g||g.indexOf[x]>-1)&&y.push(this.request(this._files.data,{range:{from:m[x].from,to:m[x].to},responseType:\"array-buffer\",signal:s.signal}));const w=await Promise.all(y),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),b=new Uint8Array(I);let A=0;for(x=0;x<d;x++)b.set(new Uint8Array(w[x].data),A),A+=w[x].data.byteLength;const R=\"lerc\"===this.rasterInfo.storageInfo.compression?\"lerc\":\"bip\",_=await this.decodePixelBlock(b.buffer,{width:o,height:i,format:R,pixelType:p});let j=0,F=0;if(h!==o||u!==i){let t=_.mask;if(t)for(x=0;x<i;x++)if(F=x*o,x<u)for(j=h;j<o;j++)t[F+j]=0;else for(j=0;j<o;j++)t[F+j]=0;else for(t=new Uint8Array(o*i),_.mask=t,x=0;x<u;x++)for(F=x*o,j=0;j<h;j++)t[F+j]=1}return _}_parseIndex(t){if(t.byteLength%16>0)throw\"invalid array buffer must be multiples of 16\";let e,r,s,o,i,a;if(u){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o)}else e=new Uint32Array(t);return e}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i,compression:a}=this.rasterInfo.storageInfo,{width:n,height:l,bandCount:f}=this.rasterInfo,c=\"none\"===a?1:f;let p,m,h,u=0,g=0;for(h=0;h<t;h++)g=i**h,p=Math.ceil(n/s/g),m=Math.ceil(l/o/g),u+=p*m;g=i**t,p=Math.ceil(n/s/g),m=Math.ceil(l/o/g),u+=e*p+r,u*=4*c;const d=this._storageIndex.subarray(u,u+4*c);let y=0,x=0;const w=[];for(let I=0;I<c;I++)y=d[4*I+0]*2**32+d[4*I+1],x=y+d[4*I+2]*2**32+d[4*I+3],w.push({from:y,to:x});return{ranges:w,actualTileWidth:r<p-1?s:Math.ceil(n/g)-s*(p-1),actualTileHeight:e<m-1?o:Math.ceil(l/g)-o*(m-1)}}_parseHeader(t){const r=m(t,\"MRF_META/Raster\");if(!r)throw new e(\"mrf:open\",\"not a valid MRF format\");const s=m(r,\"Size\"),o=parseInt(s.getAttribute(\"x\"),10),i=parseInt(s.getAttribute(\"y\"),10),a=parseInt(s.getAttribute(\"c\"),10),f=(h(r,\"Compression\")||\"none\").toLowerCase();if(!f||-1===[\"none\",\"lerc\"].indexOf(f))throw new e(\"mrf:open\",\"currently does not support compression \"+f);const p=h(r,\"DataType\")||\"UInt8\",u=w.get(p);if(null==u)throw new e(\"mrf:open\",\"currently does not support pixel type \"+p);const g=m(r,\"PageSize\"),b=parseInt(g.getAttribute(\"x\"),10),A=parseInt(g.getAttribute(\"y\"),10),R=m(r,\"DataValues\");let _,j;R&&(j=R.getAttribute(\"NoData\"),null!=j&&(_=j.trim().split(\" \").map((t=>parseFloat(t)))));if(m(t,\"MRF_META/CachedSource\"))throw new e(\"mrf:open\",\"currently does not support MRF referencing other data files\");const F=m(t,\"MRF_META/GeoTags\"),M=m(F,\"BoundingBox\");if(null==M)throw new e(\"mrf:open\",\"missing node MRF_META/GeoTags/BoundingBox\");const T=parseFloat(M.getAttribute(\"minx\")),k=parseFloat(M.getAttribute(\"miny\")),C=parseFloat(M.getAttribute(\"maxx\")),L=parseFloat(M.getAttribute(\"maxy\")),S=h(F,\"Projection\")||\"\",U=h(t,\"datafile\"),v=h(t,\"IndexFile\");let B;if(\"LOCAL_CS[]\"!==S)if(S.toLowerCase().startsWith(\"epsg:\")){const t=Number(S.slice(5));isNaN(t)||0===t||(B=new d({wkid:t}))}else B=c(S);const P=new y(T,k,C,L);P.spatialReference=B;const H=m(t,\"MRF_META/Rsets\"),E=parseInt(H&&H.getAttribute(\"scale\")||\"2\",10),W=new l({origin:new x({x:P.xmin,y:P.ymax,spatialReference:B}),blockWidth:b,blockHeight:A,pyramidBlockWidth:b,pyramidBlockHeight:A,compression:f,pyramidScalingFactor:E}),D=new x({x:(C-T)/o,y:(L-k)/i,spatialReference:B});return{rasterInfo:new n({width:o,height:i,extent:P,spatialReference:B,bandCount:a,pixelType:u,pixelSize:D,noDataValue:_,storageInfo:W}),files:{mrf:this.url,index:v||this.url.replace(\".mrf\",\".idx\"),data:U||this.url.replace(\".mrf\",I.get(f))}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:null==t?void 0:t.signal});return p(e)}catch{return null}}};t([o()],b.prototype,\"_files\",void 0),t([o()],b.prototype,\"_storageIndex\",void 0),t([o({type:String,json:{write:!0}})],b.prototype,\"datasetFormat\",void 0),b=t([i(\"esri.layers.support.rasterIO.MRFRaster\")],b);var A=b;export default A;\n"]},"metadata":{},"sourceType":"module"}