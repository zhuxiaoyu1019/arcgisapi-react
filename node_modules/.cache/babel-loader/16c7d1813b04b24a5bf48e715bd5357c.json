{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { VertexPosition as o } from \"../../../core/shaderLibrary/attributes/VertexPosition.glsl.js\";\nimport { IsNaN as e } from \"../../../core/shaderLibrary/util/IsNaN.glsl.js\";\nimport { glsl as r } from \"../../../core/shaderModules/interfaces.js\";\n\nfunction a(a, t) {\n  a.vertex.include(e), a.include(o, t);\n  const s = a.vertex;\n  s.uniforms.add(\"uDepthBias\", \"vec2\"), s.uniforms.add(\"uViewportDimInv\", \"vec2\"), t.legacy ? (s.uniforms.add(\"uView\", \"mat4\"), s.uniforms.add(\"uProj\", \"mat4\")) : s.uniforms.add(\"uTransformNormal_ViewFromGlobal\", \"mat3\"), t.legacy ? s.code.add(r`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = uDepthBias.x;\nfloat offsetZ  = uDepthBias.y;\nvec4 projNormal = uProj * uView * vec4(globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * uViewportDimInv * normalize(projNormal.xyz).xy;\n}`) : s.code.add(r`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = uDepthBias.x;\nfloat offsetZ  = uDepthBias.y;\nvec4 projNormal = uTransform_ProjFromView * vec4(uTransformNormal_ViewFromGlobal * globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * uViewportDimInv * normalize(projNormal.xyz).xy;\n}`), s.code.add(r`float _calculateProjectedBiasZ(vec4 projPos) {\nfloat offsetZ = uDepthBias.y;\nreturn sqrt(projPos.z) * offsetZ;\n}\nvec4 adjustProjectedPosition(vec4 projPos, vec3 worldNormal, float lineWidth) {\nvec2 offsetXY = calculateProjectedBiasXY(projPos, worldNormal);\nif (!isNaN(offsetXY.x) && !isNaN(offsetXY.y)) {\nprojPos.xy += offsetXY;\n}\nprojPos.z += _calculateProjectedBiasZ(projPos);\nreturn projPos;\n}`);\n}\n\nexport { a as AdjustProjectedPosition };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js"],"names":["VertexPosition","o","IsNaN","e","glsl","r","a","t","vertex","include","s","uniforms","add","legacy","code","AdjustProjectedPosition"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,cAAc,IAAIC,CAAzB,QAA+B,+DAA/B;AAA+F,SAAOC,KAAK,IAAIC,CAAhB,QAAsB,gDAAtB;AAAuE,SAAOC,IAAI,IAAIC,CAAf,QAAqB,2CAArB;;AAAiE,SAASC,CAAT,CAAWA,CAAX,EAAaC,CAAb,EAAe;AAACD,EAAAA,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBN,CAAjB,GAAoBG,CAAC,CAACG,OAAF,CAAUR,CAAV,EAAYM,CAAZ,CAApB;AAAmC,QAAMG,CAAC,GAACJ,CAAC,CAACE,MAAV;AAAiBE,EAAAA,CAAC,CAACC,QAAF,CAAWC,GAAX,CAAe,YAAf,EAA4B,MAA5B,GAAoCF,CAAC,CAACC,QAAF,CAAWC,GAAX,CAAe,iBAAf,EAAiC,MAAjC,CAApC,EAA6EL,CAAC,CAACM,MAAF,IAAUH,CAAC,CAACC,QAAF,CAAWC,GAAX,CAAe,OAAf,EAAuB,MAAvB,GAA+BF,CAAC,CAACC,QAAF,CAAWC,GAAX,CAAe,OAAf,EAAuB,MAAvB,CAAzC,IAAyEF,CAAC,CAACC,QAAF,CAAWC,GAAX,CAAe,iCAAf,EAAiD,MAAjD,CAAtJ,EAA+ML,CAAC,CAACM,MAAF,GAASH,CAAC,CAACI,IAAF,CAAOF,GAAP,CAAWP,CAAE;AAChhB;AACA;AACA;AACA;AACA,EALmgB,CAAT,GAKtfK,CAAC,CAACI,IAAF,CAAOF,GAAP,CAAWP,CAAE;AACjB;AACA;AACA;AACA;AACA,EALI,CALuS,EAUvSK,CAAC,CAACI,IAAF,CAAOF,GAAP,CAAWP,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAXI,CAVuS;AAqBvS;;AAAA,SAAOC,CAAC,IAAIS,uBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{VertexPosition as o}from\"../../../core/shaderLibrary/attributes/VertexPosition.glsl.js\";import{IsNaN as e}from\"../../../core/shaderLibrary/util/IsNaN.glsl.js\";import{glsl as r}from\"../../../core/shaderModules/interfaces.js\";function a(a,t){a.vertex.include(e),a.include(o,t);const s=a.vertex;s.uniforms.add(\"uDepthBias\",\"vec2\"),s.uniforms.add(\"uViewportDimInv\",\"vec2\"),t.legacy?(s.uniforms.add(\"uView\",\"mat4\"),s.uniforms.add(\"uProj\",\"mat4\")):s.uniforms.add(\"uTransformNormal_ViewFromGlobal\",\"mat3\"),t.legacy?s.code.add(r`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = uDepthBias.x;\nfloat offsetZ  = uDepthBias.y;\nvec4 projNormal = uProj * uView * vec4(globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * uViewportDimInv * normalize(projNormal.xyz).xy;\n}`):s.code.add(r`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = uDepthBias.x;\nfloat offsetZ  = uDepthBias.y;\nvec4 projNormal = uTransform_ProjFromView * vec4(uTransformNormal_ViewFromGlobal * globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * uViewportDimInv * normalize(projNormal.xyz).xy;\n}`),s.code.add(r`float _calculateProjectedBiasZ(vec4 projPos) {\nfloat offsetZ = uDepthBias.y;\nreturn sqrt(projPos.z) * offsetZ;\n}\nvec4 adjustProjectedPosition(vec4 projPos, vec3 worldNormal, float lineWidth) {\nvec2 offsetXY = calculateProjectedBiasXY(projPos, worldNormal);\nif (!isNaN(offsetXY.x) && !isNaN(offsetXY.y)) {\nprojPos.xy += offsetXY;\n}\nprojPos.z += _calculateProjectedBiasZ(projPos);\nreturn projPos;\n}`)}export{a as AdjustProjectedPosition};\n"]},"metadata":{},"sourceType":"module"}