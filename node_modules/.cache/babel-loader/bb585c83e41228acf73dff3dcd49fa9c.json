{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { DISPLAY_RECORD_INT_PER_ELEMENT as t } from \"../definitions.js\";\nimport { getMeshSizeHint as e } from \"./heuristics.js\";\nimport s from \"../util/Writer.js\";\n\nclass r {\n  constructor(t, r, i) {\n    this._start = {\n      index: 0,\n      vertex: 0\n    };\n    const h = e(t, r, i),\n          c = r / 4;\n    this.geometryType = t, this._records = new s(Int32Array, h.recordBytes), this._indices = new s(Uint32Array, h.indexBytes), this._vertices = new s(Uint32Array, h.vertexBytes), this._metrics = new s(Float32Array, 0), this._strideInt = c;\n  }\n\n  serialize(t) {\n    const e = this._records.buffer(),\n          s = this._indices.buffer(),\n          r = this._vertices.buffer(),\n          i = this._metrics.length ? this._metrics.buffer() : null,\n          h = 4 * this._strideInt;\n\n    return t.push(e, s, r), {\n      stride: h,\n      records: e,\n      indices: s,\n      vertices: r,\n      metrics: i\n    };\n  }\n\n  get strideInt() {\n    return this._strideInt;\n  }\n\n  get recordCount() {\n    return this._records.length / t;\n  }\n\n  get vertexCount() {\n    return this._vertices.length / this._strideInt;\n  }\n\n  get indexCount() {\n    return this._indices.length;\n  }\n\n  get indexWriter() {\n    return this._indices;\n  }\n\n  get vertexWriter() {\n    return this._vertices;\n  }\n\n  get metricWriter() {\n    return this._metrics;\n  }\n\n  recordStart() {\n    this._start.index = this._indices.length, this._start.vertex = this._vertices.length;\n  }\n\n  recordEnd(t, e, s, r, i, h, c) {\n    this._records.push(t), this._records.push(e), this._records.push(s), this._records.push(r), this._records.push(i), this._records.push(h), this._records.push(c);\n  }\n\n  writeIndex(t) {\n    this._indices.push(t);\n  }\n\n  writeVertex(t) {\n    this._vertices.push(t);\n  }\n\n  writeVertexF32(t) {\n    this._vertices.writeF32(t);\n  }\n\n  copyLastFrom(t, e, s) {\n    const r = t._records.length - 7,\n          i = t._records.getValue(r),\n          h = t._records.getValue(r + 1),\n          c = t._records.getValue(r + 2),\n          n = t._records.getValue(r + 4),\n          _ = t._records.getValue(r + 6),\n          d = this._vertices.length,\n          o = (t._start.vertex - this._vertices.length) / this._strideInt,\n          u = this._indices.length,\n          l = this.vertexCount;\n\n    for (let g = t._start.index; g !== t._indices.length; g++) {\n      const e = t._indices.getValue(g);\n\n      this._indices.push(e - o);\n    }\n\n    for (let g = t._start.vertex; g !== t._vertices.length; g++) {\n      const e = t._vertices.getValue(g);\n\n      this._vertices.push(e);\n    }\n\n    for (let g = d; g <= this._vertices.length; g += this._strideInt) this._vertices.i1616Add(g, e, s);\n\n    this._records.push(i), this._records.push(h), this._records.push(c), this._records.push(u), this._records.push(n), this._records.push(l), this._records.push(_);\n  }\n\n}\n\nexport { r as VertexDataWriter };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/2d/engine/webgl/mesh/VertexDataWriter.js"],"names":["DISPLAY_RECORD_INT_PER_ELEMENT","t","getMeshSizeHint","e","s","r","constructor","i","_start","index","vertex","h","c","geometryType","_records","Int32Array","recordBytes","_indices","Uint32Array","indexBytes","_vertices","vertexBytes","_metrics","Float32Array","_strideInt","serialize","buffer","length","push","stride","records","indices","vertices","metrics","strideInt","recordCount","vertexCount","indexCount","indexWriter","vertexWriter","metricWriter","recordStart","recordEnd","writeIndex","writeVertex","writeVertexF32","writeF32","copyLastFrom","getValue","n","_","d","o","u","l","g","i1616Add","VertexDataWriter"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{DISPLAY_RECORD_INT_PER_ELEMENT as t}from\"../definitions.js\";import{getMeshSizeHint as e}from\"./heuristics.js\";import s from\"../util/Writer.js\";class r{constructor(t,r,i){this._start={index:0,vertex:0};const h=e(t,r,i),c=r/4;this.geometryType=t,this._records=new s(Int32Array,h.recordBytes),this._indices=new s(Uint32Array,h.indexBytes),this._vertices=new s(Uint32Array,h.vertexBytes),this._metrics=new s(Float32Array,0),this._strideInt=c}serialize(t){const e=this._records.buffer(),s=this._indices.buffer(),r=this._vertices.buffer(),i=this._metrics.length?this._metrics.buffer():null,h=4*this._strideInt;return t.push(e,s,r),{stride:h,records:e,indices:s,vertices:r,metrics:i}}get strideInt(){return this._strideInt}get recordCount(){return this._records.length/t}get vertexCount(){return this._vertices.length/this._strideInt}get indexCount(){return this._indices.length}get indexWriter(){return this._indices}get vertexWriter(){return this._vertices}get metricWriter(){return this._metrics}recordStart(){this._start.index=this._indices.length,this._start.vertex=this._vertices.length}recordEnd(t,e,s,r,i,h,c){this._records.push(t),this._records.push(e),this._records.push(s),this._records.push(r),this._records.push(i),this._records.push(h),this._records.push(c)}writeIndex(t){this._indices.push(t)}writeVertex(t){this._vertices.push(t)}writeVertexF32(t){this._vertices.writeF32(t)}copyLastFrom(t,e,s){const r=t._records.length-7,i=t._records.getValue(r),h=t._records.getValue(r+1),c=t._records.getValue(r+2),n=t._records.getValue(r+4),_=t._records.getValue(r+6),d=this._vertices.length,o=(t._start.vertex-this._vertices.length)/this._strideInt,u=this._indices.length,l=this.vertexCount;for(let g=t._start.index;g!==t._indices.length;g++){const e=t._indices.getValue(g);this._indices.push(e-o)}for(let g=t._start.vertex;g!==t._vertices.length;g++){const e=t._vertices.getValue(g);this._vertices.push(e)}for(let g=d;g<=this._vertices.length;g+=this._strideInt)this._vertices.i1616Add(g,e,s);this._records.push(i),this._records.push(h),this._records.push(c),this._records.push(u),this._records.push(n),this._records.push(l),this._records.push(_)}}export{r as VertexDataWriter};\n"]},"metadata":{},"sourceType":"module"}