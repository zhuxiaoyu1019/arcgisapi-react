{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { escapeRegExpString as a } from \"../string.js\";\n\nclass e {\n  constructor() {\n    this.op = \"+\", this.day = 0, this.second = 0, this.hour = 0, this.month = 0, this.year = 0, this.minute = 0;\n  }\n\n  static fixDefaults(a) {\n    if (null !== a.precision || null !== a.secondary) throw new Error(\"Primary and Secondary SqlInterval qualifiers not supported\");\n  }\n\n  static createFromMilliseconds(a) {\n    const t = new e();\n    return t.second = a / 1e3, t;\n  }\n\n  static createFromValueAndQualifer(a, t, r) {\n    let n = null;\n    const l = new e();\n\n    if (l.op = \"-\" === r ? \"-\" : \"+\", \"interval-period\" === t.type) {\n      e.fixDefaults(t);\n      const r = new RegExp(\"^[0-9]{1,}$\");\n      if (\"year\" === t.period || \"month\" === t.period) throw new Error(\"Year-Month Intervals not supported\");\n      if (!r.test(a)) throw new Error(\"Illegal Interval\");\n      l[t.period] = parseFloat(a);\n    } else {\n      if (e.fixDefaults(t.start), e.fixDefaults(t.end), \"year\" === t.start.period || \"month\" === t.start.period) throw new Error(\"Year-Month Intervals not supported\");\n      if (\"year\" === t.end.period || \"month\" === t.end.period) throw new Error(\"Year-Month Intervals not supported\");\n\n      switch (t.start.period) {\n        case \"day\":\n          switch (t.end.period) {\n            case \"hour\":\n              if (n = new RegExp(\"^[0-9]{1,} [0-9]{1,}$\"), !n.test(a)) throw new Error(\"Illegal Interval\");\n              l[t.start.period] = parseFloat(a.split(\" \")[0]), l[t.end.period] = parseFloat(a.split(\" \")[1]);\n              break;\n\n            case \"minute\":\n              if (n = new RegExp(\"^[0-9]{1,} [0-9]{1,2}:[0-9]{1,}$\"), !n.test(a)) throw new Error(\"Illegal Interval\");\n              {\n                l[t.start.period] = parseFloat(a.split(\" \")[0]);\n                const e = a.split(\" \")[1].split(\":\");\n                l.hour = parseFloat(e[0]), l.minute = parseFloat(e[1]);\n              }\n              break;\n\n            case \"second\":\n              if (n = new RegExp(\"^[0-9]{1,} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"), !n.test(a)) throw new Error(\"Illegal Interval\");\n              {\n                l[t.start.period] = parseFloat(a.split(\" \")[0]);\n                const e = a.split(\" \")[1].split(\":\");\n                l.hour = parseFloat(e[0]), l.minute = parseFloat(e[1]), l.second = parseFloat(e[2]);\n              }\n              break;\n\n            default:\n              throw \"Invalid Interval.\";\n          }\n\n          break;\n\n        case \"hour\":\n          switch (t.end.period) {\n            case \"minute\":\n              if (n = new RegExp(\"^[0-9]{1,}:[0-9]{1,}$\"), !n.test(a)) throw new Error(\"Illegal Interval\");\n              l.hour = parseFloat(a.split(\":\")[0]), l.minute = parseFloat(a.split(\":\")[1]);\n              break;\n\n            case \"second\":\n              if (n = new RegExp(\"^[0-9]{1,}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"), !n.test(a)) throw new Error(\"Illegal Interval\");\n              {\n                const e = a.split(\":\");\n                l.hour = parseFloat(e[0]), l.minute = parseFloat(e[1]), l.second = parseFloat(e[2]);\n              }\n              break;\n\n            default:\n              throw \"Invalid Interval.\";\n          }\n\n          break;\n\n        case \"minute\":\n          switch (t.end.period) {\n            case \"second\":\n              if (n = new RegExp(\"^[0-9]{1,}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"), !n.test(a)) throw new Error(\"Illegal Interval\");\n              {\n                const e = a.split(\":\");\n                l.minute = parseFloat(e[0]), l.second = parseFloat(e[1]);\n              }\n              break;\n\n            default:\n              throw \"Invalid Interval.\";\n          }\n\n          break;\n\n        default:\n          throw \"Invalid Interval.\";\n      }\n    }\n\n    return l;\n  }\n\n  valueInMilliseconds() {\n    return (\"-\" === this.op ? -1 : 1) * (1e3 * this.second + 60 * this.minute * 1e3 + 60 * this.hour * 60 * 1e3 + 24 * this.day * 60 * 60 * 1e3 + this.month * (365 / 12) * 24 * 60 * 60 * 1e3 + 365 * this.year * 24 * 60 * 60 * 1e3);\n  }\n\n}\n\nfunction t(a, e) {\n  const t = n[a.toLowerCase()];\n  if (null == t) throw new Error(\"Function Not Recognised\");\n  if (e.length < t.minParams || e.length > t.maxParams) throw new Error(`Invalid Parameter count for call to ${a.toUpperCase()}`);\n  return t.evaluate(e);\n}\n\nfunction r(a, e) {\n  const t = n[a.toLowerCase()];\n  return null != t && e >= t.minParams && e <= t.maxParams;\n}\n\nconst n = {\n  extract: {\n    minParams: 2,\n    maxParams: 2,\n    evaluate: ([a, e]) => {\n      if (null == e) return null;\n      if (e instanceof Date) switch (a.toUpperCase()) {\n        case \"SECOND\":\n          return e.getSeconds();\n\n        case \"MINUTE\":\n          return e.getMinutes();\n\n        case \"HOUR\":\n          return e.getHours();\n\n        case \"DAY\":\n          return e.getDate();\n\n        case \"MONTH\":\n          return e.getMonth() + 1;\n\n        case \"YEAR\":\n          return e.getFullYear();\n      }\n      throw new Error(\"Invalid Parameter for call to EXTRACT\");\n    }\n  },\n  substring: {\n    minParams: 2,\n    maxParams: 3,\n    evaluate: a => {\n      if (2 === a.length) {\n        const [e, t] = a;\n        return null == e || null == t ? null : e.toString().substring(t - 1);\n      }\n\n      if (3 === a.length) {\n        const [e, t, r] = a;\n        return null == e || null == t || null == r ? null : r <= 0 ? \"\" : e.toString().substring(t - 1, t + r - 1);\n      }\n    }\n  },\n  position: {\n    minParams: 2,\n    maxParams: 2,\n    evaluate: ([a, e]) => null == a || null == e ? null : e.indexOf(a) + 1\n  },\n  trim: {\n    minParams: 2,\n    maxParams: 3,\n    evaluate: e => {\n      const t = 3 === e.length,\n            r = t ? e[1] : \" \",\n            n = t ? e[2] : e[1];\n      if (null == r || null == n) return null;\n      const l = `(${a(r)})`;\n\n      switch (e[0]) {\n        case \"BOTH\":\n          return n.replace(new RegExp(`^${l}*|${l}*$`, \"g\"), \"\");\n\n        case \"LEADING\":\n          return n.replace(new RegExp(`^${l}*`, \"g\"), \"\");\n\n        case \"TRAILING\":\n          return n.replace(new RegExp(`${l}*$`, \"g\"), \"\");\n      }\n\n      throw new Error(\"Invalid Parameter for call to TRIM\");\n    }\n  },\n  abs: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.abs(a[0])\n  },\n  ceiling: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.ceil(a[0])\n  },\n  floor: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.floor(a[0])\n  },\n  log: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.log(a[0])\n  },\n  log10: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.log(a[0]) * Math.LOG10E\n  },\n  sin: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.sin(a[0])\n  },\n  cos: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.cos(a[0])\n  },\n  tan: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.tan(a[0])\n  },\n  asin: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.asin(a[0])\n  },\n  acos: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.acos(a[0])\n  },\n  atan: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : Math.atan(a[0])\n  },\n  sign: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : a[0] > 0 ? 1 : a[1] < 0 ? -1 : 0\n  },\n  power: {\n    minParams: 2,\n    maxParams: 2,\n    evaluate: a => null == a[0] || null == a[1] ? null : a[0] ** a[1]\n  },\n  mod: {\n    minParams: 2,\n    maxParams: 2,\n    evaluate: a => null == a[0] || null == a[1] ? null : a[0] % a[1]\n  },\n  round: {\n    minParams: 1,\n    maxParams: 2,\n    evaluate: a => {\n      const e = a[0],\n            t = 2 === a.length ? 10 ** a[1] : 1;\n      return null == e ? null : Math.round(e * t) / t;\n    }\n  },\n  truncate: {\n    minParams: 1,\n    maxParams: 2,\n    evaluate: a => null == a[0] ? null : 1 === a.length ? parseInt(a[0].toFixed(0), 10) : parseFloat(a[0].toFixed(a[1]))\n  },\n  char_length: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => \"string\" == typeof a[0] || a[0] instanceof String ? a[0].length : 0\n  },\n  concat: {\n    minParams: 1,\n    maxParams: 1 / 0,\n    evaluate: a => {\n      let e = \"\";\n\n      for (let t = 0; t < a.length; t++) {\n        if (null == a[t]) return null;\n        e += a[t].toString();\n      }\n\n      return e;\n    }\n  },\n  lower: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : a[0].toString().toLowerCase()\n  },\n  upper: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: a => null == a[0] ? null : a[0].toString().toUpperCase()\n  }\n};\nexport { e as SqlInterval, t as evaluateFunction, r as isStandardized };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/core/sql/StandardizedFunctions.js"],"names":["escapeRegExpString","a","e","constructor","op","day","second","hour","month","year","minute","fixDefaults","precision","secondary","Error","createFromMilliseconds","t","createFromValueAndQualifer","r","n","l","type","RegExp","period","test","parseFloat","start","end","split","valueInMilliseconds","toLowerCase","length","minParams","maxParams","toUpperCase","evaluate","extract","Date","getSeconds","getMinutes","getHours","getDate","getMonth","getFullYear","substring","toString","position","indexOf","trim","replace","abs","Math","ceiling","ceil","floor","log","log10","LOG10E","sin","cos","tan","asin","acos","atan","sign","power","mod","round","truncate","parseInt","toFixed","char_length","String","concat","lower","upper","SqlInterval","evaluateFunction","isStandardized"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{escapeRegExpString as a}from\"../string.js\";class e{constructor(){this.op=\"+\",this.day=0,this.second=0,this.hour=0,this.month=0,this.year=0,this.minute=0}static fixDefaults(a){if(null!==a.precision||null!==a.secondary)throw new Error(\"Primary and Secondary SqlInterval qualifiers not supported\")}static createFromMilliseconds(a){const t=new e;return t.second=a/1e3,t}static createFromValueAndQualifer(a,t,r){let n=null;const l=new e;if(l.op=\"-\"===r?\"-\":\"+\",\"interval-period\"===t.type){e.fixDefaults(t);const r=new RegExp(\"^[0-9]{1,}$\");if(\"year\"===t.period||\"month\"===t.period)throw new Error(\"Year-Month Intervals not supported\");if(!r.test(a))throw new Error(\"Illegal Interval\");l[t.period]=parseFloat(a)}else{if(e.fixDefaults(t.start),e.fixDefaults(t.end),\"year\"===t.start.period||\"month\"===t.start.period)throw new Error(\"Year-Month Intervals not supported\");if(\"year\"===t.end.period||\"month\"===t.end.period)throw new Error(\"Year-Month Intervals not supported\");switch(t.start.period){case\"day\":switch(t.end.period){case\"hour\":if(n=new RegExp(\"^[0-9]{1,} [0-9]{1,}$\"),!n.test(a))throw new Error(\"Illegal Interval\");l[t.start.period]=parseFloat(a.split(\" \")[0]),l[t.end.period]=parseFloat(a.split(\" \")[1]);break;case\"minute\":if(n=new RegExp(\"^[0-9]{1,} [0-9]{1,2}:[0-9]{1,}$\"),!n.test(a))throw new Error(\"Illegal Interval\");{l[t.start.period]=parseFloat(a.split(\" \")[0]);const e=a.split(\" \")[1].split(\":\");l.hour=parseFloat(e[0]),l.minute=parseFloat(e[1])}break;case\"second\":if(n=new RegExp(\"^[0-9]{1,} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"),!n.test(a))throw new Error(\"Illegal Interval\");{l[t.start.period]=parseFloat(a.split(\" \")[0]);const e=a.split(\" \")[1].split(\":\");l.hour=parseFloat(e[0]),l.minute=parseFloat(e[1]),l.second=parseFloat(e[2])}break;default:throw\"Invalid Interval.\"}break;case\"hour\":switch(t.end.period){case\"minute\":if(n=new RegExp(\"^[0-9]{1,}:[0-9]{1,}$\"),!n.test(a))throw new Error(\"Illegal Interval\");l.hour=parseFloat(a.split(\":\")[0]),l.minute=parseFloat(a.split(\":\")[1]);break;case\"second\":if(n=new RegExp(\"^[0-9]{1,}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"),!n.test(a))throw new Error(\"Illegal Interval\");{const e=a.split(\":\");l.hour=parseFloat(e[0]),l.minute=parseFloat(e[1]),l.second=parseFloat(e[2])}break;default:throw\"Invalid Interval.\"}break;case\"minute\":switch(t.end.period){case\"second\":if(n=new RegExp(\"^[0-9]{1,}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"),!n.test(a))throw new Error(\"Illegal Interval\");{const e=a.split(\":\");l.minute=parseFloat(e[0]),l.second=parseFloat(e[1])}break;default:throw\"Invalid Interval.\"}break;default:throw\"Invalid Interval.\"}}return l}valueInMilliseconds(){return(\"-\"===this.op?-1:1)*(1e3*this.second+60*this.minute*1e3+60*this.hour*60*1e3+24*this.day*60*60*1e3+this.month*(365/12)*24*60*60*1e3+365*this.year*24*60*60*1e3)}}function t(a,e){const t=n[a.toLowerCase()];if(null==t)throw new Error(\"Function Not Recognised\");if(e.length<t.minParams||e.length>t.maxParams)throw new Error(`Invalid Parameter count for call to ${a.toUpperCase()}`);return t.evaluate(e)}function r(a,e){const t=n[a.toLowerCase()];return null!=t&&e>=t.minParams&&e<=t.maxParams}const n={extract:{minParams:2,maxParams:2,evaluate:([a,e])=>{if(null==e)return null;if(e instanceof Date)switch(a.toUpperCase()){case\"SECOND\":return e.getSeconds();case\"MINUTE\":return e.getMinutes();case\"HOUR\":return e.getHours();case\"DAY\":return e.getDate();case\"MONTH\":return e.getMonth()+1;case\"YEAR\":return e.getFullYear()}throw new Error(\"Invalid Parameter for call to EXTRACT\")}},substring:{minParams:2,maxParams:3,evaluate:a=>{if(2===a.length){const[e,t]=a;return null==e||null==t?null:e.toString().substring(t-1)}if(3===a.length){const[e,t,r]=a;return null==e||null==t||null==r?null:r<=0?\"\":e.toString().substring(t-1,t+r-1)}}},position:{minParams:2,maxParams:2,evaluate:([a,e])=>null==a||null==e?null:e.indexOf(a)+1},trim:{minParams:2,maxParams:3,evaluate:e=>{const t=3===e.length,r=t?e[1]:\" \",n=t?e[2]:e[1];if(null==r||null==n)return null;const l=`(${a(r)})`;switch(e[0]){case\"BOTH\":return n.replace(new RegExp(`^${l}*|${l}*$`,\"g\"),\"\");case\"LEADING\":return n.replace(new RegExp(`^${l}*`,\"g\"),\"\");case\"TRAILING\":return n.replace(new RegExp(`${l}*$`,\"g\"),\"\")}throw new Error(\"Invalid Parameter for call to TRIM\")}},abs:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.abs(a[0])},ceiling:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.ceil(a[0])},floor:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.floor(a[0])},log:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.log(a[0])},log10:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.log(a[0])*Math.LOG10E},sin:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.sin(a[0])},cos:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.cos(a[0])},tan:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.tan(a[0])},asin:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.asin(a[0])},acos:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.acos(a[0])},atan:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.atan(a[0])},sign:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0]>0?1:a[1]<0?-1:0},power:{minParams:2,maxParams:2,evaluate:a=>null==a[0]||null==a[1]?null:a[0]**a[1]},mod:{minParams:2,maxParams:2,evaluate:a=>null==a[0]||null==a[1]?null:a[0]%a[1]},round:{minParams:1,maxParams:2,evaluate:a=>{const e=a[0],t=2===a.length?10**a[1]:1;return null==e?null:Math.round(e*t)/t}},truncate:{minParams:1,maxParams:2,evaluate:a=>null==a[0]?null:1===a.length?parseInt(a[0].toFixed(0),10):parseFloat(a[0].toFixed(a[1]))},char_length:{minParams:1,maxParams:1,evaluate:a=>\"string\"==typeof a[0]||a[0]instanceof String?a[0].length:0},concat:{minParams:1,maxParams:1/0,evaluate:a=>{let e=\"\";for(let t=0;t<a.length;t++){if(null==a[t])return null;e+=a[t].toString()}return e}},lower:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].toString().toLowerCase()},upper:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].toString().toUpperCase()}};export{e as SqlInterval,t as evaluateFunction,r as isStandardized};\n"]},"metadata":{},"sourceType":"module"}