{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport \"../../../../core/has.js\";\nimport { s, m as t } from \"../../../../chunks/mat3.js\";\nimport { c as o } from \"../../../../chunks/mat3f32.js\";\nimport { DisplayObject as i } from \"../DisplayObject.js\";\nimport e from \"../../tiling/TileKey.js\";\n\nclass r extends i {\n  constructor(s, t, i, r = i) {\n    super(), this.triangleCountReportedInDebug = 0, this.transforms = {\n      dvs: o(),\n      tileMat3: o()\n    }, this.triangleCount = 0, this.key = new e(s), this.bounds = t, this.size = i, this.coordRange = r;\n  }\n\n  destroy() {\n    this.texture && (this.texture.dispose(), this.texture = null);\n  }\n\n  get coords() {\n    return this._coords;\n  }\n\n  get bounds() {\n    return this._bounds;\n  }\n\n  set bounds(s) {\n    this._coords = [s[0], s[3]], this._bounds = s;\n  }\n\n  setTransform(o, i) {\n    const e = i / (o.resolution * o.pixelRatio),\n          r = this.transforms.tileMat3,\n          [n, h] = o.toScreenNoRotation([0, 0], this.coords),\n          a = this.size[0] / this.coordRange[0] * e,\n          d = this.size[1] / this.coordRange[1] * e;\n    s(r, a, 0, 0, 0, d, 0, n, h, 1), t(this.transforms.dvs, o.displayViewMat3, r);\n  }\n\n}\n\nexport { r as TiledDisplayObject };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/2d/engine/webgl/TiledDisplayObject.js"],"names":["s","m","t","c","o","DisplayObject","i","e","r","constructor","triangleCountReportedInDebug","transforms","dvs","tileMat3","triangleCount","key","bounds","size","coordRange","destroy","texture","dispose","coords","_coords","_bounds","setTransform","resolution","pixelRatio","n","h","toScreenNoRotation","a","d","displayViewMat3","TiledDisplayObject"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAM,yBAAN;AAAgC,SAAOA,CAAP,EAASC,CAAC,IAAIC,CAAd,QAAoB,4BAApB;AAAiD,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,+BAAlB;AAAkD,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,qBAA9B;AAAoD,OAAOC,CAAP,MAAa,yBAAb;;AAAuC,MAAMC,CAAN,SAAgBF,CAAhB,CAAiB;AAACG,EAAAA,WAAW,CAACT,CAAD,EAAGE,CAAH,EAAKI,CAAL,EAAOE,CAAC,GAACF,CAAT,EAAW;AAAC,aAAQ,KAAKI,4BAAL,GAAkC,CAA1C,EAA4C,KAAKC,UAAL,GAAgB;AAACC,MAAAA,GAAG,EAACR,CAAC,EAAN;AAASS,MAAAA,QAAQ,EAACT,CAAC;AAAnB,KAA5D,EAAmF,KAAKU,aAAL,GAAmB,CAAtG,EAAwG,KAAKC,GAAL,GAAS,IAAIR,CAAJ,CAAMP,CAAN,CAAjH,EAA0H,KAAKgB,MAAL,GAAYd,CAAtI,EAAwI,KAAKe,IAAL,GAAUX,CAAlJ,EAAoJ,KAAKY,UAAL,GAAgBV,CAApK;AAAsK;;AAAAW,EAAAA,OAAO,GAAE;AAAC,SAAKC,OAAL,KAAe,KAAKA,OAAL,CAAaC,OAAb,IAAuB,KAAKD,OAAL,GAAa,IAAnD;AAAyD;;AAAU,MAANE,MAAM,GAAE;AAAC,WAAO,KAAKC,OAAZ;AAAoB;;AAAU,MAANP,MAAM,GAAE;AAAC,WAAO,KAAKQ,OAAZ;AAAoB;;AAAU,MAANR,MAAM,CAAChB,CAAD,EAAG;AAAC,SAAKuB,OAAL,GAAa,CAACvB,CAAC,CAAC,CAAD,CAAF,EAAMA,CAAC,CAAC,CAAD,CAAP,CAAb,EAAyB,KAAKwB,OAAL,GAAaxB,CAAtC;AAAwC;;AAAAyB,EAAAA,YAAY,CAACrB,CAAD,EAAGE,CAAH,EAAK;AAAC,UAAMC,CAAC,GAACD,CAAC,IAAEF,CAAC,CAACsB,UAAF,GAAatB,CAAC,CAACuB,UAAjB,CAAT;AAAA,UAAsCnB,CAAC,GAAC,KAAKG,UAAL,CAAgBE,QAAxD;AAAA,UAAiE,CAACe,CAAD,EAAGC,CAAH,IAAMzB,CAAC,CAAC0B,kBAAF,CAAqB,CAAC,CAAD,EAAG,CAAH,CAArB,EAA2B,KAAKR,MAAhC,CAAvE;AAAA,UAA+GS,CAAC,GAAC,KAAKd,IAAL,CAAU,CAAV,IAAa,KAAKC,UAAL,CAAgB,CAAhB,CAAb,GAAgCX,CAAjJ;AAAA,UAAmJyB,CAAC,GAAC,KAAKf,IAAL,CAAU,CAAV,IAAa,KAAKC,UAAL,CAAgB,CAAhB,CAAb,GAAgCX,CAArL;AAAuLP,IAAAA,CAAC,CAACQ,CAAD,EAAGuB,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAWC,CAAX,EAAa,CAAb,EAAeJ,CAAf,EAAiBC,CAAjB,EAAmB,CAAnB,CAAD,EAAuB3B,CAAC,CAAC,KAAKS,UAAL,CAAgBC,GAAjB,EAAqBR,CAAC,CAAC6B,eAAvB,EAAuCzB,CAAvC,CAAxB;AAAkE;;AAApoB;;AAAqoB,SAAOA,CAAC,IAAI0B,kBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{s,m as t}from\"../../../../chunks/mat3.js\";import{c as o}from\"../../../../chunks/mat3f32.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import e from\"../../tiling/TileKey.js\";class r extends i{constructor(s,t,i,r=i){super(),this.triangleCountReportedInDebug=0,this.transforms={dvs:o(),tileMat3:o()},this.triangleCount=0,this.key=new e(s),this.bounds=t,this.size=i,this.coordRange=r}destroy(){this.texture&&(this.texture.dispose(),this.texture=null)}get coords(){return this._coords}get bounds(){return this._bounds}set bounds(s){this._coords=[s[0],s[3]],this._bounds=s}setTransform(o,i){const e=i/(o.resolution*o.pixelRatio),r=this.transforms.tileMat3,[n,h]=o.toScreenNoRotation([0,0],this.coords),a=this.size[0]/this.coordRange[0]*e,d=this.size[1]/this.coordRange[1]*e;s(r,a,0,0,0,d,0,n,h,1),t(this.transforms.dvs,o.displayViewMat3,r)}}export{r as TiledDisplayObject};\n"]},"metadata":{},"sourceType":"module"}