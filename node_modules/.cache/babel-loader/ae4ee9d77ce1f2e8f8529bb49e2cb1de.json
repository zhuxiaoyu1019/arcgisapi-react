{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { isSome as r } from \"../../../core/maybe.js\";\nimport { property as o } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/Logger.js\";\nimport { subclass as i } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport s from \"../RasterInfo.js\";\nimport a from \"../RasterStorageInfo.js\";\nimport n from \"../TileInfo.js\";\nimport l from \"./BaseRaster.js\";\nimport f from \"./DBFParser.js\";\nimport { isTransformSupported as m, readTransform as c } from \"../rasterTransforms/utils.js\";\nimport p from \"../../../rest/support/FeatureSet.js\";\nimport d from \"../../../geometry/SpatialReference.js\";\nimport u from \"../../../geometry/Extent.js\";\nimport h from \"../../../geometry/Point.js\";\nconst g = new Map();\ng.set(\"int16\", \"esriFieldTypeSmallInteger\"), g.set(\"int32\", \"esriFieldTypeInteger\"), g.set(\"int64\", \"esriFieldTypeInteger\"), g.set(\"float32\", \"esriFieldTypeSingle\"), g.set(\"float64\", \"esriFieldTypeDouble\"), g.set(\"text\", \"esriFieldTypeString\");\nconst y = 8;\nlet x = class extends l {\n  constructor() {\n    super(...arguments), this.storageInfo = null, this.datasetFormat = \"CRF\";\n  }\n\n  async open(e) {\n    await this.init();\n    const {\n      data: r\n    } = await this.request(this.url + \"/conf.json\", {\n      signal: null == e ? void 0 : e.signal\n    });\n    if (!this._validateHeader(r)) throw new t(\"cloudraster:open\", \"Invalid or unsupported conf.json.\");\n    this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n\n    const {\n      storageInfo: o,\n      rasterInfo: i\n    } = this._parseHeader(r);\n\n    if (\"thematic\" === i.dataType) {\n      const e = await this._fetchAuxiliaryInformation();\n      i.attributeTable = e;\n    }\n\n    this._set(\"storageInfo\", o), this._set(\"rasterInfo\", i), this.ioConfig.retryCount = this.ioConfig.retryCount || 0;\n  }\n\n  async fetchRawTile(e, t, r, o = {}) {\n    const i = this.rasterInfo.storageInfo.maximumPyramidLevel - e;\n    if (i < 0) return null;\n\n    const s = this._buildCacheFilePath(i, t, r, o.multidimensionalDefinition),\n          a = this._getIndexRecordFromBundle(t, r),\n          n = await this.request(s, {\n      range: {\n        from: 0,\n        to: this.storageInfo.headerSize - 1\n      },\n      responseType: \"array-buffer\",\n      signal: o.signal\n    });\n\n    if (!n) return null;\n\n    const l = new Uint8Array(n.data),\n          f = this._getTileEndAndContentType(l, a);\n\n    if (0 === f.recordSize) return null;\n    const m = await this.request(s, {\n      range: {\n        from: f.position,\n        to: f.position + f.recordSize\n      },\n      responseType: \"array-buffer\",\n      signal: o.signal\n    });\n    return m ? this.decodePixelBlock(m.data, {\n      width: this.rasterInfo.storageInfo.tileInfo.size[0],\n      height: this.rasterInfo.storageInfo.tileInfo.size[1],\n      planes: null,\n      pixelType: null\n    }) : null;\n  }\n\n  _validateHeader(e) {\n    const t = [\"origin\", \"extent\", \"geodataXform\", \"LODInfos\", \"blockWidth\", \"blockHeight\", \"bandCount\", \"pixelType\", \"pixelSizeX\", \"pixelSizeY\", \"format\", \"packetSize\"];\n    return e && \"RasterInfo\" === e.type && !t.some(t => !e[t]);\n  }\n\n  _parseHeader(e) {\n    var t, r;\n    const o = [\"u1\", \"u2\", \"u4\", \"u8\", \"s8\", \"u16\", \"s16\", \"u32\", \"s32\", \"f32\", \"f64\"][e.pixelType],\n          {\n      bandCount: i,\n      histograms: l,\n      colormap: f,\n      blockWidth: m,\n      blockHeight: c,\n      firstPyramidLevel: p,\n      maximumPyramidLevel: g\n    } = e,\n          x = e.statistics && e.statistics.map(e => ({\n      min: e.min,\n      max: e.max,\n      avg: e.mean,\n      stddev: e.standardDeviation,\n      median: e.median,\n      mode: e.mode\n    })),\n          I = e.extent.spatialReference,\n          S = null == (t = e.geodataXform) ? void 0 : t.spatialReference,\n          v = new d(null != I && I.wkid || null != I && I.wkt ? I : S);\n    let w = new u({\n      xmin: e.extent.xmin,\n      ymin: e.extent.ymin,\n      xmax: e.extent.xmax,\n      ymax: e.extent.ymax,\n      spatialReference: v\n    });\n\n    const b = new h({\n      x: e.pixelSizeX,\n      y: e.pixelSizeY,\n      spatialReference: v\n    }),\n          T = Math.round((w.xmax - w.xmin) / b.x),\n          j = Math.round((w.ymax - w.ymin) / b.y),\n          z = this._parseTransform(e.geodataXform),\n          _ = z ? w : null;\n\n    z && (w = z.forwardTransform(w), b.x = (w.xmax - w.xmin) / T, b.y = (w.ymax - w.ymin) / j);\n    const k = null != (r = e.properties) ? r : {},\n          C = e.format.toLowerCase().replace(\"cache/\", \"\"),\n          R = new h(e.origin.x, e.origin.y, v);\n    let F, P, H, L;\n    if (f && f.colors) for (F = [], P = 0; P < f.colors.length; P++) H = f.colors[P], L = f.values ? f.values[P] : P, F.push([L, 255 & H, H << 16 >>> 24, H << 8 >>> 24, H >>> 24]);\n    const D = e.LODInfos,\n          M = [];\n\n    for (P = 0; P < D.levels.length; P++) M.push({\n      level: D.levels[P],\n      resolution: D.resolutions[P],\n      scale: 96 / .0254 * D.resolutions[P]\n    });\n\n    const B = new n({\n      dpi: 96,\n      lods: M,\n      format: C,\n      origin: R,\n      size: [m, c],\n      spatialReference: v\n    }),\n          O = {\n      recordSize: y,\n      packetSize: e.packetSize,\n      headerSize: e.packetSize * e.packetSize * y + 64\n    },\n          $ = [{\n      maxCol: Math.ceil(T / m) - 1,\n      maxRow: Math.ceil(j / c) - 1,\n      minCol: 0,\n      minRow: 0\n    }];\n    let q = 2;\n    if (g > 0) for (P = 0; P < g; P++) $.push({\n      maxCol: Math.ceil(T / q / m) - 1,\n      maxRow: Math.ceil(j / q / c) - 1,\n      minCol: 0,\n      minRow: 0\n    }), q *= 2;\n    const A = e.mdInfo;\n    return {\n      storageInfo: O,\n      rasterInfo: new s({\n        width: T,\n        height: j,\n        pixelType: o,\n        bandCount: i,\n        extent: w,\n        nativeExtent: _,\n        transform: z,\n        spatialReference: v,\n        pixelSize: b,\n        keyProperties: k,\n        statistics: x,\n        histograms: l,\n        multidimensionalInfo: A,\n        colormap: F,\n        storageInfo: new a({\n          blockWidth: m,\n          blockHeight: c,\n          pyramidBlockWidth: m,\n          pyramidBlockHeight: c,\n          origin: R,\n          tileInfo: B,\n          firstPyramidLevel: p,\n          maximumPyramidLevel: g,\n          blockBoundary: $\n        })\n      })\n    };\n  }\n\n  _parseTransform(e) {\n    var r, o;\n    if (!m(e)) throw new t(\"cloudraster:open\", \"the data contains unsupported geodata transform types\");\n    const i = c(e);\n    if (\"identity\" === i.type) return null;\n    if (\"polynomial\" !== i.type || null == (r = i.forwardCoefficients) || !r.length || null == (o = i.inverseCoefficients) || !o.length) throw new t(\"cloudraster:open\", \"the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently\");\n    return i;\n  }\n\n  async _fetchAuxiliaryInformation(e) {\n    const t = this.request(this.url + \"/conf.vat.json\", {\n      signal: e\n    }).then(e => e.data).catch(() => null),\n          r = this.request(this.url + \"/conf.vat.dbf\", {\n      responseType: \"array-buffer\",\n      signal: e\n    }).then(e => e.data).catch(() => null),\n          o = await Promise.all([t, r]);\n    let i;\n\n    if (o[0]) {\n      let e = o[0].fields;\n      const t = o[0].values;\n\n      if (e && t) {\n        e = e.map(e => ({\n          type: \"OID\" === e.name ? \"esriFieldTypeOID\" : g.get(e.type),\n          name: e.name,\n          alias: e.alias || e.name\n        }));\n        const r = t.map(e => ({\n          attributes: e\n        }));\n        e && t && (i = {\n          fields: e,\n          features: r\n        });\n      }\n    }\n\n    if (!i && o[1]) {\n      i = f.parse(o[1]).recordSet;\n    }\n\n    return p.fromJSON(i);\n  }\n\n  _buildCacheFilePath(e, t, o, i) {\n    const s = this.storageInfo.packetSize,\n          a = Math.floor(t / s) * s,\n          n = Math.floor(o / s) * s,\n          l = \"R\" + this._toHexString4(a) + \"C\" + this._toHexString4(n);\n\n    let f = \"L\";\n    f += e >= 10 ? e.toString() : \"0\" + e.toString();\n    const {\n      multidimensionalInfo: m\n    } = this.rasterInfo,\n          c = null == i ? void 0 : i[0];\n    if (!r(m) || !c) return `${this.url}/_alllayers/${f}/${l}.bundle`;\n    let p = m.variables.filter(e => e.name === c.variableName)[0].dimensions[0].values.indexOf(c.values[0]).toString(16);\n    const d = 4 - p.length;\n\n    for (let r = 0; r < d; r++) p = \"0\" + p;\n\n    return p = \"S\" + p, `${this.url}/_alllayers/${c.variableName}/${p}/${f}/${l}.bundle`;\n  }\n\n  _getIndexRecordFromBundle(e, t) {\n    const r = this.storageInfo.packetSize,\n          o = r * (e % r) + t % r;\n    if (o < 0) throw \"Invalid level / row / col\";\n    return 20 + o * this.storageInfo.recordSize + 44;\n  }\n\n  _getTileEndAndContentType(e, t) {\n    const r = e.subarray(t, t + 8);\n    let o,\n        i = 0;\n\n    for (o = 0; o < 5; o++) i |= (255 & r[o]) << 8 * o;\n\n    const s = 0xffffffffff & i;\n\n    for (i = 0, o = 5; o < 8; o++) i |= (255 & r[o]) << 8 * (o - 5);\n\n    return {\n      position: s,\n      recordSize: 0xffffffffff & i\n    };\n  }\n\n  _toHexString4(e) {\n    let t = e.toString(16);\n\n    if (4 !== t.length) {\n      let e = 4 - t.length;\n\n      for (; e-- > 0;) t = \"0\" + t;\n    }\n\n    return t;\n  }\n\n};\ne([o({\n  readOnly: !0\n})], x.prototype, \"storageInfo\", void 0), e([o({\n  type: String,\n  json: {\n    write: !0\n  }\n})], x.prototype, \"datasetFormat\", void 0), x = e([i(\"esri.layers.support.rasterDatasets.CloudRaster\")], x);\nvar I = x;\nexport default I;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/layers/support/rasterDatasets/CloudRaster.js"],"names":["_","e","t","isSome","r","property","o","subclass","i","s","a","n","l","f","isTransformSupported","m","readTransform","c","p","d","u","h","g","Map","set","y","x","constructor","arguments","storageInfo","datasetFormat","open","init","data","request","url","signal","_validateHeader","datasetName","slice","lastIndexOf","rasterInfo","_parseHeader","dataType","_fetchAuxiliaryInformation","attributeTable","_set","ioConfig","retryCount","fetchRawTile","maximumPyramidLevel","_buildCacheFilePath","multidimensionalDefinition","_getIndexRecordFromBundle","range","from","to","headerSize","responseType","Uint8Array","_getTileEndAndContentType","recordSize","position","decodePixelBlock","width","tileInfo","size","height","planes","pixelType","type","some","bandCount","histograms","colormap","blockWidth","blockHeight","firstPyramidLevel","statistics","map","min","max","avg","mean","stddev","standardDeviation","median","mode","I","extent","spatialReference","S","geodataXform","v","wkid","wkt","w","xmin","ymin","xmax","ymax","b","pixelSizeX","pixelSizeY","T","Math","round","j","z","_parseTransform","forwardTransform","k","properties","C","format","toLowerCase","replace","R","origin","F","P","H","L","colors","length","values","push","D","LODInfos","M","levels","level","resolution","resolutions","scale","B","dpi","lods","O","packetSize","$","maxCol","ceil","maxRow","minCol","minRow","q","A","mdInfo","nativeExtent","transform","pixelSize","keyProperties","multidimensionalInfo","pyramidBlockWidth","pyramidBlockHeight","blockBoundary","forwardCoefficients","inverseCoefficients","then","catch","Promise","all","fields","name","get","alias","attributes","features","parse","recordSet","fromJSON","floor","_toHexString4","toString","variables","filter","variableName","dimensions","indexOf","subarray","readOnly","prototype","String","json","write"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,8BAAlB;AAAiD,OAAM,sBAAN;AAA6B,OAAOC,CAAP,MAAa,wBAAb;AAAsC,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,wBAAvB;AAAgD,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,sDAAzB;AAAgF,OAAM,sBAAN;AAA6B,OAAM,6CAAN;AAAoD,OAAM,yBAAN;AAAgC,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,sDAAzB;AAAgF,OAAOC,CAAP,MAAa,kBAAb;AAAgC,OAAOC,CAAP,MAAa,yBAAb;AAAuC,OAAOC,CAAP,MAAa,gBAAb;AAA8B,OAAOC,CAAP,MAAa,iBAAb;AAA+B,OAAOC,CAAP,MAAa,gBAAb;AAA8B,SAAOC,oBAAoB,IAAIC,CAA/B,EAAiCC,aAAa,IAAIC,CAAlD,QAAwD,8BAAxD;AAAuF,OAAOC,CAAP,MAAa,qCAAb;AAAmD,OAAOC,CAAP,MAAa,uCAAb;AAAqD,OAAOC,CAAP,MAAa,6BAAb;AAA2C,OAAOC,CAAP,MAAa,4BAAb;AAA0C,MAAMC,CAAC,GAAC,IAAIC,GAAJ,EAAR;AAAgBD,CAAC,CAACE,GAAF,CAAM,OAAN,EAAc,2BAAd,GAA2CF,CAAC,CAACE,GAAF,CAAM,OAAN,EAAc,sBAAd,CAA3C,EAAiFF,CAAC,CAACE,GAAF,CAAM,OAAN,EAAc,sBAAd,CAAjF,EAAuHF,CAAC,CAACE,GAAF,CAAM,SAAN,EAAgB,qBAAhB,CAAvH,EAA8JF,CAAC,CAACE,GAAF,CAAM,SAAN,EAAgB,qBAAhB,CAA9J,EAAqMF,CAAC,CAACE,GAAF,CAAM,MAAN,EAAa,qBAAb,CAArM;AAAyO,MAAMC,CAAC,GAAC,CAAR;AAAU,IAAIC,CAAC,GAAC,cAAcd,CAAd,CAAe;AAACe,EAAAA,WAAW,GAAE;AAAC,UAAM,GAAGC,SAAT,GAAoB,KAAKC,WAAL,GAAiB,IAArC,EAA0C,KAAKC,aAAL,GAAmB,KAA7D;AAAmE;;AAAU,QAAJC,IAAI,CAAC9B,CAAD,EAAG;AAAC,UAAM,KAAK+B,IAAL,EAAN;AAAkB,UAAK;AAACC,MAAAA,IAAI,EAAC7B;AAAN,QAAS,MAAM,KAAK8B,OAAL,CAAa,KAAKC,GAAL,GAAS,YAAtB,EAAmC;AAACC,MAAAA,MAAM,EAAC,QAAMnC,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAACmC;AAAzB,KAAnC,CAApB;AAAyF,QAAG,CAAC,KAAKC,eAAL,CAAqBjC,CAArB,CAAJ,EAA4B,MAAM,IAAIF,CAAJ,CAAM,kBAAN,EAAyB,mCAAzB,CAAN;AAAoE,SAAKoC,WAAL,GAAiB,KAAKH,GAAL,CAASI,KAAT,CAAe,KAAKJ,GAAL,CAASK,WAAT,CAAqB,GAArB,IAA0B,CAAzC,CAAjB;;AAA6D,UAAK;AAACX,MAAAA,WAAW,EAACvB,CAAb;AAAemC,MAAAA,UAAU,EAACjC;AAA1B,QAA6B,KAAKkC,YAAL,CAAkBtC,CAAlB,CAAlC;;AAAuD,QAAG,eAAaI,CAAC,CAACmC,QAAlB,EAA2B;AAAC,YAAM1C,CAAC,GAAC,MAAM,KAAK2C,0BAAL,EAAd;AAAgDpC,MAAAA,CAAC,CAACqC,cAAF,GAAiB5C,CAAjB;AAAmB;;AAAA,SAAK6C,IAAL,CAAU,aAAV,EAAwBxC,CAAxB,GAA2B,KAAKwC,IAAL,CAAU,YAAV,EAAuBtC,CAAvB,CAA3B,EAAqD,KAAKuC,QAAL,CAAcC,UAAd,GAAyB,KAAKD,QAAL,CAAcC,UAAd,IAA0B,CAAxG;AAA0G;;AAAkB,QAAZC,YAAY,CAAChD,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAOE,CAAC,GAAC,EAAT,EAAY;AAAC,UAAME,CAAC,GAAC,KAAKiC,UAAL,CAAgBZ,WAAhB,CAA4BqB,mBAA5B,GAAgDjD,CAAxD;AAA0D,QAAGO,CAAC,GAAC,CAAL,EAAO,OAAO,IAAP;;AAAY,UAAMC,CAAC,GAAC,KAAK0C,mBAAL,CAAyB3C,CAAzB,EAA2BN,CAA3B,EAA6BE,CAA7B,EAA+BE,CAAC,CAAC8C,0BAAjC,CAAR;AAAA,UAAqE1C,CAAC,GAAC,KAAK2C,yBAAL,CAA+BnD,CAA/B,EAAiCE,CAAjC,CAAvE;AAAA,UAA2GO,CAAC,GAAC,MAAM,KAAKuB,OAAL,CAAazB,CAAb,EAAe;AAAC6C,MAAAA,KAAK,EAAC;AAACC,QAAAA,IAAI,EAAC,CAAN;AAAQC,QAAAA,EAAE,EAAC,KAAK3B,WAAL,CAAiB4B,UAAjB,GAA4B;AAAvC,OAAP;AAAiDC,MAAAA,YAAY,EAAC,cAA9D;AAA6EtB,MAAAA,MAAM,EAAC9B,CAAC,CAAC8B;AAAtF,KAAf,CAAnH;;AAAiO,QAAG,CAACzB,CAAJ,EAAM,OAAO,IAAP;;AAAY,UAAMC,CAAC,GAAC,IAAI+C,UAAJ,CAAehD,CAAC,CAACsB,IAAjB,CAAR;AAAA,UAA+BpB,CAAC,GAAC,KAAK+C,yBAAL,CAA+BhD,CAA/B,EAAiCF,CAAjC,CAAjC;;AAAqE,QAAG,MAAIG,CAAC,CAACgD,UAAT,EAAoB,OAAO,IAAP;AAAY,UAAM9C,CAAC,GAAC,MAAM,KAAKmB,OAAL,CAAazB,CAAb,EAAe;AAAC6C,MAAAA,KAAK,EAAC;AAACC,QAAAA,IAAI,EAAC1C,CAAC,CAACiD,QAAR;AAAiBN,QAAAA,EAAE,EAAC3C,CAAC,CAACiD,QAAF,GAAWjD,CAAC,CAACgD;AAAjC,OAAP;AAAoDH,MAAAA,YAAY,EAAC,cAAjE;AAAgFtB,MAAAA,MAAM,EAAC9B,CAAC,CAAC8B;AAAzF,KAAf,CAAd;AAA+H,WAAOrB,CAAC,GAAC,KAAKgD,gBAAL,CAAsBhD,CAAC,CAACkB,IAAxB,EAA6B;AAAC+B,MAAAA,KAAK,EAAC,KAAKvB,UAAL,CAAgBZ,WAAhB,CAA4BoC,QAA5B,CAAqCC,IAArC,CAA0C,CAA1C,CAAP;AAAoDC,MAAAA,MAAM,EAAC,KAAK1B,UAAL,CAAgBZ,WAAhB,CAA4BoC,QAA5B,CAAqCC,IAArC,CAA0C,CAA1C,CAA3D;AAAwGE,MAAAA,MAAM,EAAC,IAA/G;AAAoHC,MAAAA,SAAS,EAAC;AAA9H,KAA7B,CAAD,GAAmK,IAA3K;AAAgL;;AAAAhC,EAAAA,eAAe,CAACpC,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,CAAC,QAAD,EAAU,QAAV,EAAmB,cAAnB,EAAkC,UAAlC,EAA6C,YAA7C,EAA0D,aAA1D,EAAwE,WAAxE,EAAoF,WAApF,EAAgG,YAAhG,EAA6G,YAA7G,EAA0H,QAA1H,EAAmI,YAAnI,CAAR;AAAyJ,WAAOD,CAAC,IAAE,iBAAeA,CAAC,CAACqE,IAApB,IAA0B,CAACpE,CAAC,CAACqE,IAAF,CAAQrE,CAAC,IAAE,CAACD,CAAC,CAACC,CAAD,CAAb,CAAlC;AAAqD;;AAAAwC,EAAAA,YAAY,CAACzC,CAAD,EAAG;AAAC,QAAIC,CAAJ,EAAME,CAAN;AAAQ,UAAME,CAAC,GAAC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,KAA1B,EAAgC,KAAhC,EAAsC,KAAtC,EAA4C,KAA5C,EAAkD,KAAlD,EAAwD,KAAxD,EAA+DL,CAAC,CAACoE,SAAjE,CAAR;AAAA,UAAoF;AAACG,MAAAA,SAAS,EAAChE,CAAX;AAAaiE,MAAAA,UAAU,EAAC7D,CAAxB;AAA0B8D,MAAAA,QAAQ,EAAC7D,CAAnC;AAAqC8D,MAAAA,UAAU,EAAC5D,CAAhD;AAAkD6D,MAAAA,WAAW,EAAC3D,CAA9D;AAAgE4D,MAAAA,iBAAiB,EAAC3D,CAAlF;AAAoFgC,MAAAA,mBAAmB,EAAC5B;AAAxG,QAA2GrB,CAA/L;AAAA,UAAiMyB,CAAC,GAACzB,CAAC,CAAC6E,UAAF,IAAc7E,CAAC,CAAC6E,UAAF,CAAaC,GAAb,CAAkB9E,CAAC,KAAG;AAAC+E,MAAAA,GAAG,EAAC/E,CAAC,CAAC+E,GAAP;AAAWC,MAAAA,GAAG,EAAChF,CAAC,CAACgF,GAAjB;AAAqBC,MAAAA,GAAG,EAACjF,CAAC,CAACkF,IAA3B;AAAgCC,MAAAA,MAAM,EAACnF,CAAC,CAACoF,iBAAzC;AAA2DC,MAAAA,MAAM,EAACrF,CAAC,CAACqF,MAApE;AAA2EC,MAAAA,IAAI,EAACtF,CAAC,CAACsF;AAAlF,KAAH,CAAnB,CAAjN;AAAA,UAAkUC,CAAC,GAACvF,CAAC,CAACwF,MAAF,CAASC,gBAA7U;AAAA,UAA8VC,CAAC,GAAC,SAAOzF,CAAC,GAACD,CAAC,CAAC2F,YAAX,IAAyB,KAAK,CAA9B,GAAgC1F,CAAC,CAACwF,gBAAlY;AAAA,UAAmZG,CAAC,GAAC,IAAI1E,CAAJ,CAAM,QAAMqE,CAAN,IAASA,CAAC,CAACM,IAAX,IAAiB,QAAMN,CAAN,IAASA,CAAC,CAACO,GAA5B,GAAgCP,CAAhC,GAAkCG,CAAxC,CAArZ;AAAgc,QAAIK,CAAC,GAAC,IAAI5E,CAAJ,CAAM;AAAC6E,MAAAA,IAAI,EAAChG,CAAC,CAACwF,MAAF,CAASQ,IAAf;AAAoBC,MAAAA,IAAI,EAACjG,CAAC,CAACwF,MAAF,CAASS,IAAlC;AAAuCC,MAAAA,IAAI,EAAClG,CAAC,CAACwF,MAAF,CAASU,IAArD;AAA0DC,MAAAA,IAAI,EAACnG,CAAC,CAACwF,MAAF,CAASW,IAAxE;AAA6EV,MAAAA,gBAAgB,EAACG;AAA9F,KAAN,CAAN;;AAA8G,UAAMQ,CAAC,GAAC,IAAIhF,CAAJ,CAAM;AAACK,MAAAA,CAAC,EAACzB,CAAC,CAACqG,UAAL;AAAgB7E,MAAAA,CAAC,EAACxB,CAAC,CAACsG,UAApB;AAA+Bb,MAAAA,gBAAgB,EAACG;AAAhD,KAAN,CAAR;AAAA,UAAkEW,CAAC,GAACC,IAAI,CAACC,KAAL,CAAW,CAACV,CAAC,CAACG,IAAF,GAAOH,CAAC,CAACC,IAAV,IAAgBI,CAAC,CAAC3E,CAA7B,CAApE;AAAA,UAAoGiF,CAAC,GAACF,IAAI,CAACC,KAAL,CAAW,CAACV,CAAC,CAACI,IAAF,GAAOJ,CAAC,CAACE,IAAV,IAAgBG,CAAC,CAAC5E,CAA7B,CAAtG;AAAA,UAAsImF,CAAC,GAAC,KAAKC,eAAL,CAAqB5G,CAAC,CAAC2F,YAAvB,CAAxI;AAAA,UAA6K5F,CAAC,GAAC4G,CAAC,GAACZ,CAAD,GAAG,IAAnL;;AAAwLY,IAAAA,CAAC,KAAGZ,CAAC,GAACY,CAAC,CAACE,gBAAF,CAAmBd,CAAnB,CAAF,EAAwBK,CAAC,CAAC3E,CAAF,GAAI,CAACsE,CAAC,CAACG,IAAF,GAAOH,CAAC,CAACC,IAAV,IAAgBO,CAA5C,EAA8CH,CAAC,CAAC5E,CAAF,GAAI,CAACuE,CAAC,CAACI,IAAF,GAAOJ,CAAC,CAACE,IAAV,IAAgBS,CAArE,CAAD;AAAyE,UAAMI,CAAC,GAAC,SAAO3G,CAAC,GAACH,CAAC,CAAC+G,UAAX,IAAuB5G,CAAvB,GAAyB,EAAjC;AAAA,UAAoC6G,CAAC,GAAChH,CAAC,CAACiH,MAAF,CAASC,WAAT,GAAuBC,OAAvB,CAA+B,QAA/B,EAAwC,EAAxC,CAAtC;AAAA,UAAkFC,CAAC,GAAC,IAAIhG,CAAJ,CAAMpB,CAAC,CAACqH,MAAF,CAAS5F,CAAf,EAAiBzB,CAAC,CAACqH,MAAF,CAAS7F,CAA1B,EAA4BoE,CAA5B,CAApF;AAAmH,QAAI0B,CAAJ,EAAMC,CAAN,EAAQC,CAAR,EAAUC,CAAV;AAAY,QAAG7G,CAAC,IAAEA,CAAC,CAAC8G,MAAR,EAAe,KAAIJ,CAAC,GAAC,EAAF,EAAKC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC3G,CAAC,CAAC8G,MAAF,CAASC,MAAxB,EAA+BJ,CAAC,EAAhC,EAAmCC,CAAC,GAAC5G,CAAC,CAAC8G,MAAF,CAASH,CAAT,CAAF,EAAcE,CAAC,GAAC7G,CAAC,CAACgH,MAAF,GAAShH,CAAC,CAACgH,MAAF,CAASL,CAAT,CAAT,GAAqBA,CAArC,EAAuCD,CAAC,CAACO,IAAF,CAAO,CAACJ,CAAD,EAAG,MAAID,CAAP,EAASA,CAAC,IAAE,EAAH,KAAQ,EAAjB,EAAoBA,CAAC,IAAE,CAAH,KAAO,EAA3B,EAA8BA,CAAC,KAAG,EAAlC,CAAP,CAAvC;AAAqF,UAAMM,CAAC,GAAC9H,CAAC,CAAC+H,QAAV;AAAA,UAAmBC,CAAC,GAAC,EAArB;;AAAwB,SAAIT,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACO,CAAC,CAACG,MAAF,CAASN,MAAnB,EAA0BJ,CAAC,EAA3B,EAA8BS,CAAC,CAACH,IAAF,CAAO;AAACK,MAAAA,KAAK,EAACJ,CAAC,CAACG,MAAF,CAASV,CAAT,CAAP;AAAmBY,MAAAA,UAAU,EAACL,CAAC,CAACM,WAAF,CAAcb,CAAd,CAA9B;AAA+Cc,MAAAA,KAAK,EAAC,KAAG,KAAH,GAASP,CAAC,CAACM,WAAF,CAAcb,CAAd;AAA9D,KAAP;;AAAwF,UAAMe,CAAC,GAAC,IAAI5H,CAAJ,CAAM;AAAC6H,MAAAA,GAAG,EAAC,EAAL;AAAQC,MAAAA,IAAI,EAACR,CAAb;AAAef,MAAAA,MAAM,EAACD,CAAtB;AAAwBK,MAAAA,MAAM,EAACD,CAA/B;AAAiCnD,MAAAA,IAAI,EAAC,CAACnD,CAAD,EAAGE,CAAH,CAAtC;AAA4CyE,MAAAA,gBAAgB,EAACG;AAA7D,KAAN,CAAR;AAAA,UAA+E6C,CAAC,GAAC;AAAC7E,MAAAA,UAAU,EAACpC,CAAZ;AAAckH,MAAAA,UAAU,EAAC1I,CAAC,CAAC0I,UAA3B;AAAsClF,MAAAA,UAAU,EAACxD,CAAC,CAAC0I,UAAF,GAAa1I,CAAC,CAAC0I,UAAf,GAA0BlH,CAA1B,GAA4B;AAA7E,KAAjF;AAAA,UAAkKmH,CAAC,GAAC,CAAC;AAACC,MAAAA,MAAM,EAACpC,IAAI,CAACqC,IAAL,CAAUtC,CAAC,GAACzF,CAAZ,IAAe,CAAvB;AAAyBgI,MAAAA,MAAM,EAACtC,IAAI,CAACqC,IAAL,CAAUnC,CAAC,GAAC1F,CAAZ,IAAe,CAA/C;AAAiD+H,MAAAA,MAAM,EAAC,CAAxD;AAA0DC,MAAAA,MAAM,EAAC;AAAjE,KAAD,CAApK;AAA0O,QAAIC,CAAC,GAAC,CAAN;AAAQ,QAAG5H,CAAC,GAAC,CAAL,EAAO,KAAIkG,CAAC,GAAC,CAAN,EAAQA,CAAC,GAAClG,CAAV,EAAYkG,CAAC,EAAb,EAAgBoB,CAAC,CAACd,IAAF,CAAO;AAACe,MAAAA,MAAM,EAACpC,IAAI,CAACqC,IAAL,CAAUtC,CAAC,GAAC0C,CAAF,GAAInI,CAAd,IAAiB,CAAzB;AAA2BgI,MAAAA,MAAM,EAACtC,IAAI,CAACqC,IAAL,CAAUnC,CAAC,GAACuC,CAAF,GAAIjI,CAAd,IAAiB,CAAnD;AAAqD+H,MAAAA,MAAM,EAAC,CAA5D;AAA8DC,MAAAA,MAAM,EAAC;AAArE,KAAP,GAAgFC,CAAC,IAAE,CAAnF;AAAqF,UAAMC,CAAC,GAAClJ,CAAC,CAACmJ,MAAV;AAAiB,WAAM;AAACvH,MAAAA,WAAW,EAAC6G,CAAb;AAAejG,MAAAA,UAAU,EAAC,IAAIhC,CAAJ,CAAM;AAACuD,QAAAA,KAAK,EAACwC,CAAP;AAASrC,QAAAA,MAAM,EAACwC,CAAhB;AAAkBtC,QAAAA,SAAS,EAAC/D,CAA5B;AAA8BkE,QAAAA,SAAS,EAAChE,CAAxC;AAA0CiF,QAAAA,MAAM,EAACO,CAAjD;AAAmDqD,QAAAA,YAAY,EAACrJ,CAAhE;AAAkEsJ,QAAAA,SAAS,EAAC1C,CAA5E;AAA8ElB,QAAAA,gBAAgB,EAACG,CAA/F;AAAiG0D,QAAAA,SAAS,EAAClD,CAA3G;AAA6GmD,QAAAA,aAAa,EAACzC,CAA3H;AAA6HjC,QAAAA,UAAU,EAACpD,CAAxI;AAA0I+C,QAAAA,UAAU,EAAC7D,CAArJ;AAAuJ6I,QAAAA,oBAAoB,EAACN,CAA5K;AAA8KzE,QAAAA,QAAQ,EAAC6C,CAAvL;AAAyL1F,QAAAA,WAAW,EAAC,IAAInB,CAAJ,CAAM;AAACiE,UAAAA,UAAU,EAAC5D,CAAZ;AAAc6D,UAAAA,WAAW,EAAC3D,CAA1B;AAA4ByI,UAAAA,iBAAiB,EAAC3I,CAA9C;AAAgD4I,UAAAA,kBAAkB,EAAC1I,CAAnE;AAAqEqG,UAAAA,MAAM,EAACD,CAA5E;AAA8EpD,UAAAA,QAAQ,EAACsE,CAAvF;AAAyF1D,UAAAA,iBAAiB,EAAC3D,CAA3G;AAA6GgC,UAAAA,mBAAmB,EAAC5B,CAAjI;AAAmIsI,UAAAA,aAAa,EAAChB;AAAjJ,SAAN;AAArM,OAAN;AAA1B,KAAN;AAAyY;;AAAA/B,EAAAA,eAAe,CAAC5G,CAAD,EAAG;AAAC,QAAIG,CAAJ,EAAME,CAAN;AAAQ,QAAG,CAACS,CAAC,CAACd,CAAD,CAAL,EAAS,MAAM,IAAIC,CAAJ,CAAM,kBAAN,EAAyB,uDAAzB,CAAN;AAAwF,UAAMM,CAAC,GAACS,CAAC,CAAChB,CAAD,CAAT;AAAa,QAAG,eAAaO,CAAC,CAAC8D,IAAlB,EAAuB,OAAO,IAAP;AAAY,QAAG,iBAAe9D,CAAC,CAAC8D,IAAjB,IAAuB,SAAOlE,CAAC,GAACI,CAAC,CAACqJ,mBAAX,CAAvB,IAAwD,CAACzJ,CAAC,CAACwH,MAA3D,IAAmE,SAAOtH,CAAC,GAACE,CAAC,CAACsJ,mBAAX,CAAnE,IAAoG,CAACxJ,CAAC,CAACsH,MAA1G,EAAiH,MAAM,IAAI1H,CAAJ,CAAM,kBAAN,EAAyB,iHAAzB,CAAN;AAAkJ,WAAOM,CAAP;AAAS;;AAAgC,QAA1BoC,0BAA0B,CAAC3C,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKgC,OAAL,CAAa,KAAKC,GAAL,GAAS,gBAAtB,EAAuC;AAACC,MAAAA,MAAM,EAACnC;AAAR,KAAvC,EAAmD8J,IAAnD,CAAyD9J,CAAC,IAAEA,CAAC,CAACgC,IAA9D,EAAqE+H,KAArE,CAA4E,MAAI,IAAhF,CAAR;AAAA,UAA+F5J,CAAC,GAAC,KAAK8B,OAAL,CAAa,KAAKC,GAAL,GAAS,eAAtB,EAAsC;AAACuB,MAAAA,YAAY,EAAC,cAAd;AAA6BtB,MAAAA,MAAM,EAACnC;AAApC,KAAtC,EAA8E8J,IAA9E,CAAoF9J,CAAC,IAAEA,CAAC,CAACgC,IAAzF,EAAgG+H,KAAhG,CAAuG,MAAI,IAA3G,CAAjG;AAAA,UAAmN1J,CAAC,GAAC,MAAM2J,OAAO,CAACC,GAAR,CAAY,CAAChK,CAAD,EAAGE,CAAH,CAAZ,CAA3N;AAA8O,QAAII,CAAJ;;AAAM,QAAGF,CAAC,CAAC,CAAD,CAAJ,EAAQ;AAAC,UAAIL,CAAC,GAACK,CAAC,CAAC,CAAD,CAAD,CAAK6J,MAAX;AAAkB,YAAMjK,CAAC,GAACI,CAAC,CAAC,CAAD,CAAD,CAAKuH,MAAb;;AAAoB,UAAG5H,CAAC,IAAEC,CAAN,EAAQ;AAACD,QAAAA,CAAC,GAACA,CAAC,CAAC8E,GAAF,CAAO9E,CAAC,KAAG;AAACqE,UAAAA,IAAI,EAAC,UAAQrE,CAAC,CAACmK,IAAV,GAAe,kBAAf,GAAkC9I,CAAC,CAAC+I,GAAF,CAAMpK,CAAC,CAACqE,IAAR,CAAxC;AAAsD8F,UAAAA,IAAI,EAACnK,CAAC,CAACmK,IAA7D;AAAkEE,UAAAA,KAAK,EAACrK,CAAC,CAACqK,KAAF,IAASrK,CAAC,CAACmK;AAAnF,SAAH,CAAR,CAAF;AAAyG,cAAMhK,CAAC,GAACF,CAAC,CAAC6E,GAAF,CAAO9E,CAAC,KAAG;AAACsK,UAAAA,UAAU,EAACtK;AAAZ,SAAH,CAAR,CAAR;AAAqCA,QAAAA,CAAC,IAAEC,CAAH,KAAOM,CAAC,GAAC;AAAC2J,UAAAA,MAAM,EAAClK,CAAR;AAAUuK,UAAAA,QAAQ,EAACpK;AAAnB,SAAT;AAAgC;AAAC;;AAAA,QAAG,CAACI,CAAD,IAAIF,CAAC,CAAC,CAAD,CAAR,EAAY;AAACE,MAAAA,CAAC,GAACK,CAAC,CAAC4J,KAAF,CAAQnK,CAAC,CAAC,CAAD,CAAT,EAAcoK,SAAhB;AAA0B;;AAAA,WAAOxJ,CAAC,CAACyJ,QAAF,CAAWnK,CAAX,CAAP;AAAqB;;AAAA2C,EAAAA,mBAAmB,CAAClD,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAOE,CAAP,EAAS;AAAC,UAAMC,CAAC,GAAC,KAAKoB,WAAL,CAAiB8G,UAAzB;AAAA,UAAoCjI,CAAC,GAAC+F,IAAI,CAACmE,KAAL,CAAW1K,CAAC,GAACO,CAAb,IAAgBA,CAAtD;AAAA,UAAwDE,CAAC,GAAC8F,IAAI,CAACmE,KAAL,CAAWtK,CAAC,GAACG,CAAb,IAAgBA,CAA1E;AAAA,UAA4EG,CAAC,GAAC,MAAI,KAAKiK,aAAL,CAAmBnK,CAAnB,CAAJ,GAA0B,GAA1B,GAA8B,KAAKmK,aAAL,CAAmBlK,CAAnB,CAA5G;;AAAkI,QAAIE,CAAC,GAAC,GAAN;AAAUA,IAAAA,CAAC,IAAEZ,CAAC,IAAE,EAAH,GAAMA,CAAC,CAAC6K,QAAF,EAAN,GAAmB,MAAI7K,CAAC,CAAC6K,QAAF,EAA1B;AAAuC,UAAK;AAACrB,MAAAA,oBAAoB,EAAC1I;AAAtB,QAAyB,KAAK0B,UAAnC;AAAA,UAA8CxB,CAAC,GAAC,QAAMT,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAAC,CAAD,CAAhE;AAAoE,QAAG,CAACJ,CAAC,CAACW,CAAD,CAAF,IAAO,CAACE,CAAX,EAAa,OAAO,GAAE,KAAKkB,GAAI,eAActB,CAAE,IAAGD,CAAE,SAAvC;AAAgD,QAAIM,CAAC,GAACH,CAAC,CAACgK,SAAF,CAAYC,MAAZ,CAAoB/K,CAAC,IAAEA,CAAC,CAACmK,IAAF,KAASnJ,CAAC,CAACgK,YAAlC,EAAiD,CAAjD,EAAoDC,UAApD,CAA+D,CAA/D,EAAkErD,MAAlE,CAAyEsD,OAAzE,CAAiFlK,CAAC,CAAC4G,MAAF,CAAS,CAAT,CAAjF,EAA8FiD,QAA9F,CAAuG,EAAvG,CAAN;AAAiH,UAAM3J,CAAC,GAAC,IAAED,CAAC,CAAC0G,MAAZ;;AAAmB,SAAI,IAAIxH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACe,CAAd,EAAgBf,CAAC,EAAjB,EAAoBc,CAAC,GAAC,MAAIA,CAAN;;AAAQ,WAAOA,CAAC,GAAC,MAAIA,CAAN,EAAS,GAAE,KAAKiB,GAAI,eAAclB,CAAC,CAACgK,YAAa,IAAG/J,CAAE,IAAGL,CAAE,IAAGD,CAAE,SAAvE;AAAgF;;AAAAyC,EAAAA,yBAAyB,CAACpD,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAME,CAAC,GAAC,KAAKyB,WAAL,CAAiB8G,UAAzB;AAAA,UAAoCrI,CAAC,GAACF,CAAC,IAAEH,CAAC,GAACG,CAAJ,CAAD,GAAQF,CAAC,GAACE,CAAhD;AAAkD,QAAGE,CAAC,GAAC,CAAL,EAAO,MAAK,2BAAL;AAAiC,WAAO,KAAGA,CAAC,GAAC,KAAKuB,WAAL,CAAiBgC,UAAtB,GAAiC,EAAxC;AAA2C;;AAAAD,EAAAA,yBAAyB,CAAC3D,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAME,CAAC,GAACH,CAAC,CAACmL,QAAF,CAAWlL,CAAX,EAAaA,CAAC,GAAC,CAAf,CAAR;AAA0B,QAAII,CAAJ;AAAA,QAAME,CAAC,GAAC,CAAR;;AAAU,SAAIF,CAAC,GAAC,CAAN,EAAQA,CAAC,GAAC,CAAV,EAAYA,CAAC,EAAb,EAAgBE,CAAC,IAAE,CAAC,MAAIJ,CAAC,CAACE,CAAD,CAAN,KAAY,IAAEA,CAAjB;;AAAmB,UAAMG,CAAC,GAAC,eAAaD,CAArB;;AAAuB,SAAIA,CAAC,GAAC,CAAF,EAAIF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoBE,CAAC,IAAE,CAAC,MAAIJ,CAAC,CAACE,CAAD,CAAN,KAAY,KAAGA,CAAC,GAAC,CAAL,CAAf;;AAAuB,WAAM;AAACwD,MAAAA,QAAQ,EAACrD,CAAV;AAAYoD,MAAAA,UAAU,EAAC,eAAarD;AAApC,KAAN;AAA6C;;AAAAqK,EAAAA,aAAa,CAAC5K,CAAD,EAAG;AAAC,QAAIC,CAAC,GAACD,CAAC,CAAC6K,QAAF,CAAW,EAAX,CAAN;;AAAqB,QAAG,MAAI5K,CAAC,CAAC0H,MAAT,EAAgB;AAAC,UAAI3H,CAAC,GAAC,IAAEC,CAAC,CAAC0H,MAAV;;AAAiB,aAAK3H,CAAC,KAAI,CAAV,GAAaC,CAAC,GAAC,MAAIA,CAAN;AAAQ;;AAAA,WAAOA,CAAP;AAAS;;AAAliL,CAArB;AAAyjLD,CAAC,CAAC,CAACK,CAAC,CAAC;AAAC+K,EAAAA,QAAQ,EAAC,CAAC;AAAX,CAAD,CAAF,CAAD,EAAoB3J,CAAC,CAAC4J,SAAtB,EAAgC,aAAhC,EAA8C,KAAK,CAAnD,CAAD,EAAuDrL,CAAC,CAAC,CAACK,CAAC,CAAC;AAACgE,EAAAA,IAAI,EAACiH,MAAN;AAAaC,EAAAA,IAAI,EAAC;AAACC,IAAAA,KAAK,EAAC,CAAC;AAAR;AAAlB,CAAD,CAAF,CAAD,EAAoC/J,CAAC,CAAC4J,SAAtC,EAAgD,eAAhD,EAAgE,KAAK,CAArE,CAAxD,EAAgI5J,CAAC,GAACzB,CAAC,CAAC,CAACO,CAAC,CAAC,gDAAD,CAAF,CAAD,EAAuDkB,CAAvD,CAAnI;AAA6L,IAAI8D,CAAC,GAAC9D,CAAN;AAAQ,eAAe8D,CAAf","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{isSome as r}from\"../../../core/maybe.js\";import{property as o}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/Logger.js\";import{subclass as i}from\"../../../core/accessorSupport/decorators/subclass.js\";import s from\"../RasterInfo.js\";import a from\"../RasterStorageInfo.js\";import n from\"../TileInfo.js\";import l from\"./BaseRaster.js\";import f from\"./DBFParser.js\";import{isTransformSupported as m,readTransform as c}from\"../rasterTransforms/utils.js\";import p from\"../../../rest/support/FeatureSet.js\";import d from\"../../../geometry/SpatialReference.js\";import u from\"../../../geometry/Extent.js\";import h from\"../../../geometry/Point.js\";const g=new Map;g.set(\"int16\",\"esriFieldTypeSmallInteger\"),g.set(\"int32\",\"esriFieldTypeInteger\"),g.set(\"int64\",\"esriFieldTypeInteger\"),g.set(\"float32\",\"esriFieldTypeSingle\"),g.set(\"float64\",\"esriFieldTypeDouble\"),g.set(\"text\",\"esriFieldTypeString\");const y=8;let x=class extends l{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat=\"CRF\"}async open(e){await this.init();const{data:r}=await this.request(this.url+\"/conf.json\",{signal:null==e?void 0:e.signal});if(!this._validateHeader(r))throw new t(\"cloudraster:open\",\"Invalid or unsupported conf.json.\");this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const{storageInfo:o,rasterInfo:i}=this._parseHeader(r);if(\"thematic\"===i.dataType){const e=await this._fetchAuxiliaryInformation();i.attributeTable=e}this._set(\"storageInfo\",o),this._set(\"rasterInfo\",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,o={}){const i=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(i<0)return null;const s=this._buildCacheFilePath(i,t,r,o.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,r),n=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:\"array-buffer\",signal:o.signal});if(!n)return null;const l=new Uint8Array(n.data),f=this._getTileEndAndContentType(l,a);if(0===f.recordSize)return null;const m=await this.request(s,{range:{from:f.position,to:f.position+f.recordSize},responseType:\"array-buffer\",signal:o.signal});return m?this.decodePixelBlock(m.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){const t=[\"origin\",\"extent\",\"geodataXform\",\"LODInfos\",\"blockWidth\",\"blockHeight\",\"bandCount\",\"pixelType\",\"pixelSizeX\",\"pixelSizeY\",\"format\",\"packetSize\"];return e&&\"RasterInfo\"===e.type&&!t.some((t=>!e[t]))}_parseHeader(e){var t,r;const o=[\"u1\",\"u2\",\"u4\",\"u8\",\"s8\",\"u16\",\"s16\",\"u32\",\"s32\",\"f32\",\"f64\"][e.pixelType],{bandCount:i,histograms:l,colormap:f,blockWidth:m,blockHeight:c,firstPyramidLevel:p,maximumPyramidLevel:g}=e,x=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),I=e.extent.spatialReference,S=null==(t=e.geodataXform)?void 0:t.spatialReference,v=new d(null!=I&&I.wkid||null!=I&&I.wkt?I:S);let w=new u({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:v});const b=new h({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:v}),T=Math.round((w.xmax-w.xmin)/b.x),j=Math.round((w.ymax-w.ymin)/b.y),z=this._parseTransform(e.geodataXform),_=z?w:null;z&&(w=z.forwardTransform(w),b.x=(w.xmax-w.xmin)/T,b.y=(w.ymax-w.ymin)/j);const k=null!=(r=e.properties)?r:{},C=e.format.toLowerCase().replace(\"cache/\",\"\"),R=new h(e.origin.x,e.origin.y,v);let F,P,H,L;if(f&&f.colors)for(F=[],P=0;P<f.colors.length;P++)H=f.colors[P],L=f.values?f.values[P]:P,F.push([L,255&H,H<<16>>>24,H<<8>>>24,H>>>24]);const D=e.LODInfos,M=[];for(P=0;P<D.levels.length;P++)M.push({level:D.levels[P],resolution:D.resolutions[P],scale:96/.0254*D.resolutions[P]});const B=new n({dpi:96,lods:M,format:C,origin:R,size:[m,c],spatialReference:v}),O={recordSize:y,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*y+64},$=[{maxCol:Math.ceil(T/m)-1,maxRow:Math.ceil(j/c)-1,minCol:0,minRow:0}];let q=2;if(g>0)for(P=0;P<g;P++)$.push({maxCol:Math.ceil(T/q/m)-1,maxRow:Math.ceil(j/q/c)-1,minCol:0,minRow:0}),q*=2;const A=e.mdInfo;return{storageInfo:O,rasterInfo:new s({width:T,height:j,pixelType:o,bandCount:i,extent:w,nativeExtent:_,transform:z,spatialReference:v,pixelSize:b,keyProperties:k,statistics:x,histograms:l,multidimensionalInfo:A,colormap:F,storageInfo:new a({blockWidth:m,blockHeight:c,pyramidBlockWidth:m,pyramidBlockHeight:c,origin:R,tileInfo:B,firstPyramidLevel:p,maximumPyramidLevel:g,blockBoundary:$})})}}_parseTransform(e){var r,o;if(!m(e))throw new t(\"cloudraster:open\",\"the data contains unsupported geodata transform types\");const i=c(e);if(\"identity\"===i.type)return null;if(\"polynomial\"!==i.type||null==(r=i.forwardCoefficients)||!r.length||null==(o=i.inverseCoefficients)||!o.length)throw new t(\"cloudraster:open\",\"the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently\");return i}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+\"/conf.vat.json\",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+\"/conf.vat.dbf\",{responseType:\"array-buffer\",signal:e}).then((e=>e.data)).catch((()=>null)),o=await Promise.all([t,r]);let i;if(o[0]){let e=o[0].fields;const t=o[0].values;if(e&&t){e=e.map((e=>({type:\"OID\"===e.name?\"esriFieldTypeOID\":g.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:r})}}if(!i&&o[1]){i=f.parse(o[1]).recordSet}return p.fromJSON(i)}_buildCacheFilePath(e,t,o,i){const s=this.storageInfo.packetSize,a=Math.floor(t/s)*s,n=Math.floor(o/s)*s,l=\"R\"+this._toHexString4(a)+\"C\"+this._toHexString4(n);let f=\"L\";f+=e>=10?e.toString():\"0\"+e.toString();const{multidimensionalInfo:m}=this.rasterInfo,c=null==i?void 0:i[0];if(!r(m)||!c)return`${this.url}/_alllayers/${f}/${l}.bundle`;let p=m.variables.filter((e=>e.name===c.variableName))[0].dimensions[0].values.indexOf(c.values[0]).toString(16);const d=4-p.length;for(let r=0;r<d;r++)p=\"0\"+p;return p=\"S\"+p,`${this.url}/_alllayers/${c.variableName}/${p}/${f}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const r=this.storageInfo.packetSize,o=r*(e%r)+t%r;if(o<0)throw\"Invalid level / row / col\";return 20+o*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let o,i=0;for(o=0;o<5;o++)i|=(255&r[o])<<8*o;const s=0xffffffffff&i;for(i=0,o=5;o<8;o++)i|=(255&r[o])<<8*(o-5);return{position:s,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t=\"0\"+t}return t}};e([o({readOnly:!0})],x.prototype,\"storageInfo\",void 0),e([o({type:String,json:{write:!0}})],x.prototype,\"datasetFormat\",void 0),x=e([i(\"esri.layers.support.rasterDatasets.CloudRaster\")],x);var I=x;export default I;\n"]},"metadata":{},"sourceType":"module"}