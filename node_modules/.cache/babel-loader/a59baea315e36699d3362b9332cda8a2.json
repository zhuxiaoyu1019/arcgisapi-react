{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport t from \"../../request.js\";\nimport { constant as i } from \"../../core/arrayUtils.js\";\nimport e from \"../../core/Error.js\";\nimport { clone as a } from \"../../core/lang.js\";\n\nclass l {\n  constructor() {\n    this.location = {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    }, this._allAvailability = \"unknown\", this.byteSize = 40;\n  }\n\n  getAvailability(t, i) {\n    if (\"unknown\" !== this._allAvailability) return this._allAvailability;\n    const e = (t - this.location.top) * this.location.width + (i - this.location.left),\n          a = e % 8,\n          l = e >> 3,\n          o = this._tileAvailabilityBitSet;\n    return l < 0 || l > o.length ? \"unknown\" : o[l] & 1 << a ? \"available\" : \"unavailable\";\n  }\n\n  _updateFromData(t) {\n    const i = this.location.width,\n          e = this.location.height;\n    let a = !0,\n        l = !0;\n    const o = Math.ceil(i * e / 8),\n          n = new Uint8Array(o);\n    let r = 0;\n\n    for (let s = 0; s < t.length; s++) {\n      const i = s % 8;\n      t[s] ? (l = !1, n[r] |= 1 << i) : a = !1, 7 === i && ++r;\n    }\n\n    l ? this._allAvailability = \"unavailable\" : a ? this._allAvailability = \"available\" : (this._allAvailability = \"unknown\", this._tileAvailabilityBitSet = n, this.byteSize += n.length);\n  }\n\n  static fromDefinition(a, o) {\n    const r = a.service.request || t,\n          {\n      row: s,\n      col: h,\n      width: c,\n      height: m\n    } = a,\n          d = {\n      query: {\n        f: \"json\"\n      }\n    };\n    return o = o ? { ...d,\n      ...o\n    } : d, r(n(a), o).then(t => t.data).catch(t => {\n      if (t && t.details && 422 === t.details.httpStatus) return {\n        location: {\n          top: s,\n          left: h,\n          width: c,\n          height: m\n        },\n        valid: !0,\n        data: i(c * m, 0)\n      };\n      throw t;\n    }).then(t => {\n      if (t.location && (t.location.top !== s || t.location.left !== h || t.location.width !== c || t.location.height !== m)) throw new e(\"tilemap:location-mismatch\", \"Tilemap response for different location than requested\", {\n        response: t,\n        definition: {\n          top: s,\n          left: h,\n          width: c,\n          height: m\n        }\n      });\n      return l.fromJSON(t);\n    });\n  }\n\n  static fromJSON(t) {\n    l.validateJSON(t);\n    const i = new l();\n    return i.location = Object.freeze(a(t.location)), i._updateFromData(t.data), Object.freeze(i);\n  }\n\n  static validateJSON(t) {\n    if (!t || !t.location) throw new e(\"tilemap:missing-location\", \"Location missing from tilemap response\");\n    if (!1 === t.valid) throw new e(\"tilemap:invalid\", \"Tilemap response was marked as invalid\");\n    if (!t.data) throw new e(\"tilemap:missing-data\", \"Data missing from tilemap response\");\n    if (!Array.isArray(t.data)) throw new e(\"tilemap:data-mismatch\", \"Data must be an array of numbers\");\n    if (t.data.length !== t.location.width * t.location.height) throw new e(\"tilemap:data-mismatch\", \"Number of data items does not match width/height of tilemap\");\n  }\n\n}\n\nfunction o(t) {\n  return `${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`;\n}\n\nfunction n(t) {\n  let i;\n  if (\"vector-tile\" === t.service.type) i = `${t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`;else {\n    const e = t.service.tileServers;\n    i = `${e && e.length ? e[t.row % e.length] : t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`;\n  }\n  const e = t.service.query;\n  return e && (i = `${i}?${e}`), i;\n}\n\nexport default l;\nexport { l as Tilemap, o as tilemapDefinitionId };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/layers/support/Tilemap.js"],"names":["t","constant","i","e","clone","a","l","constructor","location","left","top","width","height","_allAvailability","byteSize","getAvailability","o","_tileAvailabilityBitSet","length","_updateFromData","Math","ceil","n","Uint8Array","r","s","fromDefinition","service","request","row","col","h","c","m","d","query","f","then","data","catch","details","httpStatus","valid","response","definition","fromJSON","validateJSON","Object","freeze","Array","isArray","level","type","url","tileServers","Tilemap","tilemapDefinitionId"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport t from\"../../request.js\";import{constant as i}from\"../../core/arrayUtils.js\";import e from\"../../core/Error.js\";import{clone as a}from\"../../core/lang.js\";class l{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability=\"unknown\",this.byteSize=40}getAvailability(t,i){if(\"unknown\"!==this._allAvailability)return this._allAvailability;const e=(t-this.location.top)*this.location.width+(i-this.location.left),a=e%8,l=e>>3,o=this._tileAvailabilityBitSet;return l<0||l>o.length?\"unknown\":o[l]&1<<a?\"available\":\"unavailable\"}_updateFromData(t){const i=this.location.width,e=this.location.height;let a=!0,l=!0;const o=Math.ceil(i*e/8),n=new Uint8Array(o);let r=0;for(let s=0;s<t.length;s++){const i=s%8;t[s]?(l=!1,n[r]|=1<<i):a=!1,7===i&&++r}l?this._allAvailability=\"unavailable\":a?this._allAvailability=\"available\":(this._allAvailability=\"unknown\",this._tileAvailabilityBitSet=n,this.byteSize+=n.length)}static fromDefinition(a,o){const r=a.service.request||t,{row:s,col:h,width:c,height:m}=a,d={query:{f:\"json\"}};return o=o?{...d,...o}:d,r(n(a),o).then((t=>t.data)).catch((t=>{if(t&&t.details&&422===t.details.httpStatus)return{location:{top:s,left:h,width:c,height:m},valid:!0,data:i(c*m,0)};throw t})).then((t=>{if(t.location&&(t.location.top!==s||t.location.left!==h||t.location.width!==c||t.location.height!==m))throw new e(\"tilemap:location-mismatch\",\"Tilemap response for different location than requested\",{response:t,definition:{top:s,left:h,width:c,height:m}});return l.fromJSON(t)}))}static fromJSON(t){l.validateJSON(t);const i=new l;return i.location=Object.freeze(a(t.location)),i._updateFromData(t.data),Object.freeze(i)}static validateJSON(t){if(!t||!t.location)throw new e(\"tilemap:missing-location\",\"Location missing from tilemap response\");if(!1===t.valid)throw new e(\"tilemap:invalid\",\"Tilemap response was marked as invalid\");if(!t.data)throw new e(\"tilemap:missing-data\",\"Data missing from tilemap response\");if(!Array.isArray(t.data))throw new e(\"tilemap:data-mismatch\",\"Data must be an array of numbers\");if(t.data.length!==t.location.width*t.location.height)throw new e(\"tilemap:data-mismatch\",\"Number of data items does not match width/height of tilemap\")}}function o(t){return`${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}function n(t){let i;if(\"vector-tile\"===t.service.type)i=`${t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`;else{const e=t.service.tileServers;i=`${e&&e.length?e[t.row%e.length]:t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}const e=t.service.query;return e&&(i=`${i}?${e}`),i}export default l;export{l as Tilemap,o as tilemapDefinitionId};\n"]},"metadata":{},"sourceType":"module"}