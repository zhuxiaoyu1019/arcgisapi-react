{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../../../request.js\";\nimport { result as t } from \"../../../../core/asyncUtils.js\";\nimport r from \"../../../../core/Error.js\";\nimport n from \"../../../../core/Logger.js\";\nimport { isSome as a, unwrap as s } from \"../../../../core/maybe.js\";\nimport { throwIfAbortError as o } from \"../../../../core/promiseUtils.js\";\nimport { Version as i } from \"../../../../core/Version.js\";\nimport { d as u } from \"../../../../chunks/vec3f64.js\";\nimport { empty as l, expandWithVec3 as c } from \"../../../../geometry/support/aaBoundingBox.js\";\nimport { requestImage as p } from \"../../../../support/requestImageUtils.js\";\nimport { Geometry as m } from \"../../webgl-engine/lib/Geometry.js\";\nimport { Texture as f } from \"../../webgl-engine/lib/Texture.js\";\nimport { DefaultMaterial as d } from \"../../webgl-engine/materials/DefaultMaterial.js\";\nconst y = n.getLogger(\"esri.views.3d.layers.graphics.objectResourceUtils\");\n\nasync function x(e, t) {\n  const r = await g(e, t);\n  return {\n    resource: r,\n    textures: await A(r.textureDefinitions, t)\n  };\n}\n\nasync function g(r, n) {\n  const i = a(n) && n.streamDataRequester;\n  if (i) return h(r, i, n);\n  const u = await t(e(r, s(n)));\n  if (!0 === u.ok) return u.value.data;\n  o(u.error), w(u.error);\n}\n\nasync function h(e, r, n) {\n  const a = await t(r.request(e, \"json\", n));\n  if (!0 === a.ok) return a.value;\n  o(a.error), w(a.error.details.url);\n}\n\nfunction w(e) {\n  throw new r(\"\", `Request for object resource failed: ${e}`);\n}\n\nfunction v(e) {\n  const t = e.params,\n        r = t.topology;\n  let n = !0;\n\n  switch (t.vertexAttributes || (y.warn(\"Geometry must specify vertex attributes\"), n = !1), t.topology) {\n    case \"PerAttributeArray\":\n      break;\n\n    case \"Indexed\":\n    case null:\n    case void 0:\n      {\n        const e = t.faces;\n\n        if (e) {\n          if (t.vertexAttributes) for (const r in t.vertexAttributes) {\n            const t = e[r];\n            t && t.values ? (null != t.valueType && \"UInt32\" !== t.valueType && (y.warn(`Unsupported indexed geometry indices type '${t.valueType}', only UInt32 is currently supported`), n = !1), null != t.valuesPerElement && 1 !== t.valuesPerElement && (y.warn(`Unsupported indexed geometry values per element '${t.valuesPerElement}', only 1 is currently supported`), n = !1)) : (y.warn(`Indexed geometry does not specify face indices for '${r}' attribute`), n = !1);\n          }\n        } else y.warn(\"Indexed geometries must specify faces\"), n = !1;\n\n        break;\n      }\n\n    default:\n      y.warn(`Unsupported topology '${r}'`), n = !1;\n  }\n\n  e.params.material || (y.warn(\"Geometry requires material\"), n = !1);\n  const a = e.params.vertexAttributes;\n\n  for (const s in a) {\n    a[s].values || (y.warn(\"Geometries with externally defined attributes are not yet supported\"), n = !1);\n  }\n\n  return n;\n}\n\nfunction b(e, t) {\n  const r = [],\n        n = [],\n        s = [],\n        o = [],\n        l = e.resource,\n        c = i.parse(l.version || \"1.0\", \"wosr\");\n  I.validate(c);\n  const p = l.model.name,\n        y = l.model.geometries,\n        x = l.materialDefinitions,\n        g = e.textures;\n  let h = 0;\n  const w = new Map();\n\n  for (let i = 0; i < y.length; i++) {\n    const e = y[i];\n    if (!v(e)) continue;\n    const l = M(e),\n          c = e.params.vertexAttributes,\n          p = [];\n\n    for (const t in c) {\n      const e = c[t],\n            r = e.values;\n      p.push([t, {\n        data: r,\n        size: e.valuesPerElement,\n        exclusive: !0\n      }]);\n    }\n\n    const b = [];\n\n    if (\"PerAttributeArray\" !== e.params.topology) {\n      const t = e.params.faces;\n\n      for (const e in t) b.push([e, new Uint32Array(t[e].values)]);\n    }\n\n    const j = g && g[l.texture];\n\n    if (j && !w.has(l.texture)) {\n      const {\n        image: e,\n        params: t\n      } = j,\n            r = new f(e, t);\n      o.push(r), w.set(l.texture, r);\n    }\n\n    const A = w.get(l.texture),\n          I = A ? A.id : void 0;\n    let P = s[l.material] ? s[l.material][l.texture] : null;\n\n    if (!P) {\n      const e = x[l.material.substring(l.material.lastIndexOf(\"/\") + 1)].params;\n      1 === e.transparency && (e.transparency = 0);\n      const r = j && j.alphaChannelUsage,\n            n = e.transparency > 0 || \"transparency\" === r || \"maskAndTransparency\" === r,\n            o = {\n        ambient: u(e.diffuse),\n        diffuse: u(e.diffuse),\n        opacity: 1 - (e.transparency || 0),\n        transparent: n,\n        textureAlphaMode: j ? U(j.alphaChannelUsage) : void 0,\n        textureAlphaCutoff: .33,\n        textureId: I,\n        initTextureTransparent: !0,\n        doubleSided: !0,\n        cullFace: 0,\n        colorMixMode: e.externalColorMixMode || \"tint\",\n        textureAlphaPremultiplied: !0\n      };\n      a(t) && t.materialParamsMixin && Object.assign(o, t.materialParamsMixin), P = new d(o), s[l.material] || (s[l.material] = {}), s[l.material][l.texture] = P;\n    }\n\n    n.push(P);\n    const T = new m(p, b);\n    h += b.position ? b.position.length : 0, r.push(T);\n  }\n\n  return {\n    name: p,\n    stageResources: {\n      textures: o,\n      materials: n,\n      geometries: r\n    },\n    pivotOffset: l.model.pivotOffset,\n    boundingBox: j(r),\n    numberOfVertices: h,\n    lodThreshold: null\n  };\n}\n\nfunction j(e) {\n  const t = l();\n  return e.forEach(e => {\n    const r = e.boundingInfo;\n    a(r) && (c(t, r.getBBMin()), c(t, r.getBBMax()));\n  }), t;\n}\n\nasync function A(e, t) {\n  const r = [];\n\n  for (const o in e) {\n    const n = e[o],\n          s = n.images[0].data;\n\n    if (!s) {\n      y.warn(\"Externally referenced texture data is not yet supported\");\n      continue;\n    }\n\n    const i = n.encoding + \";base64,\" + s,\n          u = \"/textureDefinitions/\" + o,\n          l = {\n      noUnpackFlip: !0,\n      wrap: {\n        s: 10497,\n        t: 10497\n      },\n      preMultiplyAlpha: !0\n    },\n          c = a(t) && t.disableTextures ? Promise.resolve(null) : p(i, t);\n    r.push(c.then(e => ({\n      refId: u,\n      image: e,\n      params: l,\n      alphaChannelUsage: \"rgba\" === n.channels ? n.alphaChannelUsage || \"transparency\" : \"none\"\n    })));\n  }\n\n  const n = await Promise.all(r),\n        s = {};\n\n  for (const a of n) s[a.refId] = a;\n\n  return s;\n}\n\nfunction U(e) {\n  switch (e) {\n    case \"mask\":\n      return 2;\n\n    case \"maskAndTransparency\":\n      return 3;\n\n    case \"none\":\n      return 1;\n\n    case \"transparency\":\n    default:\n      return 0;\n  }\n}\n\nfunction M(e) {\n  const t = e.params;\n  return {\n    id: 1,\n    material: t.material,\n    texture: t.texture,\n    region: t.texture\n  };\n}\n\nconst I = new i(1, 2, \"wosr\");\nexport { A as createTextureResources, x as load, b as processLoadResult };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/layers/graphics/wosrLoader.js"],"names":["e","result","t","r","n","isSome","a","unwrap","s","throwIfAbortError","o","Version","i","d","u","empty","l","expandWithVec3","c","requestImage","p","Geometry","m","Texture","f","DefaultMaterial","y","getLogger","x","g","resource","textures","A","textureDefinitions","streamDataRequester","h","ok","value","data","error","w","request","details","url","v","params","topology","vertexAttributes","warn","faces","values","valueType","valuesPerElement","material","b","parse","version","I","validate","model","name","geometries","materialDefinitions","Map","length","M","push","size","exclusive","Uint32Array","j","texture","has","image","set","get","id","P","substring","lastIndexOf","transparency","alphaChannelUsage","ambient","diffuse","opacity","transparent","textureAlphaMode","U","textureAlphaCutoff","textureId","initTextureTransparent","doubleSided","cullFace","colorMixMode","externalColorMixMode","textureAlphaPremultiplied","materialParamsMixin","Object","assign","T","position","stageResources","materials","pivotOffset","boundingBox","numberOfVertices","lodThreshold","forEach","boundingInfo","getBBMin","getBBMax","images","encoding","noUnpackFlip","wrap","preMultiplyAlpha","disableTextures","Promise","resolve","then","refId","channels","all","region","createTextureResources","load","processLoadResult"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,wBAAb;AAAsC,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,gCAAvB;AAAwD,OAAOC,CAAP,MAAa,2BAAb;AAAyC,OAAOC,CAAP,MAAa,4BAAb;AAA0C,SAAOC,MAAM,IAAIC,CAAjB,EAAmBC,MAAM,IAAIC,CAA7B,QAAmC,2BAAnC;AAA+D,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,kCAAlC;AAAqE,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,6BAAxB;AAAsD,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,+BAAlB;AAAkD,SAAOC,KAAK,IAAIC,CAAhB,EAAkBC,cAAc,IAAIC,CAApC,QAA0C,+CAA1C;AAA0F,SAAOC,YAAY,IAAIC,CAAvB,QAA6B,0CAA7B;AAAwE,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,oCAAzB;AAA8D,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,mCAAxB;AAA4D,SAAOC,eAAe,IAAIZ,CAA1B,QAAgC,iDAAhC;AAAkF,MAAMa,CAAC,GAACtB,CAAC,CAACuB,SAAF,CAAY,mDAAZ,CAAR;;AAAyE,eAAeC,CAAf,CAAiB5B,CAAjB,EAAmBE,CAAnB,EAAqB;AAAC,QAAMC,CAAC,GAAC,MAAM0B,CAAC,CAAC7B,CAAD,EAAGE,CAAH,CAAf;AAAqB,SAAM;AAAC4B,IAAAA,QAAQ,EAAC3B,CAAV;AAAY4B,IAAAA,QAAQ,EAAC,MAAMC,CAAC,CAAC7B,CAAC,CAAC8B,kBAAH,EAAsB/B,CAAtB;AAA5B,GAAN;AAA4D;;AAAA,eAAe2B,CAAf,CAAiB1B,CAAjB,EAAmBC,CAAnB,EAAqB;AAAC,QAAMQ,CAAC,GAACN,CAAC,CAACF,CAAD,CAAD,IAAMA,CAAC,CAAC8B,mBAAhB;AAAoC,MAAGtB,CAAH,EAAK,OAAOuB,CAAC,CAAChC,CAAD,EAAGS,CAAH,EAAKR,CAAL,CAAR;AAAgB,QAAMU,CAAC,GAAC,MAAMZ,CAAC,CAACF,CAAC,CAACG,CAAD,EAAGK,CAAC,CAACJ,CAAD,CAAJ,CAAF,CAAf;AAA2B,MAAG,CAAC,CAAD,KAAKU,CAAC,CAACsB,EAAV,EAAa,OAAOtB,CAAC,CAACuB,KAAF,CAAQC,IAAf;AAAoB5B,EAAAA,CAAC,CAACI,CAAC,CAACyB,KAAH,CAAD,EAAWC,CAAC,CAAC1B,CAAC,CAACyB,KAAH,CAAZ;AAAsB;;AAAA,eAAeJ,CAAf,CAAiBnC,CAAjB,EAAmBG,CAAnB,EAAqBC,CAArB,EAAuB;AAAC,QAAME,CAAC,GAAC,MAAMJ,CAAC,CAACC,CAAC,CAACsC,OAAF,CAAUzC,CAAV,EAAY,MAAZ,EAAmBI,CAAnB,CAAD,CAAf;AAAuC,MAAG,CAAC,CAAD,KAAKE,CAAC,CAAC8B,EAAV,EAAa,OAAO9B,CAAC,CAAC+B,KAAT;AAAe3B,EAAAA,CAAC,CAACJ,CAAC,CAACiC,KAAH,CAAD,EAAWC,CAAC,CAAClC,CAAC,CAACiC,KAAF,CAAQG,OAAR,CAAgBC,GAAjB,CAAZ;AAAkC;;AAAA,SAASH,CAAT,CAAWxC,CAAX,EAAa;AAAC,QAAM,IAAIG,CAAJ,CAAM,EAAN,EAAU,uCAAsCH,CAAE,EAAlD,CAAN;AAA2D;;AAAA,SAAS4C,CAAT,CAAW5C,CAAX,EAAa;AAAC,QAAME,CAAC,GAACF,CAAC,CAAC6C,MAAV;AAAA,QAAiB1C,CAAC,GAACD,CAAC,CAAC4C,QAArB;AAA8B,MAAI1C,CAAC,GAAC,CAAC,CAAP;;AAAS,UAAOF,CAAC,CAAC6C,gBAAF,KAAqBrB,CAAC,CAACsB,IAAF,CAAO,yCAAP,GAAkD5C,CAAC,GAAC,CAAC,CAA1E,GAA6EF,CAAC,CAAC4C,QAAtF;AAAgG,SAAI,mBAAJ;AAAwB;;AAAM,SAAI,SAAJ;AAAc,SAAK,IAAL;AAAU,SAAK,KAAK,CAAV;AAAY;AAAC,cAAM9C,CAAC,GAACE,CAAC,CAAC+C,KAAV;;AAAgB,YAAGjD,CAAH,EAAK;AAAC,cAAGE,CAAC,CAAC6C,gBAAL,EAAsB,KAAI,MAAM5C,CAAV,IAAeD,CAAC,CAAC6C,gBAAjB,EAAkC;AAAC,kBAAM7C,CAAC,GAACF,CAAC,CAACG,CAAD,CAAT;AAAaD,YAAAA,CAAC,IAAEA,CAAC,CAACgD,MAAL,IAAa,QAAMhD,CAAC,CAACiD,SAAR,IAAmB,aAAWjD,CAAC,CAACiD,SAAhC,KAA4CzB,CAAC,CAACsB,IAAF,CAAQ,8CAA6C9C,CAAC,CAACiD,SAAU,uCAAjE,GAAyG/C,CAAC,GAAC,CAAC,CAAxJ,GAA2J,QAAMF,CAAC,CAACkD,gBAAR,IAA0B,MAAIlD,CAAC,CAACkD,gBAAhC,KAAmD1B,CAAC,CAACsB,IAAF,CAAQ,oDAAmD9C,CAAC,CAACkD,gBAAiB,kCAA9E,GAAiHhD,CAAC,GAAC,CAAC,CAAvK,CAAxK,KAAoVsB,CAAC,CAACsB,IAAF,CAAQ,uDAAsD7C,CAAE,aAAhE,GAA8EC,CAAC,GAAC,CAAC,CAAra;AAAwa;AAAC,SAArf,MAA0fsB,CAAC,CAACsB,IAAF,CAAO,uCAAP,GAAgD5C,CAAC,GAAC,CAAC,CAAnD;;AAAqD;AAAM;;AAAA;AAAQsB,MAAAA,CAAC,CAACsB,IAAF,CAAQ,yBAAwB7C,CAAE,GAAlC,GAAsCC,CAAC,GAAC,CAAC,CAAzC;AAAhvB;;AAA2xBJ,EAAAA,CAAC,CAAC6C,MAAF,CAASQ,QAAT,KAAoB3B,CAAC,CAACsB,IAAF,CAAO,4BAAP,GAAqC5C,CAAC,GAAC,CAAC,CAA5D;AAA+D,QAAME,CAAC,GAACN,CAAC,CAAC6C,MAAF,CAASE,gBAAjB;;AAAkC,OAAI,MAAMvC,CAAV,IAAeF,CAAf,EAAiB;AAACA,IAAAA,CAAC,CAACE,CAAD,CAAD,CAAK0C,MAAL,KAAcxB,CAAC,CAACsB,IAAF,CAAO,qEAAP,GAA8E5C,CAAC,GAAC,CAAC,CAA/F;AAAkG;;AAAA,SAAOA,CAAP;AAAS;;AAAA,SAASkD,CAAT,CAAWtD,CAAX,EAAaE,CAAb,EAAe;AAAC,QAAMC,CAAC,GAAC,EAAR;AAAA,QAAWC,CAAC,GAAC,EAAb;AAAA,QAAgBI,CAAC,GAAC,EAAlB;AAAA,QAAqBE,CAAC,GAAC,EAAvB;AAAA,QAA0BM,CAAC,GAAChB,CAAC,CAAC8B,QAA9B;AAAA,QAAuCZ,CAAC,GAACN,CAAC,CAAC2C,KAAF,CAAQvC,CAAC,CAACwC,OAAF,IAAW,KAAnB,EAAyB,MAAzB,CAAzC;AAA0EC,EAAAA,CAAC,CAACC,QAAF,CAAWxC,CAAX;AAAc,QAAME,CAAC,GAACJ,CAAC,CAAC2C,KAAF,CAAQC,IAAhB;AAAA,QAAqBlC,CAAC,GAACV,CAAC,CAAC2C,KAAF,CAAQE,UAA/B;AAAA,QAA0CjC,CAAC,GAACZ,CAAC,CAAC8C,mBAA9C;AAAA,QAAkEjC,CAAC,GAAC7B,CAAC,CAAC+B,QAAtE;AAA+E,MAAII,CAAC,GAAC,CAAN;AAAQ,QAAMK,CAAC,GAAC,IAAIuB,GAAJ,EAAR;;AAAgB,OAAI,IAAInD,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACc,CAAC,CAACsC,MAAhB,EAAuBpD,CAAC,EAAxB,EAA2B;AAAC,UAAMZ,CAAC,GAAC0B,CAAC,CAACd,CAAD,CAAT;AAAa,QAAG,CAACgC,CAAC,CAAC5C,CAAD,CAAL,EAAS;AAAS,UAAMgB,CAAC,GAACiD,CAAC,CAACjE,CAAD,CAAT;AAAA,UAAakB,CAAC,GAAClB,CAAC,CAAC6C,MAAF,CAASE,gBAAxB;AAAA,UAAyC3B,CAAC,GAAC,EAA3C;;AAA8C,SAAI,MAAMlB,CAAV,IAAegB,CAAf,EAAiB;AAAC,YAAMlB,CAAC,GAACkB,CAAC,CAAChB,CAAD,CAAT;AAAA,YAAaC,CAAC,GAACH,CAAC,CAACkD,MAAjB;AAAwB9B,MAAAA,CAAC,CAAC8C,IAAF,CAAO,CAAChE,CAAD,EAAG;AAACoC,QAAAA,IAAI,EAACnC,CAAN;AAAQgE,QAAAA,IAAI,EAACnE,CAAC,CAACoD,gBAAf;AAAgCgB,QAAAA,SAAS,EAAC,CAAC;AAA3C,OAAH,CAAP;AAA0D;;AAAA,UAAMd,CAAC,GAAC,EAAR;;AAAW,QAAG,wBAAsBtD,CAAC,CAAC6C,MAAF,CAASC,QAAlC,EAA2C;AAAC,YAAM5C,CAAC,GAACF,CAAC,CAAC6C,MAAF,CAASI,KAAjB;;AAAuB,WAAI,MAAMjD,CAAV,IAAeE,CAAf,EAAiBoD,CAAC,CAACY,IAAF,CAAO,CAAClE,CAAD,EAAG,IAAIqE,WAAJ,CAAgBnE,CAAC,CAACF,CAAD,CAAD,CAAKkD,MAArB,CAAH,CAAP;AAAyC;;AAAA,UAAMoB,CAAC,GAACzC,CAAC,IAAEA,CAAC,CAACb,CAAC,CAACuD,OAAH,CAAZ;;AAAwB,QAAGD,CAAC,IAAE,CAAC9B,CAAC,CAACgC,GAAF,CAAMxD,CAAC,CAACuD,OAAR,CAAP,EAAwB;AAAC,YAAK;AAACE,QAAAA,KAAK,EAACzE,CAAP;AAAS6C,QAAAA,MAAM,EAAC3C;AAAhB,UAAmBoE,CAAxB;AAAA,YAA0BnE,CAAC,GAAC,IAAIqB,CAAJ,CAAMxB,CAAN,EAAQE,CAAR,CAA5B;AAAuCQ,MAAAA,CAAC,CAACwD,IAAF,CAAO/D,CAAP,GAAUqC,CAAC,CAACkC,GAAF,CAAM1D,CAAC,CAACuD,OAAR,EAAgBpE,CAAhB,CAAV;AAA6B;;AAAA,UAAM6B,CAAC,GAACQ,CAAC,CAACmC,GAAF,CAAM3D,CAAC,CAACuD,OAAR,CAAR;AAAA,UAAyBd,CAAC,GAACzB,CAAC,GAACA,CAAC,CAAC4C,EAAH,GAAM,KAAK,CAAvC;AAAyC,QAAIC,CAAC,GAACrE,CAAC,CAACQ,CAAC,CAACqC,QAAH,CAAD,GAAc7C,CAAC,CAACQ,CAAC,CAACqC,QAAH,CAAD,CAAcrC,CAAC,CAACuD,OAAhB,CAAd,GAAuC,IAA7C;;AAAkD,QAAG,CAACM,CAAJ,EAAM;AAAC,YAAM7E,CAAC,GAAC4B,CAAC,CAACZ,CAAC,CAACqC,QAAF,CAAWyB,SAAX,CAAqB9D,CAAC,CAACqC,QAAF,CAAW0B,WAAX,CAAuB,GAAvB,IAA4B,CAAjD,CAAD,CAAD,CAAuDlC,MAA/D;AAAsE,YAAI7C,CAAC,CAACgF,YAAN,KAAqBhF,CAAC,CAACgF,YAAF,GAAe,CAApC;AAAuC,YAAM7E,CAAC,GAACmE,CAAC,IAAEA,CAAC,CAACW,iBAAb;AAAA,YAA+B7E,CAAC,GAACJ,CAAC,CAACgF,YAAF,GAAe,CAAf,IAAkB,mBAAiB7E,CAAnC,IAAsC,0BAAwBA,CAA/F;AAAA,YAAiGO,CAAC,GAAC;AAACwE,QAAAA,OAAO,EAACpE,CAAC,CAACd,CAAC,CAACmF,OAAH,CAAV;AAAsBA,QAAAA,OAAO,EAACrE,CAAC,CAACd,CAAC,CAACmF,OAAH,CAA/B;AAA2CC,QAAAA,OAAO,EAAC,KAAGpF,CAAC,CAACgF,YAAF,IAAgB,CAAnB,CAAnD;AAAyEK,QAAAA,WAAW,EAACjF,CAArF;AAAuFkF,QAAAA,gBAAgB,EAAChB,CAAC,GAACiB,CAAC,CAACjB,CAAC,CAACW,iBAAH,CAAF,GAAwB,KAAK,CAAtI;AAAwIO,QAAAA,kBAAkB,EAAC,GAA3J;AAA+JC,QAAAA,SAAS,EAAChC,CAAzK;AAA2KiC,QAAAA,sBAAsB,EAAC,CAAC,CAAnM;AAAqMC,QAAAA,WAAW,EAAC,CAAC,CAAlN;AAAoNC,QAAAA,QAAQ,EAAC,CAA7N;AAA+NC,QAAAA,YAAY,EAAC7F,CAAC,CAAC8F,oBAAF,IAAwB,MAApQ;AAA2QC,QAAAA,yBAAyB,EAAC,CAAC;AAAtS,OAAnG;AAA4YzF,MAAAA,CAAC,CAACJ,CAAD,CAAD,IAAMA,CAAC,CAAC8F,mBAAR,IAA6BC,MAAM,CAACC,MAAP,CAAcxF,CAAd,EAAgBR,CAAC,CAAC8F,mBAAlB,CAA7B,EAAoEnB,CAAC,GAAC,IAAIhE,CAAJ,CAAMH,CAAN,CAAtE,EAA+EF,CAAC,CAACQ,CAAC,CAACqC,QAAH,CAAD,KAAgB7C,CAAC,CAACQ,CAAC,CAACqC,QAAH,CAAD,GAAc,EAA9B,CAA/E,EAAiH7C,CAAC,CAACQ,CAAC,CAACqC,QAAH,CAAD,CAAcrC,CAAC,CAACuD,OAAhB,IAAyBM,CAA1I;AAA4I;;AAAAzE,IAAAA,CAAC,CAAC8D,IAAF,CAAOW,CAAP;AAAU,UAAMsB,CAAC,GAAC,IAAI7E,CAAJ,CAAMF,CAAN,EAAQkC,CAAR,CAAR;AAAmBnB,IAAAA,CAAC,IAAEmB,CAAC,CAAC8C,QAAF,GAAW9C,CAAC,CAAC8C,QAAF,CAAWpC,MAAtB,GAA6B,CAAhC,EAAkC7D,CAAC,CAAC+D,IAAF,CAAOiC,CAAP,CAAlC;AAA4C;;AAAA,SAAM;AAACvC,IAAAA,IAAI,EAACxC,CAAN;AAAQiF,IAAAA,cAAc,EAAC;AAACtE,MAAAA,QAAQ,EAACrB,CAAV;AAAY4F,MAAAA,SAAS,EAAClG,CAAtB;AAAwByD,MAAAA,UAAU,EAAC1D;AAAnC,KAAvB;AAA6DoG,IAAAA,WAAW,EAACvF,CAAC,CAAC2C,KAAF,CAAQ4C,WAAjF;AAA6FC,IAAAA,WAAW,EAAClC,CAAC,CAACnE,CAAD,CAA1G;AAA8GsG,IAAAA,gBAAgB,EAACtE,CAA/H;AAAiIuE,IAAAA,YAAY,EAAC;AAA9I,GAAN;AAA0J;;AAAA,SAASpC,CAAT,CAAWtE,CAAX,EAAa;AAAC,QAAME,CAAC,GAACc,CAAC,EAAT;AAAY,SAAOhB,CAAC,CAAC2G,OAAF,CAAW3G,CAAC,IAAE;AAAC,UAAMG,CAAC,GAACH,CAAC,CAAC4G,YAAV;AAAuBtG,IAAAA,CAAC,CAACH,CAAD,CAAD,KAAOe,CAAC,CAAChB,CAAD,EAAGC,CAAC,CAAC0G,QAAF,EAAH,CAAD,EAAkB3F,CAAC,CAAChB,CAAD,EAAGC,CAAC,CAAC2G,QAAF,EAAH,CAA1B;AAA4C,GAAlF,GAAqF5G,CAA5F;AAA8F;;AAAA,eAAe8B,CAAf,CAAiBhC,CAAjB,EAAmBE,CAAnB,EAAqB;AAAC,QAAMC,CAAC,GAAC,EAAR;;AAAW,OAAI,MAAMO,CAAV,IAAeV,CAAf,EAAiB;AAAC,UAAMI,CAAC,GAACJ,CAAC,CAACU,CAAD,CAAT;AAAA,UAAaF,CAAC,GAACJ,CAAC,CAAC2G,MAAF,CAAS,CAAT,EAAYzE,IAA3B;;AAAgC,QAAG,CAAC9B,CAAJ,EAAM;AAACkB,MAAAA,CAAC,CAACsB,IAAF,CAAO,yDAAP;AAAkE;AAAS;;AAAA,UAAMpC,CAAC,GAACR,CAAC,CAAC4G,QAAF,GAAW,UAAX,GAAsBxG,CAA9B;AAAA,UAAgCM,CAAC,GAAC,yBAAuBJ,CAAzD;AAAA,UAA2DM,CAAC,GAAC;AAACiG,MAAAA,YAAY,EAAC,CAAC,CAAf;AAAiBC,MAAAA,IAAI,EAAC;AAAC1G,QAAAA,CAAC,EAAC,KAAH;AAASN,QAAAA,CAAC,EAAC;AAAX,OAAtB;AAAwCiH,MAAAA,gBAAgB,EAAC,CAAC;AAA1D,KAA7D;AAAA,UAA0HjG,CAAC,GAACZ,CAAC,CAACJ,CAAD,CAAD,IAAMA,CAAC,CAACkH,eAAR,GAAwBC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAxB,GAA8ClG,CAAC,CAACR,CAAD,EAAGV,CAAH,CAA3K;AAAiLC,IAAAA,CAAC,CAAC+D,IAAF,CAAOhD,CAAC,CAACqG,IAAF,CAAQvH,CAAC,KAAG;AAACwH,MAAAA,KAAK,EAAC1G,CAAP;AAAS2D,MAAAA,KAAK,EAACzE,CAAf;AAAiB6C,MAAAA,MAAM,EAAC7B,CAAxB;AAA0BiE,MAAAA,iBAAiB,EAAC,WAAS7E,CAAC,CAACqH,QAAX,GAAoBrH,CAAC,CAAC6E,iBAAF,IAAqB,cAAzC,GAAwD;AAApG,KAAH,CAAT,CAAP;AAAmI;;AAAA,QAAM7E,CAAC,GAAC,MAAMiH,OAAO,CAACK,GAAR,CAAYvH,CAAZ,CAAd;AAAA,QAA6BK,CAAC,GAAC,EAA/B;;AAAkC,OAAI,MAAMF,CAAV,IAAeF,CAAf,EAAiBI,CAAC,CAACF,CAAC,CAACkH,KAAH,CAAD,GAAWlH,CAAX;;AAAa,SAAOE,CAAP;AAAS;;AAAA,SAAS+E,CAAT,CAAWvF,CAAX,EAAa;AAAC,UAAOA,CAAP;AAAU,SAAI,MAAJ;AAAW,aAAO,CAAP;;AAAS,SAAI,qBAAJ;AAA0B,aAAO,CAAP;;AAAS,SAAI,MAAJ;AAAW,aAAO,CAAP;;AAAS,SAAI,cAAJ;AAAmB;AAAQ,aAAO,CAAP;AAAhH;AAA0H;;AAAA,SAASiE,CAAT,CAAWjE,CAAX,EAAa;AAAC,QAAME,CAAC,GAACF,CAAC,CAAC6C,MAAV;AAAiB,SAAM;AAAC+B,IAAAA,EAAE,EAAC,CAAJ;AAAMvB,IAAAA,QAAQ,EAACnD,CAAC,CAACmD,QAAjB;AAA0BkB,IAAAA,OAAO,EAACrE,CAAC,CAACqE,OAApC;AAA4CoD,IAAAA,MAAM,EAACzH,CAAC,CAACqE;AAArD,GAAN;AAAoE;;AAAA,MAAMd,CAAC,GAAC,IAAI7C,CAAJ,CAAM,CAAN,EAAQ,CAAR,EAAU,MAAV,CAAR;AAA0B,SAAOoB,CAAC,IAAI4F,sBAAZ,EAAmChG,CAAC,IAAIiG,IAAxC,EAA6CvE,CAAC,IAAIwE,iBAAlD","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import{result as t}from\"../../../../core/asyncUtils.js\";import r from\"../../../../core/Error.js\";import n from\"../../../../core/Logger.js\";import{isSome as a,unwrap as s}from\"../../../../core/maybe.js\";import{throwIfAbortError as o}from\"../../../../core/promiseUtils.js\";import{Version as i}from\"../../../../core/Version.js\";import{d as u}from\"../../../../chunks/vec3f64.js\";import{empty as l,expandWithVec3 as c}from\"../../../../geometry/support/aaBoundingBox.js\";import{requestImage as p}from\"../../../../support/requestImageUtils.js\";import{Geometry as m}from\"../../webgl-engine/lib/Geometry.js\";import{Texture as f}from\"../../webgl-engine/lib/Texture.js\";import{DefaultMaterial as d}from\"../../webgl-engine/materials/DefaultMaterial.js\";const y=n.getLogger(\"esri.views.3d.layers.graphics.objectResourceUtils\");async function x(e,t){const r=await g(e,t);return{resource:r,textures:await A(r.textureDefinitions,t)}}async function g(r,n){const i=a(n)&&n.streamDataRequester;if(i)return h(r,i,n);const u=await t(e(r,s(n)));if(!0===u.ok)return u.value.data;o(u.error),w(u.error)}async function h(e,r,n){const a=await t(r.request(e,\"json\",n));if(!0===a.ok)return a.value;o(a.error),w(a.error.details.url)}function w(e){throw new r(\"\",`Request for object resource failed: ${e}`)}function v(e){const t=e.params,r=t.topology;let n=!0;switch(t.vertexAttributes||(y.warn(\"Geometry must specify vertex attributes\"),n=!1),t.topology){case\"PerAttributeArray\":break;case\"Indexed\":case null:case void 0:{const e=t.faces;if(e){if(t.vertexAttributes)for(const r in t.vertexAttributes){const t=e[r];t&&t.values?(null!=t.valueType&&\"UInt32\"!==t.valueType&&(y.warn(`Unsupported indexed geometry indices type '${t.valueType}', only UInt32 is currently supported`),n=!1),null!=t.valuesPerElement&&1!==t.valuesPerElement&&(y.warn(`Unsupported indexed geometry values per element '${t.valuesPerElement}', only 1 is currently supported`),n=!1)):(y.warn(`Indexed geometry does not specify face indices for '${r}' attribute`),n=!1)}}else y.warn(\"Indexed geometries must specify faces\"),n=!1;break}default:y.warn(`Unsupported topology '${r}'`),n=!1}e.params.material||(y.warn(\"Geometry requires material\"),n=!1);const a=e.params.vertexAttributes;for(const s in a){a[s].values||(y.warn(\"Geometries with externally defined attributes are not yet supported\"),n=!1)}return n}function b(e,t){const r=[],n=[],s=[],o=[],l=e.resource,c=i.parse(l.version||\"1.0\",\"wosr\");I.validate(c);const p=l.model.name,y=l.model.geometries,x=l.materialDefinitions,g=e.textures;let h=0;const w=new Map;for(let i=0;i<y.length;i++){const e=y[i];if(!v(e))continue;const l=M(e),c=e.params.vertexAttributes,p=[];for(const t in c){const e=c[t],r=e.values;p.push([t,{data:r,size:e.valuesPerElement,exclusive:!0}])}const b=[];if(\"PerAttributeArray\"!==e.params.topology){const t=e.params.faces;for(const e in t)b.push([e,new Uint32Array(t[e].values)])}const j=g&&g[l.texture];if(j&&!w.has(l.texture)){const{image:e,params:t}=j,r=new f(e,t);o.push(r),w.set(l.texture,r)}const A=w.get(l.texture),I=A?A.id:void 0;let P=s[l.material]?s[l.material][l.texture]:null;if(!P){const e=x[l.material.substring(l.material.lastIndexOf(\"/\")+1)].params;1===e.transparency&&(e.transparency=0);const r=j&&j.alphaChannelUsage,n=e.transparency>0||\"transparency\"===r||\"maskAndTransparency\"===r,o={ambient:u(e.diffuse),diffuse:u(e.diffuse),opacity:1-(e.transparency||0),transparent:n,textureAlphaMode:j?U(j.alphaChannelUsage):void 0,textureAlphaCutoff:.33,textureId:I,initTextureTransparent:!0,doubleSided:!0,cullFace:0,colorMixMode:e.externalColorMixMode||\"tint\",textureAlphaPremultiplied:!0};a(t)&&t.materialParamsMixin&&Object.assign(o,t.materialParamsMixin),P=new d(o),s[l.material]||(s[l.material]={}),s[l.material][l.texture]=P}n.push(P);const T=new m(p,b);h+=b.position?b.position.length:0,r.push(T)}return{name:p,stageResources:{textures:o,materials:n,geometries:r},pivotOffset:l.model.pivotOffset,boundingBox:j(r),numberOfVertices:h,lodThreshold:null}}function j(e){const t=l();return e.forEach((e=>{const r=e.boundingInfo;a(r)&&(c(t,r.getBBMin()),c(t,r.getBBMax()))})),t}async function A(e,t){const r=[];for(const o in e){const n=e[o],s=n.images[0].data;if(!s){y.warn(\"Externally referenced texture data is not yet supported\");continue}const i=n.encoding+\";base64,\"+s,u=\"/textureDefinitions/\"+o,l={noUnpackFlip:!0,wrap:{s:10497,t:10497},preMultiplyAlpha:!0},c=a(t)&&t.disableTextures?Promise.resolve(null):p(i,t);r.push(c.then((e=>({refId:u,image:e,params:l,alphaChannelUsage:\"rgba\"===n.channels?n.alphaChannelUsage||\"transparency\":\"none\"}))))}const n=await Promise.all(r),s={};for(const a of n)s[a.refId]=a;return s}function U(e){switch(e){case\"mask\":return 2;case\"maskAndTransparency\":return 3;case\"none\":return 1;case\"transparency\":default:return 0}}function M(e){const t=e.params;return{id:1,material:t.material,texture:t.texture,region:t.texture}}const I=new i(1,2,\"wosr\");export{A as createTextureResources,x as load,b as processLoadResult};\n"]},"metadata":{},"sourceType":"module"}