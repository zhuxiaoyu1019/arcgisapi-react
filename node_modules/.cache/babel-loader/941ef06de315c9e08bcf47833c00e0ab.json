{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as s } from \"../../../chunks/tslib.es6.js\";\nimport { whenFalseOnce as o } from \"../../../core/watchUtils.js\";\nimport { property as e } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/Logger.js\";\nimport { subclass as t } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { mayHaveHeightModelInfo as r, rejectLayerError as i } from \"../../../geometry/support/heightModelInfoUtils.js\";\n\nconst p = p => {\n  let a = class extends p {\n    constructor() {\n      super(...arguments), this.slicePlaneEnabled = !1, this.supportsHeightUnitConversion = !1;\n    }\n\n    postscript(s) {\n      super.postscript(s), r(this.layer) && this.addResolvingPromise(this._validateHeightModelInfo());\n    }\n\n    async _validateHeightModelInfo() {\n      const s = o(this.view.defaultsFromMap, \"isHeightModelInfoSearching\");\n      this.handles.add(s), await s;\n      const e = i(this.layer, this.view.heightModelInfo, this.supportsHeightUnitConversion);\n      if (e) throw e;\n    }\n\n  };\n  return s([e()], a.prototype, \"view\", void 0), s([e()], a.prototype, \"slicePlaneEnabled\", void 0), a = s([t(\"esri.views.3d.layers.LayerView3D\")], a), a;\n};\n\nexport { p as LayerView3D };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/layers/LayerView3D.js"],"names":["_","s","whenFalseOnce","o","property","e","subclass","t","mayHaveHeightModelInfo","r","rejectLayerError","i","p","a","constructor","arguments","slicePlaneEnabled","supportsHeightUnitConversion","postscript","layer","addResolvingPromise","_validateHeightModelInfo","view","defaultsFromMap","handles","add","heightModelInfo","prototype","LayerView3D"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,8BAAlB;AAAiD,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,6BAA9B;AAA4D,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,sDAAzB;AAAgF,OAAM,sBAAN;AAA6B,OAAM,6CAAN;AAAoD,OAAM,yBAAN;AAAgC,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,sDAAzB;AAAgF,SAAOC,sBAAsB,IAAIC,CAAjC,EAAmCC,gBAAgB,IAAIC,CAAvD,QAA6D,mDAA7D;;AAAiH,MAAMC,CAAC,GAACA,CAAC,IAAE;AAAC,MAAIC,CAAC,GAAC,cAAcD,CAAd,CAAe;AAACE,IAAAA,WAAW,GAAE;AAAC,YAAM,GAAGC,SAAT,GAAoB,KAAKC,iBAAL,GAAuB,CAAC,CAA5C,EAA8C,KAAKC,4BAAL,GAAkC,CAAC,CAAjF;AAAmF;;AAAAC,IAAAA,UAAU,CAACjB,CAAD,EAAG;AAAC,YAAMiB,UAAN,CAAiBjB,CAAjB,GAAoBQ,CAAC,CAAC,KAAKU,KAAN,CAAD,IAAe,KAAKC,mBAAL,CAAyB,KAAKC,wBAAL,EAAzB,CAAnC;AAA6F;;AAA8B,UAAxBA,wBAAwB,GAAE;AAAC,YAAMpB,CAAC,GAACE,CAAC,CAAC,KAAKmB,IAAL,CAAUC,eAAX,EAA2B,4BAA3B,CAAT;AAAkE,WAAKC,OAAL,CAAaC,GAAb,CAAiBxB,CAAjB,GAAoB,MAAMA,CAA1B;AAA4B,YAAMI,CAAC,GAACM,CAAC,CAAC,KAAKQ,KAAN,EAAY,KAAKG,IAAL,CAAUI,eAAtB,EAAsC,KAAKT,4BAA3C,CAAT;AAAkF,UAAGZ,CAAH,EAAK,MAAMA,CAAN;AAAQ;;AAA3a,GAArB;AAAkc,SAAOJ,CAAC,CAAC,CAACI,CAAC,EAAF,CAAD,EAAOQ,CAAC,CAACc,SAAT,EAAmB,MAAnB,EAA0B,KAAK,CAA/B,CAAD,EAAmC1B,CAAC,CAAC,CAACI,CAAC,EAAF,CAAD,EAAOQ,CAAC,CAACc,SAAT,EAAmB,mBAAnB,EAAuC,KAAK,CAA5C,CAApC,EAAmFd,CAAC,GAACZ,CAAC,CAAC,CAACM,CAAC,CAAC,kCAAD,CAAF,CAAD,EAAyCM,CAAzC,CAAtF,EAAkIA,CAAzI;AAA2I,CAAzlB;;AAA0lB,SAAOD,CAAC,IAAIgB,WAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as s}from\"../../../chunks/tslib.es6.js\";import{whenFalseOnce as o}from\"../../../core/watchUtils.js\";import{property as e}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/Logger.js\";import{subclass as t}from\"../../../core/accessorSupport/decorators/subclass.js\";import{mayHaveHeightModelInfo as r,rejectLayerError as i}from\"../../../geometry/support/heightModelInfoUtils.js\";const p=p=>{let a=class extends p{constructor(){super(...arguments),this.slicePlaneEnabled=!1,this.supportsHeightUnitConversion=!1}postscript(s){super.postscript(s),r(this.layer)&&this.addResolvingPromise(this._validateHeightModelInfo())}async _validateHeightModelInfo(){const s=o(this.view.defaultsFromMap,\"isHeightModelInfoSearching\");this.handles.add(s),await s;const e=i(this.layer,this.view.heightModelInfo,this.supportsHeightUnitConversion);if(e)throw e}};return s([e()],a.prototype,\"view\",void 0),s([e()],a.prototype,\"slicePlaneEnabled\",void 0),a=s([t(\"esri.views.3d.layers.LayerView3D\")],a),a};export{p as LayerView3D};\n"]},"metadata":{},"sourceType":"module"}