{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport { ensureType as s } from \"../symbols.js\";\nimport { JSONMap as t } from \"../core/jsonMap.js\";\nimport { clone as o } from \"../core/lang.js\";\nimport r from \"../core/Logger.js\";\nimport { isNone as i, unwrapOr as a, unwrap as l } from \"../core/maybe.js\";\nimport { property as n } from \"../core/accessorSupport/decorators/property.js\";\nimport { cast as u } from \"../core/accessorSupport/decorators/cast.js\";\nimport \"../core/has.js\";\nimport { enumeration as c } from \"../core/accessorSupport/decorators/enumeration.js\";\nimport { reader as p } from \"../core/accessorSupport/decorators/reader.js\";\nimport { subclass as m } from \"../core/accessorSupport/decorators/subclass.js\";\nimport { writer as d } from \"../core/accessorSupport/decorators/writer.js\";\nimport { ensureType as h, ensureString as f, ensureNumber as y } from \"../core/accessorSupport/ensureType.js\";\nimport { collectArcadeFieldNames as g, collectField as b } from \"../layers/support/fieldUtils.js\";\nimport x from \"./Renderer.js\";\nimport { VisualVariablesMixin as k } from \"./mixins/VisualVariablesMixin.js\";\nimport v from \"./support/ClassBreakInfo.js\";\nimport { rendererBackgroundFillSymbolProperty as I, rendererSymbolProperty as B } from \"./support/commonProperties.js\";\nimport S from \"./support/LegendOptions.js\";\nimport { loadArcade as V } from \"../support/arcadeOnDemand.js\";\nvar F;\n\nconst E = r.getLogger(\"esri.renderers.ClassBreaksRenderer\"),\n      j = \"log\",\n      w = \"percent-of-total\",\n      z = \"field\",\n      T = new t({\n  esriNormalizeByLog: j,\n  esriNormalizeByPercentOfTotal: w,\n  esriNormalizeByField: z\n}),\n      _ = h(v);\n\nlet C = F = class extends k(x) {\n  constructor(e) {\n    super(e), this._compiledValueExpression = {\n      valueExpression: null,\n      compiledFunction: null\n    }, this.backgroundFillSymbol = null, this.classBreakInfos = null, this.defaultLabel = null, this.defaultSymbol = null, this.field = null, this.isMaxInclusive = !0, this.legendOptions = null, this.normalizationField = null, this.normalizationTotal = null, this.type = \"class-breaks\", this.valueExpression = null, this.valueExpressionTitle = null, this._set(\"classBreakInfos\", []);\n  }\n\n  readClassBreakInfos(e, s, t) {\n    if (!Array.isArray(e)) return;\n    let o = s.minValue;\n    return e.map(e => {\n      const s = new v();\n      return s.read(e, t), null == s.minValue && (s.minValue = o), null == s.maxValue && (s.maxValue = s.minValue), o = s.maxValue, s;\n    });\n  }\n\n  writeClassBreakInfos(e, s, t, o) {\n    const r = e.map(e => e.write({}, o));\n    this._areClassBreaksConsecutive() && r.forEach(e => delete e.classMinValue), s[t] = r;\n  }\n\n  castField(e) {\n    return null == e ? e : \"function\" == typeof e ? (E.error(\".field: field must be a string value\"), null) : f(e);\n  }\n\n  get minValue() {\n    return this.classBreakInfos && this.classBreakInfos[0] && this.classBreakInfos[0].minValue || 0;\n  }\n\n  get normalizationType() {\n    let e = this._get(\"normalizationType\");\n\n    const s = !!this.normalizationField,\n          t = null != this.normalizationTotal;\n    return s || t ? (e = s && z || t && w || null, s && t && E.warn(\"warning: both normalizationField and normalizationTotal are set!\")) : e !== z && e !== w || (e = null), e;\n  }\n\n  set normalizationType(e) {\n    this._set(\"normalizationType\", e);\n  }\n\n  addClassBreakInfo(e, t, r) {\n    let i = null;\n    i = \"number\" == typeof e ? new v({\n      minValue: e,\n      maxValue: t,\n      symbol: s(r)\n    }) : _(o(e)), this.classBreakInfos.push(i), 1 === this.classBreakInfos.length && this.notifyChange(\"minValue\");\n  }\n\n  removeClassBreakInfo(e, s) {\n    const t = this.classBreakInfos.length;\n\n    for (let o = 0; o < t; o++) {\n      const t = [this.classBreakInfos[o].minValue, this.classBreakInfos[o].maxValue];\n\n      if (t[0] === e && t[1] === s) {\n        this.classBreakInfos.splice(o, 1);\n        break;\n      }\n    }\n  }\n\n  getBreakIndex(e, s) {\n    return this.valueExpression && (i(s) || i(s.arcade)) && E.warn(\"\"), this.valueExpression ? this._getBreakIndexForExpression(e, s) : this._getBreakIndexForField(e);\n  }\n\n  async getClassBreakInfo(e, s) {\n    let t = s;\n    this.valueExpression && (i(s) || i(s.arcade)) && (t = { ...t,\n      arcade: await V()\n    });\n    const o = this.getBreakIndex(e, t);\n    return -1 !== o ? this.classBreakInfos[o] : null;\n  }\n\n  getSymbol(e, s) {\n    if (this.valueExpression && (i(s) || i(s.arcade))) return void E.error(\"#getSymbol()\", \"Please use getSymbolAsync if valueExpression is used\");\n    const t = this.getBreakIndex(e, s);\n    return t > -1 ? this.classBreakInfos[t].symbol : this.defaultSymbol;\n  }\n\n  async getSymbolAsync(e, s) {\n    let t = s;\n\n    if (this.valueExpression && (i(s) || i(s.arcade))) {\n      const e = await V(),\n            {\n        arcadeUtils: s\n      } = e;\n      s.hasGeometryOperations(this.valueExpression) && (await s.enableGeometryOperations()), t = { ...t,\n        arcade: e\n      };\n    }\n\n    const o = this.getBreakIndex(e, t);\n    return o > -1 ? this.classBreakInfos[o].symbol : this.defaultSymbol;\n  }\n\n  getSymbols() {\n    const e = [];\n    return this.classBreakInfos.forEach(s => {\n      s.symbol && e.push(s.symbol);\n    }), this.defaultSymbol && e.push(this.defaultSymbol), e;\n  }\n\n  getAttributeHash() {\n    return this.visualVariables && this.visualVariables.reduce((e, s) => e + s.getAttributeHash(), \"\");\n  }\n\n  getMeshHash() {\n    const e = JSON.stringify(this.backgroundFillSymbol),\n          s = JSON.stringify(this.defaultSymbol),\n          t = `${this.normalizationField}.${this.normalizationType}.${this.normalizationTotal}`;\n    return `${e}.${s}.${this.classBreakInfos.reduce((e, s) => e + s.getMeshHash(), \"\")}.${t}.${this.field}.${this.valueExpression}`;\n  }\n\n  get arcadeRequired() {\n    return this.arcadeRequiredForVisualVariables || !!this.valueExpression;\n  }\n\n  clone() {\n    return new F({\n      field: this.field,\n      backgroundFillSymbol: this.backgroundFillSymbol && this.backgroundFillSymbol.clone(),\n      defaultLabel: this.defaultLabel,\n      defaultSymbol: this.defaultSymbol && this.defaultSymbol.clone(),\n      valueExpression: this.valueExpression,\n      valueExpressionTitle: this.valueExpressionTitle,\n      classBreakInfos: o(this.classBreakInfos),\n      isMaxInclusive: this.isMaxInclusive,\n      normalizationField: this.normalizationField,\n      normalizationTotal: this.normalizationTotal,\n      normalizationType: this.normalizationType,\n      visualVariables: o(this.visualVariables),\n      legendOptions: o(this.legendOptions),\n      authoringInfo: this.authoringInfo && this.authoringInfo.clone()\n    });\n  }\n\n  async collectRequiredFields(e, s) {\n    const t = [this.collectVVRequiredFields(e, s), this.collectSymbolFields(e, s)];\n    await Promise.all(t);\n  }\n\n  async collectSymbolFields(e, s) {\n    const t = [...this.getSymbols().map(t => t.collectRequiredFields(e, s)), g(e, s, this.valueExpression)];\n    b(e, s, this.field), b(e, s, this.normalizationField), await Promise.all(t);\n  }\n\n  _getBreakIndexForExpression(e, s) {\n    const {\n      viewingMode: t,\n      scale: o,\n      spatialReference: r,\n      arcade: i\n    } = a(s, {});\n    let n = this._compiledValueExpression.valueExpression === this.valueExpression ? this._compiledValueExpression.compiledFunction : null;\n    const u = l(i).arcadeUtils;\n\n    if (!n) {\n      const e = u.createSyntaxTree(this.valueExpression);\n      n = u.createFunction(e), this._compiledValueExpression.compiledFunction = n;\n    }\n\n    this._compiledValueExpression.valueExpression = this.valueExpression;\n    const c = u.executeFunction(n, u.createExecContext(e, u.getViewInfo({\n      viewingMode: t,\n      scale: o,\n      spatialReference: r\n    })));\n    return this._getBreakIndexfromInfos(c);\n  }\n\n  _getBreakIndexForField(e) {\n    const s = this.field,\n          t = e.attributes,\n          o = this.normalizationType;\n    let r = parseFloat(t[s]);\n\n    if (o) {\n      const e = this.normalizationTotal,\n            s = parseFloat(t[this.normalizationField]);\n      if (o === j) r = Math.log(r) * Math.LOG10E;else if (o !== w || isNaN(e)) {\n        if (o === z && !isNaN(s)) {\n          if (isNaN(r) || isNaN(s)) return -1;\n          r /= s;\n        }\n      } else r = r / e * 100;\n    }\n\n    return this._getBreakIndexfromInfos(r);\n  }\n\n  _getBreakIndexfromInfos(e) {\n    const s = this.isMaxInclusive;\n    if (null != e && \"number\" == typeof e && !isNaN(e)) for (let t = 0; t < this.classBreakInfos.length; t++) {\n      const o = [this.classBreakInfos[t].minValue, this.classBreakInfos[t].maxValue];\n      if (o[0] <= e && (s ? e <= o[1] : e < o[1])) return t;\n    }\n    return -1;\n  }\n\n  _areClassBreaksConsecutive() {\n    const e = this.classBreakInfos,\n          s = e.length;\n\n    for (let t = 1; t < s; t++) if (e[t - 1].maxValue !== e[t].minValue) return !1;\n\n    return !0;\n  }\n\n};\ne([n(I)], C.prototype, \"backgroundFillSymbol\", void 0), e([n({\n  type: [v]\n})], C.prototype, \"classBreakInfos\", void 0), e([p(\"classBreakInfos\")], C.prototype, \"readClassBreakInfos\", null), e([d(\"classBreakInfos\")], C.prototype, \"writeClassBreakInfos\", null), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"defaultLabel\", void 0), e([n(B)], C.prototype, \"defaultSymbol\", void 0), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"field\", void 0), e([u(\"field\")], C.prototype, \"castField\", null), e([n({\n  type: Boolean\n})], C.prototype, \"isMaxInclusive\", void 0), e([n({\n  type: S,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"legendOptions\", void 0), e([n({\n  type: Number,\n  readOnly: !0,\n  value: null,\n  json: {\n    read: !1,\n    write: {\n      overridePolicy() {\n        return 0 !== this.classBreakInfos.length && this._areClassBreaksConsecutive() ? {\n          enabled: !0\n        } : {\n          enabled: !1\n        };\n      }\n\n    }\n  }\n})], C.prototype, \"minValue\", null), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"normalizationField\", void 0), e([n({\n  type: Number,\n  cast: e => y(e),\n  json: {\n    write: !0\n  }\n})], C.prototype, \"normalizationTotal\", void 0), e([n({\n  type: T.apiValues,\n  value: null,\n  json: {\n    type: T.jsonValues,\n    read: T.read,\n    write: T.write\n  }\n})], C.prototype, \"normalizationType\", null), e([c({\n  classBreaks: \"class-breaks\"\n})], C.prototype, \"type\", void 0), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"valueExpression\", void 0), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"valueExpressionTitle\", void 0), C = F = e([m(\"esri.renderers.ClassBreaksRenderer\")], C);\nvar N = C;\nexport default N;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/renderers/ClassBreaksRenderer.js"],"names":["_","e","ensureType","s","JSONMap","t","clone","o","r","isNone","i","unwrapOr","a","unwrap","l","property","n","cast","u","enumeration","c","reader","p","subclass","m","writer","d","h","ensureString","f","ensureNumber","y","collectArcadeFieldNames","g","collectField","b","x","VisualVariablesMixin","k","v","rendererBackgroundFillSymbolProperty","I","rendererSymbolProperty","B","S","loadArcade","V","F","E","getLogger","j","w","z","T","esriNormalizeByLog","esriNormalizeByPercentOfTotal","esriNormalizeByField","C","constructor","_compiledValueExpression","valueExpression","compiledFunction","backgroundFillSymbol","classBreakInfos","defaultLabel","defaultSymbol","field","isMaxInclusive","legendOptions","normalizationField","normalizationTotal","type","valueExpressionTitle","_set","readClassBreakInfos","Array","isArray","minValue","map","read","maxValue","writeClassBreakInfos","write","_areClassBreaksConsecutive","forEach","classMinValue","castField","error","normalizationType","_get","warn","addClassBreakInfo","symbol","push","length","notifyChange","removeClassBreakInfo","splice","getBreakIndex","arcade","_getBreakIndexForExpression","_getBreakIndexForField","getClassBreakInfo","getSymbol","getSymbolAsync","arcadeUtils","hasGeometryOperations","enableGeometryOperations","getSymbols","getAttributeHash","visualVariables","reduce","getMeshHash","JSON","stringify","arcadeRequired","arcadeRequiredForVisualVariables","authoringInfo","collectRequiredFields","collectVVRequiredFields","collectSymbolFields","Promise","all","viewingMode","scale","spatialReference","createSyntaxTree","createFunction","executeFunction","createExecContext","getViewInfo","_getBreakIndexfromInfos","attributes","parseFloat","Math","log","LOG10E","isNaN","prototype","String","json","Boolean","Number","readOnly","value","overridePolicy","enabled","apiValues","jsonValues","classBreaks","N"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../chunks/tslib.es6.js\";import{ensureType as s}from\"../symbols.js\";import{JSONMap as t}from\"../core/jsonMap.js\";import{clone as o}from\"../core/lang.js\";import r from\"../core/Logger.js\";import{isNone as i,unwrapOr as a,unwrap as l}from\"../core/maybe.js\";import{property as n}from\"../core/accessorSupport/decorators/property.js\";import{cast as u}from\"../core/accessorSupport/decorators/cast.js\";import\"../core/has.js\";import{enumeration as c}from\"../core/accessorSupport/decorators/enumeration.js\";import{reader as p}from\"../core/accessorSupport/decorators/reader.js\";import{subclass as m}from\"../core/accessorSupport/decorators/subclass.js\";import{writer as d}from\"../core/accessorSupport/decorators/writer.js\";import{ensureType as h,ensureString as f,ensureNumber as y}from\"../core/accessorSupport/ensureType.js\";import{collectArcadeFieldNames as g,collectField as b}from\"../layers/support/fieldUtils.js\";import x from\"./Renderer.js\";import{VisualVariablesMixin as k}from\"./mixins/VisualVariablesMixin.js\";import v from\"./support/ClassBreakInfo.js\";import{rendererBackgroundFillSymbolProperty as I,rendererSymbolProperty as B}from\"./support/commonProperties.js\";import S from\"./support/LegendOptions.js\";import{loadArcade as V}from\"../support/arcadeOnDemand.js\";var F;const E=r.getLogger(\"esri.renderers.ClassBreaksRenderer\"),j=\"log\",w=\"percent-of-total\",z=\"field\",T=new t({esriNormalizeByLog:j,esriNormalizeByPercentOfTotal:w,esriNormalizeByField:z}),_=h(v);let C=F=class extends(k(x)){constructor(e){super(e),this._compiledValueExpression={valueExpression:null,compiledFunction:null},this.backgroundFillSymbol=null,this.classBreakInfos=null,this.defaultLabel=null,this.defaultSymbol=null,this.field=null,this.isMaxInclusive=!0,this.legendOptions=null,this.normalizationField=null,this.normalizationTotal=null,this.type=\"class-breaks\",this.valueExpression=null,this.valueExpressionTitle=null,this._set(\"classBreakInfos\",[])}readClassBreakInfos(e,s,t){if(!Array.isArray(e))return;let o=s.minValue;return e.map((e=>{const s=new v;return s.read(e,t),null==s.minValue&&(s.minValue=o),null==s.maxValue&&(s.maxValue=s.minValue),o=s.maxValue,s}))}writeClassBreakInfos(e,s,t,o){const r=e.map((e=>e.write({},o)));this._areClassBreaksConsecutive()&&r.forEach((e=>delete e.classMinValue)),s[t]=r}castField(e){return null==e?e:\"function\"==typeof e?(E.error(\".field: field must be a string value\"),null):f(e)}get minValue(){return this.classBreakInfos&&this.classBreakInfos[0]&&this.classBreakInfos[0].minValue||0}get normalizationType(){let e=this._get(\"normalizationType\");const s=!!this.normalizationField,t=null!=this.normalizationTotal;return s||t?(e=s&&z||t&&w||null,s&&t&&E.warn(\"warning: both normalizationField and normalizationTotal are set!\")):e!==z&&e!==w||(e=null),e}set normalizationType(e){this._set(\"normalizationType\",e)}addClassBreakInfo(e,t,r){let i=null;i=\"number\"==typeof e?new v({minValue:e,maxValue:t,symbol:s(r)}):_(o(e)),this.classBreakInfos.push(i),1===this.classBreakInfos.length&&this.notifyChange(\"minValue\")}removeClassBreakInfo(e,s){const t=this.classBreakInfos.length;for(let o=0;o<t;o++){const t=[this.classBreakInfos[o].minValue,this.classBreakInfos[o].maxValue];if(t[0]===e&&t[1]===s){this.classBreakInfos.splice(o,1);break}}}getBreakIndex(e,s){return this.valueExpression&&(i(s)||i(s.arcade))&&E.warn(\"\"),this.valueExpression?this._getBreakIndexForExpression(e,s):this._getBreakIndexForField(e)}async getClassBreakInfo(e,s){let t=s;this.valueExpression&&(i(s)||i(s.arcade))&&(t={...t,arcade:await V()});const o=this.getBreakIndex(e,t);return-1!==o?this.classBreakInfos[o]:null}getSymbol(e,s){if(this.valueExpression&&(i(s)||i(s.arcade)))return void E.error(\"#getSymbol()\",\"Please use getSymbolAsync if valueExpression is used\");const t=this.getBreakIndex(e,s);return t>-1?this.classBreakInfos[t].symbol:this.defaultSymbol}async getSymbolAsync(e,s){let t=s;if(this.valueExpression&&(i(s)||i(s.arcade))){const e=await V(),{arcadeUtils:s}=e;s.hasGeometryOperations(this.valueExpression)&&await s.enableGeometryOperations(),t={...t,arcade:e}}const o=this.getBreakIndex(e,t);return o>-1?this.classBreakInfos[o].symbol:this.defaultSymbol}getSymbols(){const e=[];return this.classBreakInfos.forEach((s=>{s.symbol&&e.push(s.symbol)})),this.defaultSymbol&&e.push(this.defaultSymbol),e}getAttributeHash(){return this.visualVariables&&this.visualVariables.reduce(((e,s)=>e+s.getAttributeHash()),\"\")}getMeshHash(){const e=JSON.stringify(this.backgroundFillSymbol),s=JSON.stringify(this.defaultSymbol),t=`${this.normalizationField}.${this.normalizationType}.${this.normalizationTotal}`;return`${e}.${s}.${this.classBreakInfos.reduce(((e,s)=>e+s.getMeshHash()),\"\")}.${t}.${this.field}.${this.valueExpression}`}get arcadeRequired(){return this.arcadeRequiredForVisualVariables||!!this.valueExpression}clone(){return new F({field:this.field,backgroundFillSymbol:this.backgroundFillSymbol&&this.backgroundFillSymbol.clone(),defaultLabel:this.defaultLabel,defaultSymbol:this.defaultSymbol&&this.defaultSymbol.clone(),valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,classBreakInfos:o(this.classBreakInfos),isMaxInclusive:this.isMaxInclusive,normalizationField:this.normalizationField,normalizationTotal:this.normalizationTotal,normalizationType:this.normalizationType,visualVariables:o(this.visualVariables),legendOptions:o(this.legendOptions),authoringInfo:this.authoringInfo&&this.authoringInfo.clone()})}async collectRequiredFields(e,s){const t=[this.collectVVRequiredFields(e,s),this.collectSymbolFields(e,s)];await Promise.all(t)}async collectSymbolFields(e,s){const t=[...this.getSymbols().map((t=>t.collectRequiredFields(e,s))),g(e,s,this.valueExpression)];b(e,s,this.field),b(e,s,this.normalizationField),await Promise.all(t)}_getBreakIndexForExpression(e,s){const{viewingMode:t,scale:o,spatialReference:r,arcade:i}=a(s,{});let n=this._compiledValueExpression.valueExpression===this.valueExpression?this._compiledValueExpression.compiledFunction:null;const u=l(i).arcadeUtils;if(!n){const e=u.createSyntaxTree(this.valueExpression);n=u.createFunction(e),this._compiledValueExpression.compiledFunction=n}this._compiledValueExpression.valueExpression=this.valueExpression;const c=u.executeFunction(n,u.createExecContext(e,u.getViewInfo({viewingMode:t,scale:o,spatialReference:r})));return this._getBreakIndexfromInfos(c)}_getBreakIndexForField(e){const s=this.field,t=e.attributes,o=this.normalizationType;let r=parseFloat(t[s]);if(o){const e=this.normalizationTotal,s=parseFloat(t[this.normalizationField]);if(o===j)r=Math.log(r)*Math.LOG10E;else if(o!==w||isNaN(e)){if(o===z&&!isNaN(s)){if(isNaN(r)||isNaN(s))return-1;r/=s}}else r=r/e*100}return this._getBreakIndexfromInfos(r)}_getBreakIndexfromInfos(e){const s=this.isMaxInclusive;if(null!=e&&\"number\"==typeof e&&!isNaN(e))for(let t=0;t<this.classBreakInfos.length;t++){const o=[this.classBreakInfos[t].minValue,this.classBreakInfos[t].maxValue];if(o[0]<=e&&(s?e<=o[1]:e<o[1]))return t}return-1}_areClassBreaksConsecutive(){const e=this.classBreakInfos,s=e.length;for(let t=1;t<s;t++)if(e[t-1].maxValue!==e[t].minValue)return!1;return!0}};e([n(I)],C.prototype,\"backgroundFillSymbol\",void 0),e([n({type:[v]})],C.prototype,\"classBreakInfos\",void 0),e([p(\"classBreakInfos\")],C.prototype,\"readClassBreakInfos\",null),e([d(\"classBreakInfos\")],C.prototype,\"writeClassBreakInfos\",null),e([n({type:String,json:{write:!0}})],C.prototype,\"defaultLabel\",void 0),e([n(B)],C.prototype,\"defaultSymbol\",void 0),e([n({type:String,json:{write:!0}})],C.prototype,\"field\",void 0),e([u(\"field\")],C.prototype,\"castField\",null),e([n({type:Boolean})],C.prototype,\"isMaxInclusive\",void 0),e([n({type:S,json:{write:!0}})],C.prototype,\"legendOptions\",void 0),e([n({type:Number,readOnly:!0,value:null,json:{read:!1,write:{overridePolicy(){return 0!==this.classBreakInfos.length&&this._areClassBreaksConsecutive()?{enabled:!0}:{enabled:!1}}}}})],C.prototype,\"minValue\",null),e([n({type:String,json:{write:!0}})],C.prototype,\"normalizationField\",void 0),e([n({type:Number,cast:e=>y(e),json:{write:!0}})],C.prototype,\"normalizationTotal\",void 0),e([n({type:T.apiValues,value:null,json:{type:T.jsonValues,read:T.read,write:T.write}})],C.prototype,\"normalizationType\",null),e([c({classBreaks:\"class-breaks\"})],C.prototype,\"type\",void 0),e([n({type:String,json:{write:!0}})],C.prototype,\"valueExpression\",void 0),e([n({type:String,json:{write:!0}})],C.prototype,\"valueExpressionTitle\",void 0),C=F=e([m(\"esri.renderers.ClassBreaksRenderer\")],C);var N=C;export default N;\n"]},"metadata":{},"sourceType":"module"}