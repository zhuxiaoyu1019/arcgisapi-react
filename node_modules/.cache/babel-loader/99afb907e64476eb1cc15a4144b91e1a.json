{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { Slice as o } from \"../Slice.glsl.js\";\nimport { Transform as r } from \"../Transform.glsl.js\";\nimport { NormalAttribute as e } from \"../attributes/NormalAttribute.glsl.js\";\nimport { TextureCoordinateAttribute as t } from \"../attributes/TextureCoordinateAttribute.glsl.js\";\nimport { VertexNormal as i } from \"../attributes/VertexNormal.glsl.js\";\nimport { OutputDepth as a } from \"../output/OutputDepth.glsl.js\";\nimport { OutputHighlight as l } from \"../output/OutputHighlight.glsl.js\";\nimport { VisualVariables as s } from \"../shading/VisualVariables.glsl.js\";\nimport { DiscardOrAdjustAlpha as d } from \"../util/AlphaDiscard.glsl.js\";\nimport { glsl as n } from \"../../shaderModules/interfaces.js\";\n\nfunction u(u, c) {\n  const p = u.vertex.code,\n        v = u.fragment.code;\n  1 !== c.output && 3 !== c.output || (u.include(r, {\n    linearDepth: !0\n  }), u.include(t, c), u.include(s, c), u.include(a, c), u.include(o, c), u.vertex.uniforms.add(\"cameraNearFar\", \"vec2\"), u.varyings.add(\"depth\", \"float\"), c.hasColorTexture && u.fragment.uniforms.add(\"tex\", \"sampler2D\"), p.add(n`void main(void) {\nvpos = calculateVPos();\nvpos = subtractOrigin(vpos);\nvpos = addVerticalOffset(vpos, localOrigin);\ngl_Position = transformPositionWithDepth(proj, view, vpos, cameraNearFar, depth);\nforwardTextureCoordinates();\n}`), u.include(d, c), v.add(n`\n      void main(void) {\n        discardBySlice(vpos);\n        ${c.hasColorTexture ? n`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);` : \"\"}\n        outputDepth(depth);\n      }\n    `)), 2 === c.output && (u.include(r, {\n    linearDepth: !1\n  }), u.include(e, c), u.include(i, c), u.include(t, c), u.include(s, c), c.hasColorTexture && u.fragment.uniforms.add(\"tex\", \"sampler2D\"), u.vertex.uniforms.add(\"viewNormal\", \"mat4\"), u.varyings.add(\"vPositionView\", \"vec3\"), p.add(n`\n      void main(void) {\n        vpos = calculateVPos();\n        vpos = subtractOrigin(vpos);\n        ${0 === c.normalType ? n`\n        vNormalWorld = dpNormalView(vvLocalNormal(normalModel()));` : \"\"}\n        vpos = addVerticalOffset(vpos, localOrigin);\n        gl_Position = transformPosition(proj, view, vpos);\n        forwardTextureCoordinates();\n      }\n    `), u.include(o, c), u.include(d, c), v.add(n`\n      void main() {\n        discardBySlice(vpos);\n        ${c.hasColorTexture ? n`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);` : \"\"}\n\n        ${3 === c.normalType ? n`\n            vec3 normal = screenDerivativeNormal(vPositionView);` : n`\n            vec3 normal = normalize(vNormalWorld);\n            if (gl_FrontFacing == false) normal = -normal;`}\n        gl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);\n      }\n    `)), 4 === c.output && (u.include(r, {\n    linearDepth: !1\n  }), u.include(t, c), u.include(s, c), c.hasColorTexture && u.fragment.uniforms.add(\"tex\", \"sampler2D\"), p.add(n`void main(void) {\nvpos = calculateVPos();\nvpos = subtractOrigin(vpos);\nvpos = addVerticalOffset(vpos, localOrigin);\ngl_Position = transformPosition(proj, view, vpos);\nforwardTextureCoordinates();\n}`), u.include(o, c), u.include(d, c), u.include(l), v.add(n`\n      void main() {\n        discardBySlice(vpos);\n        ${c.hasColorTexture ? n`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);` : \"\"}\n        outputHighlight();\n      }\n    `));\n}\n\nexport { u as DefaultMaterialAuxiliaryPasses };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js"],"names":["Slice","o","Transform","r","NormalAttribute","e","TextureCoordinateAttribute","t","VertexNormal","i","OutputDepth","a","OutputHighlight","l","VisualVariables","s","DiscardOrAdjustAlpha","d","glsl","n","u","c","p","vertex","code","v","fragment","output","include","linearDepth","uniforms","add","varyings","hasColorTexture","normalType","DefaultMaterialAuxiliaryPasses"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{Slice as o}from\"../Slice.glsl.js\";import{Transform as r}from\"../Transform.glsl.js\";import{NormalAttribute as e}from\"../attributes/NormalAttribute.glsl.js\";import{TextureCoordinateAttribute as t}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexNormal as i}from\"../attributes/VertexNormal.glsl.js\";import{OutputDepth as a}from\"../output/OutputDepth.glsl.js\";import{OutputHighlight as l}from\"../output/OutputHighlight.glsl.js\";import{VisualVariables as s}from\"../shading/VisualVariables.glsl.js\";import{DiscardOrAdjustAlpha as d}from\"../util/AlphaDiscard.glsl.js\";import{glsl as n}from\"../../shaderModules/interfaces.js\";function u(u,c){const p=u.vertex.code,v=u.fragment.code;1!==c.output&&3!==c.output||(u.include(r,{linearDepth:!0}),u.include(t,c),u.include(s,c),u.include(a,c),u.include(o,c),u.vertex.uniforms.add(\"cameraNearFar\",\"vec2\"),u.varyings.add(\"depth\",\"float\"),c.hasColorTexture&&u.fragment.uniforms.add(\"tex\",\"sampler2D\"),p.add(n`void main(void) {\nvpos = calculateVPos();\nvpos = subtractOrigin(vpos);\nvpos = addVerticalOffset(vpos, localOrigin);\ngl_Position = transformPositionWithDepth(proj, view, vpos, cameraNearFar, depth);\nforwardTextureCoordinates();\n}`),u.include(d,c),v.add(n`\n      void main(void) {\n        discardBySlice(vpos);\n        ${c.hasColorTexture?n`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);`:\"\"}\n        outputDepth(depth);\n      }\n    `)),2===c.output&&(u.include(r,{linearDepth:!1}),u.include(e,c),u.include(i,c),u.include(t,c),u.include(s,c),c.hasColorTexture&&u.fragment.uniforms.add(\"tex\",\"sampler2D\"),u.vertex.uniforms.add(\"viewNormal\",\"mat4\"),u.varyings.add(\"vPositionView\",\"vec3\"),p.add(n`\n      void main(void) {\n        vpos = calculateVPos();\n        vpos = subtractOrigin(vpos);\n        ${0===c.normalType?n`\n        vNormalWorld = dpNormalView(vvLocalNormal(normalModel()));`:\"\"}\n        vpos = addVerticalOffset(vpos, localOrigin);\n        gl_Position = transformPosition(proj, view, vpos);\n        forwardTextureCoordinates();\n      }\n    `),u.include(o,c),u.include(d,c),v.add(n`\n      void main() {\n        discardBySlice(vpos);\n        ${c.hasColorTexture?n`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);`:\"\"}\n\n        ${3===c.normalType?n`\n            vec3 normal = screenDerivativeNormal(vPositionView);`:n`\n            vec3 normal = normalize(vNormalWorld);\n            if (gl_FrontFacing == false) normal = -normal;`}\n        gl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);\n      }\n    `)),4===c.output&&(u.include(r,{linearDepth:!1}),u.include(t,c),u.include(s,c),c.hasColorTexture&&u.fragment.uniforms.add(\"tex\",\"sampler2D\"),p.add(n`void main(void) {\nvpos = calculateVPos();\nvpos = subtractOrigin(vpos);\nvpos = addVerticalOffset(vpos, localOrigin);\ngl_Position = transformPosition(proj, view, vpos);\nforwardTextureCoordinates();\n}`),u.include(o,c),u.include(d,c),u.include(l),v.add(n`\n      void main() {\n        discardBySlice(vpos);\n        ${c.hasColorTexture?n`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);`:\"\"}\n        outputHighlight();\n      }\n    `))}export{u as DefaultMaterialAuxiliaryPasses};\n"]},"metadata":{},"sourceType":"module"}