{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport t from \"../../Graphic.js\";\nimport { rasterRendererTypes as r, websceneRasterRendererTypes as i, read as s } from \"../../rasterRenderers.js\";\nimport n from \"../../request.js\";\nimport a from \"../../core/Error.js\";\nimport { strict as o } from \"../../core/jsonMap.js\";\nimport { clone as l } from \"../../core/lang.js\";\nimport u from \"../../core/Logger.js\";\nimport { isNone as p, isSome as c } from \"../../core/maybe.js\";\nimport { when as m } from \"../../core/promiseUtils.js\";\nimport { urlToObject as d } from \"../../core/urlUtils.js\";\nimport { aliasOf as h } from \"../../core/accessorSupport/decorators/aliasOf.js\";\nimport { Integer as f, ensureClass as y, ensureNumber as g } from \"../../core/accessorSupport/ensureType.js\";\nimport \"../../core/has.js\";\nimport { property as R, ensureRange as v } from \"../../core/accessorSupport/decorators/property.js\";\nimport { reader as x } from \"../../core/accessorSupport/decorators/reader.js\";\nimport { subclass as b } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { writer as I } from \"../../core/accessorSupport/decorators/writer.js\";\nimport { opacity as S, url as w } from \"../support/commonProperties.js\";\nimport _ from \"../support/DimensionalDefinition.js\";\nimport { ExportImageServiceParameters as O } from \"../support/ExportImageServiceParameters.js\";\nimport N from \"../support/Field.js\";\nimport P from \"../support/FieldsIndex.js\";\nimport { isSupportedRendererType as F } from \"../support/imageryRendererUtils.js\";\nimport T from \"../support/MosaicRule.js\";\nimport j from \"../support/PixelBlock.js\";\nimport { interpolationKebab as D, noDataInterpretationKebab as C } from \"../support/rasterEnums.js\";\nimport J from \"../support/RasterFunction.js\";\nimport V from \"../support/RasterInfo.js\";\nimport M from \"../support/RasterJobHandler.js\";\nimport { decode as q, getFormat as z } from \"../support/rasterFormats/RasterCodec.js\";\nimport { getSupportedRendererTypes as A, getDefaultBandCombination as E, createDefaultRenderer as U, normalizeRendererJSON as H } from \"../../renderers/support/rasterRendererHelper.js\";\nimport L from \"../../renderers/support/RasterSymbolizer.js\";\nimport { computeHistograms as Q, computeStatisticsHistograms as k, getSamples as B } from \"../../rest/imageService.js\";\nimport G from \"../../rest/support/FeatureSet.js\";\nimport W from \"../../rest/support/ImageHistogramParameters.js\";\nimport X from \"../../rest/support/ImageIdentifyParameters.js\";\nimport Y from \"../../rest/support/ImageSampleParameters.js\";\nimport K from \"../../rest/support/Query.js\";\nimport $ from \"../../tasks/ImageIdentifyTask.js\";\nimport Z from \"../../tasks/QueryTask.js\";\nimport ee from \"../../geometry/Extent.js\";\nimport te from \"../../geometry/SpatialReference.js\";\nimport re from \"../../geometry/Point.js\";\nimport ie from \"../../geometry/Polygon.js\";\nconst se = u.getLogger(\"esri.layers.mixins.ArcGISImageService\"),\n      ne = o()({\n  U1: \"u1\",\n  U2: \"u2\",\n  U4: \"u4\",\n  U8: \"u8\",\n  S8: \"s8\",\n  U16: \"u16\",\n  S16: \"s16\",\n  U32: \"u32\",\n  S32: \"s32\",\n  F32: \"f32\",\n  F64: \"f64\",\n  C64: \"c64\",\n  C128: \"c128\",\n  UNKNOWN: \"unknown\"\n}),\n      ae = new Set([\"png\", \"png8\", \"png24\", \"png32\", \"jpg\", \"bmp\", \"gif\", \"jpgpng\", \"lerc\", \"tiff\"]),\n      oe = v(g, {\n  min: 0,\n  max: 255\n});\n\nfunction le(e) {\n  if (!e) return null;\n  const t = JSON.stringify(e).match(/\"rasterFunction\":\"(.*?\")/gi),\n        r = null == t ? void 0 : t.map(e => e.replace('\"rasterFunction\":\"', \"\").replace('\"', \"\"));\n  return r ? r.join(\"/\") : null;\n}\n\nconst ue = o => {\n  let u = class extends o {\n    constructor() {\n      super(...arguments), this._functionRasterInfos = {}, this._rasterJobHandler = {\n        instance: null,\n        refCount: 0,\n        connectionPromise: null\n      }, this._symbolizer = null, this._defaultServiceMosaicRule = null, this.rasterAttributeTableFieldPrefix = \"Raster.\", this.adjustAspectRatio = null, this.bandCount = null, this.bandIds = void 0, this.capabilities = null, this.compressionQuality = void 0, this.compressionTolerance = .01, this.copyright = null, this.definitionExpression = null, this.exportImageServiceParameters = null, this.rasterInfo = null, this.fields = null, this.fullExtent = null, this.hasMultidimensions = !1, this.imageMaxHeight = 4100, this.imageMaxWidth = 4100, this.interpolation = void 0, this.minScale = 0, this.maxScale = 0, this.multidimensionalInfo = null, this.noData = null, this.noDataInterpretation = void 0, this.objectIdField = null, this.pixelSizeX = null, this.pixelSizeY = null, this.pixelFilter = null, this.raster = void 0, this.viewId = void 0, this.renderer = null, this.rasterAttributeTable = null, this.rasterFunctionInfos = null, this.serviceDataType = null, this.spatialReference = null, this.pixelType = null, this.serviceRasterInfo = null, this.sourceJSON = null, this.url = null, this.version = null;\n    }\n\n    initialize() {\n      this._set(\"exportImageServiceParameters\", new O({\n        layer: this\n      }));\n    }\n\n    readDefaultServiceMosaicRule(e, t) {\n      return T.fromJSON(t);\n    }\n\n    get rasterFunctionNamesIndex() {\n      const e = new Map();\n      return !this.rasterFunctionInfos || this.rasterFunctionInfos.length < 1 || this.rasterFunctionInfos.forEach(t => {\n        e.set(t.name.toLowerCase().replace(/ /gi, \"_\"), t.name);\n      }), e;\n    }\n\n    get queryTask() {\n      return new Z({\n        url: this.url\n      });\n    }\n\n    readBandIds(e, t) {\n      if (Array.isArray(e) && e.length > 0 && e.every(e => \"number\" == typeof e)) return e;\n    }\n\n    readCapabilities(e, t) {\n      return this._readCapabilities(t);\n    }\n\n    writeCompressionQuality(e, t, r) {\n      null != e && \"lerc\" !== this.format && (t[r] = e);\n    }\n\n    writeCompressionTolerance(e, t, r) {\n      \"lerc\" === this.format && null != e && (t[r] = e);\n    }\n\n    get fieldsIndex() {\n      return this.fields ? new P(this.fields) : null;\n    }\n\n    set format(e) {\n      e && ae.has(e.toLowerCase()) && this._set(\"format\", e.toLowerCase());\n    }\n\n    readFormat(e, t) {\n      return \"esriImageServiceDataTypeVector-UV\" === t.serviceDataType || \"esriImageServiceDataTypeVector-MagDir\" === t.serviceDataType || null != this.pixelFilter ? \"lerc\" : \"jpgpng\";\n    }\n\n    readMinScale(e, t) {\n      return null != t.minLOD && null != t.maxLOD ? e : 0;\n    }\n\n    readMaxScale(e, t) {\n      return null != t.minLOD && null != t.maxLOD ? e : 0;\n    }\n\n    set mosaicRule(e) {\n      let t = e;\n      t && t.mosaicMethod && (t = T.fromJSON({ ...t.toJSON(),\n        mosaicMethod: t.mosaicMethod,\n        mosaicOperation: t.mosaicOperation\n      })), this._set(\"mosaicRule\", t);\n    }\n\n    readMosaicRule(e, t) {\n      return T.fromJSON(e || t.mosaicRule || t);\n    }\n\n    writeMosaicRule(e, t, r) {\n      let i = this.mosaicRule;\n      const s = this.definitionExpression;\n      i ? s && s !== i.where && (i = i.clone(), i.where = s) : s && (i = new T({\n        where: s\n      })), this._isValidCustomizedMosaicRule(i) && (t[r] = i.toJSON());\n    }\n\n    writeNoData(e, t, r) {\n      null != e && \"number\" == typeof e && (t[r] = oe(e));\n    }\n\n    readObjectIdField(e, t) {\n      if (!e) {\n        const r = t.fields.filter(e => \"esriFieldTypeOID\" === e.type || \"oid\" === e.type);\n        e = r && r[0] && r[0].name;\n      }\n\n      return e;\n    }\n\n    get parsedUrl() {\n      return this.url ? d(this.url) : null;\n    }\n\n    readRenderer(e, t, r) {\n      var i, n;\n      const a = null == t || null == (i = t.layerDefinition) || null == (n = i.drawingInfo) ? void 0 : n.renderer,\n            o = s(a, r);\n      return null == o ? null : (\"vector-field\" === o.type && t.symbolTileSize && !a.symbolTileSize && (o.symbolTileSize = t.symbolTileSize), F(o) || se.warn(\"ArcGISImageService\", \"Imagery layer doesn't support given renderer type.\"), o);\n    }\n\n    writeRenderer(e, t, r) {\n      t.layerDefinition = t.layerDefinition || {}, t.layerDefinition.drawingInfo = t.layerDefinition.drawingInfo || {}, t.layerDefinition.drawingInfo.renderer = e.toJSON(), \"vector-field\" === e.type && (t.symbolTileSize = e.symbolTileSize);\n    }\n\n    get rasterFields() {\n      const e = this.rasterAttributeTableFieldPrefix || \"Raster.\",\n            t = new N({\n        name: \"Raster.ItemPixelValue\",\n        alias: \"Item Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      }),\n            r = new N({\n        name: \"Raster.ServicePixelValue\",\n        alias: \"Service Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      }),\n            i = new N({\n        name: \"Raster.ServicePixelValue.Raw\",\n        alias: \"Raw Service Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      });\n      let s = this.fields ? l(this.fields) : [];\n      s.push(r), this.capabilities.operations.supportsQuery && this.fields && this.fields.length > 0 && s.push(t), this.version >= 10.4 && this.rasterFunctionInfos && this.rasterFunctionInfos.some(e => \"none\" === e.name.toLowerCase()) && s.push(i), this.rasterFunctionInfos && this.rasterFunctionInfos.filter(e => \"none\" !== e.name.toLowerCase()).forEach(e => {\n        s.push(new N({\n          name: \"Raster.ServicePixelValue.\" + e.name,\n          alias: e.name,\n          domain: null,\n          editable: !1,\n          length: 50,\n          type: \"string\"\n        }));\n      }), null == this.pixelFilter || \"esriImageServiceDataTypeVector-UV\" !== this.serviceDataType && \"esriImageServiceDataTypeVector-MagDir\" !== this.serviceDataType || (s.push(new N({\n        name: \"Raster.Magnitude\",\n        alias: \"Magnitude\",\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      })), s.push(new N({\n        name: \"Raster.Direction\",\n        alias: \"Direction\",\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      })));\n      const n = this.rasterInfo.attributeTable && this.rasterInfo.attributeTable.fields || null;\n\n      if (n && n.length > 0) {\n        const t = n.filter(e => \"esriFieldTypeOID\" !== e.type && \"value\" !== e.name.toLowerCase()).map(t => {\n          const r = l(t);\n          return r.name = e + t.name, r;\n        });\n        s = s.concat(t);\n      }\n\n      return s;\n    }\n\n    set renderingRule(e) {\n      let t = e;\n      t && t.rasterFunction && (t = J.fromJSON({ ...t.toJSON(),\n        rasterFunction: t.rasterFunction,\n        rasterFunctionArguments: t.rasterFunctionArguments\n      })), this._set(\"renderingRule\", t);\n    }\n\n    readRenderingRule(e, t) {\n      const r = t.rasterFunctionInfos;\n      return t.renderingRule || r && r.length && \"None\" !== r[0].name ? J.fromJSON(t.renderingRule || {\n        rasterFunctionInfos: t.rasterFunctionInfos\n      }) : null;\n    }\n\n    writeRenderingRule(e, t, r) {\n      this._isRFTJson(e) || (t[r] = e.toJSON());\n    }\n\n    readSpatialReference(e, t) {\n      const r = e || t.extent.spatialReference;\n      return r ? te.fromJSON(r) : null;\n    }\n\n    readPixelType(e) {\n      return ne.fromJSON(e) || e;\n    }\n\n    writePixelType(e, t, r) {\n      (p(this.serviceRasterInfo) || this.pixelType !== this.serviceRasterInfo.pixelType) && (t[r] = ne.toJSON(e));\n    }\n\n    readVersion(e, t) {\n      let r = t.currentVersion;\n      return r || (r = t.hasOwnProperty(\"fields\") || t.hasOwnProperty(\"timeInfo\") ? 10 : 9.3), r;\n    }\n\n    applyFilter(e) {\n      let t = e;\n      return this.pixelFilter && (t = this._clonePixelData(e), this.pixelFilter(t)), t;\n    }\n\n    async applyRenderer(e, t) {\n      let r = e;\n\n      if (!this._isPicture() && this.renderer && this._symbolizer && !this.pixelFilter) {\n        const i = JSON.stringify(this._cachedRendererJson) !== JSON.stringify(this.renderer.toJSON()),\n              s = this._rasterJobHandler.instance,\n              {\n          bandIds: n\n        } = this;\n\n        if (s) {\n          i && (this._symbolizer.bind(), await s.updateSymbolizer(this._symbolizer, t), this._cachedRendererJson = this.renderer.toJSON());\n          const a = await s.symbolize({\n            bandIds: n,\n            ...e\n          }, t);\n          r = {\n            extent: e.extent,\n            pixelBlock: a\n          };\n        } else r = {\n          extent: e.extent,\n          pixelBlock: this._symbolizer.symbolize({\n            bandIds: n,\n            ...e\n          })\n        };\n      }\n\n      return r;\n    }\n\n    destroy() {\n      this._shutdownJobHandler();\n    }\n\n    increaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount++;\n    }\n\n    decreaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n    }\n\n    async computeHistograms(e, t) {\n      if (await this._fetchCapabilities(null == t ? void 0 : t.signal), !this.capabilities.operations.supportsComputeHistograms) throw new a(\"imagery-layer:compute-histograms\", \"this operation is not supported on the input image service\");\n      e = y(W, e).clone();\n      const {\n        raster: r,\n        mosaicRule: i,\n        renderingRule: s\n      } = this;\n      return s && null == e.renderingRule && (e.renderingRule = s), i && null == e.mosaicRule && (e.mosaicRule = i), r && null == e.raster && (e.raster = r), Q(this.url, e, this._getRequestOptions(t));\n    }\n\n    async computeStatisticsHistograms(e, t) {\n      if (await this._fetchCapabilities(null == t ? void 0 : t.signal), !this.capabilities.operations.supportsComputeStatisticsHistograms) throw new a(\"imagery-layer:compute-statistics-histograms\", \"this operation is not supported on the input image service\");\n      e = y(W, e).clone();\n      const {\n        raster: r,\n        mosaicRule: i,\n        renderingRule: s\n      } = this;\n      return s && null == e.renderingRule && (e.renderingRule = s), i && null == e.mosaicRule && (e.mosaicRule = i), r && null == e.raster && (e.raster = r), k(this.url, e, this._getRequestOptions(t));\n    }\n\n    fetchImage(e, t, r, i = {}) {\n      if (null == e || null == t || null == r) return Promise.reject(new a(\"imagery-layer:fetch-image\", \"Insufficient parameters for requesting an image. A valid extent, width and height values are required.\"));\n      const s = this.renderer || this._symbolizer ? this.generateRasterInfo(this.renderingRule, {\n        signal: i.signal\n      }) : null;\n      return m(s).then(s => {\n        s && (this.rasterInfo = s);\n        const n = {\n          imageServiceParameters: this.getExportImageServiceParameters(e, t, r, i.timeExtent),\n          imageProps: {\n            extent: e,\n            width: t,\n            height: r,\n            format: this.format\n          },\n          requestAsImageElement: i.requestAsImageElement && !this.pixelFilter || !1,\n          signal: i.signal\n        };\n        return this._requestArrayBuffer(n);\n      });\n    }\n\n    fetchKeyProperties(e) {\n      const t = e && e.renderingRule && e.renderingRule.toJSON();\n      return n(this.parsedUrl.path + \"/keyProperties\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.3 && t ? JSON.stringify(t) : null\n        })\n      }).then(e => e.data);\n    }\n\n    fetchRasterAttributeTable(e) {\n      const t = e && e.renderingRule && e.renderingRule.toJSON();\n      return this.version < 10.1 ? Promise.reject(new a(\"#fetchRasterAttributeTable()\", \"Failed to get rasterAttributeTable\")) : n(this.parsedUrl.path + \"/rasterAttributeTable\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.3 && t ? JSON.stringify(t) : null\n        })\n      }).then(e => G.fromJSON(e.data));\n    }\n\n    async getCatalogItemRasterInfo(e, t) {\n      const r = n(this.parsedUrl.path + \"/\" + e + \"/info\", {\n        query: this._getQueryParams(),\n        ...t\n      }).then(e => e.data),\n            i = n(this.parsedUrl.path + \"/\" + e + \"/info/keyProperties\", {\n        query: this._getQueryParams(),\n        ...t\n      }).then(e => e.data).catch(() => {}),\n            s = await Promise.all([r, i]);\n      if (!s[0]) return;\n      const a = ee.fromJSON(s[0].extent),\n            o = s[0].statistics ? s[0].statistics.map(e => ({\n        min: e[0],\n        max: e[1],\n        avg: e[2],\n        stddev: e[3]\n      })) : null;\n      return new V({\n        bandCount: s[0].bandCount,\n        extent: a,\n        spatialReference: a.sr,\n        pixelSize: new re({\n          x: s[0].pixelSizeX,\n          y: s[0].pixelSizeY,\n          spatialReference: a.sr\n        }),\n        pixelType: s[0].pixelType.toLowerCase(),\n        statistics: o,\n        histograms: s[0].histograms,\n        keyProperties: s[1] || {}\n      });\n    }\n\n    async getCatalogItemICSInfo(e, t) {\n      const {\n        data: r\n      } = await n(this.parsedUrl.path + \"/\" + e + \"/info/ics\", {\n        query: this._getQueryParams(),\n        ...t\n      }),\n            i = r && r.ics;\n      if (!i) return;\n      let s = null;\n\n      try {\n        s = (await n(this.parsedUrl.path + \"/\" + e + \"/info\", {\n          query: this._getQueryParams(),\n          ...t\n        })).data.extent;\n      } catch {}\n\n      if (!s || !s.spatialReference) return {\n        ics: i,\n        icsToPixelTransform: null,\n        icsExtent: null,\n        northDirection: null\n      };\n      const a = this.version >= 10.7 ? n(this.parsedUrl.path + \"/\" + e + \"/info/icstopixel\", {\n        query: this._getQueryParams(),\n        ...t\n      }).then(e => e.data).catch(() => ({})) : {},\n            o = s.spatialReference,\n            l = {\n        geometries: JSON.stringify({\n          geometryType: \"esriGeometryEnvelope\",\n          geometries: [s]\n        }),\n        inSR: o.wkid || JSON.stringify(o),\n        outSR: \"0:\" + e\n      },\n            u = n(this.parsedUrl.path + \"/project\", {\n        query: this._getQueryParams(l),\n        ...t\n      }).then(e => e.data).catch(() => ({})),\n            p = 5,\n            c = (s.xmin + s.xmax) / 2,\n            m = (s.ymax - s.ymin) / (p + 1),\n            d = s.ymin + m,\n            h = [];\n\n      for (let n = 0; n < p; n++) h.push({\n        x: c,\n        y: d + m * n\n      });\n\n      const f = {\n        geometries: JSON.stringify({\n          geometryType: \"esriGeometryPoint\",\n          geometries: h\n        }),\n        inSR: o.wkid || JSON.stringify(o),\n        outSR: \"0:\" + e\n      },\n            y = n(this.parsedUrl.path + \"/project\", {\n        query: this._getQueryParams(f),\n        ...t\n      }).then(e => e.data).catch(() => ({})),\n            g = await Promise.all([a, u, y]);\n      let R = g[0].ipxf;\n\n      if (null == R) {\n        var v, x, b;\n        const e = null == (v = i.geodataXform) ? void 0 : v.xf_0;\n        \"topup\" === (null == e || null == (x = e.name) ? void 0 : x.toLowerCase()) && 6 === (null == e || null == (b = e.coefficients) ? void 0 : b.length) && (R = {\n          affine: {\n            name: \"ics [sensor: Frame] to pixel (column, row) transformation\",\n            coefficients: e.coefficients,\n            cellsizeRatio: 0,\n            type: \"GeometricXform\"\n          }\n        });\n      }\n\n      const I = ee.fromJSON(g[1] && g[1].geometries && g[1].geometries[0]);\n      I && (I.spatialReference = new te({\n        wkid: 0,\n        imageCoordinateSystem: i\n      }));\n      const S = g[2].geometries ? g[2].geometries.filter(e => null != e && null != e.x && null != e.y && \"NaN\" !== e.x && \"NaN\" !== e.y) : [],\n            w = S.length;\n      if (w < 3) return {\n        ics: i,\n        icsToPixelTransform: R,\n        icsExtent: I,\n        northDirection: null\n      };\n      let _ = 0,\n          O = 0,\n          N = 0,\n          P = 0;\n\n      for (let n = 0; n < w; n++) _ += S[n].x, O += S[n].y, N += S[n].x * S[n].x, P += S[n].x * S[n].y;\n\n      const F = (w * P - _ * O) / (w * N - _ * _);\n      let T = 0;\n      const j = S[p - 1].x > S[0].x,\n            D = S[p - 1].y > S[0].y;\n      return F === 1 / 0 ? T = D ? 90 : 270 : 0 === F ? T = j ? 0 : 180 : F > 0 ? T = j ? 180 * Math.atan(F) / Math.PI : 180 * Math.atan(F) / Math.PI + 180 : F < 0 && (T = D ? 180 + 180 * Math.atan(F) / Math.PI : 360 + 180 * Math.atan(F) / Math.PI), {\n        ics: i,\n        icsToPixelTransform: R,\n        icsExtent: I,\n        northDirection: T\n      };\n    }\n\n    async generateRasterInfo(e, t) {\n      if ((!e || \"none\" === e.functionName.toLowerCase() || this._isVectorFieldResampleFunction(e)) && c(this.serviceRasterInfo)) return this.serviceRasterInfo;\n      const r = le(e);\n      if (this._functionRasterInfos[r]) return this._functionRasterInfos[r];\n\n      const i = this._generateRasterInfo(e, t);\n\n      this._functionRasterInfos[r] = i;\n\n      try {\n        return await i;\n      } catch {\n        return this._functionRasterInfos[r] = null, null;\n      }\n    }\n\n    getExportImageServiceParameters(e, t, r, i) {\n      const s = (e = e.clone().shiftCentralMeridian()).spatialReference;\n      let n;\n\n      if (s.imageCoordinateSystem) {\n        const {\n          id: e,\n          referenceServiceName: t\n        } = s.imageCoordinateSystem;\n        n = null != e ? t ? this.parsedUrl.path.toLowerCase().indexOf(\"/\" + t.toLowerCase() + \"/\") > -1 ? \"0:\" + e : JSON.stringify({\n          icsid: e,\n          icsns: t\n        }) : \"0:\" + e : JSON.stringify({\n          ics: s.imageCoordinateSystem\n        });\n      } else n = s.wkid || JSON.stringify(s.toJSON());\n\n      c(this.serviceRasterInfo) && this.pixelType !== this.serviceRasterInfo.pixelType && (this.exportImageServiceParameters.pixelType = this.pixelType);\n      const a = this.exportImageServiceParameters.toJSON(),\n            {\n        bandIds: o,\n        noData: l,\n        mosaicRule: u\n      } = a;\n      let {\n        renderingRule: p\n      } = a;\n      if (o instanceof Array && o.length > 0 && !this.renderingRule ? a.bandIds = o.join(\",\") : a.bandIds = void 0, null != o && o.length && this.renderingRule) if (\"Colormap\" === p.rasterFunction) {\n        const e = new J({\n          functionName: \"ExtractBand\",\n          functionArguments: {\n            BandIds: o,\n            raster: p.rasterFunctionArguments.Raster\n          }\n        });\n        p.rasterFunctionArguments.Raster = e;\n      } else {\n        p = new J({\n          functionName: \"ExtractBand\",\n          functionArguments: {\n            BandIds: o,\n            raster: p\n          }\n        });\n      }\n      l instanceof Array && l.length > 0 && (a.noData = l.join(\",\"));\n      const m = this.timeInfo;\n      u && u.multidimensionalDefinition && i && m && m.startField && (u.multidimensionalDefinition = u.multidimensionalDefinition.filter(e => e.dimensionName !== m.startField)), a.mosaicRule = u && JSON.stringify(u), a.renderingRule = p && JSON.stringify(p);\n      const d = {};\n\n      if (i) {\n        const {\n          start: e,\n          end: t\n        } = i.toJSON();\n        e && t && e === t ? d.time = \"\" + e : null == e && null == t || (d.time = `${null == e ? \"null\" : e},${null == t ? \"null\" : t}`);\n      }\n\n      return {\n        bbox: e.xmin + \",\" + e.ymin + \",\" + e.xmax + \",\" + e.ymax,\n        bboxSR: n,\n        imageSR: n,\n        size: t + \",\" + r,\n        ...a,\n        ...d\n      };\n    }\n\n    async getSamples(e, t) {\n      if (await this._fetchCapabilities(null == t ? void 0 : t.signal), !this.capabilities.operations.supportsGetSamples) throw new a(\"imagery-layer:get-samples\", \"getSamples operation is not supported on the input image service\");\n      e = y(Y, e).clone();\n      const {\n        raster: r\n      } = this;\n      return r && null == e.raster && (e.raster = r), B(this.url, e, this._getRequestOptions(t));\n    }\n\n    async identify(e, t) {\n      if (await this._fetchCapabilities(null == t ? void 0 : t.signal), !this.capabilities.operations.supportsIdentify) throw new a(\"imagery-layer:query-rasters\", \"query operation is not supported on the input image service\");\n      e = y(X, e).clone();\n      const {\n        raster: r,\n        mosaicRule: i,\n        renderingRule: s\n      } = this;\n      s && null == e.renderingRule && (e.renderingRule = s), i && null == e.mosaicRule && (e.mosaicRule = i), r && null == e.raster && (e.raster = r);\n      return new $({\n        url: this.url\n      }).execute(e, this._getRequestOptions(t));\n    }\n\n    async queryRasters(e, t) {\n      var r;\n      if (await this._fetchCapabilities(null == (r = t) ? void 0 : r.signal), !this.capabilities.operations.supportsQuery) throw new a(\"imagery-layer:query-rasters\", \"query operation is not supported on the input image service\");\n      return e = y(K, e), t = this._getRequestOptions(t), this.raster && (t.query = { ...t.query,\n        raster: this.raster\n      }), this.queryTask.execute(e, t);\n    }\n\n    queryVisibleRasters(e, t) {\n      if (!e) return Promise.reject(new a(\"imagery-layer: query-visible-rasters\", \"missing query parameter\"));\n      const {\n        pixelSize: r,\n        returnDomainValues: i,\n        returnTopmostRaster: s,\n        showNoDataRecords: n\n      } = t || {\n        pixelSize: null,\n        returnDomainValues: !1,\n        returnTopmostRaster: !1,\n        showNoDataRecords: !1\n      };\n      let o = !1,\n          l = null,\n          u = null;\n      const m = \"raster.servicepixelvalue\",\n            d = this.rasterFunctionNamesIndex;\n\n      if (c(e.outFields) && (o = e.outFields.some(e => -1 === e.toLowerCase().indexOf(m)), this.version >= 10.4)) {\n        const t = e.outFields.filter(e => e.toLowerCase().indexOf(m) > -1 && e.length > m.length).map(e => {\n          const t = e.slice(m.length + 1);\n          return [this._updateRenderingRulesFunctionName(t, d), t];\n        });\n        l = t.map(e => new J({\n          functionName: e[0]\n        })), u = t.map(e => e[1]), 0 === l.length ? this.renderingRule ? (l.push(this.renderingRule), u.push(this.renderingRule.functionName)) : l = null : this.renderingRule && !l.some(e => e.functionName === this.renderingRule.functionName) && (l.push(this.renderingRule), u.push(this.renderingRule.functionName));\n      }\n\n      const h = p(e.outSpatialReference) || e.outSpatialReference.equals(this.spatialReference),\n            f = this._getQueryParams({\n        geometry: e.geometry,\n        timeExtent: e.timeExtent || this.timeExtent,\n        mosaicRule: this.exportImageServiceParameters.mosaicRule,\n        renderingRule: this.version < 10.4 ? this.renderingRule : null,\n        renderingRules: l,\n        pixelSize: r,\n        returnCatalogItems: o,\n        returnGeometry: h,\n        raster: this.raster,\n        maxItemCount: s ? 1 : null\n      });\n\n      delete f.f;\n      const y = new X(f),\n            g = new $({\n        url: this.url\n      }),\n            R = this.generateRasterInfo(this.renderingRule);\n      return new Promise(r => {\n        R.then(() => {\n          g.execute(y, {\n            signal: null == t ? void 0 : t.signal,\n            query: { ...this.customParameters\n            }\n          }).then(t => {\n            const s = e.outFields;\n\n            if (o && !h && t.catalogItems && t.catalogItems.features && t.catalogItems.features.length > 0) {\n              const o = this.objectIdField || \"ObjectId\",\n                    l = t.catalogItems.features,\n                    p = l.map(e => e.attributes && e.attributes[o]),\n                    c = new K({\n                objectIds: p,\n                returnGeometry: !0,\n                outSpatialReference: e.outSpatialReference,\n                outFields: [o]\n              });\n              return this.queryRasters(c).then(a => {\n                a && a.features && a.features.length > 0 && a.features.forEach(t => {\n                  l.forEach(r => {\n                    r.attributes[o] === t.attributes[o] && (r.geometry = new ie(t.geometry), r.geometry.spatialReference = e.outSpatialReference);\n                  });\n                }), r(this._processVisibleRastersResponse(t, {\n                  returnDomainValues: i,\n                  templateRRFunctionNames: u,\n                  showNoDataRecords: n,\n                  templateFields: s\n                }));\n              }).catch(() => {\n                throw new a(\"imagery-layer:query-visible-rasters\", \"encountered error when querying visible rasters geometry\");\n              });\n            }\n\n            r(this._processVisibleRastersResponse(t, {\n              returnDomainValues: i,\n              templateRRFunctionNames: u,\n              showNoDataRecords: n,\n              templateFields: s\n            }));\n          }).catch(() => {\n            throw new a(\"imagery-layer:query-visible-rasters\", \"encountered error when querying visible rasters\");\n          });\n        });\n      });\n    }\n\n    async fetchVariableStatisticsHistograms(e, t) {\n      const r = n(this.parsedUrl.path + \"/statistics\", {\n        query: this._getQueryParams({\n          variable: e\n        }),\n        signal: t\n      }).then(e => {\n        var t;\n        return null == (t = e.data) ? void 0 : t.statistics;\n      }),\n            i = n(this.parsedUrl.path + \"/histograms\", {\n        query: this._getQueryParams({\n          variable: e\n        }),\n        signal: t\n      }).then(e => {\n        var t;\n        return null == (t = e.data) ? void 0 : t.histograms;\n      }),\n            s = await Promise.all([r, i]);\n      return s[0] && s[0].forEach(e => {\n        e.avg = e.mean, e.stddev = e.standardDeviation;\n      }), {\n        statistics: s[0] || null,\n        histograms: s[1] || null\n      };\n    }\n\n    async _fetchService(e) {\n      await this._fetchServiceInfo(e), c(this.serviceRasterInfo) && !this.rasterInfo && (this.rasterInfo = this.serviceRasterInfo);\n      const t = this.sourceJSON,\n            r = c(this.serviceRasterInfo) ? Promise.resolve(this.serviceRasterInfo) : this._fetchAuxiliaryRasterInfo({\n        serviceInfo: t,\n        signal: e\n      }).then(e => (this._set(\"serviceRasterInfo\", e), e)),\n            i = this.renderingRule && \"none\" !== this.renderingRule.functionName.toLowerCase() ? this.generateRasterInfo(this.renderingRule, {\n        signal: e\n      }) : null;\n      return Promise.all([r, i]).then(e => {\n        e[1] ? this._set(\"rasterInfo\", e[1]) : this._set(\"rasterInfo\", e[0]), this.renderer && !this._isSupportedRenderer(this.renderer) && (this.renderer = null, se.warn(\"ArcGISImageService\", \"Switching to the default renderer. Renderer applied is not valid for this Imagery Layer\")), this._configDefaultRenderer(), this.watch(\"renderer\", () => this._configDefaultRenderer()), this.watch(\"renderingRule\", e => {\n          (this.renderer || this._symbolizer || this.popupEnabled && this.popupTemplate) && this.generateRasterInfo(e).then(e => {\n            e && (this.rasterInfo = e);\n          });\n        });\n        const t = c(this.serviceRasterInfo) && this.serviceRasterInfo.multidimensionalInfo;\n        t && this._updateMultidimensionalDefinition(t);\n      });\n    }\n\n    async _initJobHandler() {\n      if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n      const e = new M();\n      this._rasterJobHandler.connectionPromise = e.initialize().then(() => {\n        this._rasterJobHandler.instance = e;\n      }, () => null), await this._rasterJobHandler.connectionPromise;\n    }\n\n    _shutdownJobHandler() {\n      this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0;\n    }\n\n    _isSupportedRenderer(e) {\n      const {\n        rasterInfo: t,\n        renderingRule: r\n      } = this;\n      return \"unique-value\" === e.type && r && \"none\" !== r.functionName.toLowerCase() && 1 === t.bandCount && [\"u8\", \"s8\"].includes(t.pixelType) || A(this.rasterInfo).includes(this.renderer.type);\n    }\n\n    async _fetchCapabilities(e) {\n      return this.capabilities || (await this._fetchServiceInfo(e)), this.capabilities;\n    }\n\n    async _fetchServiceInfo(e) {\n      var t;\n      let r = this.sourceJSON;\n\n      if (!r) {\n        const {\n          data: t,\n          ssl: i\n        } = await n(this.parsedUrl.path, {\n          query: this._getQueryParams(),\n          signal: e\n        });\n        r = t, this.sourceJSON = r, i && (this.url = this.url.replace(/^http:/i, \"https:\"));\n      }\n\n      if ((null == (t = r.capabilities) ? void 0 : t.toLowerCase().split(\",\").map(e => e.trim()).indexOf(\"tilesonly\")) > -1) throw new a(\"imagery-layer:fetch-service-info\", \"use ImageryTileLayer to open tiles-only image services\");\n      this.read(r, {\n        origin: \"service\",\n        url: this.parsedUrl\n      });\n    }\n\n    _isVectorFieldResampleFunction(e) {\n      if (!c(e)) return !1;\n      const {\n        functionName: t,\n        functionArguments: r\n      } = e,\n            i = \"resample\" === t.toLowerCase(),\n            s = (null == r ? void 0 : r.ResampleType) || (null == r ? void 0 : r.resampleType);\n      return i && (7 === s || 10 === s);\n    }\n\n    _isPicture() {\n      return !this.format || this.format.indexOf(\"jpg\") > -1 || this.format.indexOf(\"png\") > -1;\n    }\n\n    _configDefaultRenderer() {\n      if (!this._isPicture() && !this.pixelFilter) {\n        if (!this.bandIds && this.rasterInfo.bandCount >= 3) {\n          const e = E(this.rasterInfo);\n          !e || 3 === this.rasterInfo.bandCount && 0 === e[0] && 1 === e[1] && 2 === e[2] || (this.bandIds = e);\n        }\n\n        var e, t;\n        if (!this.renderer) this.renderer = U(this.rasterInfo, {\n          bandIds: this.bandIds,\n          variableName: this.renderingRule ? null : null == (e = this.mosaicRule) || null == (t = e.multidimensionalDefinition) ? void 0 : t[0].variableName\n        });\n        this._symbolizer ? (this._symbolizer.rendererJSON = H(this.renderer.toJSON()), this._symbolizer.rasterInfo = this.rasterInfo) : this._symbolizer = new L({\n          rendererJSON: this.renderer.toJSON(),\n          rasterInfo: this.rasterInfo\n        }), this._symbolizer.bind() || (this._symbolizer = null);\n      }\n    }\n\n    _clonePixelData(e) {\n      return null == e ? e : {\n        extent: e.extent && e.extent.clone(),\n        pixelBlock: e.pixelBlock && e.pixelBlock.clone()\n      };\n    }\n\n    _getQueryParams(e) {\n      const {\n        raster: t,\n        viewId: r\n      } = this;\n      return {\n        raster: t,\n        viewId: r,\n        f: \"json\",\n        ...e,\n        ...this.customParameters\n      };\n    }\n\n    _getRequestOptions(e) {\n      return { ...e,\n        query: { ...(null == e ? void 0 : e.query),\n          ...this.customParameters\n        }\n      };\n    }\n\n    _decodePixelBlock(e, t, r) {\n      return this._rasterJobHandler.instance ? this._rasterJobHandler.instance.decode({\n        data: e,\n        options: t\n      }) : q(e, t, r);\n    }\n\n    async _fetchMultidimensionalInfo(e) {\n      var t;\n      const r = await n(this.parsedUrl.path + \"/multidimensionalInfo\", {\n        query: this._getQueryParams(),\n        signal: e\n      }).then(e => {\n        var t;\n        return null == (t = e.data) ? void 0 : t.multidimensionalInfo;\n      });\n      return null != (t = r.variables) && t.length && r.variables.forEach(e => {\n        var t;\n        null != (t = e.statistics) && t.length && e.statistics.forEach(e => {\n          e.avg = e.mean, e.stddev = e.standardDeviation;\n        });\n      }), r;\n    }\n\n    _fetchAuxiliaryRasterInfo(e) {\n      const t = e && e.serviceInfo;\n      if (!t) return Promise.reject(new a(\"imagery-layer:fetch-metadata\", \"valid serviceInfo is required\"));\n\n      const r = e.renderingRule ? JSON.stringify(e.renderingRule.toJSON()) : null,\n            i = e.signal,\n            s = !!(t.hasRasterAttributeTable && this.version >= 10.1) && n(this.parsedUrl.path + \"/rasterAttributeTable\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.1 ? r : null\n        }),\n        signal: i\n      }).then(e => G.fromJSON(e.data)).catch(() => null),\n            o = !!(t.hasColormap && this.version >= 10.1) && n(this.parsedUrl.path + \"/colormap\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.6 ? r : null\n        }),\n        signal: i\n      }).then(e => {\n        var t;\n        return null == (t = e.data) ? void 0 : t.colormap;\n      }),\n            l = !!(t.hasHistograms && this.version >= 10.1) && n(this.parsedUrl.path + \"/histograms\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.1 ? r : null\n        }),\n        signal: i\n      }).then(e => {\n        var t;\n        return null == (t = e.data) ? void 0 : t.histograms;\n      }),\n            u = this.version >= 10.3 && n(this.parsedUrl.path + \"/keyProperties\", {\n        query: this._getQueryParams({\n          renderingRule: r\n        }),\n        signal: i\n      }).then(e => e.data).catch(() => {}),\n            p = !!(t.hasMultidimensions && this.version >= 10.3) && this._fetchMultidimensionalInfo();\n\n      return Promise.all([s, o, l, u, p]).then(e => {\n        let r = null;\n\n        if (t.minValues && t.minValues.length === t.bandCount) {\n          r = [];\n\n          for (let e = 0; e < t.minValues.length; e++) r.push({\n            min: t.minValues[e],\n            max: t.maxValues[e],\n            avg: t.meanValues[e],\n            stddev: t.stdvValues[e]\n          });\n        }\n\n        const i = Math.ceil((t.extent.xmax - t.extent.xmin) / t.pixelSizeX - .1),\n              s = Math.ceil((t.extent.ymax - t.extent.ymin) / t.pixelSizeY - .1),\n              n = te.fromJSON(t.spatialReference || t.extent.spatialReference);\n        return new V({\n          width: i,\n          height: s,\n          bandCount: t.bandCount,\n          extent: ee.fromJSON(t.extent),\n          spatialReference: n,\n          pixelSize: new re({\n            x: t.pixelSizeX,\n            y: t.pixelSizeY,\n            spatialReference: n\n          }),\n          pixelType: t.pixelType.toLowerCase(),\n          statistics: r,\n          attributeTable: e[0] || null,\n          colormap: e[1] || null,\n          histograms: e[2] || null,\n          keyProperties: e[3] || {},\n          multidimensionalInfo: e[4] || null\n        });\n      });\n    }\n\n    _requestArrayBuffer(e) {\n      const {\n        imageProps: t,\n        requestAsImageElement: r,\n        signal: i\n      } = e;\n      if (r && !this.pixelFilter && t.format && t.format.indexOf(\"png\") > -1) return n(this.parsedUrl.path + \"/exportImage\", {\n        responseType: \"image\",\n        query: this._getQueryParams({\n          f: \"image\",\n          ...e.imageServiceParameters\n        }),\n        signal: i\n      }).then(e => ({\n        imageElement: e.data,\n        params: t\n      }));\n\n      const s = this._initJobHandler(),\n            o = n(this.parsedUrl.path + \"/exportImage\", {\n        responseType: \"array-buffer\",\n        query: this._getQueryParams({\n          f: \"image\",\n          ...e.imageServiceParameters\n        }),\n        signal: i\n      });\n\n      return Promise.all([o, s]).then(e => {\n        const r = e[0].data,\n              s = t.format || \"jpgpng\";\n        let n = s;\n\n        if (\"bsq\" !== n && \"bip\" !== n && (n = z(r)), !n) {\n          throw new a(\"imagery-layer:fetch-image\", \"unsupported format signature \" + String.fromCharCode.apply(null, new Uint8Array(r)));\n        }\n\n        const o = \"gif\" === s || \"bmp\" === s || s.indexOf(\"png\") > -1 && (\"png\" === n || \"jpg\" === n),\n              l = {\n          signal: i\n        };\n        return o ? q(r, {\n          useCanvas: !0,\n          ...t\n        }, l).then(e => ({\n          pixelData: {\n            pixelBlock: e,\n            extent: t.extent\n          },\n          params: t\n        })) : this._decodePixelBlock(r, {\n          width: t.width,\n          height: t.height,\n          planes: null,\n          pixelType: null,\n          noDataValue: null,\n          format: s\n        }, l).then(e => ({\n          pixelData: {\n            pixelBlock: e,\n            extent: t.extent\n          },\n          params: t\n        }));\n      });\n    }\n\n    async _generateRasterInfo(e, t) {\n      const {\n        data: r\n      } = await n(this.parsedUrl.path, {\n        query: this._getQueryParams({\n          renderingRule: e\n        }),\n        ...t\n      });\n      return await this._fetchAuxiliaryRasterInfo({\n        serviceInfo: r,\n        renderingRule: e,\n        ...t\n      });\n    }\n\n    _isValidCustomizedMosaicRule(e) {\n      return e && JSON.stringify(e.toJSON()) !== JSON.stringify(this._defaultServiceMosaicRule && this._defaultServiceMosaicRule.toJSON());\n    }\n\n    _updateMultidimensionalDefinition(e) {\n      if (this._isValidCustomizedMosaicRule(this.mosaicRule)) return;\n      const t = e.variables[0].dimensions,\n            r = \"\",\n            i = [];\n\n      for (const s in t) if (t.hasOwnProperty(s)) {\n        const e = t[s],\n              n = e.extent;\n        let a = !0,\n            o = [n[0]];\n        e.hasRanges && !0 === e.hasRanges ? (a = !1, o = [e.values[0]]) : \"stdz\" === e.name.toLowerCase() && Math.abs(n[1]) <= Math.abs(n[0]) && (o = [n[1]]), i.push(new _({\n          variableName: r,\n          dimensionName: t[s].name,\n          isSlice: a,\n          values: o\n        }));\n      }\n\n      if (i.length > 0) {\n        this.mosaicRule = this.mosaicRule || new T();\n        const e = this.mosaicRule.multidimensionalDefinition;\n        (!e || e && e.length <= 0) && (this.mosaicRule.multidimensionalDefinition = i);\n      }\n    }\n\n    _formatAttributeValue(e, t) {\n      if (\"string\" == typeof e) {\n        const r = this.popupTemplate && this.popupTemplate.fieldInfos,\n              i = this._getFieldInfo(r, t),\n              s = i && i.format;\n\n        if (s) {\n          let t, r;\n          return e.trim().indexOf(\",\") > -1 ? (t = \",\", r = t + \" \", this._formatDelimitedString(e, t, r, s)) : e.trim().indexOf(\" \") > -1 ? (t = r = \" \", this._formatDelimitedString(e, t, r, s)) : this._formatNumberFromString(e, s);\n        }\n      }\n\n      return e;\n    }\n\n    _getFieldInfo(e, t) {\n      if (!e || !e.length || !t) return;\n      const r = t.toLowerCase();\n      let i;\n      return e.some(e => !(!e.fieldName || e.fieldName.toLowerCase() !== r && e.fieldName.toLowerCase() !== r.replace(/ /g, \"_\")) && (i = e, !0)), i;\n    }\n\n    _formatDelimitedString(e, t, r, i) {\n      return e && t && r && i ? e.trim().split(t).map(e => this._formatNumberFromString(e, i)).join(r) : e;\n    }\n\n    _formatNumberFromString(e, t) {\n      if (!e || !t) return e;\n      const r = Number(e);\n      return isNaN(r) ? e : t.format(r);\n    }\n\n    _processVisibleRastersResponse(e, r) {\n      r = r || {};\n      const i = e.value,\n            {\n        templateRRFunctionNames: s,\n        showNoDataRecords: n,\n        returnDomainValues: a,\n        templateFields: o\n      } = r,\n            l = e.processedValues;\n      let u = e.catalogItems && e.catalogItems.features,\n          p = e.properties && e.properties.Values && e.properties.Values.map(e => e.replace(/ /gi, \", \")) || [];\n      const m = this.objectIdField || \"ObjectId\",\n            d = \"string\" == typeof i && i.toLowerCase().indexOf(\"nodata\") > -1,\n            h = [];\n\n      if (i && !u && !d) {\n        const e = {};\n        e[m] = 0;\n        p = [i], u = [new t(this.fullExtent, null, e)];\n      }\n\n      if (!u) return [];\n      let f, y, g;\n      this._updateResponseFieldNames(u, o), d && !n && (u = []);\n\n      for (let t = 0; t < u.length; t++) {\n        if (f = u[t], null != i && !d) {\n          if (y = p[t], g = this.renderingRule && l && l.length > 0 && s && s.length > 0 && s.indexOf(this.renderingRule.functionName) > -1 ? l[s.indexOf(this.renderingRule.functionName)] : i, \"nodata\" === y.toLowerCase() && !n) continue;\n          const e = \"Raster.ItemPixelValue\",\n                r = \"Raster.ServicePixelValue\";\n          f.attributes[e] = this._formatAttributeValue(y, e), f.attributes[r] = this._formatAttributeValue(g, r), this._updateFeatureWithMagDirValues(f, y);\n          const a = this.fields && this.fields.length > 0;\n          let o = this.renderingRule && c(this.serviceRasterInfo) && this.serviceRasterInfo.attributeTable ? a ? y : i : g;\n          this.renderingRule || (o = a ? y : i), this._updateFeatureWithRasterAttributeTableValues(f, o);\n        }\n\n        if (f.sourceLayer = this, a && this._updateFeatureWithDomainValues(f), s && l && s.length === l.length) for (let e = 0; e < s.length; e++) {\n          const t = \"Raster.ServicePixelValue.\" + s[e];\n          f.attributes[t] = this._formatAttributeValue(l[e], t);\n        }\n        h.push(u[t]);\n      }\n\n      return h;\n    }\n\n    _updateFeatureWithRasterAttributeTableValues(e, t) {\n      const r = this.rasterInfo && this.rasterInfo.attributeTable || c(this.serviceRasterInfo) && this.serviceRasterInfo.attributeTable,\n            i = r && r.features;\n      if (!i) return;\n      const s = r.fields,\n            n = s.map(e => e.name).filter(e => \"value\" === e.toLowerCase()),\n            a = n && n[0];\n      if (!a) return;\n      const o = i.filter(e => e.attributes[a] === (null != t ? parseInt(t, 10) : null));\n      o && o[0] && s.forEach(t => {\n        const r = this.rasterAttributeTableFieldPrefix + t.name;\n        e.attributes[r] = this._formatAttributeValue(o[0].attributes[t.name], r);\n      });\n    }\n\n    _updateFeatureWithMagDirValues(e, t) {\n      if (!this.pixelFilter || \"esriImageServiceDataTypeVector-UV\" !== this.serviceDataType && \"esriImageServiceDataTypeVector-MagDir\" !== this.serviceDataType) return;\n      const r = t.replace(\" \", \",\").split(\",\").map(e => parseFloat(e)),\n            i = r.map(e => [e]),\n            s = r.map(e => ({\n        minValue: e,\n        maxValue: e,\n        noDataValue: null\n      })),\n            n = new j({\n        height: 1,\n        width: 1,\n        pixelType: \"f32\",\n        pixels: i,\n        statistics: s\n      });\n      this.pixelFilter({\n        pixelBlock: n,\n        extent: new ee(0, 0, 0, 0, this.spatialReference)\n      }), e.attributes[\"Raster.Magnitude\"] = n.pixels[0][0], e.attributes[\"Raster.Direction\"] = n.pixels[1][0];\n    }\n\n    _updateFeatureWithDomainValues(e) {\n      const t = this.fields && this.fields.filter(e => e.domain && \"coded-value\" === e.domain.type);\n      null != t && t.forEach(t => {\n        const r = e.attributes[t.name];\n\n        if (null != r) {\n          const i = t.domain.codedValues.filter(e => e.code === r)[0];\n          i && (e.attributes[t.name] = i.name);\n        }\n      });\n    }\n\n    _updateResponseFieldNames(e, t) {\n      if (!t || t.length < 1) return;\n      const r = this.fieldsIndex;\n      r && e.forEach(e => {\n        if (e && e.attributes) for (const i of t) if (r.has(i)) {\n          const t = r.get(i).name;\n          t !== i && (e.attributes[i] = e.attributes[t], delete e.attributes[t]);\n        }\n      });\n    }\n\n    _updateRenderingRulesFunctionName(e, t) {\n      if (!e || e.length < 1) return;\n      if (\"Raw\" === e) return e.replace(\"Raw\", \"None\");\n      const r = e.toLowerCase().replace(/ /gi, \"_\");\n      return t.has(r) ? t.get(r) : e;\n    }\n\n    _isRFTJson(e) {\n      return e.name && e.arguments && e.function && e.hasOwnProperty(\"functionType\");\n    }\n\n    _readCapabilities(e) {\n      const t = e.capabilities ? e.capabilities.toLowerCase().split(\",\").map(e => e.trim()) : [\"image\", \"catalog\"],\n            {\n        currentVersion: r,\n        advancedQueryCapabilities: i,\n        maxRecordCount: s\n      } = e,\n            n = t.indexOf(\"image\") > -1,\n            a = \"esriImageServiceDataTypeElevation\" === e.serviceDataType,\n            o = !!(e.spatialReference || e.extent && e.extent.spatialReference);\n      return {\n        operations: {\n          supportsComputeHistograms: n,\n          supportsExportImage: n,\n          supportsIdentify: n,\n          supportsMeasure: t.indexOf(\"mensuration\") > -1 && o,\n          supportsDownload: t.indexOf(\"download\") > -1,\n          supportsQuery: t.indexOf(\"catalog\") > -1 && e.fields && e.fields.length > 0,\n          supportsGetSamples: r >= 10.2 && n,\n          supportsProject: r >= 10.3 && n,\n          supportsComputeStatisticsHistograms: r >= 10.4 && n,\n          supportsQueryBoundary: r >= 10.6 && n,\n          supportsCalculateVolume: r >= 10.7 && a,\n          supportsComputePixelLocation: r >= 10.7 && t.indexOf(\"catalog\") > -1\n        },\n        query: {\n          supportsStatistics: !(!i || !i.supportsStatistics),\n          supportsOrderBy: !(!i || !i.supportsOrderBy),\n          supportsDistinct: !(!i || !i.supportsDistinct),\n          supportsPagination: !(!i || !i.supportsPagination),\n          supportsStandardizedQueriesOnly: !(!i || !i.useStandardizedQueries),\n          maxRecordCount: s\n        }\n      };\n    }\n\n  };\n  return e([R()], u.prototype, \"_functionRasterInfos\", void 0), e([R()], u.prototype, \"_rasterJobHandler\", void 0), e([R()], u.prototype, \"_symbolizer\", void 0), e([R()], u.prototype, \"_defaultServiceMosaicRule\", void 0), e([x(\"_defaultServiceMosaicRule\", [\"defaultMosaicMethod\"])], u.prototype, \"readDefaultServiceMosaicRule\", null), e([R()], u.prototype, \"_cachedRendererJson\", void 0), e([R()], u.prototype, \"rasterAttributeTableFieldPrefix\", void 0), e([R({\n    readOnly: !0\n  })], u.prototype, \"rasterFunctionNamesIndex\", null), e([R({\n    readOnly: !0\n  })], u.prototype, \"queryTask\", null), e([R()], u.prototype, \"adjustAspectRatio\", void 0), e([R({\n    readOnly: !0\n  }), h(\"serviceRasterInfo.bandCount\")], u.prototype, \"bandCount\", void 0), e([R({\n    type: [f],\n    json: {\n      write: !0\n    }\n  })], u.prototype, \"bandIds\", void 0), e([x(\"bandIds\")], u.prototype, \"readBandIds\", null), e([R({\n    readOnly: !0,\n    json: {\n      read: !1\n    }\n  })], u.prototype, \"capabilities\", void 0), e([x(\"service\", \"capabilities\", [\"capabilities\", \"currentVersion\", \"serviceDataType\"])], u.prototype, \"readCapabilities\", null), e([R({\n    type: Number\n  })], u.prototype, \"compressionQuality\", void 0), e([I(\"compressionQuality\")], u.prototype, \"writeCompressionQuality\", null), e([R({\n    type: Number\n  })], u.prototype, \"compressionTolerance\", void 0), e([I(\"compressionTolerance\")], u.prototype, \"writeCompressionTolerance\", null), e([R({\n    json: {\n      read: {\n        source: \"copyrightText\"\n      }\n    }\n  })], u.prototype, \"copyright\", void 0), e([R({\n    type: String,\n    json: {\n      name: \"layerDefinition.definitionExpression\",\n      write: {\n        enabled: !0,\n        allowNull: !0\n      }\n    }\n  })], u.prototype, \"definitionExpression\", void 0), e([R({\n    readOnly: !0,\n    constructOnly: !0\n  })], u.prototype, \"exportImageServiceParameters\", void 0), e([R()], u.prototype, \"rasterInfo\", void 0), e([R({\n    readOnly: !0,\n    type: [N]\n  })], u.prototype, \"fields\", void 0), e([R({\n    readOnly: !0\n  })], u.prototype, \"fieldsIndex\", null), e([R({\n    type: [\"png\", \"png8\", \"png24\", \"png32\", \"jpg\", \"bmp\", \"gif\", \"jpgpng\", \"lerc\", \"tiff\"],\n    json: {\n      write: !0\n    }\n  })], u.prototype, \"format\", null), e([x(\"service\", \"format\", [\"serviceDataType\"])], u.prototype, \"readFormat\", null), e([R({\n    type: ee\n  })], u.prototype, \"fullExtent\", void 0), e([R({\n    readOnly: !0\n  })], u.prototype, \"hasMultidimensions\", void 0), e([R({\n    json: {\n      read: {\n        source: \"maxImageHeight\"\n      }\n    }\n  })], u.prototype, \"imageMaxHeight\", void 0), e([R({\n    json: {\n      read: {\n        source: \"maxImageWidth\"\n      }\n    }\n  })], u.prototype, \"imageMaxWidth\", void 0), e([R({\n    type: String,\n    json: {\n      type: D.jsonValues,\n      read: D.read,\n      write: D.write\n    }\n  })], u.prototype, \"interpolation\", void 0), e([R()], u.prototype, \"minScale\", void 0), e([x(\"service\", \"minScale\")], u.prototype, \"readMinScale\", null), e([R()], u.prototype, \"maxScale\", void 0), e([x(\"service\", \"maxScale\")], u.prototype, \"readMaxScale\", null), e([R({\n    type: T\n  })], u.prototype, \"mosaicRule\", null), e([x(\"mosaicRule\", [\"mosaicRule\", \"defaultMosaicMethod\"])], u.prototype, \"readMosaicRule\", null), e([I(\"mosaicRule\")], u.prototype, \"writeMosaicRule\", null), e([R({\n    readOnly: !0\n  }), h(\"serviceRasterInfo.multidimensionalInfo\")], u.prototype, \"multidimensionalInfo\", void 0), e([R({\n    json: {\n      type: f\n    }\n  })], u.prototype, \"noData\", void 0), e([I(\"noData\")], u.prototype, \"writeNoData\", null), e([R({\n    type: String,\n    json: {\n      type: C.jsonValues,\n      read: C.read,\n      write: C.write\n    }\n  })], u.prototype, \"noDataInterpretation\", void 0), e([R({\n    type: String,\n    readOnly: !0,\n    json: {\n      read: {\n        source: [\"fields\"]\n      }\n    }\n  })], u.prototype, \"objectIdField\", void 0), e([x(\"objectIdField\")], u.prototype, \"readObjectIdField\", null), e([R({\n    readOnly: !0\n  })], u.prototype, \"parsedUrl\", null), e([R({\n    readOnly: !0\n  }), h(\"serviceRasterInfo.pixelSize.x\")], u.prototype, \"pixelSizeX\", void 0), e([R({\n    readOnly: !0\n  }), h(\"serviceRasterInfo.pixelSize.y\")], u.prototype, \"pixelSizeY\", void 0), e([R({\n    type: Function\n  })], u.prototype, \"pixelFilter\", void 0), e([R()], u.prototype, \"raster\", void 0), e([R()], u.prototype, \"viewId\", void 0), e([R({\n    types: r,\n    json: {\n      name: \"layerDefinition.drawingInfo.renderer\",\n      origins: {\n        \"web-scene\": {\n          types: i,\n          name: \"layerDefinition.drawingInfo.renderer\",\n          write: {\n            overridePolicy: e => ({\n              enabled: e && \"vector-field\" !== e.type\n            })\n          }\n        }\n      }\n    }\n  })], u.prototype, \"renderer\", void 0), e([x(\"renderer\")], u.prototype, \"readRenderer\", null), e([I(\"renderer\")], u.prototype, \"writeRenderer\", null), e([R(S)], u.prototype, \"opacity\", void 0), e([R({\n    readOnly: !0\n  }), h(\"serviceRasterInfo.attributeTable\")], u.prototype, \"rasterAttributeTable\", void 0), e([R({\n    readOnly: !0\n  })], u.prototype, \"rasterFields\", null), e([R({\n    readOnly: !0\n  })], u.prototype, \"rasterFunctionInfos\", void 0), e([R({\n    type: J\n  })], u.prototype, \"renderingRule\", null), e([x(\"renderingRule\", [\"renderingRule\", \"rasterFunctionInfos\"])], u.prototype, \"readRenderingRule\", null), e([I(\"renderingRule\")], u.prototype, \"writeRenderingRule\", null), e([R()], u.prototype, \"serviceDataType\", void 0), e([R({\n    readOnly: !0,\n    type: te\n  })], u.prototype, \"spatialReference\", void 0), e([x(\"spatialReference\", [\"spatialReference\", \"extent\"])], u.prototype, \"readSpatialReference\", null), e([R({\n    json: {\n      type: ne.jsonValues\n    }\n  })], u.prototype, \"pixelType\", void 0), e([x(\"pixelType\")], u.prototype, \"readPixelType\", null), e([I(\"pixelType\")], u.prototype, \"writePixelType\", null), e([R({\n    constructOnly: !0,\n    type: V\n  })], u.prototype, \"serviceRasterInfo\", void 0), e([R()], u.prototype, \"sourceJSON\", void 0), e([R(w)], u.prototype, \"url\", void 0), e([R({\n    readOnly: !0\n  })], u.prototype, \"version\", void 0), e([x(\"version\", [\"currentVersion\", \"fields\", \"timeInfo\"])], u.prototype, \"readVersion\", null), u = e([b(\"esri.layers.mixins.ArcGISImageService\")], u), u;\n};\n\nexport { ue as ArcGISImageService };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/layers/mixins/ArcGISImageService.js"],"names":["_","e","t","rasterRendererTypes","r","websceneRasterRendererTypes","i","read","s","n","a","strict","o","clone","l","u","isNone","p","isSome","c","when","m","urlToObject","d","aliasOf","h","Integer","f","ensureClass","y","ensureNumber","g","property","R","ensureRange","v","reader","x","subclass","b","writer","I","opacity","S","url","w","ExportImageServiceParameters","O","N","P","isSupportedRendererType","F","T","j","interpolationKebab","D","noDataInterpretationKebab","C","J","V","M","decode","q","getFormat","z","getSupportedRendererTypes","A","getDefaultBandCombination","E","createDefaultRenderer","U","normalizeRendererJSON","H","L","computeHistograms","Q","computeStatisticsHistograms","k","getSamples","B","G","W","X","Y","K","$","Z","ee","te","re","ie","se","getLogger","ne","U1","U2","U4","U8","S8","U16","S16","U32","S32","F32","F64","C64","C128","UNKNOWN","ae","Set","oe","min","max","le","JSON","stringify","match","map","replace","join","ue","constructor","arguments","_functionRasterInfos","_rasterJobHandler","instance","refCount","connectionPromise","_symbolizer","_defaultServiceMosaicRule","rasterAttributeTableFieldPrefix","adjustAspectRatio","bandCount","bandIds","capabilities","compressionQuality","compressionTolerance","copyright","definitionExpression","exportImageServiceParameters","rasterInfo","fields","fullExtent","hasMultidimensions","imageMaxHeight","imageMaxWidth","interpolation","minScale","maxScale","multidimensionalInfo","noData","noDataInterpretation","objectIdField","pixelSizeX","pixelSizeY","pixelFilter","raster","viewId","renderer","rasterAttributeTable","rasterFunctionInfos","serviceDataType","spatialReference","pixelType","serviceRasterInfo","sourceJSON","version","initialize","_set","layer","readDefaultServiceMosaicRule","fromJSON","rasterFunctionNamesIndex","Map","length","forEach","set","name","toLowerCase","queryTask","readBandIds","Array","isArray","every","readCapabilities","_readCapabilities","writeCompressionQuality","format","writeCompressionTolerance","fieldsIndex","has","readFormat","readMinScale","minLOD","maxLOD","readMaxScale","mosaicRule","mosaicMethod","toJSON","mosaicOperation","readMosaicRule","writeMosaicRule","where","_isValidCustomizedMosaicRule","writeNoData","readObjectIdField","filter","type","parsedUrl","readRenderer","layerDefinition","drawingInfo","symbolTileSize","warn","writeRenderer","rasterFields","alias","domain","editable","push","operations","supportsQuery","some","attributeTable","concat","renderingRule","rasterFunction","rasterFunctionArguments","readRenderingRule","writeRenderingRule","_isRFTJson","readSpatialReference","extent","readPixelType","writePixelType","readVersion","currentVersion","hasOwnProperty","applyFilter","_clonePixelData","applyRenderer","_isPicture","_cachedRendererJson","bind","updateSymbolizer","symbolize","pixelBlock","destroy","_shutdownJobHandler","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_fetchCapabilities","signal","supportsComputeHistograms","_getRequestOptions","supportsComputeStatisticsHistograms","fetchImage","Promise","reject","generateRasterInfo","then","imageServiceParameters","getExportImageServiceParameters","timeExtent","imageProps","width","height","requestAsImageElement","_requestArrayBuffer","fetchKeyProperties","path","query","_getQueryParams","data","fetchRasterAttributeTable","getCatalogItemRasterInfo","catch","all","statistics","avg","stddev","sr","pixelSize","histograms","keyProperties","getCatalogItemICSInfo","ics","icsToPixelTransform","icsExtent","northDirection","geometries","geometryType","inSR","wkid","outSR","xmin","xmax","ymax","ymin","ipxf","geodataXform","xf_0","coefficients","affine","cellsizeRatio","imageCoordinateSystem","Math","atan","PI","functionName","_isVectorFieldResampleFunction","_generateRasterInfo","shiftCentralMeridian","id","referenceServiceName","indexOf","icsid","icsns","functionArguments","BandIds","Raster","timeInfo","multidimensionalDefinition","startField","dimensionName","start","end","time","bbox","bboxSR","imageSR","size","supportsGetSamples","identify","supportsIdentify","execute","queryRasters","queryVisibleRasters","returnDomainValues","returnTopmostRaster","showNoDataRecords","outFields","slice","_updateRenderingRulesFunctionName","outSpatialReference","equals","geometry","renderingRules","returnCatalogItems","returnGeometry","maxItemCount","customParameters","catalogItems","features","attributes","objectIds","_processVisibleRastersResponse","templateRRFunctionNames","templateFields","fetchVariableStatisticsHistograms","variable","mean","standardDeviation","_fetchService","_fetchServiceInfo","resolve","_fetchAuxiliaryRasterInfo","serviceInfo","_isSupportedRenderer","_configDefaultRenderer","watch","popupEnabled","popupTemplate","_updateMultidimensionalDefinition","_initJobHandler","includes","ssl","split","trim","origin","ResampleType","resampleType","variableName","rendererJSON","_decodePixelBlock","options","_fetchMultidimensionalInfo","variables","hasRasterAttributeTable","hasColormap","colormap","hasHistograms","minValues","maxValues","meanValues","stdvValues","ceil","responseType","imageElement","params","String","fromCharCode","apply","Uint8Array","useCanvas","pixelData","planes","noDataValue","dimensions","hasRanges","values","abs","isSlice","_formatAttributeValue","fieldInfos","_getFieldInfo","_formatDelimitedString","_formatNumberFromString","fieldName","Number","isNaN","value","processedValues","properties","Values","_updateResponseFieldNames","_updateFeatureWithMagDirValues","_updateFeatureWithRasterAttributeTableValues","sourceLayer","_updateFeatureWithDomainValues","parseInt","parseFloat","minValue","maxValue","pixels","codedValues","code","get","function","advancedQueryCapabilities","maxRecordCount","supportsExportImage","supportsMeasure","supportsDownload","supportsProject","supportsQueryBoundary","supportsCalculateVolume","supportsComputePixelLocation","supportsStatistics","supportsOrderBy","supportsDistinct","supportsPagination","supportsStandardizedQueriesOnly","useStandardizedQueries","prototype","readOnly","json","write","source","enabled","allowNull","constructOnly","jsonValues","Function","types","origins","overridePolicy","ArcGISImageService"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import t from\"../../Graphic.js\";import{rasterRendererTypes as r,websceneRasterRendererTypes as i,read as s}from\"../../rasterRenderers.js\";import n from\"../../request.js\";import a from\"../../core/Error.js\";import{strict as o}from\"../../core/jsonMap.js\";import{clone as l}from\"../../core/lang.js\";import u from\"../../core/Logger.js\";import{isNone as p,isSome as c}from\"../../core/maybe.js\";import{when as m}from\"../../core/promiseUtils.js\";import{urlToObject as d}from\"../../core/urlUtils.js\";import{aliasOf as h}from\"../../core/accessorSupport/decorators/aliasOf.js\";import{Integer as f,ensureClass as y,ensureNumber as g}from\"../../core/accessorSupport/ensureType.js\";import\"../../core/has.js\";import{property as R,ensureRange as v}from\"../../core/accessorSupport/decorators/property.js\";import{reader as x}from\"../../core/accessorSupport/decorators/reader.js\";import{subclass as b}from\"../../core/accessorSupport/decorators/subclass.js\";import{writer as I}from\"../../core/accessorSupport/decorators/writer.js\";import{opacity as S,url as w}from\"../support/commonProperties.js\";import _ from\"../support/DimensionalDefinition.js\";import{ExportImageServiceParameters as O}from\"../support/ExportImageServiceParameters.js\";import N from\"../support/Field.js\";import P from\"../support/FieldsIndex.js\";import{isSupportedRendererType as F}from\"../support/imageryRendererUtils.js\";import T from\"../support/MosaicRule.js\";import j from\"../support/PixelBlock.js\";import{interpolationKebab as D,noDataInterpretationKebab as C}from\"../support/rasterEnums.js\";import J from\"../support/RasterFunction.js\";import V from\"../support/RasterInfo.js\";import M from\"../support/RasterJobHandler.js\";import{decode as q,getFormat as z}from\"../support/rasterFormats/RasterCodec.js\";import{getSupportedRendererTypes as A,getDefaultBandCombination as E,createDefaultRenderer as U,normalizeRendererJSON as H}from\"../../renderers/support/rasterRendererHelper.js\";import L from\"../../renderers/support/RasterSymbolizer.js\";import{computeHistograms as Q,computeStatisticsHistograms as k,getSamples as B}from\"../../rest/imageService.js\";import G from\"../../rest/support/FeatureSet.js\";import W from\"../../rest/support/ImageHistogramParameters.js\";import X from\"../../rest/support/ImageIdentifyParameters.js\";import Y from\"../../rest/support/ImageSampleParameters.js\";import K from\"../../rest/support/Query.js\";import $ from\"../../tasks/ImageIdentifyTask.js\";import Z from\"../../tasks/QueryTask.js\";import ee from\"../../geometry/Extent.js\";import te from\"../../geometry/SpatialReference.js\";import re from\"../../geometry/Point.js\";import ie from\"../../geometry/Polygon.js\";const se=u.getLogger(\"esri.layers.mixins.ArcGISImageService\"),ne=o()({U1:\"u1\",U2:\"u2\",U4:\"u4\",U8:\"u8\",S8:\"s8\",U16:\"u16\",S16:\"s16\",U32:\"u32\",S32:\"s32\",F32:\"f32\",F64:\"f64\",C64:\"c64\",C128:\"c128\",UNKNOWN:\"unknown\"}),ae=new Set([\"png\",\"png8\",\"png24\",\"png32\",\"jpg\",\"bmp\",\"gif\",\"jpgpng\",\"lerc\",\"tiff\"]),oe=v(g,{min:0,max:255});function le(e){if(!e)return null;const t=JSON.stringify(e).match(/\"rasterFunction\":\"(.*?\")/gi),r=null==t?void 0:t.map((e=>e.replace('\"rasterFunction\":\"',\"\").replace('\"',\"\")));return r?r.join(\"/\"):null}const ue=o=>{let u=class extends o{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix=\"Raster.\",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set(\"exportImageServiceParameters\",new O({layer:this}))}readDefaultServiceMosaicRule(e,t){return T.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,\"_\"),t.name)})),e}get queryTask(){return new Z({url:this.url})}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>\"number\"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&\"lerc\"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){\"lerc\"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new P(this.fields):null}set format(e){e&&ae.has(e.toLowerCase())&&this._set(\"format\",e.toLowerCase())}readFormat(e,t){return\"esriImageServiceDataTypeVector-UV\"===t.serviceDataType||\"esriImageServiceDataTypeVector-MagDir\"===t.serviceDataType||null!=this.pixelFilter?\"lerc\":\"jpgpng\"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=T.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set(\"mosaicRule\",t)}readMosaicRule(e,t){return T.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new T({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&\"number\"==typeof e&&(t[r]=oe(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>\"esriFieldTypeOID\"===e.type||\"oid\"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?d(this.url):null}readRenderer(e,t,r){var i,n;const a=null==t||null==(i=t.layerDefinition)||null==(n=i.drawingInfo)?void 0:n.renderer,o=s(a,r);return null==o?null:(\"vector-field\"===o.type&&t.symbolTileSize&&!a.symbolTileSize&&(o.symbolTileSize=t.symbolTileSize),F(o)||se.warn(\"ArcGISImageService\",\"Imagery layer doesn't support given renderer type.\"),o)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),\"vector-field\"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||\"Raster.\",t=new N({name:\"Raster.ItemPixelValue\",alias:\"Item Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"}),r=new N({name:\"Raster.ServicePixelValue\",alias:\"Service Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"}),i=new N({name:\"Raster.ServicePixelValue.Raw\",alias:\"Raw Service Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"});let s=this.fields?l(this.fields):[];s.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&s.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>\"none\"===e.name.toLowerCase()))&&s.push(i),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>\"none\"!==e.name.toLowerCase())).forEach((e=>{s.push(new N({name:\"Raster.ServicePixelValue.\"+e.name,alias:e.name,domain:null,editable:!1,length:50,type:\"string\"}))})),null==this.pixelFilter||\"esriImageServiceDataTypeVector-UV\"!==this.serviceDataType&&\"esriImageServiceDataTypeVector-MagDir\"!==this.serviceDataType||(s.push(new N({name:\"Raster.Magnitude\",alias:\"Magnitude\",domain:null,editable:!1,type:\"double\"})),s.push(new N({name:\"Raster.Direction\",alias:\"Direction\",domain:null,editable:!1,type:\"double\"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter((e=>\"esriFieldTypeOID\"!==e.type&&\"value\"!==e.name.toLowerCase())).map((t=>{const r=l(t);return r.name=e+t.name,r}));s=s.concat(t)}return s}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=J.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set(\"renderingRule\",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&\"None\"!==r[0].name?J.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?te.fromJSON(r):null}readPixelType(e){return ne.fromJSON(e)||e}writePixelType(e,t,r){(p(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=ne.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty(\"fields\")||t.hasOwnProperty(\"timeInfo\")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),s=this._rasterJobHandler.instance,{bandIds:n}=this;if(s){i&&(this._symbolizer.bind(),await s.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const a=await s.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:a}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:n,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new a(\"imagery-layer:compute-histograms\",\"this operation is not supported on the input image service\");e=y(W,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),Q(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new a(\"imagery-layer:compute-statistics-histograms\",\"this operation is not supported on the input image service\");e=y(W,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),k(this.url,e,this._getRequestOptions(t))}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new a(\"imagery-layer:fetch-image\",\"Insufficient parameters for requesting an image. A valid extent, width and height values are required.\"));const s=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return m(s).then((s=>{s&&(this.rasterInfo=s);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)}))}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return n(this.parsedUrl.path+\"/keyProperties\",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>e.data))}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new a(\"#fetchRasterAttributeTable()\",\"Failed to get rasterAttributeTable\")):n(this.parsedUrl.path+\"/rasterAttributeTable\",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>G.fromJSON(e.data)))}async getCatalogItemRasterInfo(e,t){const r=n(this.parsedUrl.path+\"/\"+e+\"/info\",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=n(this.parsedUrl.path+\"/\"+e+\"/info/keyProperties\",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),s=await Promise.all([r,i]);if(!s[0])return;const a=ee.fromJSON(s[0].extent),o=s[0].statistics?s[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new V({bandCount:s[0].bandCount,extent:a,spatialReference:a.sr,pixelSize:new re({x:s[0].pixelSizeX,y:s[0].pixelSizeY,spatialReference:a.sr}),pixelType:s[0].pixelType.toLowerCase(),statistics:o,histograms:s[0].histograms,keyProperties:s[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await n(this.parsedUrl.path+\"/\"+e+\"/info/ics\",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let s=null;try{s=(await n(this.parsedUrl.path+\"/\"+e+\"/info\",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!s||!s.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const a=this.version>=10.7?n(this.parsedUrl.path+\"/\"+e+\"/info/icstopixel\",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},o=s.spatialReference,l={geometries:JSON.stringify({geometryType:\"esriGeometryEnvelope\",geometries:[s]}),inSR:o.wkid||JSON.stringify(o),outSR:\"0:\"+e},u=n(this.parsedUrl.path+\"/project\",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=5,c=(s.xmin+s.xmax)/2,m=(s.ymax-s.ymin)/(p+1),d=s.ymin+m,h=[];for(let n=0;n<p;n++)h.push({x:c,y:d+m*n});const f={geometries:JSON.stringify({geometryType:\"esriGeometryPoint\",geometries:h}),inSR:o.wkid||JSON.stringify(o),outSR:\"0:\"+e},y=n(this.parsedUrl.path+\"/project\",{query:this._getQueryParams(f),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([a,u,y]);let R=g[0].ipxf;if(null==R){var v,x,b;const e=null==(v=i.geodataXform)?void 0:v.xf_0;\"topup\"===(null==e||null==(x=e.name)?void 0:x.toLowerCase())&&6===(null==e||null==(b=e.coefficients)?void 0:b.length)&&(R={affine:{name:\"ics [sensor: Frame] to pixel (column, row) transformation\",coefficients:e.coefficients,cellsizeRatio:0,type:\"GeometricXform\"}})}const I=ee.fromJSON(g[1]&&g[1].geometries&&g[1].geometries[0]);I&&(I.spatialReference=new te({wkid:0,imageCoordinateSystem:i}));const S=g[2].geometries?g[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&\"NaN\"!==e.x&&\"NaN\"!==e.y)):[],w=S.length;if(w<3)return{ics:i,icsToPixelTransform:R,icsExtent:I,northDirection:null};let _=0,O=0,N=0,P=0;for(let n=0;n<w;n++)_+=S[n].x,O+=S[n].y,N+=S[n].x*S[n].x,P+=S[n].x*S[n].y;const F=(w*P-_*O)/(w*N-_*_);let T=0;const j=S[p-1].x>S[0].x,D=S[p-1].y>S[0].y;return F===1/0?T=D?90:270:0===F?T=j?0:180:F>0?T=j?180*Math.atan(F)/Math.PI:180*Math.atan(F)/Math.PI+180:F<0&&(T=D?180+180*Math.atan(F)/Math.PI:360+180*Math.atan(F)/Math.PI),{ics:i,icsToPixelTransform:R,icsExtent:I,northDirection:T}}async generateRasterInfo(e,t){if((!e||\"none\"===e.functionName.toLowerCase()||this._isVectorFieldResampleFunction(e))&&c(this.serviceRasterInfo))return this.serviceRasterInfo;const r=le(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const s=(e=e.clone().shiftCentralMeridian()).spatialReference;let n;if(s.imageCoordinateSystem){const{id:e,referenceServiceName:t}=s.imageCoordinateSystem;n=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf(\"/\"+t.toLowerCase()+\"/\")>-1?\"0:\"+e:JSON.stringify({icsid:e,icsns:t}):\"0:\"+e:JSON.stringify({ics:s.imageCoordinateSystem})}else n=s.wkid||JSON.stringify(s.toJSON());c(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const a=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:l,mosaicRule:u}=a;let{renderingRule:p}=a;if(o instanceof Array&&o.length>0&&!this.renderingRule?a.bandIds=o.join(\",\"):a.bandIds=void 0,null!=o&&o.length&&this.renderingRule)if(\"Colormap\"===p.rasterFunction){const e=new J({functionName:\"ExtractBand\",functionArguments:{BandIds:o,raster:p.rasterFunctionArguments.Raster}});p.rasterFunctionArguments.Raster=e}else{p=new J({functionName:\"ExtractBand\",functionArguments:{BandIds:o,raster:p}})}l instanceof Array&&l.length>0&&(a.noData=l.join(\",\"));const m=this.timeInfo;u&&u.multidimensionalDefinition&&i&&m&&m.startField&&(u.multidimensionalDefinition=u.multidimensionalDefinition.filter((e=>e.dimensionName!==m.startField))),a.mosaicRule=u&&JSON.stringify(u),a.renderingRule=p&&JSON.stringify(p);const d={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?d.time=\"\"+e:null==e&&null==t||(d.time=`${null==e?\"null\":e},${null==t?\"null\":t}`)}return{bbox:e.xmin+\",\"+e.ymin+\",\"+e.xmax+\",\"+e.ymax,bboxSR:n,imageSR:n,size:t+\",\"+r,...a,...d}}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new a(\"imagery-layer:get-samples\",\"getSamples operation is not supported on the input image service\");e=y(Y,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),B(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new a(\"imagery-layer:query-rasters\",\"query operation is not supported on the input image service\");e=y(X,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r);return new $({url:this.url}).execute(e,this._getRequestOptions(t))}async queryRasters(e,t){var r;if(await this._fetchCapabilities(null==(r=t)?void 0:r.signal),!this.capabilities.operations.supportsQuery)throw new a(\"imagery-layer:query-rasters\",\"query operation is not supported on the input image service\");return e=y(K,e),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),this.queryTask.execute(e,t)}queryVisibleRasters(e,t){if(!e)return Promise.reject(new a(\"imagery-layer: query-visible-rasters\",\"missing query parameter\"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const m=\"raster.servicepixelvalue\",d=this.rasterFunctionNamesIndex;if(c(e.outFields)&&(o=e.outFields.some((e=>-1===e.toLowerCase().indexOf(m))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(m)>-1&&e.length>m.length)).map((e=>{const t=e.slice(m.length+1);return[this._updateRenderingRulesFunctionName(t,d),t]}));l=t.map((e=>new J({functionName:e[0]}))),u=t.map((e=>e[1])),0===l.length?this.renderingRule?(l.push(this.renderingRule),u.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some((e=>e.functionName===this.renderingRule.functionName))&&(l.push(this.renderingRule),u.push(this.renderingRule.functionName))}const h=p(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),f=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent||this.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:o,returnGeometry:h,raster:this.raster,maxItemCount:s?1:null});delete f.f;const y=new X(f),g=new $({url:this.url}),R=this.generateRasterInfo(this.renderingRule);return new Promise((r=>{R.then((()=>{g.execute(y,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}).then((t=>{const s=e.outFields;if(o&&!h&&t.catalogItems&&t.catalogItems.features&&t.catalogItems.features.length>0){const o=this.objectIdField||\"ObjectId\",l=t.catalogItems.features,p=l.map((e=>e.attributes&&e.attributes[o])),c=new K({objectIds:p,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[o]});return this.queryRasters(c).then((a=>{a&&a.features&&a.features.length>0&&a.features.forEach((t=>{l.forEach((r=>{r.attributes[o]===t.attributes[o]&&(r.geometry=new ie(t.geometry),r.geometry.spatialReference=e.outSpatialReference)}))})),r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s}))})).catch((()=>{throw new a(\"imagery-layer:query-visible-rasters\",\"encountered error when querying visible rasters geometry\")}))}r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s}))})).catch((()=>{throw new a(\"imagery-layer:query-visible-rasters\",\"encountered error when querying visible rasters\")}))}))}))}async fetchVariableStatisticsHistograms(e,t){const r=n(this.parsedUrl.path+\"/statistics\",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=n(this.parsedUrl.path+\"/histograms\",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await Promise.all([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),c(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=c(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set(\"serviceRasterInfo\",e),e))),i=this.renderingRule&&\"none\"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return Promise.all([r,i]).then((e=>{e[1]?this._set(\"rasterInfo\",e[1]):this._set(\"rasterInfo\",e[0]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this.renderer=null,se.warn(\"ArcGISImageService\",\"Switching to the default renderer. Renderer applied is not valid for this Imagery Layer\")),this._configDefaultRenderer(),this.watch(\"renderer\",(()=>this._configDefaultRenderer())),this.watch(\"renderingRule\",(e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}));const t=c(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)}))}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new M;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return\"unique-value\"===e.type&&r&&\"none\"!==r.functionName.toLowerCase()&&1===t.bandCount&&[\"u8\",\"s8\"].includes(t.pixelType)||A(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await n(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,\"https:\"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(\",\").map((e=>e.trim())).indexOf(\"tilesonly\"))>-1)throw new a(\"imagery-layer:fetch-service-info\",\"use ImageryTileLayer to open tiles-only image services\");this.read(r,{origin:\"service\",url:this.parsedUrl})}_isVectorFieldResampleFunction(e){if(!c(e))return!1;const{functionName:t,functionArguments:r}=e,i=\"resample\"===t.toLowerCase(),s=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===s||10===s)}_isPicture(){return!this.format||this.format.indexOf(\"jpg\")>-1||this.format.indexOf(\"png\")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=E(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;if(!this.renderer)this.renderer=U(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName});this._symbolizer?(this._symbolizer.rendererJSON=H(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new L({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:\"json\",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):q(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await n(this.parsedUrl.path+\"/multidimensionalInfo\",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new a(\"imagery-layer:fetch-metadata\",\"valid serviceInfo is required\"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,s=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&n(this.parsedUrl.path+\"/rasterAttributeTable\",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>G.fromJSON(e.data))).catch((()=>null)),o=!!(t.hasColormap&&this.version>=10.1)&&n(this.parsedUrl.path+\"/colormap\",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),l=!!(t.hasHistograms&&this.version>=10.1)&&n(this.parsedUrl.path+\"/histograms\",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.version>=10.3&&n(this.parsedUrl.path+\"/keyProperties\",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((e=>e.data)).catch((()=>{})),p=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([s,o,l,u,p]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=te.fromJSON(t.spatialReference||t.extent.spatialReference);return new V({width:i,height:s,bandCount:t.bandCount,extent:ee.fromJSON(t.extent),spatialReference:n,pixelSize:new re({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf(\"png\")>-1)return n(this.parsedUrl.path+\"/exportImage\",{responseType:\"image\",query:this._getQueryParams({f:\"image\",...e.imageServiceParameters}),signal:i}).then((e=>({imageElement:e.data,params:t})));const s=this._initJobHandler(),o=n(this.parsedUrl.path+\"/exportImage\",{responseType:\"array-buffer\",query:this._getQueryParams({f:\"image\",...e.imageServiceParameters}),signal:i});return Promise.all([o,s]).then((e=>{const r=e[0].data,s=t.format||\"jpgpng\";let n=s;if(\"bsq\"!==n&&\"bip\"!==n&&(n=z(r)),!n){throw new a(\"imagery-layer:fetch-image\",\"unsupported format signature \"+String.fromCharCode.apply(null,new Uint8Array(r)))}const o=\"gif\"===s||\"bmp\"===s||s.indexOf(\"png\")>-1&&(\"png\"===n||\"jpg\"===n),l={signal:i};return o?q(r,{useCanvas:!0,...t},l).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:s},l).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})))}))}async _generateRasterInfo(e,t){const{data:r}=await n(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=\"\",i=[];for(const s in t)if(t.hasOwnProperty(s)){const e=t[s],n=e.extent;let a=!0,o=[n[0]];e.hasRanges&&!0===e.hasRanges?(a=!1,o=[e.values[0]]):\"stdz\"===e.name.toLowerCase()&&Math.abs(n[1])<=Math.abs(n[0])&&(o=[n[1]]),i.push(new _({variableName:r,dimensionName:t[s].name,isSlice:a,values:o}))}if(i.length>0){this.mosaicRule=this.mosaicRule||new T;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=i)}}_formatAttributeValue(e,t){if(\"string\"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),s=i&&i.format;if(s){let t,r;return e.trim().indexOf(\",\")>-1?(t=\",\",r=t+\" \",this._formatDelimitedString(e,t,r,s)):e.trim().indexOf(\" \")>-1?(t=r=\" \",this._formatDelimitedString(e,t,r,s)):this._formatNumberFromString(e,s)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,\"_\"))&&(i=e,!0))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,r){r=r||{};const i=e.value,{templateRRFunctionNames:s,showNoDataRecords:n,returnDomainValues:a,templateFields:o}=r,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,\", \")))||[];const m=this.objectIdField||\"ObjectId\",d=\"string\"==typeof i&&i.toLowerCase().indexOf(\"nodata\")>-1,h=[];if(i&&!u&&!d){const e={};e[m]=0;p=[i],u=[new t(this.fullExtent,null,e)]}if(!u)return[];let f,y,g;this._updateResponseFieldNames(u,o),d&&!n&&(u=[]);for(let t=0;t<u.length;t++){if(f=u[t],null!=i&&!d){if(y=p[t],g=this.renderingRule&&l&&l.length>0&&s&&s.length>0&&s.indexOf(this.renderingRule.functionName)>-1?l[s.indexOf(this.renderingRule.functionName)]:i,\"nodata\"===y.toLowerCase()&&!n)continue;const e=\"Raster.ItemPixelValue\",r=\"Raster.ServicePixelValue\";f.attributes[e]=this._formatAttributeValue(y,e),f.attributes[r]=this._formatAttributeValue(g,r),this._updateFeatureWithMagDirValues(f,y);const a=this.fields&&this.fields.length>0;let o=this.renderingRule&&c(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?a?y:i:g;this.renderingRule||(o=a?y:i),this._updateFeatureWithRasterAttributeTableValues(f,o)}if(f.sourceLayer=this,a&&this._updateFeatureWithDomainValues(f),s&&l&&s.length===l.length)for(let e=0;e<s.length;e++){const t=\"Raster.ServicePixelValue.\"+s[e];f.attributes[t]=this._formatAttributeValue(l[e],t)}h.push(u[t])}return h}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||c(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const s=r.fields,n=s.map((e=>e.name)).filter((e=>\"value\"===e.toLowerCase())),a=n&&n[0];if(!a)return;const o=i.filter((e=>e.attributes[a]===(null!=t?parseInt(t,10):null)));o&&o[0]&&s.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(o[0].attributes[t.name],r)}))}_updateFeatureWithMagDirValues(e,t){if(!this.pixelFilter||\"esriImageServiceDataTypeVector-UV\"!==this.serviceDataType&&\"esriImageServiceDataTypeVector-MagDir\"!==this.serviceDataType)return;const r=t.replace(\" \",\",\").split(\",\").map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new j({height:1,width:1,pixelType:\"f32\",pixels:i,statistics:s});this.pixelFilter({pixelBlock:n,extent:new ee(0,0,0,0,this.spatialReference)}),e.attributes[\"Raster.Magnitude\"]=n.pixels[0][0],e.attributes[\"Raster.Direction\"]=n.pixels[1][0]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&\"coded-value\"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter((e=>e.code===r))[0];i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(\"Raw\"===e)return e.replace(\"Raw\",\"None\");const r=e.toLowerCase().replace(/ /gi,\"_\");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty(\"functionType\")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(\",\").map((e=>e.trim())):[\"image\",\"catalog\"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.indexOf(\"image\")>-1,a=\"esriImageServiceDataTypeElevation\"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf(\"mensuration\")>-1&&o,supportsDownload:t.indexOf(\"download\")>-1,supportsQuery:t.indexOf(\"catalog\")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&a,supportsComputePixelLocation:r>=10.7&&t.indexOf(\"catalog\")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:s}}}};return e([R()],u.prototype,\"_functionRasterInfos\",void 0),e([R()],u.prototype,\"_rasterJobHandler\",void 0),e([R()],u.prototype,\"_symbolizer\",void 0),e([R()],u.prototype,\"_defaultServiceMosaicRule\",void 0),e([x(\"_defaultServiceMosaicRule\",[\"defaultMosaicMethod\"])],u.prototype,\"readDefaultServiceMosaicRule\",null),e([R()],u.prototype,\"_cachedRendererJson\",void 0),e([R()],u.prototype,\"rasterAttributeTableFieldPrefix\",void 0),e([R({readOnly:!0})],u.prototype,\"rasterFunctionNamesIndex\",null),e([R({readOnly:!0})],u.prototype,\"queryTask\",null),e([R()],u.prototype,\"adjustAspectRatio\",void 0),e([R({readOnly:!0}),h(\"serviceRasterInfo.bandCount\")],u.prototype,\"bandCount\",void 0),e([R({type:[f],json:{write:!0}})],u.prototype,\"bandIds\",void 0),e([x(\"bandIds\")],u.prototype,\"readBandIds\",null),e([R({readOnly:!0,json:{read:!1}})],u.prototype,\"capabilities\",void 0),e([x(\"service\",\"capabilities\",[\"capabilities\",\"currentVersion\",\"serviceDataType\"])],u.prototype,\"readCapabilities\",null),e([R({type:Number})],u.prototype,\"compressionQuality\",void 0),e([I(\"compressionQuality\")],u.prototype,\"writeCompressionQuality\",null),e([R({type:Number})],u.prototype,\"compressionTolerance\",void 0),e([I(\"compressionTolerance\")],u.prototype,\"writeCompressionTolerance\",null),e([R({json:{read:{source:\"copyrightText\"}}})],u.prototype,\"copyright\",void 0),e([R({type:String,json:{name:\"layerDefinition.definitionExpression\",write:{enabled:!0,allowNull:!0}}})],u.prototype,\"definitionExpression\",void 0),e([R({readOnly:!0,constructOnly:!0})],u.prototype,\"exportImageServiceParameters\",void 0),e([R()],u.prototype,\"rasterInfo\",void 0),e([R({readOnly:!0,type:[N]})],u.prototype,\"fields\",void 0),e([R({readOnly:!0})],u.prototype,\"fieldsIndex\",null),e([R({type:[\"png\",\"png8\",\"png24\",\"png32\",\"jpg\",\"bmp\",\"gif\",\"jpgpng\",\"lerc\",\"tiff\"],json:{write:!0}})],u.prototype,\"format\",null),e([x(\"service\",\"format\",[\"serviceDataType\"])],u.prototype,\"readFormat\",null),e([R({type:ee})],u.prototype,\"fullExtent\",void 0),e([R({readOnly:!0})],u.prototype,\"hasMultidimensions\",void 0),e([R({json:{read:{source:\"maxImageHeight\"}}})],u.prototype,\"imageMaxHeight\",void 0),e([R({json:{read:{source:\"maxImageWidth\"}}})],u.prototype,\"imageMaxWidth\",void 0),e([R({type:String,json:{type:D.jsonValues,read:D.read,write:D.write}})],u.prototype,\"interpolation\",void 0),e([R()],u.prototype,\"minScale\",void 0),e([x(\"service\",\"minScale\")],u.prototype,\"readMinScale\",null),e([R()],u.prototype,\"maxScale\",void 0),e([x(\"service\",\"maxScale\")],u.prototype,\"readMaxScale\",null),e([R({type:T})],u.prototype,\"mosaicRule\",null),e([x(\"mosaicRule\",[\"mosaicRule\",\"defaultMosaicMethod\"])],u.prototype,\"readMosaicRule\",null),e([I(\"mosaicRule\")],u.prototype,\"writeMosaicRule\",null),e([R({readOnly:!0}),h(\"serviceRasterInfo.multidimensionalInfo\")],u.prototype,\"multidimensionalInfo\",void 0),e([R({json:{type:f}})],u.prototype,\"noData\",void 0),e([I(\"noData\")],u.prototype,\"writeNoData\",null),e([R({type:String,json:{type:C.jsonValues,read:C.read,write:C.write}})],u.prototype,\"noDataInterpretation\",void 0),e([R({type:String,readOnly:!0,json:{read:{source:[\"fields\"]}}})],u.prototype,\"objectIdField\",void 0),e([x(\"objectIdField\")],u.prototype,\"readObjectIdField\",null),e([R({readOnly:!0})],u.prototype,\"parsedUrl\",null),e([R({readOnly:!0}),h(\"serviceRasterInfo.pixelSize.x\")],u.prototype,\"pixelSizeX\",void 0),e([R({readOnly:!0}),h(\"serviceRasterInfo.pixelSize.y\")],u.prototype,\"pixelSizeY\",void 0),e([R({type:Function})],u.prototype,\"pixelFilter\",void 0),e([R()],u.prototype,\"raster\",void 0),e([R()],u.prototype,\"viewId\",void 0),e([R({types:r,json:{name:\"layerDefinition.drawingInfo.renderer\",origins:{\"web-scene\":{types:i,name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy:e=>({enabled:e&&\"vector-field\"!==e.type})}}}}})],u.prototype,\"renderer\",void 0),e([x(\"renderer\")],u.prototype,\"readRenderer\",null),e([I(\"renderer\")],u.prototype,\"writeRenderer\",null),e([R(S)],u.prototype,\"opacity\",void 0),e([R({readOnly:!0}),h(\"serviceRasterInfo.attributeTable\")],u.prototype,\"rasterAttributeTable\",void 0),e([R({readOnly:!0})],u.prototype,\"rasterFields\",null),e([R({readOnly:!0})],u.prototype,\"rasterFunctionInfos\",void 0),e([R({type:J})],u.prototype,\"renderingRule\",null),e([x(\"renderingRule\",[\"renderingRule\",\"rasterFunctionInfos\"])],u.prototype,\"readRenderingRule\",null),e([I(\"renderingRule\")],u.prototype,\"writeRenderingRule\",null),e([R()],u.prototype,\"serviceDataType\",void 0),e([R({readOnly:!0,type:te})],u.prototype,\"spatialReference\",void 0),e([x(\"spatialReference\",[\"spatialReference\",\"extent\"])],u.prototype,\"readSpatialReference\",null),e([R({json:{type:ne.jsonValues}})],u.prototype,\"pixelType\",void 0),e([x(\"pixelType\")],u.prototype,\"readPixelType\",null),e([I(\"pixelType\")],u.prototype,\"writePixelType\",null),e([R({constructOnly:!0,type:V})],u.prototype,\"serviceRasterInfo\",void 0),e([R()],u.prototype,\"sourceJSON\",void 0),e([R(w)],u.prototype,\"url\",void 0),e([R({readOnly:!0})],u.prototype,\"version\",void 0),e([x(\"version\",[\"currentVersion\",\"fields\",\"timeInfo\"])],u.prototype,\"readVersion\",null),u=e([b(\"esri.layers.mixins.ArcGISImageService\")],u),u};export{ue as ArcGISImageService};\n"]},"metadata":{},"sourceType":"module"}