{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../../chunks/tslib.es6.js\";\nimport { HandleOwner as e } from \"../../../../core/HandleOwner.js\";\nimport \"../../../../core/has.js\";\nimport { property as r } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/accessorSupport/ensureType.js\";\nimport \"../../../../core/Logger.js\";\nimport { subclass as o } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport s from \"../../../../layers/support/TileInfo.js\";\nimport { loadProcessorModule as i } from \"./processors.js\";\nimport l from \"./controllers/FeatureController2D.js\";\nimport n from \"./support/TileStore.js\";\nimport { UpdateToken as c } from \"./support/UpdateToken.js\";\nimport a from \"../../tiling/TileInfoView.js\";\nconst p = new Set();\n\nfunction h() {\n  return p;\n}\n\nlet u = class extends e {\n  constructor() {\n    super(...arguments), this.controller = null, this.processor = null, this.remoteClient = null, this.tileStore = null, this.service = null, this.viewState = null;\n  }\n\n  initialize() {\n    this.handles.add(this.watch(\"updating\", t => {\n      this.remoteClient.invoke(\"setUpdating\", t).catch(t => {});\n    }));\n  }\n\n  destroy() {\n    var t, e, r;\n    null == (t = this.controller) || t.destroy(), null == (e = this.processor) || e.destroy(), null == (r = this.tileStore) || r.destroy(), this.controller = this.processor = this.tileStore = this.remoteClient = null;\n  }\n\n  get updating() {\n    return !this.controller || this.controller.updating;\n  }\n\n  async startup({\n    service: t,\n    config: e,\n    tileInfo: r,\n    tiles: o\n  }) {\n    if (this.service = t, !this.tileStore) {\n      const t = new a(s.fromJSON(r));\n      this.tileStore = new n(t);\n    }\n\n    this.tileStore.clear(), await this._createProcessorAndController(e), await this.update({\n      config: e\n    }, !0), this.tileStore.updateTiles(o);\n  }\n\n  async updateTiles(t) {\n    this.tileStore.updateTiles(t);\n  }\n\n  async update({\n    config: t\n  }, e = !1) {\n    const r = c.empty();\n    return e || this.controller.pause(), await Promise.all([this.processor.update(r, t), this.controller.update(r, t)]), r.toJSON();\n  }\n\n  async applyUpdate(t) {\n    return this.controller.applyUpdate(c.create(t));\n  }\n\n  async _createProcessorAndController(t) {\n    await Promise.all([this._handleControllerConfig(t), this._handleProcessorConfig(t)]), this.controller.processor = this.processor;\n  }\n\n  async _handleControllerConfig(t) {\n    const e = await this._createController(this.service, t);\n    return await e.startup(), e;\n  }\n\n  async _handleProcessorConfig(t) {\n    return this._createProcessor(this.service, t);\n  }\n\n  async _createController(t, e) {\n    this.controller && this.controller.destroy();\n    const {\n      tileStore: r,\n      remoteClient: o\n    } = this,\n          s = new l({\n      service: t,\n      config: e,\n      tileStore: r,\n      remoteClient: o\n    });\n    return this.controller = s, s;\n  }\n\n  async _createProcessor(t, e) {\n    const r = e.schema.processors[0].type,\n          o = (await i(r)).default,\n          {\n      remoteClient: s,\n      tileStore: l\n    } = this,\n          n = new o({\n      service: t,\n      config: e,\n      tileStore: l,\n      remoteClient: s\n    });\n    return this.processor && this.processor.destroy(), this.processor = n, n;\n  }\n\n};\nt([r()], u.prototype, \"controller\", void 0), t([r()], u.prototype, \"processor\", void 0), t([r()], u.prototype, \"updating\", null), t([r()], u.prototype, \"viewState\", void 0), u = t([o(\"esri.views.2d.layers.features.Pipeline\")], u);\nvar d = u;\nexport default d;\nexport { h as getInstances };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/2d/layers/features/Pipeline.js"],"names":["_","t","HandleOwner","e","property","r","subclass","o","s","loadProcessorModule","i","l","n","UpdateToken","c","a","p","Set","h","u","constructor","arguments","controller","processor","remoteClient","tileStore","service","viewState","initialize","handles","add","watch","invoke","catch","destroy","updating","startup","config","tileInfo","tiles","fromJSON","clear","_createProcessorAndController","update","updateTiles","empty","pause","Promise","all","toJSON","applyUpdate","create","_handleControllerConfig","_handleProcessorConfig","_createController","_createProcessor","schema","processors","type","default","prototype","d","getInstances"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,iCAAlB;AAAoD,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,iCAA5B;AAA8D,OAAM,yBAAN;AAAgC,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,yDAAzB;AAAmF,OAAM,gDAAN;AAAuD,OAAM,4BAAN;AAAmC,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,yDAAzB;AAAmF,OAAOC,CAAP,MAAa,wCAAb;AAAsD,SAAOC,mBAAmB,IAAIC,CAA9B,QAAoC,iBAApC;AAAsD,OAAOC,CAAP,MAAa,sCAAb;AAAoD,OAAOC,CAAP,MAAa,wBAAb;AAAsC,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,0BAA5B;AAAuD,OAAOC,CAAP,MAAa,8BAAb;AAA4C,MAAMC,CAAC,GAAC,IAAIC,GAAJ,EAAR;;AAAgB,SAASC,CAAT,GAAY;AAAC,SAAOF,CAAP;AAAS;;AAAA,IAAIG,CAAC,GAAC,cAAchB,CAAd,CAAe;AAACiB,EAAAA,WAAW,GAAE;AAAC,UAAM,GAAGC,SAAT,GAAoB,KAAKC,UAAL,GAAgB,IAApC,EAAyC,KAAKC,SAAL,GAAe,IAAxD,EAA6D,KAAKC,YAAL,GAAkB,IAA/E,EAAoF,KAAKC,SAAL,GAAe,IAAnG,EAAwG,KAAKC,OAAL,GAAa,IAArH,EAA0H,KAAKC,SAAL,GAAe,IAAzI;AAA8I;;AAAAC,EAAAA,UAAU,GAAE;AAAC,SAAKC,OAAL,CAAaC,GAAb,CAAiB,KAAKC,KAAL,CAAW,UAAX,EAAuB9B,CAAC,IAAE;AAAC,WAAKuB,YAAL,CAAkBQ,MAAlB,CAAyB,aAAzB,EAAuC/B,CAAvC,EAA0CgC,KAA1C,CAAiDhC,CAAC,IAAE,CAAE,CAAtD;AAAyD,KAApF,CAAjB;AAAyG;;AAAAiC,EAAAA,OAAO,GAAE;AAAC,QAAIjC,CAAJ,EAAME,CAAN,EAAQE,CAAR;AAAU,aAAOJ,CAAC,GAAC,KAAKqB,UAAd,KAA2BrB,CAAC,CAACiC,OAAF,EAA3B,EAAuC,SAAO/B,CAAC,GAAC,KAAKoB,SAAd,KAA0BpB,CAAC,CAAC+B,OAAF,EAAjE,EAA6E,SAAO7B,CAAC,GAAC,KAAKoB,SAAd,KAA0BpB,CAAC,CAAC6B,OAAF,EAAvG,EAAmH,KAAKZ,UAAL,GAAgB,KAAKC,SAAL,GAAe,KAAKE,SAAL,GAAe,KAAKD,YAAL,GAAkB,IAAnL;AAAwL;;AAAY,MAARW,QAAQ,GAAE;AAAC,WAAM,CAAC,KAAKb,UAAN,IAAkB,KAAKA,UAAL,CAAgBa,QAAxC;AAAiD;;AAAa,QAAPC,OAAO,CAAC;AAACV,IAAAA,OAAO,EAACzB,CAAT;AAAWoC,IAAAA,MAAM,EAAClC,CAAlB;AAAoBmC,IAAAA,QAAQ,EAACjC,CAA7B;AAA+BkC,IAAAA,KAAK,EAAChC;AAArC,GAAD,EAAyC;AAAC,QAAG,KAAKmB,OAAL,GAAazB,CAAb,EAAe,CAAC,KAAKwB,SAAxB,EAAkC;AAAC,YAAMxB,CAAC,GAAC,IAAIc,CAAJ,CAAMP,CAAC,CAACgC,QAAF,CAAWnC,CAAX,CAAN,CAAR;AAA6B,WAAKoB,SAAL,GAAe,IAAIb,CAAJ,CAAMX,CAAN,CAAf;AAAwB;;AAAA,SAAKwB,SAAL,CAAegB,KAAf,IAAuB,MAAM,KAAKC,6BAAL,CAAmCvC,CAAnC,CAA7B,EAAmE,MAAM,KAAKwC,MAAL,CAAY;AAACN,MAAAA,MAAM,EAAClC;AAAR,KAAZ,EAAuB,CAAC,CAAxB,CAAzE,EAAoG,KAAKsB,SAAL,CAAemB,WAAf,CAA2BrC,CAA3B,CAApG;AAAkI;;AAAiB,QAAXqC,WAAW,CAAC3C,CAAD,EAAG;AAAC,SAAKwB,SAAL,CAAemB,WAAf,CAA2B3C,CAA3B;AAA8B;;AAAY,QAAN0C,MAAM,CAAC;AAACN,IAAAA,MAAM,EAACpC;AAAR,GAAD,EAAYE,CAAC,GAAC,CAAC,CAAf,EAAiB;AAAC,UAAME,CAAC,GAACS,CAAC,CAAC+B,KAAF,EAAR;AAAkB,WAAO1C,CAAC,IAAE,KAAKmB,UAAL,CAAgBwB,KAAhB,EAAH,EAA2B,MAAMC,OAAO,CAACC,GAAR,CAAY,CAAC,KAAKzB,SAAL,CAAeoB,MAAf,CAAsBtC,CAAtB,EAAwBJ,CAAxB,CAAD,EAA4B,KAAKqB,UAAL,CAAgBqB,MAAhB,CAAuBtC,CAAvB,EAAyBJ,CAAzB,CAA5B,CAAZ,CAAjC,EAAuGI,CAAC,CAAC4C,MAAF,EAA9G;AAAyH;;AAAiB,QAAXC,WAAW,CAACjD,CAAD,EAAG;AAAC,WAAO,KAAKqB,UAAL,CAAgB4B,WAAhB,CAA4BpC,CAAC,CAACqC,MAAF,CAASlD,CAAT,CAA5B,CAAP;AAAgD;;AAAmC,QAA7ByC,6BAA6B,CAACzC,CAAD,EAAG;AAAC,UAAM8C,OAAO,CAACC,GAAR,CAAY,CAAC,KAAKI,uBAAL,CAA6BnD,CAA7B,CAAD,EAAiC,KAAKoD,sBAAL,CAA4BpD,CAA5B,CAAjC,CAAZ,CAAN,EAAoF,KAAKqB,UAAL,CAAgBC,SAAhB,GAA0B,KAAKA,SAAnH;AAA6H;;AAA6B,QAAvB6B,uBAAuB,CAACnD,CAAD,EAAG;AAAC,UAAME,CAAC,GAAC,MAAM,KAAKmD,iBAAL,CAAuB,KAAK5B,OAA5B,EAAoCzB,CAApC,CAAd;AAAqD,WAAO,MAAME,CAAC,CAACiC,OAAF,EAAN,EAAkBjC,CAAzB;AAA2B;;AAA4B,QAAtBkD,sBAAsB,CAACpD,CAAD,EAAG;AAAC,WAAO,KAAKsD,gBAAL,CAAsB,KAAK7B,OAA3B,EAAmCzB,CAAnC,CAAP;AAA6C;;AAAuB,QAAjBqD,iBAAiB,CAACrD,CAAD,EAAGE,CAAH,EAAK;AAAC,SAAKmB,UAAL,IAAiB,KAAKA,UAAL,CAAgBY,OAAhB,EAAjB;AAA2C,UAAK;AAACT,MAAAA,SAAS,EAACpB,CAAX;AAAamB,MAAAA,YAAY,EAACjB;AAA1B,QAA6B,IAAlC;AAAA,UAAuCC,CAAC,GAAC,IAAIG,CAAJ,CAAM;AAACe,MAAAA,OAAO,EAACzB,CAAT;AAAWoC,MAAAA,MAAM,EAAClC,CAAlB;AAAoBsB,MAAAA,SAAS,EAACpB,CAA9B;AAAgCmB,MAAAA,YAAY,EAACjB;AAA7C,KAAN,CAAzC;AAAgG,WAAO,KAAKe,UAAL,GAAgBd,CAAhB,EAAkBA,CAAzB;AAA2B;;AAAsB,QAAhB+C,gBAAgB,CAACtD,CAAD,EAAGE,CAAH,EAAK;AAAC,UAAME,CAAC,GAACF,CAAC,CAACqD,MAAF,CAASC,UAAT,CAAoB,CAApB,EAAuBC,IAA/B;AAAA,UAAoCnD,CAAC,GAAC,CAAC,MAAMG,CAAC,CAACL,CAAD,CAAR,EAAasD,OAAnD;AAAA,UAA2D;AAACnC,MAAAA,YAAY,EAAChB,CAAd;AAAgBiB,MAAAA,SAAS,EAACd;AAA1B,QAA6B,IAAxF;AAAA,UAA6FC,CAAC,GAAC,IAAIL,CAAJ,CAAM;AAACmB,MAAAA,OAAO,EAACzB,CAAT;AAAWoC,MAAAA,MAAM,EAAClC,CAAlB;AAAoBsB,MAAAA,SAAS,EAACd,CAA9B;AAAgCa,MAAAA,YAAY,EAAChB;AAA7C,KAAN,CAA/F;AAAsJ,WAAO,KAAKe,SAAL,IAAgB,KAAKA,SAAL,CAAeW,OAAf,EAAhB,EAAyC,KAAKX,SAAL,GAAeX,CAAxD,EAA0DA,CAAjE;AAAmE;;AAA32D,CAArB;AAAk4DX,CAAC,CAAC,CAACI,CAAC,EAAF,CAAD,EAAOc,CAAC,CAACyC,SAAT,EAAmB,YAAnB,EAAgC,KAAK,CAArC,CAAD,EAAyC3D,CAAC,CAAC,CAACI,CAAC,EAAF,CAAD,EAAOc,CAAC,CAACyC,SAAT,EAAmB,WAAnB,EAA+B,KAAK,CAApC,CAA1C,EAAiF3D,CAAC,CAAC,CAACI,CAAC,EAAF,CAAD,EAAOc,CAAC,CAACyC,SAAT,EAAmB,UAAnB,EAA8B,IAA9B,CAAlF,EAAsH3D,CAAC,CAAC,CAACI,CAAC,EAAF,CAAD,EAAOc,CAAC,CAACyC,SAAT,EAAmB,WAAnB,EAA+B,KAAK,CAApC,CAAvH,EAA8JzC,CAAC,GAAClB,CAAC,CAAC,CAACM,CAAC,CAAC,wCAAD,CAAF,CAAD,EAA+CY,CAA/C,CAAjK;AAAmN,IAAI0C,CAAC,GAAC1C,CAAN;AAAQ,eAAe0C,CAAf;AAAiB,SAAO3C,CAAC,IAAI4C,YAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../../chunks/tslib.es6.js\";import{HandleOwner as e}from\"../../../../core/HandleOwner.js\";import\"../../../../core/has.js\";import{property as r}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/accessorSupport/ensureType.js\";import\"../../../../core/Logger.js\";import{subclass as o}from\"../../../../core/accessorSupport/decorators/subclass.js\";import s from\"../../../../layers/support/TileInfo.js\";import{loadProcessorModule as i}from\"./processors.js\";import l from\"./controllers/FeatureController2D.js\";import n from\"./support/TileStore.js\";import{UpdateToken as c}from\"./support/UpdateToken.js\";import a from\"../../tiling/TileInfoView.js\";const p=new Set;function h(){return p}let u=class extends e{constructor(){super(...arguments),this.controller=null,this.processor=null,this.remoteClient=null,this.tileStore=null,this.service=null,this.viewState=null}initialize(){this.handles.add(this.watch(\"updating\",(t=>{this.remoteClient.invoke(\"setUpdating\",t).catch((t=>{}))})))}destroy(){var t,e,r;null==(t=this.controller)||t.destroy(),null==(e=this.processor)||e.destroy(),null==(r=this.tileStore)||r.destroy(),this.controller=this.processor=this.tileStore=this.remoteClient=null}get updating(){return!this.controller||this.controller.updating}async startup({service:t,config:e,tileInfo:r,tiles:o}){if(this.service=t,!this.tileStore){const t=new a(s.fromJSON(r));this.tileStore=new n(t)}this.tileStore.clear(),await this._createProcessorAndController(e),await this.update({config:e},!0),this.tileStore.updateTiles(o)}async updateTiles(t){this.tileStore.updateTiles(t)}async update({config:t},e=!1){const r=c.empty();return e||this.controller.pause(),await Promise.all([this.processor.update(r,t),this.controller.update(r,t)]),r.toJSON()}async applyUpdate(t){return this.controller.applyUpdate(c.create(t))}async _createProcessorAndController(t){await Promise.all([this._handleControllerConfig(t),this._handleProcessorConfig(t)]),this.controller.processor=this.processor}async _handleControllerConfig(t){const e=await this._createController(this.service,t);return await e.startup(),e}async _handleProcessorConfig(t){return this._createProcessor(this.service,t)}async _createController(t,e){this.controller&&this.controller.destroy();const{tileStore:r,remoteClient:o}=this,s=new l({service:t,config:e,tileStore:r,remoteClient:o});return this.controller=s,s}async _createProcessor(t,e){const r=e.schema.processors[0].type,o=(await i(r)).default,{remoteClient:s,tileStore:l}=this,n=new o({service:t,config:e,tileStore:l,remoteClient:s});return this.processor&&this.processor.destroy(),this.processor=n,n}};t([r()],u.prototype,\"controller\",void 0),t([r()],u.prototype,\"processor\",void 0),t([r()],u.prototype,\"updating\",null),t([r()],u.prototype,\"viewState\",void 0),u=t([o(\"esri.views.2d.layers.features.Pipeline\")],u);var d=u;export default d;export{h as getInstances};\n"]},"metadata":{},"sourceType":"module"}