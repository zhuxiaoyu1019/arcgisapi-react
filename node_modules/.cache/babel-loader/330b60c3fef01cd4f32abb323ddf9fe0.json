{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport \"../../../tiling/PagedTileQueue.js\";\nimport \"../../../tiling/TileInfoView.js\";\nimport t from \"../../../tiling/TileKey.js\";\nimport \"../../../tiling/TileQueue.js\";\nimport \"../../../tiling/TileStrategy.js\";\nimport { PATCH_PIXEL_BUFFER_ALLOC_SIZE as e, TILE_SIZE as r } from \"../definitions.js\";\nimport { WGLGeometryType as i } from \"../enums.js\";\nimport { getStrides as s } from \"../Utils.js\";\nimport { VertexDataWriter as n } from \"./VertexDataWriter.js\";\nimport { getDisplayIdTexel as u } from \"../../../layers/features/support/AttributeStore.js\";\nimport { getPow2NeighborKey as a } from \"../../../layers/features/support/tileUtils.js\";\nconst h = 1,\n      c = 2,\n      o = 4,\n      _ = 8,\n      l = 16,\n      d = 32,\n      g = 64,\n      p = 128;\n\nfunction f(t) {\n  switch (t) {\n    case h:\n    case _:\n    case d:\n      return -1;\n\n    case c:\n    case g:\n      return 0;\n\n    case o:\n    case l:\n    case p:\n      return 1;\n  }\n}\n\nfunction m(t) {\n  switch (t) {\n    case h:\n    case c:\n    case o:\n      return -1;\n\n    case _:\n    case l:\n      return 0;\n\n    case d:\n    case g:\n    case p:\n      return 1;\n  }\n}\n\nconst x = h | _ | d,\n      w = o | l | p,\n      y = h | c | o,\n      v = d | g | p;\n\nclass E {\n  constructor(t, e, r, i, s) {\n    this._hasDotDensity = !1, this._hasAggregate = !1, this.hasRecords = !1, this._data = {\n      self: new Map(),\n      neighbors: new Array()\n    }, this._current = {\n      geometryType: 0,\n      writer: null,\n      overlaps: 0,\n      start: 0,\n      insertAfter: 0,\n      id: 0,\n      materialKey: 0,\n      indexStart: 0,\n      vertStart: 0,\n      isDotDensity: !1,\n      bufferingEnabled: !1,\n      metricBoxLenPointer: 0\n    }, this.hint = e, this.tileKey = t, this._hasDotDensity = r, this._hasAggregate = i, this._pixelBufferEnabled = s;\n  }\n\n  get hasAggregates() {\n    return this._hasAggregate;\n  }\n\n  get hasPixelBufferEnabled() {\n    return this._pixelBufferEnabled;\n  }\n\n  serialize(e) {\n    const r = [];\n    return r.push(this._serializeTileVertexData(this.tileKey, this._data.self)), this._data.neighbors.forEach((i, s) => {\n      const n = 1 << s,\n            u = f(n),\n            h = m(n),\n            c = a(new t(this.tileKey), u, h, e);\n      r.push(this._serializeTileVertexData(c.id, i));\n    }), r;\n  }\n\n  _serializeTileVertexData(t, e) {\n    var r, s, n, u, a;\n    const h = new Array();\n    return {\n      message: {\n        tileKey: t,\n        data: {\n          [i.MARKER]: null == (r = e.get(i.MARKER)) ? void 0 : r.serialize(h),\n          [i.FILL]: null == (s = e.get(i.FILL)) ? void 0 : s.serialize(h),\n          [i.LINE]: null == (n = e.get(i.LINE)) ? void 0 : n.serialize(h),\n          [i.TEXT]: null == (u = e.get(i.TEXT)) ? void 0 : u.serialize(h),\n          [i.LABEL]: null == (a = e.get(i.LABEL)) ? void 0 : a.serialize(h)\n        }\n      },\n      transferList: h\n    };\n  }\n\n  featureStart(t = 0) {\n    this._current.insertAfter = t;\n  }\n\n  featureEnd() {}\n\n  recordStart(t, e, r, i, s) {\n    this._current.writer = this._getVertexWriter(r, i), this._current.overlaps = 0, this._current.indexStart = this._current.writer.indexCount, this._current.vertStart = this._current.writer.vertexCount, this._current.bufferingEnabled = s, this._current.id = t, this._current.materialKey = e, this._current.geometryType = r, this._current.isDotDensity = !1, this._current.writer.recordStart();\n  }\n\n  recordCount() {\n    return this._current.writer.recordCount;\n  }\n\n  vertexCount() {\n    return this._current.writer.vertexCount;\n  }\n\n  indexCount() {\n    return this._current.writer.indexCount;\n  }\n\n  vertexBounds(t, e, r, i) {\n    this._current.bufferingEnabled && this._addOverlap(t, e, r, i);\n  }\n\n  vertexWrite(t) {\n    this._current.writer.writeVertex(t);\n  }\n\n  vertexWriteF32(t) {\n    this._current.writer.writeVertexF32(t);\n  }\n\n  vertexEnd() {}\n\n  vertexWriter() {\n    return this._current.writer.vertexWriter;\n  }\n\n  indexWrite(t) {\n    this._current.writer.writeIndex(t);\n  }\n\n  indexWriter() {\n    return this._current.writer.indexWriter;\n  }\n\n  metricWriter() {\n    return this._current.writer.metricWriter;\n  }\n\n  metricStart(t, e, r, s, n, a, h, c) {\n    this._current.writer = this._getVertexWriter(i.LABEL, !1);\n    const o = this._current.writer.metricWriter;\n    o.push(u(t)), o.push(e), o.push(r), o.push(s), o.push(n), o.push(a), o.push(h), o.push(c), o.push(255), this._current.metricBoxLenPointer = o.push(0);\n  }\n\n  metricEnd() {\n    const t = this._current.writer.metricWriter;\n    0 === t.getValue(this._current.metricBoxLenPointer) && t.seek(t.length - 10);\n  }\n\n  metricBoxWrite(t, e, r, i) {\n    const s = this._current.writer.metricWriter;\n    s.incr(this._current.metricBoxLenPointer), s.push(0), s.push(0), s.push(t), s.push(e), s.push(r), s.push(i);\n  }\n\n  recordEnd() {\n    const t = this._current.indexStart,\n          r = this._current.writer.indexCount;\n    if (t === r) return !1;\n    this.hasRecords = !0;\n    const u = r - t,\n          a = this._current.vertStart,\n          h = this._current.writer.vertexCount - a;\n    if (this._current.writer.recordEnd(this._current.id, this._current.materialKey, this._current.insertAfter, t, u, a, h), !this._pixelBufferEnabled || this._hasAggregate || 0 === this._current.overlaps || this._current.geometryType === i.LABEL) return !0;\n    const c = this._current.writer;\n\n    for (let i = 0; i < 8; i++) {\n      const t = 1 << i;\n\n      if (!!(this._current.overlaps & t)) {\n        if (!this._data.neighbors[i]) {\n          const t = new Map();\n          this._data.neighbors[i] = t;\n        }\n\n        const r = this._data.neighbors[i],\n              u = this._current.geometryType;\n\n        if (!r.has(u)) {\n          const t = s(u, this._current.isDotDensity).geometry;\n          r.set(u, new n(u, t, e));\n        }\n\n        const a = r.get(this._current.geometryType),\n              h = 8,\n              o = 512 * -f(t) * h,\n              _ = 512 * -m(t) * h;\n\n        a.copyLastFrom(c, o, _);\n      }\n    }\n\n    return !0;\n  }\n\n  _addOverlap(t, e, i, s) {\n    const n = 255 ^ ((t < 0 + i ? w : t >= r - i ? x : w | x) | (e < 0 + s ? v : e >= r - s ? y : v | y));\n    this._current.overlaps |= n;\n  }\n\n  _getVertexWriter(t, e) {\n    if (!this._data.self.has(t)) {\n      const e = this._data.self,\n            r = s(t, this._hasDotDensity).geometry;\n      e.set(t, new n(t, r, 8e3));\n    }\n\n    return this._data.self.get(t);\n  }\n\n}\n\nexport { E as MeshData };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/2d/engine/webgl/mesh/MeshData.js"],"names":["t","PATCH_PIXEL_BUFFER_ALLOC_SIZE","e","TILE_SIZE","r","WGLGeometryType","i","getStrides","s","VertexDataWriter","n","getDisplayIdTexel","u","getPow2NeighborKey","a","h","c","o","_","l","d","g","p","f","m","x","w","y","v","E","constructor","_hasDotDensity","_hasAggregate","hasRecords","_data","self","Map","neighbors","Array","_current","geometryType","writer","overlaps","start","insertAfter","id","materialKey","indexStart","vertStart","isDotDensity","bufferingEnabled","metricBoxLenPointer","hint","tileKey","_pixelBufferEnabled","hasAggregates","hasPixelBufferEnabled","serialize","push","_serializeTileVertexData","forEach","message","data","MARKER","get","FILL","LINE","TEXT","LABEL","transferList","featureStart","featureEnd","recordStart","_getVertexWriter","indexCount","vertexCount","recordCount","vertexBounds","_addOverlap","vertexWrite","writeVertex","vertexWriteF32","writeVertexF32","vertexEnd","vertexWriter","indexWrite","writeIndex","indexWriter","metricWriter","metricStart","metricEnd","getValue","seek","length","metricBoxWrite","incr","recordEnd","has","geometry","set","copyLastFrom","MeshData"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport\"../../../tiling/PagedTileQueue.js\";import\"../../../tiling/TileInfoView.js\";import t from\"../../../tiling/TileKey.js\";import\"../../../tiling/TileQueue.js\";import\"../../../tiling/TileStrategy.js\";import{PATCH_PIXEL_BUFFER_ALLOC_SIZE as e,TILE_SIZE as r}from\"../definitions.js\";import{WGLGeometryType as i}from\"../enums.js\";import{getStrides as s}from\"../Utils.js\";import{VertexDataWriter as n}from\"./VertexDataWriter.js\";import{getDisplayIdTexel as u}from\"../../../layers/features/support/AttributeStore.js\";import{getPow2NeighborKey as a}from\"../../../layers/features/support/tileUtils.js\";const h=1,c=2,o=4,_=8,l=16,d=32,g=64,p=128;function f(t){switch(t){case h:case _:case d:return-1;case c:case g:return 0;case o:case l:case p:return 1}}function m(t){switch(t){case h:case c:case o:return-1;case _:case l:return 0;case d:case g:case p:return 1}}const x=h|_|d,w=o|l|p,y=h|c|o,v=d|g|p;class E{constructor(t,e,r,i,s){this._hasDotDensity=!1,this._hasAggregate=!1,this.hasRecords=!1,this._data={self:new Map,neighbors:new Array},this._current={geometryType:0,writer:null,overlaps:0,start:0,insertAfter:0,id:0,materialKey:0,indexStart:0,vertStart:0,isDotDensity:!1,bufferingEnabled:!1,metricBoxLenPointer:0},this.hint=e,this.tileKey=t,this._hasDotDensity=r,this._hasAggregate=i,this._pixelBufferEnabled=s}get hasAggregates(){return this._hasAggregate}get hasPixelBufferEnabled(){return this._pixelBufferEnabled}serialize(e){const r=[];return r.push(this._serializeTileVertexData(this.tileKey,this._data.self)),this._data.neighbors.forEach(((i,s)=>{const n=1<<s,u=f(n),h=m(n),c=a(new t(this.tileKey),u,h,e);r.push(this._serializeTileVertexData(c.id,i))})),r}_serializeTileVertexData(t,e){var r,s,n,u,a;const h=new Array;return{message:{tileKey:t,data:{[i.MARKER]:null==(r=e.get(i.MARKER))?void 0:r.serialize(h),[i.FILL]:null==(s=e.get(i.FILL))?void 0:s.serialize(h),[i.LINE]:null==(n=e.get(i.LINE))?void 0:n.serialize(h),[i.TEXT]:null==(u=e.get(i.TEXT))?void 0:u.serialize(h),[i.LABEL]:null==(a=e.get(i.LABEL))?void 0:a.serialize(h)}},transferList:h}}featureStart(t=0){this._current.insertAfter=t}featureEnd(){}recordStart(t,e,r,i,s){this._current.writer=this._getVertexWriter(r,i),this._current.overlaps=0,this._current.indexStart=this._current.writer.indexCount,this._current.vertStart=this._current.writer.vertexCount,this._current.bufferingEnabled=s,this._current.id=t,this._current.materialKey=e,this._current.geometryType=r,this._current.isDotDensity=!1,this._current.writer.recordStart()}recordCount(){return this._current.writer.recordCount}vertexCount(){return this._current.writer.vertexCount}indexCount(){return this._current.writer.indexCount}vertexBounds(t,e,r,i){this._current.bufferingEnabled&&this._addOverlap(t,e,r,i)}vertexWrite(t){this._current.writer.writeVertex(t)}vertexWriteF32(t){this._current.writer.writeVertexF32(t)}vertexEnd(){}vertexWriter(){return this._current.writer.vertexWriter}indexWrite(t){this._current.writer.writeIndex(t)}indexWriter(){return this._current.writer.indexWriter}metricWriter(){return this._current.writer.metricWriter}metricStart(t,e,r,s,n,a,h,c){this._current.writer=this._getVertexWriter(i.LABEL,!1);const o=this._current.writer.metricWriter;o.push(u(t)),o.push(e),o.push(r),o.push(s),o.push(n),o.push(a),o.push(h),o.push(c),o.push(255),this._current.metricBoxLenPointer=o.push(0)}metricEnd(){const t=this._current.writer.metricWriter;0===t.getValue(this._current.metricBoxLenPointer)&&t.seek(t.length-10)}metricBoxWrite(t,e,r,i){const s=this._current.writer.metricWriter;s.incr(this._current.metricBoxLenPointer),s.push(0),s.push(0),s.push(t),s.push(e),s.push(r),s.push(i)}recordEnd(){const t=this._current.indexStart,r=this._current.writer.indexCount;if(t===r)return!1;this.hasRecords=!0;const u=r-t,a=this._current.vertStart,h=this._current.writer.vertexCount-a;if(this._current.writer.recordEnd(this._current.id,this._current.materialKey,this._current.insertAfter,t,u,a,h),!this._pixelBufferEnabled||this._hasAggregate||0===this._current.overlaps||this._current.geometryType===i.LABEL)return!0;const c=this._current.writer;for(let i=0;i<8;i++){const t=1<<i;if(!!(this._current.overlaps&t)){if(!this._data.neighbors[i]){const t=new Map;this._data.neighbors[i]=t}const r=this._data.neighbors[i],u=this._current.geometryType;if(!r.has(u)){const t=s(u,this._current.isDotDensity).geometry;r.set(u,new n(u,t,e))}const a=r.get(this._current.geometryType),h=8,o=512*-f(t)*h,_=512*-m(t)*h;a.copyLastFrom(c,o,_)}}return!0}_addOverlap(t,e,i,s){const n=255^((t<0+i?w:t>=r-i?x:w|x)|(e<0+s?v:e>=r-s?y:v|y));this._current.overlaps|=n}_getVertexWriter(t,e){if(!this._data.self.has(t)){const e=this._data.self,r=s(t,this._hasDotDensity).geometry;e.set(t,new n(t,r,8e3))}return this._data.self.get(t)}}export{E as MeshData};\n"]},"metadata":{},"sourceType":"module"}