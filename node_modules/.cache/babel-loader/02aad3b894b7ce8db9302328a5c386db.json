{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Error.js\";\nimport i from \"../../../core/Logger.js\";\nimport { whenTrueOnce as r } from \"../../../core/watchUtils.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { LayerView3D as a } from \"./LayerView3D.js\";\nimport { TiledLayerView3D as l } from \"./TiledLayerView3D.js\";\nimport n from \"../../layers/LayerView.js\";\nimport { RefreshableLayerView as h } from \"../../layers/RefreshableLayerView.js\";\nconst p = i.getLogger(\"esri.views.3d.layers.WMTSLayerView3d\");\nlet c = class extends h(l(a(n))) {\n  constructor() {\n    super(...arguments), this.type = \"wmts-3d\";\n  }\n\n  get hasMixedImageFormats() {\n    return !0;\n  }\n\n  initialize() {\n    const e = r(this.view, \"basemapTerrain.tilingSchemeDone\").then(() => {\n      const e = () => new t(\"layerview:no-compatible-tiling-scheme\", \"None of the tiling schemes supported by the service are compatible with the scene.\");\n\n      if (!this.view.basemapTerrain.tilingSchemeLocked) throw e();\n      const i = this.view.basemapTerrain.tilingScheme,\n            r = this.layer.activeLayer;\n      let s;\n\n      if (r && r.tileMatrixSet) {\n        s = r.tileMatrixSet;\n\n        const e = s.tileInfo,\n              t = this._getTileInfoSupportError(e, s.fullExtent) || this._getTileInfoCompatibilityError(e, i);\n\n        if (t) throw t;\n      } else {\n        if (s = this._getCompatibleTileMatrixSet(), !s) throw e();\n        r.tileMatrixSetId = s.id;\n      }\n\n      this._set(\"tileInfo\", s.tileInfo), this._set(\"fullExtent\", s.fullExtent), this.layer.fullExtent = s.fullExtent;\n    });\n    this.addResolvingPromise(e), this.when(() => this._initialized());\n  }\n\n  refresh() {\n    this.emit(\"data-changed\");\n  }\n\n  canResume() {\n    if (!super.canResume()) return !1;\n    const e = this.layer.activeLayer.tileMatrixSet;\n    return e && !this._getTileInfoError(e.tileInfo, e.fullExtent);\n  }\n\n  async doRefresh() {\n    this.suspended || this.emit(\"data-changed\");\n  }\n\n  _initialized() {\n    this.updatingHandles.add(this, \"layer.activeLayer.styleId\", () => this.refresh()), this.updatingHandles.add(this, \"tileMatrixSet\", () => this.refresh()), this.updatingHandles.add(this.layer, \"activeLayer\", e => {\n      let t = e.tileMatrixSet;\n\n      if (t) {\n        const e = this._getTileInfoError(t.tileInfo, t.fullExtent);\n\n        e && (p.error(\"The selected tile matrix set is not compatible with the view\", e), t = null);\n      } else t = this._getCompatibleTileMatrixSet(), t ? e.tileMatrixSetId = t.id : p.error(\"The layer does not provide a tiling scheme that is compatible with the view\");\n\n      this.notifyChange(\"suspended\"), this.canResume() && this.refresh();\n    });\n  }\n\n  _getCompatibleTileMatrixSet() {\n    return this.layer.activeLayer.tileMatrixSets.find(e => {\n      const t = e.tileInfo;\n      return !this._getTileInfoError(t, e.fullExtent);\n    });\n  }\n\n  _getTileInfoError(e, t) {\n    return this._getTileInfoSupportError(e, t) || this._getTileInfoCompatibilityError(e, this.view.basemapTerrain.tilingScheme);\n  }\n\n};\ne([s({\n  readOnly: !0\n})], c.prototype, \"hasMixedImageFormats\", null), e([s()], c.prototype, \"fullExtent\", void 0), e([s()], c.prototype, \"layer\", void 0), e([s()], c.prototype, \"suspended\", void 0), e([s()], c.prototype, \"tileInfo\", void 0), c = e([o(\"esri.views.3d.layers.WMTSLayerView3D\")], c);\nvar d = c;\nexport default d;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/layers/WMTSLayerView3D.js"],"names":["_","e","t","i","whenTrueOnce","r","property","s","subclass","o","LayerView3D","a","TiledLayerView3D","l","n","RefreshableLayerView","h","p","getLogger","c","constructor","arguments","type","hasMixedImageFormats","initialize","view","then","basemapTerrain","tilingSchemeLocked","tilingScheme","layer","activeLayer","tileMatrixSet","tileInfo","_getTileInfoSupportError","fullExtent","_getTileInfoCompatibilityError","_getCompatibleTileMatrixSet","tileMatrixSetId","id","_set","addResolvingPromise","when","_initialized","refresh","emit","canResume","_getTileInfoError","doRefresh","suspended","updatingHandles","add","error","notifyChange","tileMatrixSets","find","readOnly","prototype","d"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Error.js\";import i from\"../../../core/Logger.js\";import{whenTrueOnce as r}from\"../../../core/watchUtils.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as o}from\"../../../core/accessorSupport/decorators/subclass.js\";import{LayerView3D as a}from\"./LayerView3D.js\";import{TiledLayerView3D as l}from\"./TiledLayerView3D.js\";import n from\"../../layers/LayerView.js\";import{RefreshableLayerView as h}from\"../../layers/RefreshableLayerView.js\";const p=i.getLogger(\"esri.views.3d.layers.WMTSLayerView3d\");let c=class extends(h(l(a(n)))){constructor(){super(...arguments),this.type=\"wmts-3d\"}get hasMixedImageFormats(){return!0}initialize(){const e=r(this.view,\"basemapTerrain.tilingSchemeDone\").then((()=>{const e=()=>new t(\"layerview:no-compatible-tiling-scheme\",\"None of the tiling schemes supported by the service are compatible with the scene.\");if(!this.view.basemapTerrain.tilingSchemeLocked)throw e();const i=this.view.basemapTerrain.tilingScheme,r=this.layer.activeLayer;let s;if(r&&r.tileMatrixSet){s=r.tileMatrixSet;const e=s.tileInfo,t=this._getTileInfoSupportError(e,s.fullExtent)||this._getTileInfoCompatibilityError(e,i);if(t)throw t}else{if(s=this._getCompatibleTileMatrixSet(),!s)throw e();r.tileMatrixSetId=s.id}this._set(\"tileInfo\",s.tileInfo),this._set(\"fullExtent\",s.fullExtent),this.layer.fullExtent=s.fullExtent}));this.addResolvingPromise(e),this.when((()=>this._initialized()))}refresh(){this.emit(\"data-changed\")}canResume(){if(!super.canResume())return!1;const e=this.layer.activeLayer.tileMatrixSet;return e&&!this._getTileInfoError(e.tileInfo,e.fullExtent)}async doRefresh(){this.suspended||this.emit(\"data-changed\")}_initialized(){this.updatingHandles.add(this,\"layer.activeLayer.styleId\",(()=>this.refresh())),this.updatingHandles.add(this,\"tileMatrixSet\",(()=>this.refresh())),this.updatingHandles.add(this.layer,\"activeLayer\",(e=>{let t=e.tileMatrixSet;if(t){const e=this._getTileInfoError(t.tileInfo,t.fullExtent);e&&(p.error(\"The selected tile matrix set is not compatible with the view\",e),t=null)}else t=this._getCompatibleTileMatrixSet(),t?e.tileMatrixSetId=t.id:p.error(\"The layer does not provide a tiling scheme that is compatible with the view\");this.notifyChange(\"suspended\"),this.canResume()&&this.refresh()}))}_getCompatibleTileMatrixSet(){return this.layer.activeLayer.tileMatrixSets.find((e=>{const t=e.tileInfo;return!this._getTileInfoError(t,e.fullExtent)}))}_getTileInfoError(e,t){return this._getTileInfoSupportError(e,t)||this._getTileInfoCompatibilityError(e,this.view.basemapTerrain.tilingScheme)}};e([s({readOnly:!0})],c.prototype,\"hasMixedImageFormats\",null),e([s()],c.prototype,\"fullExtent\",void 0),e([s()],c.prototype,\"layer\",void 0),e([s()],c.prototype,\"suspended\",void 0),e([s()],c.prototype,\"tileInfo\",void 0),c=e([o(\"esri.views.3d.layers.WMTSLayerView3D\")],c);var d=c;export default d;\n"]},"metadata":{},"sourceType":"module"}