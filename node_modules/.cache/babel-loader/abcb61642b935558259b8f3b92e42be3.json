{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport e from \"../../core/Error.js\";\nimport { convertUnit as t } from \"../../core/unitUtils.js\";\nimport { toRadians as n, spheroids as i, WKT_SPHEROID_REGEX as s } from \"./geodesicConstants.js\";\nimport a from \"../Polyline.js\";\nimport r from \"../Polygon.js\";\nimport o from \"../Point.js\";\nimport c from \"../SpatialReference.js\";\n\nfunction l(e) {\n  if (!e) return null;\n\n  if (e.isGeographic && e.wkid) {\n    const t = i[e.wkid];\n    if (t) return t;\n  }\n\n  if (e.wkt) {\n    const t = h(e.wkt);\n    if (t) return t;\n  }\n\n  return null;\n}\n\nfunction h(e) {\n  const t = s.exec(e);\n  if (!t || 2 !== t.length) return null;\n  const n = t[1].split(\",\");\n  if (!n || n.length < 3) return null;\n  const i = parseFloat(n[1]),\n        a = parseFloat(n[2]);\n  if (isNaN(i) || isNaN(a)) return null;\n  return {\n    a: i,\n    f: 0 === a ? 0 : 1 / a\n  };\n}\n\nfunction p(e) {\n  return \"b\" in e && \"eSq\" in e && \"radius\" in e;\n}\n\nfunction f(e) {\n  const t = l(e || c.WGS84);\n  if (p(t)) return t;\n  const n = t.a * (1 - t.f);\n  return Object.assign(t, {\n    b: n,\n    eSq: 1 - (n / t.a) ** 2,\n    radius: (2 * t.a + n) / 3,\n    densificationRatio: 1e4 / ((2 * t.a + n) / 3)\n  });\n}\n\nfunction u(e, t, i) {\n  const {\n    a: s,\n    eSq: a\n  } = f(i),\n        r = Math.sqrt(a),\n        o = Math.sin(t[1] * n),\n        c = s * t[0] * n;\n  let l;\n\n  if (a > 0) {\n    l = s * ((1 - a) * (o / (1 - a * (o * o)) - 1 / (2 * r) * Math.log((1 - r * o) / (1 + r * o)))) * .5;\n  } else l = s * o;\n\n  return e[0] = c, e[1] = l, e;\n}\n\nfunction d(e) {\n  return null !== l(e);\n}\n\nfunction m(n, i = \"square-meters\") {\n  if (n.some(e => !d(e.spatialReference))) throw new e(\"geodesic-areas:invalid-spatial-reference\", \"the input geometries spatial reference is not supported\");\n  const s = [];\n\n  for (let e = 0; e < n.length; e++) {\n    const t = n[e],\n          i = t.spatialReference,\n          {\n      radius: a,\n      densificationRatio: r\n    } = f(i),\n          o = a * r;\n    s.push(M(t, o));\n  }\n\n  const a = [],\n        r = [0, 0],\n        o = [0, 0];\n\n  for (let e = 0; e < s.length; e++) {\n    const {\n      rings: n,\n      spatialReference: c\n    } = s[e];\n    let l = 0;\n\n    for (let e = 0; e < n.length; e++) {\n      const t = n[e];\n      u(r, t[0], c), u(o, t[t.length - 1], c);\n      let i = o[0] * r[1] - r[0] * o[1];\n\n      for (let e = 0; e < t.length - 1; e++) u(r, t[e + 1], c), u(o, t[e], c), i += o[0] * r[1] - r[0] * o[1];\n\n      l += i;\n    }\n\n    l = t(l, \"square-meters\", i), a.push(l / -2);\n  }\n\n  return a;\n}\n\nfunction g(n, i = \"meters\") {\n  if (!n) throw new e(\"geodesic-lengths:invalid-geometries\", \"the input geometries type is not supported\");\n  if (n.some(e => !d(e.spatialReference))) throw new e(\"geodesic-lengths:invalid-spatial-reference\", \"the input geometries spatial reference is not supported\");\n  const s = [];\n\n  for (let e = 0; e < n.length; e++) {\n    const a = n[e],\n          {\n      spatialReference: r\n    } = a,\n          o = \"polyline\" === a.type ? a.paths : a.rings;\n    let c = 0;\n\n    for (let e = 0; e < o.length; e++) {\n      const t = o[e];\n      let n = 0;\n\n      for (let e = 1; e < t.length; e++) {\n        const i = t[e - 1][0],\n              s = t[e][0],\n              a = t[e - 1][1],\n              o = t[e][1];\n\n        if (a !== o || i !== s) {\n          const e = {\n            distance: null\n          };\n          y(e, [i, a], [s, o], r), n += e.distance;\n        }\n      }\n\n      c += n;\n    }\n\n    c = t(c, \"meters\", i), s.push(c);\n  }\n\n  return s;\n}\n\nfunction M(t, n) {\n  if (\"polyline\" !== t.type && \"polygon\" !== t.type) throw new e(\"geodesic-densify:invalid-geometry\", \"the input geometry is neither polyline nor polygon\");\n  const {\n    spatialReference: i\n  } = t;\n  if (!d(i)) throw new e(\"geodesic-densify:invalid-spatial-reference\", \"the input geometry spatial reference is not supported\");\n  const s = \"polyline\" === t.type ? t.paths : t.rings,\n        o = [],\n        c = [0, 0],\n        l = {\n    distance: null\n  };\n\n  for (const e of s) {\n    const t = [];\n    o.push(t), t.push([e[0][0], e[0][1]]);\n    let s,\n        a,\n        r = e[0][0],\n        h = e[0][1];\n\n    for (let o = 0; o < e.length - 1; o++) {\n      if (s = e[o + 1][0], a = e[o + 1][1], r === s && h === a) continue;\n      const p = [r, h];\n      y(l, [r, h], [s, a], i);\n      const {\n        azimuth: f,\n        distance: u\n      } = l,\n            d = u / n;\n\n      if (d > 1) {\n        for (let e = 1; e <= d - 1; e++) {\n          w(c, p, f, e * n, i), t.push(c.slice(0));\n        }\n\n        w(c, p, f, (u + Math.floor(d - 1) * n) / 2, i), t.push(c.slice(0));\n      }\n\n      w(c, p, f, u, i), t.push(c.slice(0)), r = c[0], h = c[1];\n    }\n  }\n\n  return \"polyline\" === t.type ? new a({\n    paths: o,\n    spatialReference: i\n  }) : new r({\n    rings: o,\n    spatialReference: i\n  });\n}\n\nfunction w(e, t, i, s, a) {\n  const r = t[0],\n        o = t[1],\n        c = r * n,\n        l = o * n,\n        h = i * n,\n        {\n    a: p,\n    b: u,\n    f: d\n  } = f(a),\n        m = Math.sin(h),\n        g = Math.cos(h),\n        M = (1 - d) * Math.tan(l),\n        w = 1 / Math.sqrt(1 + M * M),\n        y = M * w,\n        R = Math.atan2(M, g),\n        v = w * m,\n        b = v * v,\n        q = 1 - b,\n        z = q * (p * p - u * u) / (u * u),\n        j = 1 + z / 16384 * (4096 + z * (z * (320 - 175 * z) - 768)),\n        x = z / 1024 * (256 + z * (z * (74 - 47 * z) - 128));\n  let N,\n      S,\n      k,\n      A,\n      P = s / (u * j),\n      F = 2 * Math.PI;\n\n  for (; Math.abs(P - F) > 1e-12;) k = Math.cos(2 * R + P), N = Math.sin(P), S = Math.cos(P), A = x * N * (k + x / 4 * (S * (2 * k * k - 1) - x / 6 * k * (4 * N * N - 3) * (4 * k * k - 3))), F = P, P = s / (u * j) + A;\n\n  const G = y * N - w * S * g,\n        C = Math.atan2(y * S + w * N * g, (1 - d) * Math.sqrt(b + G * G)),\n        E = Math.atan2(N * m, w * S - y * N * g),\n        I = d / 16 * q * (4 + d * (4 - 3 * q)),\n        O = C / n,\n        U = (c + (E - (1 - I) * d * v * (P + I * N * (k + I * S * (2 * k * k - 1))))) / n;\n  return e[0] = U, e[1] = O, e;\n}\n\nfunction y(e, t, i, s) {\n  const a = t[0] * n,\n        r = t[1] * n,\n        o = i[0] * n,\n        c = i[1] * n,\n        {\n    a: l,\n    b: h,\n    f: p,\n    radius: u\n  } = f(s),\n        d = o - a,\n        m = Math.atan((1 - p) * Math.tan(r)),\n        g = Math.atan((1 - p) * Math.tan(c)),\n        M = Math.sin(m),\n        w = Math.cos(m),\n        y = Math.sin(g),\n        R = Math.cos(g);\n  let v,\n      b,\n      q,\n      z,\n      j,\n      x,\n      N,\n      S,\n      k,\n      A,\n      P = 1e3,\n      F = d;\n\n  do {\n    if (N = Math.sin(F), S = Math.cos(F), q = Math.sqrt(R * N * (R * N) + (w * y - M * R * S) * (w * y - M * R * S)), 0 === q) return e.distance = 0, e.azimuth = void 0, e.reverseAzimuth = void 0, e;\n    j = M * y + w * R * S, x = Math.atan2(q, j), k = w * R * N / q, b = 1 - k * k, z = j - 2 * M * y / b, isNaN(z) && (z = 0), A = p / 16 * b * (4 + p * (4 - 3 * b)), v = F, F = d + (1 - A) * p * k * (x + A * q * (z + A * j * (2 * z * z - 1)));\n  } while (Math.abs(F - v) > 1e-12 && --P > 0);\n\n  if (0 === P) {\n    const t = u,\n          i = Math.acos(Math.sin(r) * Math.sin(c) + Math.cos(r) * Math.cos(c) * Math.cos(o - a)) * t,\n          s = o - a,\n          l = Math.sin(s) * Math.cos(c),\n          h = Math.cos(r) * Math.sin(c) - Math.sin(r) * Math.cos(c) * Math.cos(s),\n          p = Math.atan2(l, h);\n    return e.azimuth = p / n, e.distance = i, e.reverseAzimuth = void 0, e;\n  }\n\n  const G = b * (l * l - h * h) / (h * h),\n        C = G / 1024 * (256 + G * (G * (74 - 47 * G) - 128)),\n        E = h * (1 + G / 16384 * (4096 + G * (G * (320 - 175 * G) - 768))) * (x - C * q * (z + C / 4 * (j * (2 * z * z - 1) - C / 6 * z * (4 * q * q - 3) * (4 * z * z - 3)))),\n        I = Math.atan2(R * Math.sin(F), w * y - M * R * Math.cos(F)),\n        O = Math.atan2(w * Math.sin(F), w * y * Math.cos(F) - M * R);\n  return e.azimuth = I / n, e.distance = E, e.reverseAzimuth = O / n, e;\n}\n\nfunction R(n, i, s = \"meters\") {\n  if (!n || !i) throw new e(\"geodesic-distance:missing-parameters\", \"one or both input parameters are missing\");\n  if (!n.spatialReference || !i.spatialReference) throw new e(\"geodesic-distance:invalid-parameters\", \"one or both input points do not have a spatial reference\");\n  if (!n.spatialReference.equals(i.spatialReference)) throw new e(\"geodesic-distance:invalid-parameters\", \"spatial references of input parameters do not match\");\n  const {\n    spatialReference: a\n  } = n;\n  if (!d(a)) throw new e(\"geodesic-distance:not-supported\", \"input geometry spatial reference is not supported\");\n  if (n.equals(i)) return {\n    distance: 0,\n    azimuth: 0,\n    reverseAzimuth: 0\n  };\n  const r = {\n    distance: null\n  };\n  return y(r, [n.x, n.y], [i.x, i.y], a), r.distance = t(r.distance, \"meters\", s), r;\n}\n\nfunction v(t, n, i) {\n  if (!t || null == n || null == i) throw new e(\"point-from-distance:missing-parameters\", \"one or more input parameters are missing or undefined\");\n  if (i < 0 || i > 360) throw new e(\"point-from-distance:-of-bounds\", \"azimuth is restricted to angles between, and including, 0° to 360° degrees\");\n  if (!t.spatialReference) throw new e(\"point-from-distance:missing-spatial-reference\", \"the input point must have a spatial reference\");\n  const {\n    spatialReference: s\n  } = t;\n  if (!d(s)) throw new e(\"geodesic-distance:not-supported\", \"input geometry spatial reference is not supported\");\n  const a = [0, 0];\n  return w(a, [t.x, t.y], i, n, s), new o({\n    x: a[0],\n    y: a[1],\n    spatialReference: s\n  });\n}\n\nexport { w as directGeodeticSolver, m as geodesicAreas, M as geodesicDensify, R as geodesicDistance, g as geodesicLengths, y as inverseGeodeticSolver, d as isSupported, v as pointFromDistance };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/geometry/support/geodesicUtils.js"],"names":["e","convertUnit","t","toRadians","n","spheroids","i","WKT_SPHEROID_REGEX","s","a","r","o","c","l","isGeographic","wkid","wkt","h","exec","length","split","parseFloat","isNaN","f","p","WGS84","Object","assign","b","eSq","radius","densificationRatio","u","Math","sqrt","sin","log","d","m","some","spatialReference","push","M","rings","g","type","paths","distance","y","azimuth","w","slice","floor","cos","tan","R","atan2","v","q","z","j","x","N","S","k","A","P","F","PI","abs","G","C","E","I","O","U","atan","reverseAzimuth","acos","equals","directGeodeticSolver","geodesicAreas","geodesicDensify","geodesicDistance","geodesicLengths","inverseGeodeticSolver","isSupported","pointFromDistance"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAM,mBAAN;AAA0B,OAAOA,CAAP,MAAa,qBAAb;AAAmC,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,yBAA5B;AAAsD,SAAOC,SAAS,IAAIC,CAApB,EAAsBC,SAAS,IAAIC,CAAnC,EAAqCC,kBAAkB,IAAIC,CAA3D,QAAiE,wBAAjE;AAA0F,OAAOC,CAAP,MAAa,gBAAb;AAA8B,OAAOC,CAAP,MAAa,eAAb;AAA6B,OAAOC,CAAP,MAAa,aAAb;AAA2B,OAAOC,CAAP,MAAa,wBAAb;;AAAsC,SAASC,CAAT,CAAWb,CAAX,EAAa;AAAC,MAAG,CAACA,CAAJ,EAAM,OAAO,IAAP;;AAAY,MAAGA,CAAC,CAACc,YAAF,IAAgBd,CAAC,CAACe,IAArB,EAA0B;AAAC,UAAMb,CAAC,GAACI,CAAC,CAACN,CAAC,CAACe,IAAH,CAAT;AAAkB,QAAGb,CAAH,EAAK,OAAOA,CAAP;AAAS;;AAAA,MAAGF,CAAC,CAACgB,GAAL,EAAS;AAAC,UAAMd,CAAC,GAACe,CAAC,CAACjB,CAAC,CAACgB,GAAH,CAAT;AAAiB,QAAGd,CAAH,EAAK,OAAOA,CAAP;AAAS;;AAAA,SAAO,IAAP;AAAY;;AAAA,SAASe,CAAT,CAAWjB,CAAX,EAAa;AAAC,QAAME,CAAC,GAACM,CAAC,CAACU,IAAF,CAAOlB,CAAP,CAAR;AAAkB,MAAG,CAACE,CAAD,IAAI,MAAIA,CAAC,CAACiB,MAAb,EAAoB,OAAO,IAAP;AAAY,QAAMf,CAAC,GAACF,CAAC,CAAC,CAAD,CAAD,CAAKkB,KAAL,CAAW,GAAX,CAAR;AAAwB,MAAG,CAAChB,CAAD,IAAIA,CAAC,CAACe,MAAF,GAAS,CAAhB,EAAkB,OAAO,IAAP;AAAY,QAAMb,CAAC,GAACe,UAAU,CAACjB,CAAC,CAAC,CAAD,CAAF,CAAlB;AAAA,QAAyBK,CAAC,GAACY,UAAU,CAACjB,CAAC,CAAC,CAAD,CAAF,CAArC;AAA4C,MAAGkB,KAAK,CAAChB,CAAD,CAAL,IAAUgB,KAAK,CAACb,CAAD,CAAlB,EAAsB,OAAO,IAAP;AAAY,SAAM;AAACA,IAAAA,CAAC,EAACH,CAAH;AAAKiB,IAAAA,CAAC,EAAC,MAAId,CAAJ,GAAM,CAAN,GAAQ,IAAEA;AAAjB,GAAN;AAA0B;;AAAA,SAASe,CAAT,CAAWxB,CAAX,EAAa;AAAC,SAAM,OAAMA,CAAN,IAAS,SAAQA,CAAjB,IAAoB,YAAWA,CAArC;AAAuC;;AAAA,SAASuB,CAAT,CAAWvB,CAAX,EAAa;AAAC,QAAME,CAAC,GAACW,CAAC,CAACb,CAAC,IAAEY,CAAC,CAACa,KAAN,CAAT;AAAsB,MAAGD,CAAC,CAACtB,CAAD,CAAJ,EAAQ,OAAOA,CAAP;AAAS,QAAME,CAAC,GAACF,CAAC,CAACO,CAAF,IAAK,IAAEP,CAAC,CAACqB,CAAT,CAAR;AAAoB,SAAOG,MAAM,CAACC,MAAP,CAAczB,CAAd,EAAgB;AAAC0B,IAAAA,CAAC,EAACxB,CAAH;AAAKyB,IAAAA,GAAG,EAAC,IAAE,CAACzB,CAAC,GAACF,CAAC,CAACO,CAAL,KAAS,CAApB;AAAsBqB,IAAAA,MAAM,EAAC,CAAC,IAAE5B,CAAC,CAACO,CAAJ,GAAML,CAAP,IAAU,CAAvC;AAAyC2B,IAAAA,kBAAkB,EAAC,OAAK,CAAC,IAAE7B,CAAC,CAACO,CAAJ,GAAML,CAAP,IAAU,CAAf;AAA5D,GAAhB,CAAP;AAAuG;;AAAA,SAAS4B,CAAT,CAAWhC,CAAX,EAAaE,CAAb,EAAeI,CAAf,EAAiB;AAAC,QAAK;AAACG,IAAAA,CAAC,EAACD,CAAH;AAAKqB,IAAAA,GAAG,EAACpB;AAAT,MAAYc,CAAC,CAACjB,CAAD,CAAlB;AAAA,QAAsBI,CAAC,GAACuB,IAAI,CAACC,IAAL,CAAUzB,CAAV,CAAxB;AAAA,QAAqCE,CAAC,GAACsB,IAAI,CAACE,GAAL,CAASjC,CAAC,CAAC,CAAD,CAAD,GAAKE,CAAd,CAAvC;AAAA,QAAwDQ,CAAC,GAACJ,CAAC,GAACN,CAAC,CAAC,CAAD,CAAH,GAAOE,CAAjE;AAAmE,MAAIS,CAAJ;;AAAM,MAAGJ,CAAC,GAAC,CAAL,EAAO;AAACI,IAAAA,CAAC,GAACL,CAAC,IAAE,CAAC,IAAEC,CAAH,KAAOE,CAAC,IAAE,IAAEF,CAAC,IAAEE,CAAC,GAACA,CAAJ,CAAL,CAAD,GAAc,KAAG,IAAED,CAAL,IAAQuB,IAAI,CAACG,GAAL,CAAS,CAAC,IAAE1B,CAAC,GAACC,CAAL,KAAS,IAAED,CAAC,GAACC,CAAb,CAAT,CAA7B,CAAF,CAAD,GAA4D,EAA9D;AAAiE,GAAzE,MAA8EE,CAAC,GAACL,CAAC,GAACG,CAAJ;;AAAM,SAAOX,CAAC,CAAC,CAAD,CAAD,GAAKY,CAAL,EAAOZ,CAAC,CAAC,CAAD,CAAD,GAAKa,CAAZ,EAAcb,CAArB;AAAuB;;AAAA,SAASqC,CAAT,CAAWrC,CAAX,EAAa;AAAC,SAAO,SAAOa,CAAC,CAACb,CAAD,CAAf;AAAmB;;AAAA,SAASsC,CAAT,CAAWlC,CAAX,EAAaE,CAAC,GAAC,eAAf,EAA+B;AAAC,MAAGF,CAAC,CAACmC,IAAF,CAAQvC,CAAC,IAAE,CAACqC,CAAC,CAACrC,CAAC,CAACwC,gBAAH,CAAb,CAAH,EAAuC,MAAM,IAAIxC,CAAJ,CAAM,0CAAN,EAAiD,yDAAjD,CAAN;AAAkH,QAAMQ,CAAC,GAAC,EAAR;;AAAW,OAAI,IAAIR,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAC,CAACe,MAAhB,EAAuBnB,CAAC,EAAxB,EAA2B;AAAC,UAAME,CAAC,GAACE,CAAC,CAACJ,CAAD,CAAT;AAAA,UAAaM,CAAC,GAACJ,CAAC,CAACsC,gBAAjB;AAAA,UAAkC;AAACV,MAAAA,MAAM,EAACrB,CAAR;AAAUsB,MAAAA,kBAAkB,EAACrB;AAA7B,QAAgCa,CAAC,CAACjB,CAAD,CAAnE;AAAA,UAAuEK,CAAC,GAACF,CAAC,GAACC,CAA3E;AAA6EF,IAAAA,CAAC,CAACiC,IAAF,CAAOC,CAAC,CAACxC,CAAD,EAAGS,CAAH,CAAR;AAAe;;AAAA,QAAMF,CAAC,GAAC,EAAR;AAAA,QAAWC,CAAC,GAAC,CAAC,CAAD,EAAG,CAAH,CAAb;AAAA,QAAmBC,CAAC,GAAC,CAAC,CAAD,EAAG,CAAH,CAArB;;AAA2B,OAAI,IAAIX,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACQ,CAAC,CAACW,MAAhB,EAAuBnB,CAAC,EAAxB,EAA2B;AAAC,UAAK;AAAC2C,MAAAA,KAAK,EAACvC,CAAP;AAASoC,MAAAA,gBAAgB,EAAC5B;AAA1B,QAA6BJ,CAAC,CAACR,CAAD,CAAnC;AAAuC,QAAIa,CAAC,GAAC,CAAN;;AAAQ,SAAI,IAAIb,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAC,CAACe,MAAhB,EAAuBnB,CAAC,EAAxB,EAA2B;AAAC,YAAME,CAAC,GAACE,CAAC,CAACJ,CAAD,CAAT;AAAagC,MAAAA,CAAC,CAACtB,CAAD,EAAGR,CAAC,CAAC,CAAD,CAAJ,EAAQU,CAAR,CAAD,EAAYoB,CAAC,CAACrB,CAAD,EAAGT,CAAC,CAACA,CAAC,CAACiB,MAAF,GAAS,CAAV,CAAJ,EAAiBP,CAAjB,CAAb;AAAiC,UAAIN,CAAC,GAACK,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAN,GAAUA,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAC,CAAC,CAAD,CAAtB;;AAA0B,WAAI,IAAIX,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACE,CAAC,CAACiB,MAAF,GAAS,CAAvB,EAAyBnB,CAAC,EAA1B,EAA6BgC,CAAC,CAACtB,CAAD,EAAGR,CAAC,CAACF,CAAC,GAAC,CAAH,CAAJ,EAAUY,CAAV,CAAD,EAAcoB,CAAC,CAACrB,CAAD,EAAGT,CAAC,CAACF,CAAD,CAAJ,EAAQY,CAAR,CAAf,EAA0BN,CAAC,IAAEK,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAN,GAAUA,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAC,CAAC,CAAD,CAA7C;;AAAiDE,MAAAA,CAAC,IAAEP,CAAH;AAAK;;AAAAO,IAAAA,CAAC,GAACX,CAAC,CAACW,CAAD,EAAG,eAAH,EAAmBP,CAAnB,CAAH,EAAyBG,CAAC,CAACgC,IAAF,CAAO5B,CAAC,GAAC,CAAC,CAAV,CAAzB;AAAsC;;AAAA,SAAOJ,CAAP;AAAS;;AAAA,SAASmC,CAAT,CAAWxC,CAAX,EAAaE,CAAC,GAAC,QAAf,EAAwB;AAAC,MAAG,CAACF,CAAJ,EAAM,MAAM,IAAIJ,CAAJ,CAAM,qCAAN,EAA4C,4CAA5C,CAAN;AAAgG,MAAGI,CAAC,CAACmC,IAAF,CAAQvC,CAAC,IAAE,CAACqC,CAAC,CAACrC,CAAC,CAACwC,gBAAH,CAAb,CAAH,EAAuC,MAAM,IAAIxC,CAAJ,CAAM,4CAAN,EAAmD,yDAAnD,CAAN;AAAoH,QAAMQ,CAAC,GAAC,EAAR;;AAAW,OAAI,IAAIR,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAC,CAACe,MAAhB,EAAuBnB,CAAC,EAAxB,EAA2B;AAAC,UAAMS,CAAC,GAACL,CAAC,CAACJ,CAAD,CAAT;AAAA,UAAa;AAACwC,MAAAA,gBAAgB,EAAC9B;AAAlB,QAAqBD,CAAlC;AAAA,UAAoCE,CAAC,GAAC,eAAaF,CAAC,CAACoC,IAAf,GAAoBpC,CAAC,CAACqC,KAAtB,GAA4BrC,CAAC,CAACkC,KAApE;AAA0E,QAAI/B,CAAC,GAAC,CAAN;;AAAQ,SAAI,IAAIZ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACW,CAAC,CAACQ,MAAhB,EAAuBnB,CAAC,EAAxB,EAA2B;AAAC,YAAME,CAAC,GAACS,CAAC,CAACX,CAAD,CAAT;AAAa,UAAII,CAAC,GAAC,CAAN;;AAAQ,WAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACE,CAAC,CAACiB,MAAhB,EAAuBnB,CAAC,EAAxB,EAA2B;AAAC,cAAMM,CAAC,GAACJ,CAAC,CAACF,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,CAAR;AAAA,cAAkBQ,CAAC,GAACN,CAAC,CAACF,CAAD,CAAD,CAAK,CAAL,CAApB;AAAA,cAA4BS,CAAC,GAACP,CAAC,CAACF,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,CAA9B;AAAA,cAAwCW,CAAC,GAACT,CAAC,CAACF,CAAD,CAAD,CAAK,CAAL,CAA1C;;AAAkD,YAAGS,CAAC,KAAGE,CAAJ,IAAOL,CAAC,KAAGE,CAAd,EAAgB;AAAC,gBAAMR,CAAC,GAAC;AAAC+C,YAAAA,QAAQ,EAAC;AAAV,WAAR;AAAwBC,UAAAA,CAAC,CAAChD,CAAD,EAAG,CAACM,CAAD,EAAGG,CAAH,CAAH,EAAS,CAACD,CAAD,EAAGG,CAAH,CAAT,EAAeD,CAAf,CAAD,EAAmBN,CAAC,IAAEJ,CAAC,CAAC+C,QAAxB;AAAiC;AAAC;;AAAAnC,MAAAA,CAAC,IAAER,CAAH;AAAK;;AAAAQ,IAAAA,CAAC,GAACV,CAAC,CAACU,CAAD,EAAG,QAAH,EAAYN,CAAZ,CAAH,EAAkBE,CAAC,CAACiC,IAAF,CAAO7B,CAAP,CAAlB;AAA4B;;AAAA,SAAOJ,CAAP;AAAS;;AAAA,SAASkC,CAAT,CAAWxC,CAAX,EAAaE,CAAb,EAAe;AAAC,MAAG,eAAaF,CAAC,CAAC2C,IAAf,IAAqB,cAAY3C,CAAC,CAAC2C,IAAtC,EAA2C,MAAM,IAAI7C,CAAJ,CAAM,mCAAN,EAA0C,oDAA1C,CAAN;AAAsG,QAAK;AAACwC,IAAAA,gBAAgB,EAAClC;AAAlB,MAAqBJ,CAA1B;AAA4B,MAAG,CAACmC,CAAC,CAAC/B,CAAD,CAAL,EAAS,MAAM,IAAIN,CAAJ,CAAM,4CAAN,EAAmD,uDAAnD,CAAN;AAAkH,QAAMQ,CAAC,GAAC,eAAaN,CAAC,CAAC2C,IAAf,GAAoB3C,CAAC,CAAC4C,KAAtB,GAA4B5C,CAAC,CAACyC,KAAtC;AAAA,QAA4ChC,CAAC,GAAC,EAA9C;AAAA,QAAiDC,CAAC,GAAC,CAAC,CAAD,EAAG,CAAH,CAAnD;AAAA,QAAyDC,CAAC,GAAC;AAACkC,IAAAA,QAAQ,EAAC;AAAV,GAA3D;;AAA2E,OAAI,MAAM/C,CAAV,IAAeQ,CAAf,EAAiB;AAAC,UAAMN,CAAC,GAAC,EAAR;AAAWS,IAAAA,CAAC,CAAC8B,IAAF,CAAOvC,CAAP,GAAUA,CAAC,CAACuC,IAAF,CAAO,CAACzC,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAD,EAASA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAT,CAAP,CAAV;AAAoC,QAAIQ,CAAJ;AAAA,QAAMC,CAAN;AAAA,QAAQC,CAAC,GAACV,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAV;AAAA,QAAkBiB,CAAC,GAACjB,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAApB;;AAA4B,SAAI,IAAIW,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACX,CAAC,CAACmB,MAAF,GAAS,CAAvB,EAAyBR,CAAC,EAA1B,EAA6B;AAAC,UAAGH,CAAC,GAACR,CAAC,CAACW,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,CAAF,EAAYF,CAAC,GAACT,CAAC,CAACW,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,CAAd,EAAwBD,CAAC,KAAGF,CAAJ,IAAOS,CAAC,KAAGR,CAAtC,EAAwC;AAAS,YAAMe,CAAC,GAAC,CAACd,CAAD,EAAGO,CAAH,CAAR;AAAc+B,MAAAA,CAAC,CAACnC,CAAD,EAAG,CAACH,CAAD,EAAGO,CAAH,CAAH,EAAS,CAACT,CAAD,EAAGC,CAAH,CAAT,EAAeH,CAAf,CAAD;AAAmB,YAAK;AAAC2C,QAAAA,OAAO,EAAC1B,CAAT;AAAWwB,QAAAA,QAAQ,EAACf;AAApB,UAAuBnB,CAA5B;AAAA,YAA8BwB,CAAC,GAACL,CAAC,GAAC5B,CAAlC;;AAAoC,UAAGiC,CAAC,GAAC,CAAL,EAAO;AAAC,aAAI,IAAIrC,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAEqC,CAAC,GAAC,CAAjB,EAAmBrC,CAAC,EAApB,EAAuB;AAACkD,UAAAA,CAAC,CAACtC,CAAD,EAAGY,CAAH,EAAKD,CAAL,EAAOvB,CAAC,GAACI,CAAT,EAAWE,CAAX,CAAD,EAAeJ,CAAC,CAACuC,IAAF,CAAO7B,CAAC,CAACuC,KAAF,CAAQ,CAAR,CAAP,CAAf;AAAkC;;AAAAD,QAAAA,CAAC,CAACtC,CAAD,EAAGY,CAAH,EAAKD,CAAL,EAAO,CAACS,CAAC,GAACC,IAAI,CAACmB,KAAL,CAAWf,CAAC,GAAC,CAAb,IAAgBjC,CAAnB,IAAsB,CAA7B,EAA+BE,CAA/B,CAAD,EAAmCJ,CAAC,CAACuC,IAAF,CAAO7B,CAAC,CAACuC,KAAF,CAAQ,CAAR,CAAP,CAAnC;AAAsD;;AAAAD,MAAAA,CAAC,CAACtC,CAAD,EAAGY,CAAH,EAAKD,CAAL,EAAOS,CAAP,EAAS1B,CAAT,CAAD,EAAaJ,CAAC,CAACuC,IAAF,CAAO7B,CAAC,CAACuC,KAAF,CAAQ,CAAR,CAAP,CAAb,EAAgCzC,CAAC,GAACE,CAAC,CAAC,CAAD,CAAnC,EAAuCK,CAAC,GAACL,CAAC,CAAC,CAAD,CAA1C;AAA8C;AAAC;;AAAA,SAAM,eAAaV,CAAC,CAAC2C,IAAf,GAAoB,IAAIpC,CAAJ,CAAM;AAACqC,IAAAA,KAAK,EAACnC,CAAP;AAAS6B,IAAAA,gBAAgB,EAAClC;AAA1B,GAAN,CAApB,GAAwD,IAAII,CAAJ,CAAM;AAACiC,IAAAA,KAAK,EAAChC,CAAP;AAAS6B,IAAAA,gBAAgB,EAAClC;AAA1B,GAAN,CAA9D;AAAkG;;AAAA,SAAS4C,CAAT,CAAWlD,CAAX,EAAaE,CAAb,EAAeI,CAAf,EAAiBE,CAAjB,EAAmBC,CAAnB,EAAqB;AAAC,QAAMC,CAAC,GAACR,CAAC,CAAC,CAAD,CAAT;AAAA,QAAaS,CAAC,GAACT,CAAC,CAAC,CAAD,CAAhB;AAAA,QAAoBU,CAAC,GAACF,CAAC,GAACN,CAAxB;AAAA,QAA0BS,CAAC,GAACF,CAAC,GAACP,CAA9B;AAAA,QAAgCa,CAAC,GAACX,CAAC,GAACF,CAApC;AAAA,QAAsC;AAACK,IAAAA,CAAC,EAACe,CAAH;AAAKI,IAAAA,CAAC,EAACI,CAAP;AAAST,IAAAA,CAAC,EAACc;AAAX,MAAcd,CAAC,CAACd,CAAD,CAArD;AAAA,QAAyD6B,CAAC,GAACL,IAAI,CAACE,GAAL,CAASlB,CAAT,CAA3D;AAAA,QAAuE2B,CAAC,GAACX,IAAI,CAACoB,GAAL,CAASpC,CAAT,CAAzE;AAAA,QAAqFyB,CAAC,GAAC,CAAC,IAAEL,CAAH,IAAMJ,IAAI,CAACqB,GAAL,CAASzC,CAAT,CAA7F;AAAA,QAAyGqC,CAAC,GAAC,IAAEjB,IAAI,CAACC,IAAL,CAAU,IAAEQ,CAAC,GAACA,CAAd,CAA7G;AAAA,QAA8HM,CAAC,GAACN,CAAC,GAACQ,CAAlI;AAAA,QAAoIK,CAAC,GAACtB,IAAI,CAACuB,KAAL,CAAWd,CAAX,EAAaE,CAAb,CAAtI;AAAA,QAAsJa,CAAC,GAACP,CAAC,GAACZ,CAA1J;AAAA,QAA4JV,CAAC,GAAC6B,CAAC,GAACA,CAAhK;AAAA,QAAkKC,CAAC,GAAC,IAAE9B,CAAtK;AAAA,QAAwK+B,CAAC,GAACD,CAAC,IAAElC,CAAC,GAACA,CAAF,GAAIQ,CAAC,GAACA,CAAR,CAAD,IAAaA,CAAC,GAACA,CAAf,CAA1K;AAAA,QAA4L4B,CAAC,GAAC,IAAED,CAAC,GAAC,KAAF,IAAS,OAAKA,CAAC,IAAEA,CAAC,IAAE,MAAI,MAAIA,CAAV,CAAD,GAAc,GAAhB,CAAf,CAAhM;AAAA,QAAqOE,CAAC,GAACF,CAAC,GAAC,IAAF,IAAQ,MAAIA,CAAC,IAAEA,CAAC,IAAE,KAAG,KAAGA,CAAR,CAAD,GAAY,GAAd,CAAb,CAAvO;AAAwQ,MAAIG,CAAJ;AAAA,MAAMC,CAAN;AAAA,MAAQC,CAAR;AAAA,MAAUC,CAAV;AAAA,MAAYC,CAAC,GAAC1D,CAAC,IAAEwB,CAAC,GAAC4B,CAAJ,CAAf;AAAA,MAAsBO,CAAC,GAAC,IAAElC,IAAI,CAACmC,EAA/B;;AAAkC,SAAKnC,IAAI,CAACoC,GAAL,CAASH,CAAC,GAACC,CAAX,IAAc,KAAnB,GAA0BH,CAAC,GAAC/B,IAAI,CAACoB,GAAL,CAAS,IAAEE,CAAF,GAAIW,CAAb,CAAF,EAAkBJ,CAAC,GAAC7B,IAAI,CAACE,GAAL,CAAS+B,CAAT,CAApB,EAAgCH,CAAC,GAAC9B,IAAI,CAACoB,GAAL,CAASa,CAAT,CAAlC,EAA8CD,CAAC,GAACJ,CAAC,GAACC,CAAF,IAAKE,CAAC,GAACH,CAAC,GAAC,CAAF,IAAKE,CAAC,IAAE,IAAEC,CAAF,GAAIA,CAAJ,GAAM,CAAR,CAAD,GAAYH,CAAC,GAAC,CAAF,GAAIG,CAAJ,IAAO,IAAEF,CAAF,GAAIA,CAAJ,GAAM,CAAb,KAAiB,IAAEE,CAAF,GAAIA,CAAJ,GAAM,CAAvB,CAAjB,CAAP,CAAhD,EAAoGG,CAAC,GAACD,CAAtG,EAAwGA,CAAC,GAAC1D,CAAC,IAAEwB,CAAC,GAAC4B,CAAJ,CAAD,GAAQK,CAAlH;;AAAoH,QAAMK,CAAC,GAACtB,CAAC,GAACc,CAAF,GAAIZ,CAAC,GAACa,CAAF,GAAInB,CAAhB;AAAA,QAAkB2B,CAAC,GAACtC,IAAI,CAACuB,KAAL,CAAWR,CAAC,GAACe,CAAF,GAAIb,CAAC,GAACY,CAAF,GAAIlB,CAAnB,EAAqB,CAAC,IAAEP,CAAH,IAAMJ,IAAI,CAACC,IAAL,CAAUN,CAAC,GAAC0C,CAAC,GAACA,CAAd,CAA3B,CAApB;AAAA,QAAiEE,CAAC,GAACvC,IAAI,CAACuB,KAAL,CAAWM,CAAC,GAACxB,CAAb,EAAeY,CAAC,GAACa,CAAF,GAAIf,CAAC,GAACc,CAAF,GAAIlB,CAAvB,CAAnE;AAAA,QAA6F6B,CAAC,GAACpC,CAAC,GAAC,EAAF,GAAKqB,CAAL,IAAQ,IAAErB,CAAC,IAAE,IAAE,IAAEqB,CAAN,CAAX,CAA/F;AAAA,QAAoHgB,CAAC,GAACH,CAAC,GAACnE,CAAxH;AAAA,QAA0HuE,CAAC,GAAC,CAAC/D,CAAC,IAAE4D,CAAC,GAAC,CAAC,IAAEC,CAAH,IAAMpC,CAAN,GAAQoB,CAAR,IAAWS,CAAC,GAACO,CAAC,GAACX,CAAF,IAAKE,CAAC,GAACS,CAAC,GAACV,CAAF,IAAK,IAAEC,CAAF,GAAIA,CAAJ,GAAM,CAAX,CAAP,CAAb,CAAJ,CAAF,IAA4C5D,CAAxK;AAA0K,SAAOJ,CAAC,CAAC,CAAD,CAAD,GAAK2E,CAAL,EAAO3E,CAAC,CAAC,CAAD,CAAD,GAAK0E,CAAZ,EAAc1E,CAArB;AAAuB;;AAAA,SAASgD,CAAT,CAAWhD,CAAX,EAAaE,CAAb,EAAeI,CAAf,EAAiBE,CAAjB,EAAmB;AAAC,QAAMC,CAAC,GAACP,CAAC,CAAC,CAAD,CAAD,GAAKE,CAAb;AAAA,QAAeM,CAAC,GAACR,CAAC,CAAC,CAAD,CAAD,GAAKE,CAAtB;AAAA,QAAwBO,CAAC,GAACL,CAAC,CAAC,CAAD,CAAD,GAAKF,CAA/B;AAAA,QAAiCQ,CAAC,GAACN,CAAC,CAAC,CAAD,CAAD,GAAKF,CAAxC;AAAA,QAA0C;AAACK,IAAAA,CAAC,EAACI,CAAH;AAAKe,IAAAA,CAAC,EAACX,CAAP;AAASM,IAAAA,CAAC,EAACC,CAAX;AAAaM,IAAAA,MAAM,EAACE;AAApB,MAAuBT,CAAC,CAACf,CAAD,CAAlE;AAAA,QAAsE6B,CAAC,GAAC1B,CAAC,GAACF,CAA1E;AAAA,QAA4E6B,CAAC,GAACL,IAAI,CAAC2C,IAAL,CAAU,CAAC,IAAEpD,CAAH,IAAMS,IAAI,CAACqB,GAAL,CAAS5C,CAAT,CAAhB,CAA9E;AAAA,QAA2GkC,CAAC,GAACX,IAAI,CAAC2C,IAAL,CAAU,CAAC,IAAEpD,CAAH,IAAMS,IAAI,CAACqB,GAAL,CAAS1C,CAAT,CAAhB,CAA7G;AAAA,QAA0I8B,CAAC,GAACT,IAAI,CAACE,GAAL,CAASG,CAAT,CAA5I;AAAA,QAAwJY,CAAC,GAACjB,IAAI,CAACoB,GAAL,CAASf,CAAT,CAA1J;AAAA,QAAsKU,CAAC,GAACf,IAAI,CAACE,GAAL,CAASS,CAAT,CAAxK;AAAA,QAAoLW,CAAC,GAACtB,IAAI,CAACoB,GAAL,CAAST,CAAT,CAAtL;AAAkM,MAAIa,CAAJ;AAAA,MAAM7B,CAAN;AAAA,MAAQ8B,CAAR;AAAA,MAAUC,CAAV;AAAA,MAAYC,CAAZ;AAAA,MAAcC,CAAd;AAAA,MAAgBC,CAAhB;AAAA,MAAkBC,CAAlB;AAAA,MAAoBC,CAApB;AAAA,MAAsBC,CAAtB;AAAA,MAAwBC,CAAC,GAAC,GAA1B;AAAA,MAA8BC,CAAC,GAAC9B,CAAhC;;AAAkC,KAAE;AAAC,QAAGyB,CAAC,GAAC7B,IAAI,CAACE,GAAL,CAASgC,CAAT,CAAF,EAAcJ,CAAC,GAAC9B,IAAI,CAACoB,GAAL,CAASc,CAAT,CAAhB,EAA4BT,CAAC,GAACzB,IAAI,CAACC,IAAL,CAAUqB,CAAC,GAACO,CAAF,IAAKP,CAAC,GAACO,CAAP,IAAU,CAACZ,CAAC,GAACF,CAAF,GAAIN,CAAC,GAACa,CAAF,GAAIQ,CAAT,KAAab,CAAC,GAACF,CAAF,GAAIN,CAAC,GAACa,CAAF,GAAIQ,CAArB,CAApB,CAA9B,EAA2E,MAAIL,CAAlF,EAAoF,OAAO1D,CAAC,CAAC+C,QAAF,GAAW,CAAX,EAAa/C,CAAC,CAACiD,OAAF,GAAU,KAAK,CAA5B,EAA8BjD,CAAC,CAAC6E,cAAF,GAAiB,KAAK,CAApD,EAAsD7E,CAA7D;AAA+D4D,IAAAA,CAAC,GAAClB,CAAC,GAACM,CAAF,GAAIE,CAAC,GAACK,CAAF,GAAIQ,CAAV,EAAYF,CAAC,GAAC5B,IAAI,CAACuB,KAAL,CAAWE,CAAX,EAAaE,CAAb,CAAd,EAA8BI,CAAC,GAACd,CAAC,GAACK,CAAF,GAAIO,CAAJ,GAAMJ,CAAtC,EAAwC9B,CAAC,GAAC,IAAEoC,CAAC,GAACA,CAA9C,EAAgDL,CAAC,GAACC,CAAC,GAAC,IAAElB,CAAF,GAAIM,CAAJ,GAAMpB,CAA1D,EAA4DN,KAAK,CAACqC,CAAD,CAAL,KAAWA,CAAC,GAAC,CAAb,CAA5D,EAA4EM,CAAC,GAACzC,CAAC,GAAC,EAAF,GAAKI,CAAL,IAAQ,IAAEJ,CAAC,IAAE,IAAE,IAAEI,CAAN,CAAX,CAA9E,EAAmG6B,CAAC,GAACU,CAArG,EAAuGA,CAAC,GAAC9B,CAAC,GAAC,CAAC,IAAE4B,CAAH,IAAMzC,CAAN,GAAQwC,CAAR,IAAWH,CAAC,GAACI,CAAC,GAACP,CAAF,IAAKC,CAAC,GAACM,CAAC,GAACL,CAAF,IAAK,IAAED,CAAF,GAAIA,CAAJ,GAAM,CAAX,CAAP,CAAb,CAA3G;AAA+I,GAArS,QAA2S1B,IAAI,CAACoC,GAAL,CAASF,CAAC,GAACV,CAAX,IAAc,KAAd,IAAqB,EAAES,CAAF,GAAI,CAApU;;AAAuU,MAAG,MAAIA,CAAP,EAAS;AAAC,UAAMhE,CAAC,GAAC8B,CAAR;AAAA,UAAU1B,CAAC,GAAC2B,IAAI,CAAC6C,IAAL,CAAU7C,IAAI,CAACE,GAAL,CAASzB,CAAT,IAAYuB,IAAI,CAACE,GAAL,CAASvB,CAAT,CAAZ,GAAwBqB,IAAI,CAACoB,GAAL,CAAS3C,CAAT,IAAYuB,IAAI,CAACoB,GAAL,CAASzC,CAAT,CAAZ,GAAwBqB,IAAI,CAACoB,GAAL,CAAS1C,CAAC,GAACF,CAAX,CAA1D,IAAyEP,CAArF;AAAA,UAAuFM,CAAC,GAACG,CAAC,GAACF,CAA3F;AAAA,UAA6FI,CAAC,GAACoB,IAAI,CAACE,GAAL,CAAS3B,CAAT,IAAYyB,IAAI,CAACoB,GAAL,CAASzC,CAAT,CAA3G;AAAA,UAAuHK,CAAC,GAACgB,IAAI,CAACoB,GAAL,CAAS3C,CAAT,IAAYuB,IAAI,CAACE,GAAL,CAASvB,CAAT,CAAZ,GAAwBqB,IAAI,CAACE,GAAL,CAASzB,CAAT,IAAYuB,IAAI,CAACoB,GAAL,CAASzC,CAAT,CAAZ,GAAwBqB,IAAI,CAACoB,GAAL,CAAS7C,CAAT,CAAzK;AAAA,UAAqLgB,CAAC,GAACS,IAAI,CAACuB,KAAL,CAAW3C,CAAX,EAAaI,CAAb,CAAvL;AAAuM,WAAOjB,CAAC,CAACiD,OAAF,GAAUzB,CAAC,GAACpB,CAAZ,EAAcJ,CAAC,CAAC+C,QAAF,GAAWzC,CAAzB,EAA2BN,CAAC,CAAC6E,cAAF,GAAiB,KAAK,CAAjD,EAAmD7E,CAA1D;AAA4D;;AAAA,QAAMsE,CAAC,GAAC1C,CAAC,IAAEf,CAAC,GAACA,CAAF,GAAII,CAAC,GAACA,CAAR,CAAD,IAAaA,CAAC,GAACA,CAAf,CAAR;AAAA,QAA0BsD,CAAC,GAACD,CAAC,GAAC,IAAF,IAAQ,MAAIA,CAAC,IAAEA,CAAC,IAAE,KAAG,KAAGA,CAAR,CAAD,GAAY,GAAd,CAAb,CAA5B;AAAA,QAA6DE,CAAC,GAACvD,CAAC,IAAE,IAAEqD,CAAC,GAAC,KAAF,IAAS,OAAKA,CAAC,IAAEA,CAAC,IAAE,MAAI,MAAIA,CAAV,CAAD,GAAc,GAAhB,CAAf,CAAJ,CAAD,IAA4CT,CAAC,GAACU,CAAC,GAACb,CAAF,IAAKC,CAAC,GAACY,CAAC,GAAC,CAAF,IAAKX,CAAC,IAAE,IAAED,CAAF,GAAIA,CAAJ,GAAM,CAAR,CAAD,GAAYY,CAAC,GAAC,CAAF,GAAIZ,CAAJ,IAAO,IAAED,CAAF,GAAIA,CAAJ,GAAM,CAAb,KAAiB,IAAEC,CAAF,GAAIA,CAAJ,GAAM,CAAvB,CAAjB,CAAP,CAA9C,CAA/D;AAAA,QAAkKc,CAAC,GAACxC,IAAI,CAACuB,KAAL,CAAWD,CAAC,GAACtB,IAAI,CAACE,GAAL,CAASgC,CAAT,CAAb,EAAyBjB,CAAC,GAACF,CAAF,GAAIN,CAAC,GAACa,CAAF,GAAItB,IAAI,CAACoB,GAAL,CAASc,CAAT,CAAjC,CAApK;AAAA,QAAkNO,CAAC,GAACzC,IAAI,CAACuB,KAAL,CAAWN,CAAC,GAACjB,IAAI,CAACE,GAAL,CAASgC,CAAT,CAAb,EAAyBjB,CAAC,GAACF,CAAF,GAAIf,IAAI,CAACoB,GAAL,CAASc,CAAT,CAAJ,GAAgBzB,CAAC,GAACa,CAA3C,CAApN;AAAkQ,SAAOvD,CAAC,CAACiD,OAAF,GAAUwB,CAAC,GAACrE,CAAZ,EAAcJ,CAAC,CAAC+C,QAAF,GAAWyB,CAAzB,EAA2BxE,CAAC,CAAC6E,cAAF,GAAiBH,CAAC,GAACtE,CAA9C,EAAgDJ,CAAvD;AAAyD;;AAAA,SAASuD,CAAT,CAAWnD,CAAX,EAAaE,CAAb,EAAeE,CAAC,GAAC,QAAjB,EAA0B;AAAC,MAAG,CAACJ,CAAD,IAAI,CAACE,CAAR,EAAU,MAAM,IAAIN,CAAJ,CAAM,sCAAN,EAA6C,0CAA7C,CAAN;AAA+F,MAAG,CAACI,CAAC,CAACoC,gBAAH,IAAqB,CAAClC,CAAC,CAACkC,gBAA3B,EAA4C,MAAM,IAAIxC,CAAJ,CAAM,sCAAN,EAA6C,0DAA7C,CAAN;AAA+G,MAAG,CAACI,CAAC,CAACoC,gBAAF,CAAmBuC,MAAnB,CAA0BzE,CAAC,CAACkC,gBAA5B,CAAJ,EAAkD,MAAM,IAAIxC,CAAJ,CAAM,sCAAN,EAA6C,qDAA7C,CAAN;AAA0G,QAAK;AAACwC,IAAAA,gBAAgB,EAAC/B;AAAlB,MAAqBL,CAA1B;AAA4B,MAAG,CAACiC,CAAC,CAAC5B,CAAD,CAAL,EAAS,MAAM,IAAIT,CAAJ,CAAM,iCAAN,EAAwC,mDAAxC,CAAN;AAAmG,MAAGI,CAAC,CAAC2E,MAAF,CAASzE,CAAT,CAAH,EAAe,OAAM;AAACyC,IAAAA,QAAQ,EAAC,CAAV;AAAYE,IAAAA,OAAO,EAAC,CAApB;AAAsB4B,IAAAA,cAAc,EAAC;AAArC,GAAN;AAA8C,QAAMnE,CAAC,GAAC;AAACqC,IAAAA,QAAQ,EAAC;AAAV,GAAR;AAAwB,SAAOC,CAAC,CAACtC,CAAD,EAAG,CAACN,CAAC,CAACyD,CAAH,EAAKzD,CAAC,CAAC4C,CAAP,CAAH,EAAa,CAAC1C,CAAC,CAACuD,CAAH,EAAKvD,CAAC,CAAC0C,CAAP,CAAb,EAAuBvC,CAAvB,CAAD,EAA2BC,CAAC,CAACqC,QAAF,GAAW7C,CAAC,CAACQ,CAAC,CAACqC,QAAH,EAAY,QAAZ,EAAqBvC,CAArB,CAAvC,EAA+DE,CAAtE;AAAwE;;AAAA,SAAS+C,CAAT,CAAWvD,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAAiB;AAAC,MAAG,CAACJ,CAAD,IAAI,QAAME,CAAV,IAAa,QAAME,CAAtB,EAAwB,MAAM,IAAIN,CAAJ,CAAM,wCAAN,EAA+C,uDAA/C,CAAN;AAA8G,MAAGM,CAAC,GAAC,CAAF,IAAKA,CAAC,GAAC,GAAV,EAAc,MAAM,IAAIN,CAAJ,CAAM,gCAAN,EAAuC,4EAAvC,CAAN;AAA2H,MAAG,CAACE,CAAC,CAACsC,gBAAN,EAAuB,MAAM,IAAIxC,CAAJ,CAAM,+CAAN,EAAsD,+CAAtD,CAAN;AAA6G,QAAK;AAACwC,IAAAA,gBAAgB,EAAChC;AAAlB,MAAqBN,CAA1B;AAA4B,MAAG,CAACmC,CAAC,CAAC7B,CAAD,CAAL,EAAS,MAAM,IAAIR,CAAJ,CAAM,iCAAN,EAAwC,mDAAxC,CAAN;AAAmG,QAAMS,CAAC,GAAC,CAAC,CAAD,EAAG,CAAH,CAAR;AAAc,SAAOyC,CAAC,CAACzC,CAAD,EAAG,CAACP,CAAC,CAAC2D,CAAH,EAAK3D,CAAC,CAAC8C,CAAP,CAAH,EAAa1C,CAAb,EAAeF,CAAf,EAAiBI,CAAjB,CAAD,EAAqB,IAAIG,CAAJ,CAAM;AAACkD,IAAAA,CAAC,EAACpD,CAAC,CAAC,CAAD,CAAJ;AAAQuC,IAAAA,CAAC,EAACvC,CAAC,CAAC,CAAD,CAAX;AAAe+B,IAAAA,gBAAgB,EAAChC;AAAhC,GAAN,CAA5B;AAAsE;;AAAA,SAAO0C,CAAC,IAAI8B,oBAAZ,EAAiC1C,CAAC,IAAI2C,aAAtC,EAAoDvC,CAAC,IAAIwC,eAAzD,EAAyE3B,CAAC,IAAI4B,gBAA9E,EAA+FvC,CAAC,IAAIwC,eAApG,EAAoHpC,CAAC,IAAIqC,qBAAzH,EAA+IhD,CAAC,IAAIiD,WAApJ,EAAgK7B,CAAC,IAAI8B,iBAArK","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import e from\"../../core/Error.js\";import{convertUnit as t}from\"../../core/unitUtils.js\";import{toRadians as n,spheroids as i,WKT_SPHEROID_REGEX as s}from\"./geodesicConstants.js\";import a from\"../Polyline.js\";import r from\"../Polygon.js\";import o from\"../Point.js\";import c from\"../SpatialReference.js\";function l(e){if(!e)return null;if(e.isGeographic&&e.wkid){const t=i[e.wkid];if(t)return t}if(e.wkt){const t=h(e.wkt);if(t)return t}return null}function h(e){const t=s.exec(e);if(!t||2!==t.length)return null;const n=t[1].split(\",\");if(!n||n.length<3)return null;const i=parseFloat(n[1]),a=parseFloat(n[2]);if(isNaN(i)||isNaN(a))return null;return{a:i,f:0===a?0:1/a}}function p(e){return\"b\"in e&&\"eSq\"in e&&\"radius\"in e}function f(e){const t=l(e||c.WGS84);if(p(t))return t;const n=t.a*(1-t.f);return Object.assign(t,{b:n,eSq:1-(n/t.a)**2,radius:(2*t.a+n)/3,densificationRatio:1e4/((2*t.a+n)/3)})}function u(e,t,i){const{a:s,eSq:a}=f(i),r=Math.sqrt(a),o=Math.sin(t[1]*n),c=s*t[0]*n;let l;if(a>0){l=s*((1-a)*(o/(1-a*(o*o))-1/(2*r)*Math.log((1-r*o)/(1+r*o))))*.5}else l=s*o;return e[0]=c,e[1]=l,e}function d(e){return null!==l(e)}function m(n,i=\"square-meters\"){if(n.some((e=>!d(e.spatialReference))))throw new e(\"geodesic-areas:invalid-spatial-reference\",\"the input geometries spatial reference is not supported\");const s=[];for(let e=0;e<n.length;e++){const t=n[e],i=t.spatialReference,{radius:a,densificationRatio:r}=f(i),o=a*r;s.push(M(t,o))}const a=[],r=[0,0],o=[0,0];for(let e=0;e<s.length;e++){const{rings:n,spatialReference:c}=s[e];let l=0;for(let e=0;e<n.length;e++){const t=n[e];u(r,t[0],c),u(o,t[t.length-1],c);let i=o[0]*r[1]-r[0]*o[1];for(let e=0;e<t.length-1;e++)u(r,t[e+1],c),u(o,t[e],c),i+=o[0]*r[1]-r[0]*o[1];l+=i}l=t(l,\"square-meters\",i),a.push(l/-2)}return a}function g(n,i=\"meters\"){if(!n)throw new e(\"geodesic-lengths:invalid-geometries\",\"the input geometries type is not supported\");if(n.some((e=>!d(e.spatialReference))))throw new e(\"geodesic-lengths:invalid-spatial-reference\",\"the input geometries spatial reference is not supported\");const s=[];for(let e=0;e<n.length;e++){const a=n[e],{spatialReference:r}=a,o=\"polyline\"===a.type?a.paths:a.rings;let c=0;for(let e=0;e<o.length;e++){const t=o[e];let n=0;for(let e=1;e<t.length;e++){const i=t[e-1][0],s=t[e][0],a=t[e-1][1],o=t[e][1];if(a!==o||i!==s){const e={distance:null};y(e,[i,a],[s,o],r),n+=e.distance}}c+=n}c=t(c,\"meters\",i),s.push(c)}return s}function M(t,n){if(\"polyline\"!==t.type&&\"polygon\"!==t.type)throw new e(\"geodesic-densify:invalid-geometry\",\"the input geometry is neither polyline nor polygon\");const{spatialReference:i}=t;if(!d(i))throw new e(\"geodesic-densify:invalid-spatial-reference\",\"the input geometry spatial reference is not supported\");const s=\"polyline\"===t.type?t.paths:t.rings,o=[],c=[0,0],l={distance:null};for(const e of s){const t=[];o.push(t),t.push([e[0][0],e[0][1]]);let s,a,r=e[0][0],h=e[0][1];for(let o=0;o<e.length-1;o++){if(s=e[o+1][0],a=e[o+1][1],r===s&&h===a)continue;const p=[r,h];y(l,[r,h],[s,a],i);const{azimuth:f,distance:u}=l,d=u/n;if(d>1){for(let e=1;e<=d-1;e++){w(c,p,f,e*n,i),t.push(c.slice(0))}w(c,p,f,(u+Math.floor(d-1)*n)/2,i),t.push(c.slice(0))}w(c,p,f,u,i),t.push(c.slice(0)),r=c[0],h=c[1]}}return\"polyline\"===t.type?new a({paths:o,spatialReference:i}):new r({rings:o,spatialReference:i})}function w(e,t,i,s,a){const r=t[0],o=t[1],c=r*n,l=o*n,h=i*n,{a:p,b:u,f:d}=f(a),m=Math.sin(h),g=Math.cos(h),M=(1-d)*Math.tan(l),w=1/Math.sqrt(1+M*M),y=M*w,R=Math.atan2(M,g),v=w*m,b=v*v,q=1-b,z=q*(p*p-u*u)/(u*u),j=1+z/16384*(4096+z*(z*(320-175*z)-768)),x=z/1024*(256+z*(z*(74-47*z)-128));let N,S,k,A,P=s/(u*j),F=2*Math.PI;for(;Math.abs(P-F)>1e-12;)k=Math.cos(2*R+P),N=Math.sin(P),S=Math.cos(P),A=x*N*(k+x/4*(S*(2*k*k-1)-x/6*k*(4*N*N-3)*(4*k*k-3))),F=P,P=s/(u*j)+A;const G=y*N-w*S*g,C=Math.atan2(y*S+w*N*g,(1-d)*Math.sqrt(b+G*G)),E=Math.atan2(N*m,w*S-y*N*g),I=d/16*q*(4+d*(4-3*q)),O=C/n,U=(c+(E-(1-I)*d*v*(P+I*N*(k+I*S*(2*k*k-1)))))/n;return e[0]=U,e[1]=O,e}function y(e,t,i,s){const a=t[0]*n,r=t[1]*n,o=i[0]*n,c=i[1]*n,{a:l,b:h,f:p,radius:u}=f(s),d=o-a,m=Math.atan((1-p)*Math.tan(r)),g=Math.atan((1-p)*Math.tan(c)),M=Math.sin(m),w=Math.cos(m),y=Math.sin(g),R=Math.cos(g);let v,b,q,z,j,x,N,S,k,A,P=1e3,F=d;do{if(N=Math.sin(F),S=Math.cos(F),q=Math.sqrt(R*N*(R*N)+(w*y-M*R*S)*(w*y-M*R*S)),0===q)return e.distance=0,e.azimuth=void 0,e.reverseAzimuth=void 0,e;j=M*y+w*R*S,x=Math.atan2(q,j),k=w*R*N/q,b=1-k*k,z=j-2*M*y/b,isNaN(z)&&(z=0),A=p/16*b*(4+p*(4-3*b)),v=F,F=d+(1-A)*p*k*(x+A*q*(z+A*j*(2*z*z-1)))}while(Math.abs(F-v)>1e-12&&--P>0);if(0===P){const t=u,i=Math.acos(Math.sin(r)*Math.sin(c)+Math.cos(r)*Math.cos(c)*Math.cos(o-a))*t,s=o-a,l=Math.sin(s)*Math.cos(c),h=Math.cos(r)*Math.sin(c)-Math.sin(r)*Math.cos(c)*Math.cos(s),p=Math.atan2(l,h);return e.azimuth=p/n,e.distance=i,e.reverseAzimuth=void 0,e}const G=b*(l*l-h*h)/(h*h),C=G/1024*(256+G*(G*(74-47*G)-128)),E=h*(1+G/16384*(4096+G*(G*(320-175*G)-768)))*(x-C*q*(z+C/4*(j*(2*z*z-1)-C/6*z*(4*q*q-3)*(4*z*z-3)))),I=Math.atan2(R*Math.sin(F),w*y-M*R*Math.cos(F)),O=Math.atan2(w*Math.sin(F),w*y*Math.cos(F)-M*R);return e.azimuth=I/n,e.distance=E,e.reverseAzimuth=O/n,e}function R(n,i,s=\"meters\"){if(!n||!i)throw new e(\"geodesic-distance:missing-parameters\",\"one or both input parameters are missing\");if(!n.spatialReference||!i.spatialReference)throw new e(\"geodesic-distance:invalid-parameters\",\"one or both input points do not have a spatial reference\");if(!n.spatialReference.equals(i.spatialReference))throw new e(\"geodesic-distance:invalid-parameters\",\"spatial references of input parameters do not match\");const{spatialReference:a}=n;if(!d(a))throw new e(\"geodesic-distance:not-supported\",\"input geometry spatial reference is not supported\");if(n.equals(i))return{distance:0,azimuth:0,reverseAzimuth:0};const r={distance:null};return y(r,[n.x,n.y],[i.x,i.y],a),r.distance=t(r.distance,\"meters\",s),r}function v(t,n,i){if(!t||null==n||null==i)throw new e(\"point-from-distance:missing-parameters\",\"one or more input parameters are missing or undefined\");if(i<0||i>360)throw new e(\"point-from-distance:-of-bounds\",\"azimuth is restricted to angles between, and including, 0° to 360° degrees\");if(!t.spatialReference)throw new e(\"point-from-distance:missing-spatial-reference\",\"the input point must have a spatial reference\");const{spatialReference:s}=t;if(!d(s))throw new e(\"geodesic-distance:not-supported\",\"input geometry spatial reference is not supported\");const a=[0,0];return w(a,[t.x,t.y],i,n,s),new o({x:a[0],y:a[1],spatialReference:s})}export{w as directGeodeticSolver,m as geodesicAreas,M as geodesicDensify,R as geodesicDistance,g as geodesicLengths,y as inverseGeodeticSolver,d as isSupported,v as pointFromDistance};\n"]},"metadata":{},"sourceType":"module"}