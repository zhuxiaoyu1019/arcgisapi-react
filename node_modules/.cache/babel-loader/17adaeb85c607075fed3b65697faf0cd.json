{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/_rollupPluginBabelHelpers.js\";\nimport \"../../geometry.js\";\nimport t from \"../../request.js\";\nimport r from \"../../core/Error.js\";\nimport { find as n } from \"../../core/interatorUtils.js\";\nimport { isNone as a, isSome as o } from \"../../core/maybe.js\";\nimport { eachAlways as s } from \"../../core/promiseUtils.js\";\nimport { isHTTPSProtocol as i, hasSameOrigin as u, toHTTPS as l } from \"../../core/urlUtils.js\";\nimport { initializeProjection as p, project as c } from \"../../geometry/projection.js\";\nimport { WGS84 as m, equals as y } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { featureGeometryTypeKebabDictionary as f } from \"../../geometry/support/typeUtils.js\";\nimport { getGeometryType as d } from \"../graphics/sources/geojson/geojson.js\";\nimport { parseDate as g } from \"./dateUtils.js\";\nimport { iterateXML as w, visitXML as b } from \"./xmlUtils.js\";\nimport h from \"../support/Field.js\";\nimport T from \"../../geometry/SpatialReference.js\";\nimport F from \"../../geometry/Extent.js\";\nconst S = \"xlink:href\",\n      x = \"2.0.0\",\n      v = \"__esri_wfs_id__\",\n      C = \"wfs-layer:getWFSLayerTypeInfo-error\",\n      E = \"wfs-layer:empty-service\",\n      P = \"wfs-layer:feature-type-not-found\",\n      N = \"wfs-layer:geojson-not-supported\",\n      j = \"wfs-layer:kvp-encoding-not-supported\",\n      R = \"wfs-layer:malformed-json\",\n      A = \"wfs-layer:unknown-geometry-type\",\n      k = \"wfs-layer:unknown-field-type\",\n      G = \"wfs-layer:unsupported-spatial-reference\",\n      U = \"wfs-layer:unsupported-wfs-version\";\n\nasync function D(e, r) {\n  const n = I((await t(e, {\n    responseType: \"text\",\n    query: {\n      SERVICE: \"WFS\",\n      REQUEST: \"GetCapabilities\",\n      VERSION: x,\n      ...(null == r ? void 0 : r.customParameters)\n    },\n    signal: null == r ? void 0 : r.signal\n  })).data);\n  return M(e, n), n;\n}\n\nfunction I(e) {\n  const t = te(e);\n  ne(t), ae(t);\n  const r = t.firstElementChild,\n        n = new Map();\n  return {\n    operations: L(r),\n\n    get featureTypes() {\n      return Array.from($(r, n));\n    },\n\n    readFeatureTypes: () => $(r, n)\n  };\n}\n\nconst O = new Set([\"json\", \"application/json\", \"geojson\", \"application/json; subtype=geojson\"]);\n\nfunction L(e) {\n  let t = !1;\n  const n = {\n    GetCapabilities: {\n      url: \"\"\n    },\n    DescribeFeatureType: {\n      url: \"\"\n    },\n    GetFeature: {\n      url: \"\",\n      outputFormat: null,\n      supportsPagination: !1\n    }\n  };\n  if (b(e, {\n    OperationsMetadata: {\n      Operation: e => {\n        switch (e.getAttribute(\"name\")) {\n          case \"GetCapabilities\":\n            return {\n              DCP: {\n                HTTP: {\n                  Get: e => {\n                    n.GetCapabilities.url = e.getAttribute(S);\n                  }\n                }\n              }\n            };\n\n          case \"DescribeFeatureType\":\n            return {\n              DCP: {\n                HTTP: {\n                  Get: e => {\n                    n.DescribeFeatureType.url = e.getAttribute(S);\n                  }\n                }\n              }\n            };\n\n          case \"GetFeature\":\n            return {\n              DCP: {\n                HTTP: {\n                  Get: e => {\n                    n.GetFeature.url = e.getAttribute(S);\n                  }\n                }\n              },\n              Parameter: e => {\n                if (\"outputFormat\" === e.getAttribute(\"name\")) return {\n                  AllowedValues: {\n                    Value: e => {\n                      const t = e.textContent;\n                      O.has(t.toLowerCase()) && (n.GetFeature.outputFormat = t);\n                    }\n                  }\n                };\n              }\n            };\n        }\n      },\n      Constraint: e => {\n        switch (e.getAttribute(\"name\")) {\n          case \"KVPEncoding\":\n            return {\n              DefaultValue: e => {\n                t = \"true\" === e.textContent.toLowerCase();\n              }\n            };\n\n          case \"ImplementsResultPaging\":\n            return {\n              DefaultValue: e => {\n                n.GetFeature.supportsPagination = \"true\" === e.textContent.toLowerCase();\n              }\n            };\n        }\n      }\n    }\n  }), !t) throw new r(j, \"WFS service doesn't support key/value pair (KVP) encoding\");\n  if (a(n.GetFeature.outputFormat)) throw new r(N, \"WFS service doesn't support GeoJSON output format\");\n  return n;\n}\n\nfunction M(e, t) {\n  i(e) && (u(e, t.operations.DescribeFeatureType.url, !0) && (t.operations.DescribeFeatureType.url = l(t.operations.DescribeFeatureType.url)), u(e, t.operations.GetFeature.url, !0) && (t.operations.GetFeature.url = l(t.operations.GetFeature.url)));\n}\n\nfunction $(t, r) {\n  return w(t, {\n    FeatureTypeList: {\n      FeatureType: t => {\n        if (r.has(t)) return r.get(t);\n\n        const n = {\n          typeName: \"undefined:undefined\",\n          name: \"\",\n          title: \"\",\n          description: \"\",\n          extent: null,\n          namespacePrefix: \"\",\n          namespaceUri: \"\",\n          supportedSpatialReferences: []\n        },\n              a = new Set([4326]),\n              o = t => {\n          var r, n;\n          const o = parseInt(null == (r = t.textContent.match(e(/([0-9]+$)/i, {\n            wkid: 1\n          }))) || null == (n = r.groups) ? void 0 : n.wkid, 10);\n          Number.isNaN(o) || a.add(o);\n        };\n\n        return b(t, {\n          Name: e => {\n            const {\n              name: t,\n              prefix: r\n            } = re(e.textContent);\n            n.typeName = `${r}:${t}`, n.name = t, n.namespacePrefix = r, n.namespaceUri = e.lookupNamespaceURI(r);\n          },\n          Abstract: e => {\n            n.description = e.textContent;\n          },\n          Title: e => {\n            n.title = e.textContent;\n          },\n          WGS84BoundingBox: e => {\n            n.extent = V(e);\n          },\n          DefaultSRS: o,\n          DefaultCRS: o,\n          OtherSRS: o,\n          OtherCRS: o\n        }), n.title || (n.title = n.name), n.supportedSpatialReferences.push(...a), r.set(t, n), n;\n      }\n    }\n  });\n}\n\nfunction V(e) {\n  let t, r, n, a;\n\n  for (const o of e.children) switch (o.localName) {\n    case \"LowerCorner\":\n      [t, r] = o.textContent.split(\" \").map(e => Number.parseFloat(e));\n      break;\n\n    case \"UpperCorner\":\n      [n, a] = o.textContent.split(\" \").map(e => Number.parseFloat(e));\n  }\n\n  return {\n    xmin: t,\n    ymin: r,\n    xmax: n,\n    ymax: a,\n    spatialReference: m\n  };\n}\n\nfunction W(e, t, r) {\n  return n(e, e => r ? e.name === t && e.namespaceUri === r : e.typeName === t || e.name === t);\n}\n\nasync function X(e, t, r, n = {}) {\n  var a;\n  const {\n    featureType: o,\n    extent: s\n  } = await Y(e, t, r, n),\n        {\n    fields: i,\n    geometryType: u,\n    swapXY: l,\n    objectIdField: p,\n    geometryField: c\n  } = await q(e, o.typeName, n);\n  return {\n    url: e.operations.GetCapabilities.url,\n    name: o.name,\n    namespaceUri: o.namespaceUri,\n    fields: i,\n    geometryField: c,\n    geometryType: u,\n    objectIdField: p,\n    spatialReference: null != (a = n.spatialReference) ? a : T.WGS84,\n    extent: s,\n    swapXY: l,\n    wfsCapabilities: e,\n    customParameters: n.customParameters\n  };\n}\n\nasync function Y(e, t, n, o = {}) {\n  const {\n    spatialReference: s = T.WGS84\n  } = o,\n        i = e.readFeatureTypes(),\n        u = t ? W(i, t, n) : i.next().value;\n  if (a(u)) throw t ? new r(P, `The type '${t}' could not be found in the service`) : new r(E, \"The service is empty\");\n  let l = new F({ ...u.extent,\n    spatialReference: s\n  });\n  if (!y(s, m)) try {\n    await p(m, s, void 0, o), l = c(l, m);\n  } catch {\n    throw new r(G, \"Projection not supported\");\n  }\n  return {\n    extent: l,\n    spatialReference: s,\n    featureType: u\n  };\n}\n\nasync function q(e, t, n = {}) {\n  const [o, i] = await s([H(e.operations.DescribeFeatureType.url, t, n), z(e, t, n)]);\n  if (o.error || i.error) throw new r(C, `An error occurred while getting info about the feature type '${t}'`, {\n    error: o.error || i.error\n  });\n  const {\n    fields: u,\n    errors: l\n  } = o.value,\n        p = o.value.geometryType || i.value.geometryType,\n        c = i.value.swapXY;\n  if (a(p)) throw new r(A, `The geometry type could not be determined for type '${t}`, {\n    typeName: t,\n    geometryType: p,\n    fields: u,\n    errors: l\n  });\n  return { ..._(u),\n    geometryType: p,\n    swapXY: c\n  };\n}\n\nfunction _(e) {\n  var t;\n  const r = e.find(e => \"geometry\" === e.type);\n  let n = e.find(e => \"oid\" === e.type);\n  return e = e.filter(e => \"geometry\" !== e.type), n || (n = new h({\n    name: v,\n    type: \"oid\",\n    alias: v\n  }), e.unshift(n)), {\n    geometryField: null != (t = null == r ? void 0 : r.name) ? t : null,\n    objectIdField: n.name,\n    fields: e\n  };\n}\n\nasync function z(e, r, n = {}) {\n  var a;\n  let o,\n      s = !1;\n  const [i, u] = await Promise.all([K(e.operations.GetFeature.url, r, e.operations.GetFeature.outputFormat, { ...n,\n    count: 1\n  }), t(e.operations.GetFeature.url, {\n    responseType: \"text\",\n    query: Z(r, void 0, { ...n,\n      count: 1\n    }),\n    signal: null == n ? void 0 : n.signal\n  })]),\n        l = \"FeatureCollection\" === i.type && (null == (a = i.features[0]) ? void 0 : a.geometry);\n\n  if (l) {\n    let e;\n\n    switch (o = f.fromJSON(d(l.type)), l.type) {\n      case \"Point\":\n        e = l.coordinates;\n        break;\n\n      case \"LineString\":\n      case \"MultiPoint\":\n        e = l.coordinates[0];\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        e = l.coordinates[0][0];\n        break;\n\n      case \"MultiPolygon\":\n        e = l.coordinates[0][0][0];\n    }\n\n    const t = /<[^>]*pos[^>]*> *(-?\\d+(?:\\.\\d+)?) (-?\\d+(?:\\.\\d+)?)/.exec(u.data);\n\n    if (t) {\n      const r = e[0].toFixed(3),\n            n = e[1].toFixed(3),\n            a = parseFloat(t[1]).toFixed(3);\n      r === parseFloat(t[2]).toFixed(3) && n === a && (s = !0);\n    }\n  }\n\n  return {\n    geometryType: o,\n    swapXY: s\n  };\n}\n\nasync function H(e, r, n) {\n  return J(r, (await t(e, {\n    responseType: \"text\",\n    query: {\n      SERVICE: \"WFS\",\n      REQUEST: \"DescribeFeatureType\",\n      VERSION: x,\n      TYPENAME: r,\n      ...(null == n ? void 0 : n.customParameters)\n    },\n    signal: null == n ? void 0 : n.signal\n  })).data);\n}\n\nfunction J(e, t) {\n  const {\n    name: a\n  } = re(e),\n        s = te(t);\n  ae(s);\n  const i = n(w(s.firstElementChild, {\n    element: e => ({\n      name: e.getAttribute(\"name\"),\n      typeName: re(e.getAttribute(\"type\")).name\n    })\n  }), ({\n    name: e\n  }) => e === a);\n\n  if (o(i)) {\n    const e = n(w(s.firstElementChild, {\n      complexType: e => e\n    }), e => e.getAttribute(\"name\") === i.typeName);\n    if (o(e)) return B(e);\n  }\n\n  throw new r(P, `Type '${e}' not found in document`, {\n    document: new XMLSerializer().serializeToString(s)\n  });\n}\n\nconst Q = new Set([\"objectid\", \"fid\"]);\n\nfunction B(e) {\n  var t, n;\n  const a = [],\n        o = [];\n  let s;\n  const i = w(e, {\n    complexContent: {\n      extension: {\n        sequence: {\n          element: e => e\n        }\n      }\n    }\n  });\n\n  for (const u of i) {\n    const i = u.getAttribute(\"name\");\n    if (!i) continue;\n    let l, p;\n    if (u.hasAttribute(\"type\") ? l = re(u.getAttribute(\"type\")).name : b(u, {\n      simpleType: {\n        restriction: e => (l = re(e.getAttribute(\"base\")).name, {\n          maxLength: e => {\n            p = +e.getAttribute(\"value\");\n          }\n        })\n      }\n    }), !l) continue;\n    const c = \"true\" === u.getAttribute(\"nillable\");\n    let m = !1;\n\n    switch (l.toLowerCase()) {\n      case \"integer\":\n      case \"nonpositiveinteger\":\n      case \"negativeinteger\":\n      case \"long\":\n      case \"int\":\n      case \"short\":\n      case \"byte\":\n      case \"nonnegativeinteger\":\n      case \"unsignedlong\":\n      case \"unsignedint\":\n      case \"unsignedshort\":\n      case \"unsignedbyte\":\n      case \"positiveinteger\":\n        o.push(new h({\n          name: i,\n          alias: i,\n          type: \"integer\",\n          nullable: c\n        }));\n        break;\n\n      case \"float\":\n      case \"double\":\n      case \"decimal\":\n        o.push(new h({\n          name: i,\n          alias: i,\n          type: \"double\",\n          nullable: c\n        }));\n        break;\n\n      case \"boolean\":\n      case \"string\":\n      case \"gyearmonth\":\n      case \"gyear\":\n      case \"gmonthday\":\n      case \"gday\":\n      case \"gmonth\":\n      case \"anyuri\":\n      case \"qname\":\n      case \"notation\":\n      case \"normalizedstring\":\n      case \"token\":\n      case \"language\":\n      case \"idrefs\":\n      case \"entities\":\n      case \"nmtoken\":\n      case \"nmtokens\":\n      case \"name\":\n      case \"ncname\":\n      case \"id\":\n      case \"idref\":\n      case \"entity\":\n      case \"duration\":\n      case \"time\":\n        o.push(new h({\n          name: i,\n          alias: i,\n          type: \"string\",\n          nullable: c,\n          length: null != (t = p) ? t : 255\n        }));\n        break;\n\n      case \"datetime\":\n      case \"date\":\n        o.push(new h({\n          name: i,\n          alias: i,\n          type: \"date\",\n          nullable: c,\n          length: null != (n = p) ? n : 36\n        }));\n        break;\n\n      case \"pointpropertytype\":\n        s = \"point\", m = !0;\n        break;\n\n      case \"multipointpropertytype\":\n        s = \"multipoint\", m = !0;\n        break;\n\n      case \"curvepropertytype\":\n      case \"multicurvepropertytype\":\n      case \"multilinestringpropertytype\":\n        s = \"polyline\", m = !0;\n        break;\n\n      case \"surfacepropertytype\":\n      case \"multisurfacepropertytype\":\n      case \"multipolygonpropertytype\":\n        s = \"polygon\", m = !0;\n        break;\n\n      case \"geometrypropertytype\":\n      case \"multigeometrypropertytype\":\n        m = !0, a.push(new r(A, `geometry type '${l}' is not supported`, {\n          type: new XMLSerializer().serializeToString(e)\n        }));\n        break;\n\n      default:\n        a.push(new r(k, `Unknown field type '${l}'`, {\n          type: new XMLSerializer().serializeToString(e)\n        }));\n    }\n\n    m && o.push(new h({\n      name: i,\n      alias: i,\n      type: \"geometry\",\n      nullable: c\n    }));\n  }\n\n  for (const r of o) if (\"integer\" === r.type && !r.nullable && Q.has(r.name.toLowerCase())) {\n    r.type = \"oid\";\n    break;\n  }\n\n  return {\n    geometryType: s,\n    fields: o,\n    errors: a\n  };\n}\n\nasync function K(e, n, a, o) {\n  let {\n    data: s\n  } = await t(e, {\n    responseType: \"text\",\n    query: Z(n, a, o),\n    signal: null == o ? void 0 : o.signal\n  });\n  s = s.replace(/\": +(-?\\d+),(\\d+)(,)?/g, '\": $1.$2$3');\n\n  try {\n    var i;\n\n    if (null != o && null != (i = o.dateFields) && i.length) {\n      const e = new Set(o.dateFields);\n      return JSON.parse(s, (t, r) => e.has(t) ? g(r) : r);\n    }\n\n    return JSON.parse(s);\n  } catch (u) {\n    throw new r(R, \"Error while parsing the response\", {\n      response: s,\n      error: u\n    });\n  }\n}\n\nfunction Z(e, t, r) {\n  return {\n    SERVICE: \"WFS\",\n    REQUEST: \"GetFeature\",\n    VERSION: x,\n    TYPENAMES: e,\n    OUTPUTFORMAT: t,\n    SRSNAME: \"EPSG:4326\",\n    STARTINDEX: null == r ? void 0 : r.startIndex,\n    COUNT: null == r ? void 0 : r.count,\n    ...(null == r ? void 0 : r.customParameters)\n  };\n}\n\nasync function ee(e, r, n) {\n  const a = te((await t(e, {\n    responseType: \"text\",\n    query: {\n      SERVICE: \"WFS\",\n      REQUEST: \"GetFeature\",\n      VERSION: x,\n      TYPENAMES: r,\n      RESULTTYPE: \"hits\",\n      ...(null == n ? void 0 : n.customParameters)\n    },\n    signal: null == n ? void 0 : n.signal\n  })).data);\n  ae(a);\n  const o = Number.parseFloat(a.firstElementChild.getAttribute(\"numberMatched\"));\n  return Number.isNaN(o) ? 0 : o;\n}\n\nfunction te(e) {\n  return new DOMParser().parseFromString(e.trim(), \"text/xml\");\n}\n\nfunction re(e) {\n  const [t, r] = e.split(\":\");\n  return {\n    prefix: r ? t : \"\",\n    name: null != r ? r : t\n  };\n}\n\nfunction ne(e) {\n  const t = e.firstElementChild.getAttribute(\"version\");\n  if (t && t !== x) throw new r(U, `Unsupported WFS version ${t}. Supported version: ${x}`);\n}\n\nfunction ae(e) {\n  let t, n;\n  if (b(e.firstElementChild, {\n    Exception: e => (t = e.getAttribute(\"exceptionCode\"), {\n      ExceptionText: e => {\n        n = e.textContent;\n      }\n    })\n  }), t) throw new r(`wfs-layer:${t}`, n);\n}\n\nexport { v as WFS_OID_FIELD_NAME, H as describeFeatureType, W as findFeatureType, D as getCapabilities, K as getFeature, ee as getFeatureCount, Y as getFeatureTypeInfo, X as getWFSLayerInfo, J as parseDescribeFeatureTypeResponse, I as parseGetCapabilitiesResponse, _ as prepareWFSLayerFields };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/layers/ogc/wfsUtils.js"],"names":["_","e","t","r","find","n","isNone","a","isSome","o","eachAlways","s","isHTTPSProtocol","i","hasSameOrigin","u","toHTTPS","l","initializeProjection","p","project","c","WGS84","m","equals","y","featureGeometryTypeKebabDictionary","f","getGeometryType","d","parseDate","g","iterateXML","w","visitXML","b","h","T","F","S","x","v","C","E","P","N","j","R","A","k","G","U","D","I","responseType","query","SERVICE","REQUEST","VERSION","customParameters","signal","data","M","te","ne","ae","firstElementChild","Map","operations","L","featureTypes","Array","from","$","readFeatureTypes","O","Set","GetCapabilities","url","DescribeFeatureType","GetFeature","outputFormat","supportsPagination","OperationsMetadata","Operation","getAttribute","DCP","HTTP","Get","Parameter","AllowedValues","Value","textContent","has","toLowerCase","Constraint","DefaultValue","FeatureTypeList","FeatureType","get","typeName","name","title","description","extent","namespacePrefix","namespaceUri","supportedSpatialReferences","parseInt","match","wkid","groups","Number","isNaN","add","Name","prefix","re","lookupNamespaceURI","Abstract","Title","WGS84BoundingBox","V","DefaultSRS","DefaultCRS","OtherSRS","OtherCRS","push","set","children","localName","split","map","parseFloat","xmin","ymin","xmax","ymax","spatialReference","W","X","featureType","Y","fields","geometryType","swapXY","objectIdField","geometryField","q","wfsCapabilities","next","value","H","z","error","errors","type","filter","alias","unshift","Promise","all","K","count","Z","features","geometry","fromJSON","coordinates","exec","toFixed","J","TYPENAME","element","complexType","B","document","XMLSerializer","serializeToString","Q","complexContent","extension","sequence","hasAttribute","simpleType","restriction","maxLength","nullable","length","replace","dateFields","JSON","parse","response","TYPENAMES","OUTPUTFORMAT","SRSNAME","STARTINDEX","startIndex","COUNT","ee","RESULTTYPE","DOMParser","parseFromString","trim","Exception","ExceptionText","WFS_OID_FIELD_NAME","describeFeatureType","findFeatureType","getCapabilities","getFeature","getFeatureCount","getFeatureTypeInfo","getWFSLayerInfo","parseDescribeFeatureTypeResponse","parseGetCapabilitiesResponse","prepareWFSLayerFields"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/_rollupPluginBabelHelpers.js\";import\"../../geometry.js\";import t from\"../../request.js\";import r from\"../../core/Error.js\";import{find as n}from\"../../core/interatorUtils.js\";import{isNone as a,isSome as o}from\"../../core/maybe.js\";import{eachAlways as s}from\"../../core/promiseUtils.js\";import{isHTTPSProtocol as i,hasSameOrigin as u,toHTTPS as l}from\"../../core/urlUtils.js\";import{initializeProjection as p,project as c}from\"../../geometry/projection.js\";import{WGS84 as m,equals as y}from\"../../geometry/support/spatialReferenceUtils.js\";import{featureGeometryTypeKebabDictionary as f}from\"../../geometry/support/typeUtils.js\";import{getGeometryType as d}from\"../graphics/sources/geojson/geojson.js\";import{parseDate as g}from\"./dateUtils.js\";import{iterateXML as w,visitXML as b}from\"./xmlUtils.js\";import h from\"../support/Field.js\";import T from\"../../geometry/SpatialReference.js\";import F from\"../../geometry/Extent.js\";const S=\"xlink:href\",x=\"2.0.0\",v=\"__esri_wfs_id__\",C=\"wfs-layer:getWFSLayerTypeInfo-error\",E=\"wfs-layer:empty-service\",P=\"wfs-layer:feature-type-not-found\",N=\"wfs-layer:geojson-not-supported\",j=\"wfs-layer:kvp-encoding-not-supported\",R=\"wfs-layer:malformed-json\",A=\"wfs-layer:unknown-geometry-type\",k=\"wfs-layer:unknown-field-type\",G=\"wfs-layer:unsupported-spatial-reference\",U=\"wfs-layer:unsupported-wfs-version\";async function D(e,r){const n=I((await t(e,{responseType:\"text\",query:{SERVICE:\"WFS\",REQUEST:\"GetCapabilities\",VERSION:x,...null==r?void 0:r.customParameters},signal:null==r?void 0:r.signal})).data);return M(e,n),n}function I(e){const t=te(e);ne(t),ae(t);const r=t.firstElementChild,n=new Map;return{operations:L(r),get featureTypes(){return Array.from($(r,n))},readFeatureTypes:()=>$(r,n)}}const O=new Set([\"json\",\"application/json\",\"geojson\",\"application/json; subtype=geojson\"]);function L(e){let t=!1;const n={GetCapabilities:{url:\"\"},DescribeFeatureType:{url:\"\"},GetFeature:{url:\"\",outputFormat:null,supportsPagination:!1}};if(b(e,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute(\"name\")){case\"GetCapabilities\":return{DCP:{HTTP:{Get:e=>{n.GetCapabilities.url=e.getAttribute(S)}}}};case\"DescribeFeatureType\":return{DCP:{HTTP:{Get:e=>{n.DescribeFeatureType.url=e.getAttribute(S)}}}};case\"GetFeature\":return{DCP:{HTTP:{Get:e=>{n.GetFeature.url=e.getAttribute(S)}}},Parameter:e=>{if(\"outputFormat\"===e.getAttribute(\"name\"))return{AllowedValues:{Value:e=>{const t=e.textContent;O.has(t.toLowerCase())&&(n.GetFeature.outputFormat=t)}}}}}}},Constraint:e=>{switch(e.getAttribute(\"name\")){case\"KVPEncoding\":return{DefaultValue:e=>{t=\"true\"===e.textContent.toLowerCase()}};case\"ImplementsResultPaging\":return{DefaultValue:e=>{n.GetFeature.supportsPagination=\"true\"===e.textContent.toLowerCase()}}}}}}),!t)throw new r(j,\"WFS service doesn't support key/value pair (KVP) encoding\");if(a(n.GetFeature.outputFormat))throw new r(N,\"WFS service doesn't support GeoJSON output format\");return n}function M(e,t){i(e)&&(u(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=l(t.operations.DescribeFeatureType.url)),u(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=l(t.operations.GetFeature.url)))}function $(t,r){return w(t,{FeatureTypeList:{FeatureType:t=>{if(r.has(t))return r.get(t);const n={typeName:\"undefined:undefined\",name:\"\",title:\"\",description:\"\",extent:null,namespacePrefix:\"\",namespaceUri:\"\",supportedSpatialReferences:[]},a=new Set([4326]),o=t=>{var r,n;const o=parseInt(null==(r=t.textContent.match(e(/([0-9]+$)/i,{wkid:1})))||null==(n=r.groups)?void 0:n.wkid,10);Number.isNaN(o)||a.add(o)};return b(t,{Name:e=>{const{name:t,prefix:r}=re(e.textContent);n.typeName=`${r}:${t}`,n.name=t,n.namespacePrefix=r,n.namespaceUri=e.lookupNamespaceURI(r)},Abstract:e=>{n.description=e.textContent},Title:e=>{n.title=e.textContent},WGS84BoundingBox:e=>{n.extent=V(e)},DefaultSRS:o,DefaultCRS:o,OtherSRS:o,OtherCRS:o}),n.title||(n.title=n.name),n.supportedSpatialReferences.push(...a),r.set(t,n),n}}})}function V(e){let t,r,n,a;for(const o of e.children)switch(o.localName){case\"LowerCorner\":[t,r]=o.textContent.split(\" \").map((e=>Number.parseFloat(e)));break;case\"UpperCorner\":[n,a]=o.textContent.split(\" \").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:r,xmax:n,ymax:a,spatialReference:m}}function W(e,t,r){return n(e,(e=>r?e.name===t&&e.namespaceUri===r:e.typeName===t||e.name===t))}async function X(e,t,r,n={}){var a;const{featureType:o,extent:s}=await Y(e,t,r,n),{fields:i,geometryType:u,swapXY:l,objectIdField:p,geometryField:c}=await q(e,o.typeName,n);return{url:e.operations.GetCapabilities.url,name:o.name,namespaceUri:o.namespaceUri,fields:i,geometryField:c,geometryType:u,objectIdField:p,spatialReference:null!=(a=n.spatialReference)?a:T.WGS84,extent:s,swapXY:l,wfsCapabilities:e,customParameters:n.customParameters}}async function Y(e,t,n,o={}){const{spatialReference:s=T.WGS84}=o,i=e.readFeatureTypes(),u=t?W(i,t,n):i.next().value;if(a(u))throw t?new r(P,`The type '${t}' could not be found in the service`):new r(E,\"The service is empty\");let l=new F({...u.extent,spatialReference:s});if(!y(s,m))try{await p(m,s,void 0,o),l=c(l,m)}catch{throw new r(G,\"Projection not supported\")}return{extent:l,spatialReference:s,featureType:u}}async function q(e,t,n={}){const[o,i]=await s([H(e.operations.DescribeFeatureType.url,t,n),z(e,t,n)]);if(o.error||i.error)throw new r(C,`An error occurred while getting info about the feature type '${t}'`,{error:o.error||i.error});const{fields:u,errors:l}=o.value,p=o.value.geometryType||i.value.geometryType,c=i.value.swapXY;if(a(p))throw new r(A,`The geometry type could not be determined for type '${t}`,{typeName:t,geometryType:p,fields:u,errors:l});return{..._(u),geometryType:p,swapXY:c}}function _(e){var t;const r=e.find((e=>\"geometry\"===e.type));let n=e.find((e=>\"oid\"===e.type));return e=e.filter((e=>\"geometry\"!==e.type)),n||(n=new h({name:v,type:\"oid\",alias:v}),e.unshift(n)),{geometryField:null!=(t=null==r?void 0:r.name)?t:null,objectIdField:n.name,fields:e}}async function z(e,r,n={}){var a;let o,s=!1;const[i,u]=await Promise.all([K(e.operations.GetFeature.url,r,e.operations.GetFeature.outputFormat,{...n,count:1}),t(e.operations.GetFeature.url,{responseType:\"text\",query:Z(r,void 0,{...n,count:1}),signal:null==n?void 0:n.signal})]),l=\"FeatureCollection\"===i.type&&(null==(a=i.features[0])?void 0:a.geometry);if(l){let e;switch(o=f.fromJSON(d(l.type)),l.type){case\"Point\":e=l.coordinates;break;case\"LineString\":case\"MultiPoint\":e=l.coordinates[0];break;case\"MultiLineString\":case\"Polygon\":e=l.coordinates[0][0];break;case\"MultiPolygon\":e=l.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\\d+(?:\\.\\d+)?) (-?\\d+(?:\\.\\d+)?)/.exec(u.data);if(t){const r=e[0].toFixed(3),n=e[1].toFixed(3),a=parseFloat(t[1]).toFixed(3);r===parseFloat(t[2]).toFixed(3)&&n===a&&(s=!0)}}return{geometryType:o,swapXY:s}}async function H(e,r,n){return J(r,(await t(e,{responseType:\"text\",query:{SERVICE:\"WFS\",REQUEST:\"DescribeFeatureType\",VERSION:x,TYPENAME:r,...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data)}function J(e,t){const{name:a}=re(e),s=te(t);ae(s);const i=n(w(s.firstElementChild,{element:e=>({name:e.getAttribute(\"name\"),typeName:re(e.getAttribute(\"type\")).name})}),(({name:e})=>e===a));if(o(i)){const e=n(w(s.firstElementChild,{complexType:e=>e}),(e=>e.getAttribute(\"name\")===i.typeName));if(o(e))return B(e)}throw new r(P,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(s)})}const Q=new Set([\"objectid\",\"fid\"]);function B(e){var t,n;const a=[],o=[];let s;const i=w(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const u of i){const i=u.getAttribute(\"name\");if(!i)continue;let l,p;if(u.hasAttribute(\"type\")?l=re(u.getAttribute(\"type\")).name:b(u,{simpleType:{restriction:e=>(l=re(e.getAttribute(\"base\")).name,{maxLength:e=>{p=+e.getAttribute(\"value\")}})}}),!l)continue;const c=\"true\"===u.getAttribute(\"nillable\");let m=!1;switch(l.toLowerCase()){case\"integer\":case\"nonpositiveinteger\":case\"negativeinteger\":case\"long\":case\"int\":case\"short\":case\"byte\":case\"nonnegativeinteger\":case\"unsignedlong\":case\"unsignedint\":case\"unsignedshort\":case\"unsignedbyte\":case\"positiveinteger\":o.push(new h({name:i,alias:i,type:\"integer\",nullable:c}));break;case\"float\":case\"double\":case\"decimal\":o.push(new h({name:i,alias:i,type:\"double\",nullable:c}));break;case\"boolean\":case\"string\":case\"gyearmonth\":case\"gyear\":case\"gmonthday\":case\"gday\":case\"gmonth\":case\"anyuri\":case\"qname\":case\"notation\":case\"normalizedstring\":case\"token\":case\"language\":case\"idrefs\":case\"entities\":case\"nmtoken\":case\"nmtokens\":case\"name\":case\"ncname\":case\"id\":case\"idref\":case\"entity\":case\"duration\":case\"time\":o.push(new h({name:i,alias:i,type:\"string\",nullable:c,length:null!=(t=p)?t:255}));break;case\"datetime\":case\"date\":o.push(new h({name:i,alias:i,type:\"date\",nullable:c,length:null!=(n=p)?n:36}));break;case\"pointpropertytype\":s=\"point\",m=!0;break;case\"multipointpropertytype\":s=\"multipoint\",m=!0;break;case\"curvepropertytype\":case\"multicurvepropertytype\":case\"multilinestringpropertytype\":s=\"polyline\",m=!0;break;case\"surfacepropertytype\":case\"multisurfacepropertytype\":case\"multipolygonpropertytype\":s=\"polygon\",m=!0;break;case\"geometrypropertytype\":case\"multigeometrypropertytype\":m=!0,a.push(new r(A,`geometry type '${l}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:a.push(new r(k,`Unknown field type '${l}'`,{type:(new XMLSerializer).serializeToString(e)}))}m&&o.push(new h({name:i,alias:i,type:\"geometry\",nullable:c}))}for(const r of o)if(\"integer\"===r.type&&!r.nullable&&Q.has(r.name.toLowerCase())){r.type=\"oid\";break}return{geometryType:s,fields:o,errors:a}}async function K(e,n,a,o){let{data:s}=await t(e,{responseType:\"text\",query:Z(n,a,o),signal:null==o?void 0:o.signal});s=s.replace(/\": +(-?\\d+),(\\d+)(,)?/g,'\": $1.$2$3');try{var i;if(null!=o&&null!=(i=o.dateFields)&&i.length){const e=new Set(o.dateFields);return JSON.parse(s,((t,r)=>e.has(t)?g(r):r))}return JSON.parse(s)}catch(u){throw new r(R,\"Error while parsing the response\",{response:s,error:u})}}function Z(e,t,r){return{SERVICE:\"WFS\",REQUEST:\"GetFeature\",VERSION:x,TYPENAMES:e,OUTPUTFORMAT:t,SRSNAME:\"EPSG:4326\",STARTINDEX:null==r?void 0:r.startIndex,COUNT:null==r?void 0:r.count,...null==r?void 0:r.customParameters}}async function ee(e,r,n){const a=te((await t(e,{responseType:\"text\",query:{SERVICE:\"WFS\",REQUEST:\"GetFeature\",VERSION:x,TYPENAMES:r,RESULTTYPE:\"hits\",...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data);ae(a);const o=Number.parseFloat(a.firstElementChild.getAttribute(\"numberMatched\"));return Number.isNaN(o)?0:o}function te(e){return(new DOMParser).parseFromString(e.trim(),\"text/xml\")}function re(e){const[t,r]=e.split(\":\");return{prefix:r?t:\"\",name:null!=r?r:t}}function ne(e){const t=e.firstElementChild.getAttribute(\"version\");if(t&&t!==x)throw new r(U,`Unsupported WFS version ${t}. Supported version: ${x}`)}function ae(e){let t,n;if(b(e.firstElementChild,{Exception:e=>(t=e.getAttribute(\"exceptionCode\"),{ExceptionText:e=>{n=e.textContent}})}),t)throw new r(`wfs-layer:${t}`,n)}export{v as WFS_OID_FIELD_NAME,H as describeFeatureType,W as findFeatureType,D as getCapabilities,K as getFeature,ee as getFeatureCount,Y as getFeatureTypeInfo,X as getWFSLayerInfo,J as parseDescribeFeatureTypeResponse,I as parseGetCapabilitiesResponse,_ as prepareWFSLayerFields};\n"]},"metadata":{},"sourceType":"module"}