{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { binaryIndexOf as t } from \"../../../../../core/arrayUtils.js\";\nimport { isNone as n, isSome as r } from \"../../../../../core/maybe.js\";\n\nfunction e(t) {\n  let e = null;\n\n  for (const r of t) {\n    const t = r.type;\n    if (c(r)) if (n(e)) e = t;else if (e !== t) return \"uber\";\n  }\n\n  return r(e) ? e : \"solid\";\n}\n\nfunction o(t) {\n  let n = 0;\n\n  for (const {\n    material: r\n  } of t) if (c(r)) {\n    if (r.color[3] * r.opacity < 1) return 1;\n    n = 2;\n  }\n\n  return n;\n}\n\nfunction i(t) {\n  let n = 0;\n\n  for (const {\n    material: r\n  } of t) if (c(r)) {\n    switch (r.objectTransparency) {\n      case 1:\n      case 0:\n        return 1;\n\n      case 2:\n        if (r.opacity < 1) return 1;\n    }\n\n    n = 2;\n  }\n\n  return n;\n}\n\nfunction c(t) {\n  return t.size * t.color[3] * t.opacity > 0;\n}\n\nfunction f(t, n, r, e) {\n  return r * (e / t) * 2 * Math.tan(.5 * n);\n}\n\nfunction u(n, r) {\n  const e = t(n, r, !0);\n  return -1 === e ? r < n[0] ? 0 : n.length : e;\n}\n\nfunction s(t, n, r) {\n  return t.length - u(t, n * r.minimumEdgeLength);\n}\n\nfunction l(t, n, r, e) {\n  for (let o = 0; o < t.length; o++) {\n    const i = t[o].index,\n          c = n[o],\n          f = n[o + 1];\n    if (e) for (let t = c; t < f; t++) {\n      const n = e[t];\n      r.set(n, i);\n    } else for (let t = c; t < f; t++) r.set(t, i);\n  }\n}\n\nexport { s as computeEdgeCount, o as determineEdgeTransparency, i as determineObjectTransparency, e as determineRendererType, f as estimateLengthAtDistance, l as fillComponenBufferIndices };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/util.js"],"names":["binaryIndexOf","t","isNone","n","isSome","r","e","type","c","o","material","color","opacity","i","objectTransparency","size","f","Math","tan","u","length","s","minimumEdgeLength","l","index","set","computeEdgeCount","determineEdgeTransparency","determineObjectTransparency","determineRendererType","estimateLengthAtDistance","fillComponenBufferIndices"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{binaryIndexOf as t}from\"../../../../../core/arrayUtils.js\";import{isNone as n,isSome as r}from\"../../../../../core/maybe.js\";function e(t){let e=null;for(const r of t){const t=r.type;if(c(r))if(n(e))e=t;else if(e!==t)return\"uber\"}return r(e)?e:\"solid\"}function o(t){let n=0;for(const{material:r}of t)if(c(r)){if(r.color[3]*r.opacity<1)return 1;n=2}return n}function i(t){let n=0;for(const{material:r}of t)if(c(r)){switch(r.objectTransparency){case 1:case 0:return 1;case 2:if(r.opacity<1)return 1}n=2}return n}function c(t){return t.size*t.color[3]*t.opacity>0}function f(t,n,r,e){return r*(e/t)*2*Math.tan(.5*n)}function u(n,r){const e=t(n,r,!0);return-1===e?r<n[0]?0:n.length:e}function s(t,n,r){return t.length-u(t,n*r.minimumEdgeLength)}function l(t,n,r,e){for(let o=0;o<t.length;o++){const i=t[o].index,c=n[o],f=n[o+1];if(e)for(let t=c;t<f;t++){const n=e[t];r.set(n,i)}else for(let t=c;t<f;t++)r.set(t,i)}}export{s as computeEdgeCount,o as determineEdgeTransparency,i as determineObjectTransparency,e as determineRendererType,f as estimateLengthAtDistance,l as fillComponenBufferIndices};\n"]},"metadata":{},"sourceType":"module"}