{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { MomentumEstimator as t } from \"./MomentumEstimator.js\";\n\nclass a extends t {\n  constructor(t = 3, a = .01, s = .95, e = 12) {\n    super(t, a, s, e);\n  }\n\n  add(t, a) {\n    if (this.value.hasLastValue) {\n      const a = this.value.lastValue;\n      let s = t - a;\n\n      for (; s > Math.PI;) s -= 2 * Math.PI;\n\n      for (; s < -Math.PI;) s += 2 * Math.PI;\n\n      t = a + s;\n    }\n\n    super.add(t, a);\n  }\n\n}\n\nexport { a as RotationMomentumEstimator };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/navigation/RotationMomentumEstimator.js"],"names":["MomentumEstimator","t","a","constructor","s","e","add","value","hasLastValue","lastValue","Math","PI","RotationMomentumEstimator"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,iBAAiB,IAAIC,CAA5B,QAAkC,wBAAlC;;AAA2D,MAAMC,CAAN,SAAgBD,CAAhB,CAAiB;AAACE,EAAAA,WAAW,CAACF,CAAC,GAAC,CAAH,EAAKC,CAAC,GAAC,GAAP,EAAWE,CAAC,GAAC,GAAb,EAAiBC,CAAC,GAAC,EAAnB,EAAsB;AAAC,UAAMJ,CAAN,EAAQC,CAAR,EAAUE,CAAV,EAAYC,CAAZ;AAAe;;AAAAC,EAAAA,GAAG,CAACL,CAAD,EAAGC,CAAH,EAAK;AAAC,QAAG,KAAKK,KAAL,CAAWC,YAAd,EAA2B;AAAC,YAAMN,CAAC,GAAC,KAAKK,KAAL,CAAWE,SAAnB;AAA6B,UAAIL,CAAC,GAACH,CAAC,GAACC,CAAR;;AAAU,aAAKE,CAAC,GAACM,IAAI,CAACC,EAAZ,GAAgBP,CAAC,IAAE,IAAEM,IAAI,CAACC,EAAV;;AAAa,aAAKP,CAAC,GAAC,CAACM,IAAI,CAACC,EAAb,GAAiBP,CAAC,IAAE,IAAEM,IAAI,CAACC,EAAV;;AAAaV,MAAAA,CAAC,GAACC,CAAC,GAACE,CAAJ;AAAM;;AAAA,UAAME,GAAN,CAAUL,CAAV,EAAYC,CAAZ;AAAe;;AAA9M;;AAA+M,SAAOA,CAAC,IAAIU,yBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{MomentumEstimator as t}from\"./MomentumEstimator.js\";class a extends t{constructor(t=3,a=.01,s=.95,e=12){super(t,a,s,e)}add(t,a){if(this.value.hasLastValue){const a=this.value.lastValue;let s=t-a;for(;s>Math.PI;)s-=2*Math.PI;for(;s<-Math.PI;)s+=2*Math.PI;t=a+s}super.add(t,a)}}export{a as RotationMomentumEstimator};\n"]},"metadata":{},"sourceType":"module"}