{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoyuzhu/Desktop/arcgis-api-react/src/components/MapView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Map from '@arcgis/core/Map';\nimport Color from \"@arcgis/core/Color\";\nimport SceneView from \"@arcgis/core/views/SceneView\";\nimport buildings from '../untils/SceneLayerConfig';\nimport view from '../untils/SceneViewConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapView() {\n  _s();\n\n  const mapRef = useRef();\n  useEffect(() => {\n    const map = new Map({\n      basemap: 'topo-vector',\n      layers: [buildings({\n        url: \"https://services.arcgis.com/V6ZHFr6zdgNZuVG0/ArcGIS/rest/services/NYC/SceneServer/layers/0\"\n      })]\n    }); // const view = new SceneView({\n    //     container: mapRef.current,\n    //     map,\n    //     qualityProfile: \"high\",\n    //     camera: {\n    //         position: [-73.99756689528948, 40.724214693182205, 601.67648],\n    //         heading: 330.47,\n    //         tilt: 64.02\n    //     },\n    //     highlightOptions: {\n    //         color: new Color([255, 153, 0]),\n    //         fillOpacity: 0.6,\n    //         haloOpacity: 0\n    //     }\n    // });\n\n    const view = view({\n      ref: mapRef.current,\n      map\n    });\n    return () => {\n      view && view.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MapView, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n\n_c = MapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/src/components/MapView.js"],"names":["React","useRef","useEffect","Map","Color","SceneView","buildings","view","MapView","mapRef","map","basemap","layers","url","ref","current","destroy","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAMC,MAAM,GAAGR,MAAM,EAArB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,GAAG,GAAG,IAAIP,GAAJ,CAAQ;AAChBQ,MAAAA,OAAO,EAAE,aADO;AAEhBC,MAAAA,MAAM,EAAE,CAACN,SAAS,CAAC;AAAEO,QAAAA,GAAG,EAAE;AAAP,OAAD,CAAV;AAFQ,KAAR,CAAZ,CADY,CAMZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMN,IAAI,GAAGA,IAAI,CAAC;AAAEO,MAAAA,GAAG,EAAEL,MAAM,CAACM,OAAd;AAAuBL,MAAAA;AAAvB,KAAD,CAAjB;AAEA,WAAO,MAAM;AAAEH,MAAAA,IAAI,IAAIA,IAAI,CAACS,OAAL,EAAR;AAAwB,KAAvC;AACH,GAzBQ,EAyBN,EAzBM,CAAT;AA2BA,sBACI;AAAK,IAAA,GAAG,EAAEP,MAAV;AAAkB,IAAA,KAAK,EAAE;AAAEQ,MAAAA,MAAM,EAAE;AAAV;AAAzB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAjCuBT,O;;KAAAA,O","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport Map from '@arcgis/core/Map'\nimport Color from \"@arcgis/core/Color\"\nimport SceneView from \"@arcgis/core/views/SceneView\"\n\nimport buildings from '../untils/SceneLayerConfig'\nimport view from '../untils/SceneViewConfig'\n\nexport default function MapView() {\n    const mapRef = useRef()\n\n    useEffect(() => {\n        const map = new Map({\n            basemap: 'topo-vector',\n            layers: [buildings({ url: \"https://services.arcgis.com/V6ZHFr6zdgNZuVG0/ArcGIS/rest/services/NYC/SceneServer/layers/0\" })]\n        })\n\n        // const view = new SceneView({\n        //     container: mapRef.current,\n        //     map,\n        //     qualityProfile: \"high\",\n        //     camera: {\n        //         position: [-73.99756689528948, 40.724214693182205, 601.67648],\n        //         heading: 330.47,\n        //         tilt: 64.02\n        //     },\n        //     highlightOptions: {\n        //         color: new Color([255, 153, 0]),\n        //         fillOpacity: 0.6,\n        //         haloOpacity: 0\n        //     }\n        // });\n\n        const view = view({ ref: mapRef.current, map })\n\n        return () => { view && view.destroy() }\n    }, [])\n\n    return (\n        <div ref={mapRef} style={{ height: '100vh' }} />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}