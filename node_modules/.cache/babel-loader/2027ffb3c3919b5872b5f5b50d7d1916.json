{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { clone as s } from \"../../../core/lang.js\";\nimport { isSome as e } from \"../../../core/maybe.js\";\nimport { defaultBasemapGroups as t, getBasemapId as a, getBasemapGroup as p } from \"../../support/utils.js\";\n\nfunction m(s, t, m) {\n  let o = null,\n      i = null;\n\n  if (t && (o = a(t, s, !1), o)) {\n    const s = p(o);\n    e(s) && (i = s);\n  }\n\n  return !o && m && (o = \"dark\" === m ? \"dark-gray\" : \"gray\", i = m), o || i || (o = \"gray\", i = \"light\"), {\n    basemapId: o,\n    basemapTheme: i\n  };\n}\n\nclass o {\n  constructor(s) {\n    this.name = null, this.label = null, this.description = null, this.supportedBasemaps = null, this.basemapGroups = null, this.schemes = null;\n    const {\n      name: e,\n      label: a,\n      description: p,\n      schemes: m\n    } = s;\n    this.name = e, this.label = a, this.description = p, this.schemes = m;\n    const o = s.basemapGroups || t;\n    let i = [];\n    if (o) for (const t in o) i = i.concat(o[t]);\n    this.supportedBasemaps = i, this.basemapGroups = o;\n  }\n\n  isBasemapSupported(s) {\n    const e = a(s, this.supportedBasemaps);\n    return !!(e && this.supportedBasemaps.indexOf(e) > -1);\n  }\n\n  getRawSchemes(t) {\n    const {\n      basemapId: a,\n      basemapTheme: o\n    } = m(this.supportedBasemaps, t.basemap, t.basemapTheme);\n    let i = o;\n\n    if (a) {\n      const s = p(a, this.basemapGroups);\n      e(s) && (i = s);\n    }\n\n    let r = t.geometryType;\n    \"multipoint\" === r ? r = \"point\" : \"mesh\" === r && (r = \"polygon\");\n    const n = this.schemes[r] || this.schemes.default;\n    return {\n      schemesInfo: s(n[i]),\n      basemapId: a,\n      basemapTheme: o\n    };\n  }\n\n}\n\nexport default o;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/smartMapping/symbology/support/Theme.js"],"names":["clone","s","isSome","e","defaultBasemapGroups","t","getBasemapId","a","getBasemapGroup","p","m","o","i","basemapId","basemapTheme","constructor","name","label","description","supportedBasemaps","basemapGroups","schemes","concat","isBasemapSupported","indexOf","getRawSchemes","basemap","r","geometryType","n","default","schemesInfo"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{clone as s}from\"../../../core/lang.js\";import{isSome as e}from\"../../../core/maybe.js\";import{defaultBasemapGroups as t,getBasemapId as a,getBasemapGroup as p}from\"../../support/utils.js\";function m(s,t,m){let o=null,i=null;if(t&&(o=a(t,s,!1),o)){const s=p(o);e(s)&&(i=s)}return!o&&m&&(o=\"dark\"===m?\"dark-gray\":\"gray\",i=m),o||i||(o=\"gray\",i=\"light\"),{basemapId:o,basemapTheme:i}}class o{constructor(s){this.name=null,this.label=null,this.description=null,this.supportedBasemaps=null,this.basemapGroups=null,this.schemes=null;const{name:e,label:a,description:p,schemes:m}=s;this.name=e,this.label=a,this.description=p,this.schemes=m;const o=s.basemapGroups||t;let i=[];if(o)for(const t in o)i=i.concat(o[t]);this.supportedBasemaps=i,this.basemapGroups=o}isBasemapSupported(s){const e=a(s,this.supportedBasemaps);return!!(e&&this.supportedBasemaps.indexOf(e)>-1)}getRawSchemes(t){const{basemapId:a,basemapTheme:o}=m(this.supportedBasemaps,t.basemap,t.basemapTheme);let i=o;if(a){const s=p(a,this.basemapGroups);e(s)&&(i=s)}let r=t.geometryType;\"multipoint\"===r?r=\"point\":\"mesh\"===r&&(r=\"polygon\");const n=this.schemes[r]||this.schemes.default;return{schemesInfo:s(n[i]),basemapId:a,basemapTheme:o}}}export default o;\n"]},"metadata":{},"sourceType":"module"}