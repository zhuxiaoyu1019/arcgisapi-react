{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as r } from \"../chunks/tslib.es6.js\";\nimport { clone as o } from \"../core/lang.js\";\nimport { numericHash as t } from \"../core/string.js\";\nimport { property as e } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/accessorSupport/ensureType.js\";\nimport \"../core/has.js\";\nimport \"../core/Logger.js\";\nimport { enumeration as s } from \"../core/accessorSupport/decorators/enumeration.js\";\nimport { reader as a } from \"../core/accessorSupport/decorators/reader.js\";\nimport { subclass as i } from \"../core/accessorSupport/decorators/subclass.js\";\nimport { writer as p } from \"../core/accessorSupport/decorators/writer.js\";\nimport { collectArcadeFieldNames as c } from \"../layers/support/fieldUtils.js\";\nimport m from \"./Symbol.js\";\nvar n;\nlet l = n = class extends m {\n  constructor(r) {\n    super(r), this.data = null, this.type = \"cim\";\n  }\n\n  readData(r, o) {\n    return o;\n  }\n\n  writeData(r, o) {\n    if (r) for (const t in r) o[t] = r[t];\n  }\n\n  async collectRequiredFields(r, o) {\n    if (\"CIMSymbolReference\" === this.data.type) {\n      const t = this.data.primitiveOverrides;\n\n      if (t) {\n        const e = t.map(t => {\n          const e = t.valueExpressionInfo;\n          return c(r, o, e.expression);\n        });\n        await Promise.all(e);\n      }\n    }\n  }\n\n  clone() {\n    return new n({\n      data: o(this.data)\n    });\n  }\n\n  hash() {\n    return t(JSON.stringify(this.data)).toString();\n  }\n\n};\nr([e({\n  json: {\n    write: !1\n  }\n})], l.prototype, \"color\", void 0), r([e({\n  json: {\n    write: !0\n  }\n})], l.prototype, \"data\", void 0), r([a(\"data\", [\"symbol\"])], l.prototype, \"readData\", null), r([p(\"data\")], l.prototype, \"writeData\", null), r([s({\n  CIMSymbolReference: \"cim\"\n}, {\n  readOnly: !0\n})], l.prototype, \"type\", void 0), l = n = r([i(\"esri.symbols.CIMSymbol\")], l);\nvar d = l;\nexport default d;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/symbols/CIMSymbol.js"],"names":["_","r","clone","o","numericHash","t","property","e","enumeration","s","reader","a","subclass","i","writer","p","collectArcadeFieldNames","c","m","n","l","constructor","data","type","readData","writeData","collectRequiredFields","primitiveOverrides","map","valueExpressionInfo","expression","Promise","all","hash","JSON","stringify","toString","json","write","prototype","CIMSymbolReference","readOnly","d"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../chunks/tslib.es6.js\";import{clone as o}from\"../core/lang.js\";import{numericHash as t}from\"../core/string.js\";import{property as e}from\"../core/accessorSupport/decorators/property.js\";import\"../core/accessorSupport/ensureType.js\";import\"../core/has.js\";import\"../core/Logger.js\";import{enumeration as s}from\"../core/accessorSupport/decorators/enumeration.js\";import{reader as a}from\"../core/accessorSupport/decorators/reader.js\";import{subclass as i}from\"../core/accessorSupport/decorators/subclass.js\";import{writer as p}from\"../core/accessorSupport/decorators/writer.js\";import{collectArcadeFieldNames as c}from\"../layers/support/fieldUtils.js\";import m from\"./Symbol.js\";var n;let l=n=class extends m{constructor(r){super(r),this.data=null,this.type=\"cim\"}readData(r,o){return o}writeData(r,o){if(r)for(const t in r)o[t]=r[t]}async collectRequiredFields(r,o){if(\"CIMSymbolReference\"===this.data.type){const t=this.data.primitiveOverrides;if(t){const e=t.map((t=>{const e=t.valueExpressionInfo;return c(r,o,e.expression)}));await Promise.all(e)}}}clone(){return new n({data:o(this.data)})}hash(){return t(JSON.stringify(this.data)).toString()}};r([e({json:{write:!1}})],l.prototype,\"color\",void 0),r([e({json:{write:!0}})],l.prototype,\"data\",void 0),r([a(\"data\",[\"symbol\"])],l.prototype,\"readData\",null),r([p(\"data\")],l.prototype,\"writeData\",null),r([s({CIMSymbolReference:\"cim\"},{readOnly:!0})],l.prototype,\"type\",void 0),l=n=r([i(\"esri.symbols.CIMSymbol\")],l);var d=l;export default d;\n"]},"metadata":{},"sourceType":"module"}