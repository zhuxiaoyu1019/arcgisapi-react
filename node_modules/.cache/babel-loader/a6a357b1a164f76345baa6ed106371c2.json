{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../chunks/tslib.es6.js\";\nimport t from \"../../../../core/Accessor.js\";\nimport s from \"../../../../core/Evented.js\";\nimport { someMap as i } from \"../../../../core/MapUtils.js\";\nimport { nextHighestPowerOfTwo as r } from \"../../../../core/mathUtils.js\";\nimport { isSome as a, removeMaybe as n } from \"../../../../core/maybe.js\";\nimport { generateUID as h } from \"../../../../core/uid.js\";\nimport { property as o } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/has.js\";\nimport \"../../../../core/accessorSupport/ensureType.js\";\nimport \"../../../../core/Logger.js\";\nimport { subclass as l } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { TaskPriority as d, noBudget as c } from \"../../../support/Scheduler.js\";\nimport m from \"../../../webgl/Texture.js\";\nvar p;\nconst g = 512,\n      u = 4096,\n      x = .85,\n      T = .95;\nlet v = p = class extends t {\n  constructor(e) {\n    super(e), this.type = 4, this.id = h(), this.events = new s(), this.glTexture = null, this.needsClear = !1, this.elementsToAddOrUpdate = new Map(), this.elementsToRemove = new Map(), this.elementsToRender = new Map(), this.elements = new Map(), this.stageObjects = new Map(), this.updating = !1;\n  }\n\n  initialize() {\n    this.stage = this.view._stage, this.canvas = this.create2DCanvas(), this.ctx = this.canvas.getContext(\"2d\"), this.stage.add(this);\n    const e = this.computeAtlasResolution(this.view.width, this.view.height);\n    this.createAtlasRegion(e), this.update2DCanvasSize(), this.resetAtlasCursor();\n  }\n\n  unload() {\n    a(this.glTexture) && (this.glTexture.dispose(), this.glTexture = null), this.events.emit(\"unloaded\");\n  }\n\n  get width() {\n    return this.atlas.size.width;\n  }\n\n  get height() {\n    return this.atlas.size.height;\n  }\n\n  get requiresFrameUpdates() {\n    return !1;\n  }\n\n  createDescriptor(e) {\n    return {\n      target: 3553,\n      pixelFormat: 6408,\n      dataType: 5121,\n      wrapMode: 33071,\n      flipped: !0,\n      samplingMode: 9987,\n      hasMipmap: !0,\n      preMultiplyAlpha: !0,\n      maxAnisotropy: e.parameters.maxMaxAnisotropy\n    };\n  }\n\n  load(e) {\n    if (a(this.glTexture)) return this.glTexture;\n    this.glTexture = new m(e, this.createDescriptor(e), this.canvas);\n    const t = this.view.resourceController.scheduler;\n    return this.frameWorker = t.registerTask(d.TEXT_TEXTURE_ATLAS, this), this.setDirty(), this.glTexture;\n  }\n\n  dispose() {\n    this.elements = null, this.elementsToAddOrUpdate = null, this.elementsToRemove = null, this.elementsToRender = null, this.frameWorker = n(this.frameWorker), this.glTexture && (this.stage.remove(this), this.glTexture = null), this.canvas.width = 0, this.canvas.height = 0, this.canvas = null, this.ctx = null;\n  }\n\n  create2DCanvas() {\n    const e = document.createElement(\"canvas\");\n    return e.setAttribute(\"id\", \"canvas2d\"), e.setAttribute(\"style\", \"display:none\"), e.setAttribute(\"width\", g.toString()), e.setAttribute(\"height\", g.toString()), e;\n  }\n\n  update2DCanvasSize() {\n    this.canvas.setAttribute(\"width\", this.atlas.size.width.toString()), this.canvas.setAttribute(\"height\", this.atlas.size.height.toString());\n  }\n\n  createAtlasRegion(e = g) {\n    this.atlas = {\n      size: {\n        width: e,\n        height: e\n      },\n      cursor: {\n        x: 0,\n        y: 0\n      },\n      lineHeight: 0\n    };\n  }\n\n  computeAtlasResolution(e, t) {\n    let s = Math.max(e, t);\n    return s += 256, s = r(s), s = Math.min(s, u), s;\n  }\n\n  resizeAtlas(e, t) {\n    t = t || e;\n    const s = this.atlas;\n    s.size.width = e, s.size.height = t, a(this.glTexture) && this.glTexture.resize(e, t), this.update2DCanvasSize();\n  }\n\n  resetAtlasCursor() {\n    const e = this.atlas;\n    e.cursor.x = f, e.cursor.y = f + y, e.lineHeight = 0, this.needsClear = !0;\n  }\n\n  getAtlasUsage() {\n    const e = this.atlas;\n    return (e.cursor.x + e.cursor.y * e.size.width) / (e.size.width * e.size.height);\n  }\n\n  getExpectedAtlasUsage() {\n    const e = this.elementsToRemove.size,\n          t = this.elementsToAddOrUpdate.size,\n          s = this.elements.size;\n    return this.getAtlasUsage() / s * (s + t - e);\n  }\n\n  addAtlasElement(e, t, s, i) {\n    const r = this.atlas,\n          {\n      renderedWidth: a,\n      renderedHeight: n,\n      displayWidth: h,\n      displayHeight: o\n    } = e.textRenderer;\n    e.placement.offset.x = r.cursor.x, e.placement.offset.y = r.cursor.y, e.placement.size.width = a, e.placement.size.height = n, e.placement.size.displayWidth = h, e.placement.size.displayHeight = o, e.placement.uvMinMax = [e.placement.offset.x / r.size.width, 1 - (e.placement.offset.y + n) / r.size.height, (e.placement.offset.x + a) / r.size.width, 1 - e.placement.offset.y / r.size.height], r.cursor.x += s, r.lineHeight = Math.max(r.lineHeight, i), this.elements.set(t, e);\n  }\n\n  removeAtlasElement(e) {\n    if (e && this.elements.has(e.textId)) {\n      const t = e.placement.offset,\n            s = e.placement.size;\n      this.ctx.clearRect(t.x, t.y, s.width, s.height), this.elements.delete(e.textId);\n    }\n  }\n\n  ensureStageObjects(e) {\n    const t = this.stageObjects.get(e);\n    if (t) return t;\n    const s = new Set();\n    return this.stageObjects.set(e, s), s;\n  }\n\n  addStageObject(e, t) {\n    this.ensureStageObjects(e).add(t);\n  }\n\n  removeStageObject(e, t) {\n    const s = this.stageObjects.get(e);\n    s && s.delete(t) && (t.geometries[0].vertexAttributes.get(\"size\").data = [0, 0], t.geometryVertexAttrsUpdated(0));\n  }\n\n  _processAddition(e, t) {\n    const s = this.atlas,\n          i = e.textId,\n          r = e.textRenderer.renderedWidth,\n          a = e.textRenderer.renderedHeight,\n          n = r + f,\n          h = a + f + y;\n    if (s.cursor.x + n < s.size.width && s.cursor.y + h < s.size.height) this.addAtlasElement(e, i, n, h), this.elementsToRender.set(i, e), this.elementsToAddOrUpdate.delete(i);else {\n      if (!(s.cursor.y + h + s.lineHeight < s.size.height)) {\n        const e = this.getExpectedAtlasUsage(),\n              i = e > x && s.size.width < u;\n        return i && this.resizeAtlas(2 * s.size.width, 2 * s.size.height), !t || !i && e > T && s.size.width === u ? (this.processRemovals(), 0) : (this.repack(), 1);\n      }\n\n      s.cursor.x = f, s.cursor.y += s.lineHeight, s.lineHeight = 0, this.addAtlasElement(e, i, n, h), this.elementsToRender.set(i, e), this.elementsToAddOrUpdate.delete(i);\n    }\n    return 0;\n  }\n\n  processRemovals() {\n    this.elementsToRemove.forEach((e, t) => {\n      const s = this.stageObjects.get(t);\n      s && 0 !== s.size || this.removeAtlasElement(e), s && 0 === s.size && this.stageObjects.delete(t);\n    }), this.elementsToRemove.clear();\n  }\n\n  repack() {\n    this.processRemovals(), this.elements.forEach((e, t) => {\n      e.rendered = !1, this.elementsToAddOrUpdate.set(t, e);\n    }), this.elements.clear(), this.resetAtlasCursor(), this.elementsToRender.clear();\n  }\n\n  processRenderingRequest(e) {\n    this.ctx.clearRect(e.placement.offset.x, e.placement.offset.y, e.placement.size.width, e.placement.size.height), e.textRenderer.render(this.ctx, e.placement.offset.x, e.placement.offset.y);\n    const t = this.stageObjects.get(e.textId);\n    t && t.forEach(t => {\n      t.geometries[0].vertexAttributes.get(\"uv0\").data = new Float32Array(e.placement.uvMinMax), t.geometries[0].vertexAttributes.get(\"size\").data = [e.placement.size.displayWidth, e.placement.size.displayHeight], t.geometryVertexAttrsUpdated(0);\n    }), e.rendered = !0;\n  }\n\n  get running() {\n    return this.updating;\n  }\n\n  runTask(e, t = !0) {\n    if (!this.glTexture) return;\n    let s = !1;\n    if (i(this.elementsToAddOrUpdate, (e, i) => {\n      const r = this.elements.get(i);\n\n      if (r && r.rendered) {\n        const e = this.stageObjects.get(i);\n        return e && e.forEach(e => {\n          const t = e.geometries[0].vertexAttributes,\n                s = this.elements.get(i);\n          t.get(\"uv0\").data = new Float32Array(s.placement.uvMinMax), t.get(\"size\").data = new Float32Array([s.placement.size.displayWidth, s.placement.size.displayHeight]), e.geometryVertexAttrsUpdated(0);\n        }), this.elementsToAddOrUpdate.delete(i), !1;\n      }\n\n      return 1 === this._processAddition(this.elementsToAddOrUpdate.get(i), t) && (s = !0, !0);\n    }), s) return void this.runTask(c, !1);\n    let r = !1;\n    this.elementsToRender.size > 0 && this.needsClear && (this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), this.needsClear = !1), i(this.elementsToRender, (t, s) => (this.processRenderingRequest(t), this.elementsToRender.delete(s), r = !0, e.madeProgress(), e.done)), r && a(this.glTexture) && this.glTexture.setData(this.canvas), this.updating = this.elementsToRender.size > 0, !this.updating && p.test.orderedRepackingEnabled && this.repackOrdered();\n  }\n\n  addTextTexture(e, t) {\n    const s = e.key;\n    this.elementsToAddOrUpdate.has(s) || this.elementsToAddOrUpdate.set(s, {\n      textId: s,\n      placement: {\n        offset: {\n          x: 0,\n          y: 0\n        },\n        size: {\n          width: 0,\n          height: 0,\n          displayWidth: 0,\n          displayHeight: 0\n        },\n        uvMinMax: []\n      },\n      textRenderer: e,\n      rendered: !1\n    }), this.addStageObject(s, t), this.elementsToRemove.delete(s), this.setDirty();\n  }\n\n  removeTextTexture(e, t) {\n    const s = e.key;\n    this.elementsToRemove.set(s, this.elements.get(s)), this.removeStageObject(s, t);\n  }\n\n  setDirty() {\n    this.updating = !0;\n  }\n\n  repackOrdered() {\n    if (0 === this.elements.size) return;\n    const e = [];\n    this.elements.forEach((t, s) => e.push({\n      element: t,\n      key: s\n    }));\n    let t = !0;\n\n    for (let s = 0; s < e.length - 1; s++) if (e[s].key.localeCompare(e[s + 1].key) > 0) {\n      t = !1;\n      break;\n    }\n\n    if (!t || this.elementsToRemove.size) {\n      e.sort((e, t) => e.key.localeCompare(t.key)), this.elements.clear();\n\n      for (const {\n        element: t,\n        key: s\n      } of e) this.elements.set(s, t);\n\n      this.repack(), this.setDirty();\n    }\n  }\n\n  get test() {\n    const {\n      elements: e,\n      stageObjects: t,\n      elementsToRemove: s,\n      atlas: i\n    } = this,\n          r = this;\n    return {\n      elements: e,\n      stageObjects: t,\n      elementsToRemove: s,\n      atlas: i,\n      resizeAtlas: (e, t) => r.resizeAtlas(e, t),\n      run: (e, t) => r.runTask(e, t)\n    };\n  }\n\n};\nv.test = {\n  orderedRepackingEnabled: !1\n}, e([o({\n  constructOnly: !0\n})], v.prototype, \"view\", void 0), e([o({\n  type: Boolean\n})], v.prototype, \"updating\", void 0), v = p = e([l(\"esri.views.3d.webgl-engine.lib.TextTextureAtlas\")], v);\nconst f = 2,\n      y = 2;\nvar A = v;\nexport default A;\nexport { v as TextTextureAtlas };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextTextureAtlas.js"],"names":["_","e","t","s","someMap","i","nextHighestPowerOfTwo","r","isSome","a","removeMaybe","n","generateUID","h","property","o","subclass","l","TaskPriority","d","noBudget","c","m","p","g","u","x","T","v","constructor","type","id","events","glTexture","needsClear","elementsToAddOrUpdate","Map","elementsToRemove","elementsToRender","elements","stageObjects","updating","initialize","stage","view","_stage","canvas","create2DCanvas","ctx","getContext","add","computeAtlasResolution","width","height","createAtlasRegion","update2DCanvasSize","resetAtlasCursor","unload","dispose","emit","atlas","size","requiresFrameUpdates","createDescriptor","target","pixelFormat","dataType","wrapMode","flipped","samplingMode","hasMipmap","preMultiplyAlpha","maxAnisotropy","parameters","maxMaxAnisotropy","load","resourceController","scheduler","frameWorker","registerTask","TEXT_TEXTURE_ATLAS","setDirty","remove","document","createElement","setAttribute","toString","cursor","y","lineHeight","Math","max","min","resizeAtlas","resize","f","getAtlasUsage","getExpectedAtlasUsage","addAtlasElement","renderedWidth","renderedHeight","displayWidth","displayHeight","textRenderer","placement","offset","uvMinMax","set","removeAtlasElement","has","textId","clearRect","delete","ensureStageObjects","get","Set","addStageObject","removeStageObject","geometries","vertexAttributes","data","geometryVertexAttrsUpdated","_processAddition","processRemovals","repack","forEach","clear","rendered","processRenderingRequest","render","Float32Array","running","runTask","madeProgress","done","setData","test","orderedRepackingEnabled","repackOrdered","addTextTexture","key","removeTextTexture","push","element","length","localeCompare","sort","run","constructOnly","prototype","Boolean","A","TextTextureAtlas"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,iCAAlB;AAAoD,OAAOC,CAAP,MAAa,8BAAb;AAA4C,OAAOC,CAAP,MAAa,6BAAb;AAA2C,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,8BAAxB;AAAuD,SAAOC,qBAAqB,IAAIC,CAAhC,QAAsC,+BAAtC;AAAsE,SAAOC,MAAM,IAAIC,CAAjB,EAAmBC,WAAW,IAAIC,CAAlC,QAAwC,2BAAxC;AAAoE,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,yBAA5B;AAAsD,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,yDAAzB;AAAmF,OAAM,yBAAN;AAAgC,OAAM,gDAAN;AAAuD,OAAM,4BAAN;AAAmC,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,yDAAzB;AAAmF,SAAOC,YAAY,IAAIC,CAAvB,EAAyBC,QAAQ,IAAIC,CAArC,QAA2C,+BAA3C;AAA2E,OAAOC,CAAP,MAAa,2BAAb;AAAyC,IAAIC,CAAJ;AAAM,MAAMC,CAAC,GAAC,GAAR;AAAA,MAAYC,CAAC,GAAC,IAAd;AAAA,MAAmBC,CAAC,GAAC,GAArB;AAAA,MAAyBC,CAAC,GAAC,GAA3B;AAA+B,IAAIC,CAAC,GAACL,CAAC,GAAC,cAAcrB,CAAd,CAAe;AAAC2B,EAAAA,WAAW,CAAC5B,CAAD,EAAG;AAAC,UAAMA,CAAN,GAAS,KAAK6B,IAAL,GAAU,CAAnB,EAAqB,KAAKC,EAAL,GAAQlB,CAAC,EAA9B,EAAiC,KAAKmB,MAAL,GAAY,IAAI7B,CAAJ,EAA7C,EAAmD,KAAK8B,SAAL,GAAe,IAAlE,EAAuE,KAAKC,UAAL,GAAgB,CAAC,CAAxF,EAA0F,KAAKC,qBAAL,GAA2B,IAAIC,GAAJ,EAArH,EAA6H,KAAKC,gBAAL,GAAsB,IAAID,GAAJ,EAAnJ,EAA2J,KAAKE,gBAAL,GAAsB,IAAIF,GAAJ,EAAjL,EAAyL,KAAKG,QAAL,GAAc,IAAIH,GAAJ,EAAvM,EAA+M,KAAKI,YAAL,GAAkB,IAAIJ,GAAJ,EAAjO,EAAyO,KAAKK,QAAL,GAAc,CAAC,CAAxP;AAA0P;;AAAAC,EAAAA,UAAU,GAAE;AAAC,SAAKC,KAAL,GAAW,KAAKC,IAAL,CAAUC,MAArB,EAA4B,KAAKC,MAAL,GAAY,KAAKC,cAAL,EAAxC,EAA8D,KAAKC,GAAL,GAAS,KAAKF,MAAL,CAAYG,UAAZ,CAAuB,IAAvB,CAAvE,EAAoG,KAAKN,KAAL,CAAWO,GAAX,CAAe,IAAf,CAApG;AAAyH,UAAMjD,CAAC,GAAC,KAAKkD,sBAAL,CAA4B,KAAKP,IAAL,CAAUQ,KAAtC,EAA4C,KAAKR,IAAL,CAAUS,MAAtD,CAAR;AAAsE,SAAKC,iBAAL,CAAuBrD,CAAvB,GAA0B,KAAKsD,kBAAL,EAA1B,EAAoD,KAAKC,gBAAL,EAApD;AAA4E;;AAAAC,EAAAA,MAAM,GAAE;AAAChD,IAAAA,CAAC,CAAC,KAAKwB,SAAN,CAAD,KAAoB,KAAKA,SAAL,CAAeyB,OAAf,IAAyB,KAAKzB,SAAL,GAAe,IAA5D,GAAkE,KAAKD,MAAL,CAAY2B,IAAZ,CAAiB,UAAjB,CAAlE;AAA+F;;AAAS,MAALP,KAAK,GAAE;AAAC,WAAO,KAAKQ,KAAL,CAAWC,IAAX,CAAgBT,KAAvB;AAA6B;;AAAU,MAANC,MAAM,GAAE;AAAC,WAAO,KAAKO,KAAL,CAAWC,IAAX,CAAgBR,MAAvB;AAA8B;;AAAwB,MAApBS,oBAAoB,GAAE;AAAC,WAAM,CAAC,CAAP;AAAS;;AAAAC,EAAAA,gBAAgB,CAAC9D,CAAD,EAAG;AAAC,WAAM;AAAC+D,MAAAA,MAAM,EAAC,IAAR;AAAaC,MAAAA,WAAW,EAAC,IAAzB;AAA8BC,MAAAA,QAAQ,EAAC,IAAvC;AAA4CC,MAAAA,QAAQ,EAAC,KAArD;AAA2DC,MAAAA,OAAO,EAAC,CAAC,CAApE;AAAsEC,MAAAA,YAAY,EAAC,IAAnF;AAAwFC,MAAAA,SAAS,EAAC,CAAC,CAAnG;AAAqGC,MAAAA,gBAAgB,EAAC,CAAC,CAAvH;AAAyHC,MAAAA,aAAa,EAACvE,CAAC,CAACwE,UAAF,CAAaC;AAApJ,KAAN;AAA4K;;AAAAC,EAAAA,IAAI,CAAC1E,CAAD,EAAG;AAAC,QAAGQ,CAAC,CAAC,KAAKwB,SAAN,CAAJ,EAAqB,OAAO,KAAKA,SAAZ;AAAsB,SAAKA,SAAL,GAAe,IAAIX,CAAJ,CAAMrB,CAAN,EAAQ,KAAK8D,gBAAL,CAAsB9D,CAAtB,CAAR,EAAiC,KAAK6C,MAAtC,CAAf;AAA6D,UAAM5C,CAAC,GAAC,KAAK0C,IAAL,CAAUgC,kBAAV,CAA6BC,SAArC;AAA+C,WAAO,KAAKC,WAAL,GAAiB5E,CAAC,CAAC6E,YAAF,CAAe5D,CAAC,CAAC6D,kBAAjB,EAAoC,IAApC,CAAjB,EAA2D,KAAKC,QAAL,EAA3D,EAA2E,KAAKhD,SAAvF;AAAiG;;AAAAyB,EAAAA,OAAO,GAAE;AAAC,SAAKnB,QAAL,GAAc,IAAd,EAAmB,KAAKJ,qBAAL,GAA2B,IAA9C,EAAmD,KAAKE,gBAAL,GAAsB,IAAzE,EAA8E,KAAKC,gBAAL,GAAsB,IAApG,EAAyG,KAAKwC,WAAL,GAAiBnE,CAAC,CAAC,KAAKmE,WAAN,CAA3H,EAA8I,KAAK7C,SAAL,KAAiB,KAAKU,KAAL,CAAWuC,MAAX,CAAkB,IAAlB,GAAwB,KAAKjD,SAAL,GAAe,IAAxD,CAA9I,EAA4M,KAAKa,MAAL,CAAYM,KAAZ,GAAkB,CAA9N,EAAgO,KAAKN,MAAL,CAAYO,MAAZ,GAAmB,CAAnP,EAAqP,KAAKP,MAAL,GAAY,IAAjQ,EAAsQ,KAAKE,GAAL,GAAS,IAA/Q;AAAoR;;AAAAD,EAAAA,cAAc,GAAE;AAAC,UAAM9C,CAAC,GAACkF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAR;AAAyC,WAAOnF,CAAC,CAACoF,YAAF,CAAe,IAAf,EAAoB,UAApB,GAAgCpF,CAAC,CAACoF,YAAF,CAAe,OAAf,EAAuB,cAAvB,CAAhC,EAAuEpF,CAAC,CAACoF,YAAF,CAAe,OAAf,EAAuB7D,CAAC,CAAC8D,QAAF,EAAvB,CAAvE,EAA4GrF,CAAC,CAACoF,YAAF,CAAe,QAAf,EAAwB7D,CAAC,CAAC8D,QAAF,EAAxB,CAA5G,EAAkJrF,CAAzJ;AAA2J;;AAAAsD,EAAAA,kBAAkB,GAAE;AAAC,SAAKT,MAAL,CAAYuC,YAAZ,CAAyB,OAAzB,EAAiC,KAAKzB,KAAL,CAAWC,IAAX,CAAgBT,KAAhB,CAAsBkC,QAAtB,EAAjC,GAAmE,KAAKxC,MAAL,CAAYuC,YAAZ,CAAyB,QAAzB,EAAkC,KAAKzB,KAAL,CAAWC,IAAX,CAAgBR,MAAhB,CAAuBiC,QAAvB,EAAlC,CAAnE;AAAwI;;AAAAhC,EAAAA,iBAAiB,CAACrD,CAAC,GAACuB,CAAH,EAAK;AAAC,SAAKoC,KAAL,GAAW;AAACC,MAAAA,IAAI,EAAC;AAACT,QAAAA,KAAK,EAACnD,CAAP;AAASoD,QAAAA,MAAM,EAACpD;AAAhB,OAAN;AAAyBsF,MAAAA,MAAM,EAAC;AAAC7D,QAAAA,CAAC,EAAC,CAAH;AAAK8D,QAAAA,CAAC,EAAC;AAAP,OAAhC;AAA0CC,MAAAA,UAAU,EAAC;AAArD,KAAX;AAAmE;;AAAAtC,EAAAA,sBAAsB,CAAClD,CAAD,EAAGC,CAAH,EAAK;AAAC,QAAIC,CAAC,GAACuF,IAAI,CAACC,GAAL,CAAS1F,CAAT,EAAWC,CAAX,CAAN;AAAoB,WAAOC,CAAC,IAAE,GAAH,EAAOA,CAAC,GAACI,CAAC,CAACJ,CAAD,CAAV,EAAcA,CAAC,GAACuF,IAAI,CAACE,GAAL,CAASzF,CAAT,EAAWsB,CAAX,CAAhB,EAA8BtB,CAArC;AAAuC;;AAAA0F,EAAAA,WAAW,CAAC5F,CAAD,EAAGC,CAAH,EAAK;AAACA,IAAAA,CAAC,GAACA,CAAC,IAAED,CAAL;AAAO,UAAME,CAAC,GAAC,KAAKyD,KAAb;AAAmBzD,IAAAA,CAAC,CAAC0D,IAAF,CAAOT,KAAP,GAAanD,CAAb,EAAeE,CAAC,CAAC0D,IAAF,CAAOR,MAAP,GAAcnD,CAA7B,EAA+BO,CAAC,CAAC,KAAKwB,SAAN,CAAD,IAAmB,KAAKA,SAAL,CAAe6D,MAAf,CAAsB7F,CAAtB,EAAwBC,CAAxB,CAAlD,EAA6E,KAAKqD,kBAAL,EAA7E;AAAuG;;AAAAC,EAAAA,gBAAgB,GAAE;AAAC,UAAMvD,CAAC,GAAC,KAAK2D,KAAb;AAAmB3D,IAAAA,CAAC,CAACsF,MAAF,CAAS7D,CAAT,GAAWqE,CAAX,EAAa9F,CAAC,CAACsF,MAAF,CAASC,CAAT,GAAWO,CAAC,GAACP,CAA1B,EAA4BvF,CAAC,CAACwF,UAAF,GAAa,CAAzC,EAA2C,KAAKvD,UAAL,GAAgB,CAAC,CAA5D;AAA8D;;AAAA8D,EAAAA,aAAa,GAAE;AAAC,UAAM/F,CAAC,GAAC,KAAK2D,KAAb;AAAmB,WAAM,CAAC3D,CAAC,CAACsF,MAAF,CAAS7D,CAAT,GAAWzB,CAAC,CAACsF,MAAF,CAASC,CAAT,GAAWvF,CAAC,CAAC4D,IAAF,CAAOT,KAA9B,KAAsCnD,CAAC,CAAC4D,IAAF,CAAOT,KAAP,GAAanD,CAAC,CAAC4D,IAAF,CAAOR,MAA1D,CAAN;AAAwE;;AAAA4C,EAAAA,qBAAqB,GAAE;AAAC,UAAMhG,CAAC,GAAC,KAAKoC,gBAAL,CAAsBwB,IAA9B;AAAA,UAAmC3D,CAAC,GAAC,KAAKiC,qBAAL,CAA2B0B,IAAhE;AAAA,UAAqE1D,CAAC,GAAC,KAAKoC,QAAL,CAAcsB,IAArF;AAA0F,WAAO,KAAKmC,aAAL,KAAqB7F,CAArB,IAAwBA,CAAC,GAACD,CAAF,GAAID,CAA5B,CAAP;AAAsC;;AAAAiG,EAAAA,eAAe,CAACjG,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOE,CAAP,EAAS;AAAC,UAAME,CAAC,GAAC,KAAKqD,KAAb;AAAA,UAAmB;AAACuC,MAAAA,aAAa,EAAC1F,CAAf;AAAiB2F,MAAAA,cAAc,EAACzF,CAAhC;AAAkC0F,MAAAA,YAAY,EAACxF,CAA/C;AAAiDyF,MAAAA,aAAa,EAACvF;AAA/D,QAAkEd,CAAC,CAACsG,YAAvF;AAAoGtG,IAAAA,CAAC,CAACuG,SAAF,CAAYC,MAAZ,CAAmB/E,CAAnB,GAAqBnB,CAAC,CAACgF,MAAF,CAAS7D,CAA9B,EAAgCzB,CAAC,CAACuG,SAAF,CAAYC,MAAZ,CAAmBjB,CAAnB,GAAqBjF,CAAC,CAACgF,MAAF,CAASC,CAA9D,EAAgEvF,CAAC,CAACuG,SAAF,CAAY3C,IAAZ,CAAiBT,KAAjB,GAAuB3C,CAAvF,EAAyFR,CAAC,CAACuG,SAAF,CAAY3C,IAAZ,CAAiBR,MAAjB,GAAwB1C,CAAjH,EAAmHV,CAAC,CAACuG,SAAF,CAAY3C,IAAZ,CAAiBwC,YAAjB,GAA8BxF,CAAjJ,EAAmJZ,CAAC,CAACuG,SAAF,CAAY3C,IAAZ,CAAiByC,aAAjB,GAA+BvF,CAAlL,EAAoLd,CAAC,CAACuG,SAAF,CAAYE,QAAZ,GAAqB,CAACzG,CAAC,CAACuG,SAAF,CAAYC,MAAZ,CAAmB/E,CAAnB,GAAqBnB,CAAC,CAACsD,IAAF,CAAOT,KAA7B,EAAmC,IAAE,CAACnD,CAAC,CAACuG,SAAF,CAAYC,MAAZ,CAAmBjB,CAAnB,GAAqB7E,CAAtB,IAAyBJ,CAAC,CAACsD,IAAF,CAAOR,MAArE,EAA4E,CAACpD,CAAC,CAACuG,SAAF,CAAYC,MAAZ,CAAmB/E,CAAnB,GAAqBjB,CAAtB,IAAyBF,CAAC,CAACsD,IAAF,CAAOT,KAA5G,EAAkH,IAAEnD,CAAC,CAACuG,SAAF,CAAYC,MAAZ,CAAmBjB,CAAnB,GAAqBjF,CAAC,CAACsD,IAAF,CAAOR,MAAhJ,CAAzM,EAAiW9C,CAAC,CAACgF,MAAF,CAAS7D,CAAT,IAAYvB,CAA7W,EAA+WI,CAAC,CAACkF,UAAF,GAAaC,IAAI,CAACC,GAAL,CAASpF,CAAC,CAACkF,UAAX,EAAsBpF,CAAtB,CAA5X,EAAqZ,KAAKkC,QAAL,CAAcoE,GAAd,CAAkBzG,CAAlB,EAAoBD,CAApB,CAArZ;AAA4a;;AAAA2G,EAAAA,kBAAkB,CAAC3G,CAAD,EAAG;AAAC,QAAGA,CAAC,IAAE,KAAKsC,QAAL,CAAcsE,GAAd,CAAkB5G,CAAC,CAAC6G,MAApB,CAAN,EAAkC;AAAC,YAAM5G,CAAC,GAACD,CAAC,CAACuG,SAAF,CAAYC,MAApB;AAAA,YAA2BtG,CAAC,GAACF,CAAC,CAACuG,SAAF,CAAY3C,IAAzC;AAA8C,WAAKb,GAAL,CAAS+D,SAAT,CAAmB7G,CAAC,CAACwB,CAArB,EAAuBxB,CAAC,CAACsF,CAAzB,EAA2BrF,CAAC,CAACiD,KAA7B,EAAmCjD,CAAC,CAACkD,MAArC,GAA6C,KAAKd,QAAL,CAAcyE,MAAd,CAAqB/G,CAAC,CAAC6G,MAAvB,CAA7C;AAA4E;AAAC;;AAAAG,EAAAA,kBAAkB,CAAChH,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKsC,YAAL,CAAkB0E,GAAlB,CAAsBjH,CAAtB,CAAR;AAAiC,QAAGC,CAAH,EAAK,OAAOA,CAAP;AAAS,UAAMC,CAAC,GAAC,IAAIgH,GAAJ,EAAR;AAAgB,WAAO,KAAK3E,YAAL,CAAkBmE,GAAlB,CAAsB1G,CAAtB,EAAwBE,CAAxB,GAA2BA,CAAlC;AAAoC;;AAAAiH,EAAAA,cAAc,CAACnH,CAAD,EAAGC,CAAH,EAAK;AAAC,SAAK+G,kBAAL,CAAwBhH,CAAxB,EAA2BiD,GAA3B,CAA+BhD,CAA/B;AAAkC;;AAAAmH,EAAAA,iBAAiB,CAACpH,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMC,CAAC,GAAC,KAAKqC,YAAL,CAAkB0E,GAAlB,CAAsBjH,CAAtB,CAAR;AAAiCE,IAAAA,CAAC,IAAEA,CAAC,CAAC6G,MAAF,CAAS9G,CAAT,CAAH,KAAiBA,CAAC,CAACoH,UAAF,CAAa,CAAb,EAAgBC,gBAAhB,CAAiCL,GAAjC,CAAqC,MAArC,EAA6CM,IAA7C,GAAkD,CAAC,CAAD,EAAG,CAAH,CAAlD,EAAwDtH,CAAC,CAACuH,0BAAF,CAA6B,CAA7B,CAAzE;AAA0G;;AAAAC,EAAAA,gBAAgB,CAACzH,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMC,CAAC,GAAC,KAAKyD,KAAb;AAAA,UAAmBvD,CAAC,GAACJ,CAAC,CAAC6G,MAAvB;AAAA,UAA8BvG,CAAC,GAACN,CAAC,CAACsG,YAAF,CAAeJ,aAA/C;AAAA,UAA6D1F,CAAC,GAACR,CAAC,CAACsG,YAAF,CAAeH,cAA9E;AAAA,UAA6FzF,CAAC,GAACJ,CAAC,GAACwF,CAAjG;AAAA,UAAmGlF,CAAC,GAACJ,CAAC,GAACsF,CAAF,GAAIP,CAAzG;AAA2G,QAAGrF,CAAC,CAACoF,MAAF,CAAS7D,CAAT,GAAWf,CAAX,GAAaR,CAAC,CAAC0D,IAAF,CAAOT,KAApB,IAA2BjD,CAAC,CAACoF,MAAF,CAASC,CAAT,GAAW3E,CAAX,GAAaV,CAAC,CAAC0D,IAAF,CAAOR,MAAlD,EAAyD,KAAK6C,eAAL,CAAqBjG,CAArB,EAAuBI,CAAvB,EAAyBM,CAAzB,EAA2BE,CAA3B,GAA8B,KAAKyB,gBAAL,CAAsBqE,GAAtB,CAA0BtG,CAA1B,EAA4BJ,CAA5B,CAA9B,EAA6D,KAAKkC,qBAAL,CAA2B6E,MAA3B,CAAkC3G,CAAlC,CAA7D,CAAzD,KAA+J;AAAC,UAAG,EAAEF,CAAC,CAACoF,MAAF,CAASC,CAAT,GAAW3E,CAAX,GAAaV,CAAC,CAACsF,UAAf,GAA0BtF,CAAC,CAAC0D,IAAF,CAAOR,MAAnC,CAAH,EAA8C;AAAC,cAAMpD,CAAC,GAAC,KAAKgG,qBAAL,EAAR;AAAA,cAAqC5F,CAAC,GAACJ,CAAC,GAACyB,CAAF,IAAKvB,CAAC,CAAC0D,IAAF,CAAOT,KAAP,GAAa3B,CAAzD;AAA2D,eAAOpB,CAAC,IAAE,KAAKwF,WAAL,CAAiB,IAAE1F,CAAC,CAAC0D,IAAF,CAAOT,KAA1B,EAAgC,IAAEjD,CAAC,CAAC0D,IAAF,CAAOR,MAAzC,CAAH,EAAoD,CAACnD,CAAD,IAAI,CAACG,CAAD,IAAIJ,CAAC,GAAC0B,CAAN,IAASxB,CAAC,CAAC0D,IAAF,CAAOT,KAAP,KAAe3B,CAA5B,IAA+B,KAAKkG,eAAL,IAAuB,CAAtD,KAA0D,KAAKC,MAAL,IAAc,CAAxE,CAA3D;AAAsI;;AAAAzH,MAAAA,CAAC,CAACoF,MAAF,CAAS7D,CAAT,GAAWqE,CAAX,EAAa5F,CAAC,CAACoF,MAAF,CAASC,CAAT,IAAYrF,CAAC,CAACsF,UAA3B,EAAsCtF,CAAC,CAACsF,UAAF,GAAa,CAAnD,EAAqD,KAAKS,eAAL,CAAqBjG,CAArB,EAAuBI,CAAvB,EAAyBM,CAAzB,EAA2BE,CAA3B,CAArD,EAAmF,KAAKyB,gBAAL,CAAsBqE,GAAtB,CAA0BtG,CAA1B,EAA4BJ,CAA5B,CAAnF,EAAkH,KAAKkC,qBAAL,CAA2B6E,MAA3B,CAAkC3G,CAAlC,CAAlH;AAAuJ;AAAA,WAAO,CAAP;AAAS;;AAAAsH,EAAAA,eAAe,GAAE;AAAC,SAAKtF,gBAAL,CAAsBwF,OAAtB,CAA+B,CAAC5H,CAAD,EAAGC,CAAH,KAAO;AAAC,YAAMC,CAAC,GAAC,KAAKqC,YAAL,CAAkB0E,GAAlB,CAAsBhH,CAAtB,CAAR;AAAiCC,MAAAA,CAAC,IAAE,MAAIA,CAAC,CAAC0D,IAAT,IAAe,KAAK+C,kBAAL,CAAwB3G,CAAxB,CAAf,EAA0CE,CAAC,IAAE,MAAIA,CAAC,CAAC0D,IAAT,IAAe,KAAKrB,YAAL,CAAkBwE,MAAlB,CAAyB9G,CAAzB,CAAzD;AAAqF,KAA7J,GAAgK,KAAKmC,gBAAL,CAAsByF,KAAtB,EAAhK;AAA8L;;AAAAF,EAAAA,MAAM,GAAE;AAAC,SAAKD,eAAL,IAAuB,KAAKpF,QAAL,CAAcsF,OAAd,CAAuB,CAAC5H,CAAD,EAAGC,CAAH,KAAO;AAACD,MAAAA,CAAC,CAAC8H,QAAF,GAAW,CAAC,CAAZ,EAAc,KAAK5F,qBAAL,CAA2BwE,GAA3B,CAA+BzG,CAA/B,EAAiCD,CAAjC,CAAd;AAAkD,KAAjF,CAAvB,EAA2G,KAAKsC,QAAL,CAAcuF,KAAd,EAA3G,EAAiI,KAAKtE,gBAAL,EAAjI,EAAyJ,KAAKlB,gBAAL,CAAsBwF,KAAtB,EAAzJ;AAAuL;;AAAAE,EAAAA,uBAAuB,CAAC/H,CAAD,EAAG;AAAC,SAAK+C,GAAL,CAAS+D,SAAT,CAAmB9G,CAAC,CAACuG,SAAF,CAAYC,MAAZ,CAAmB/E,CAAtC,EAAwCzB,CAAC,CAACuG,SAAF,CAAYC,MAAZ,CAAmBjB,CAA3D,EAA6DvF,CAAC,CAACuG,SAAF,CAAY3C,IAAZ,CAAiBT,KAA9E,EAAoFnD,CAAC,CAACuG,SAAF,CAAY3C,IAAZ,CAAiBR,MAArG,GAA6GpD,CAAC,CAACsG,YAAF,CAAe0B,MAAf,CAAsB,KAAKjF,GAA3B,EAA+B/C,CAAC,CAACuG,SAAF,CAAYC,MAAZ,CAAmB/E,CAAlD,EAAoDzB,CAAC,CAACuG,SAAF,CAAYC,MAAZ,CAAmBjB,CAAvE,CAA7G;AAAuL,UAAMtF,CAAC,GAAC,KAAKsC,YAAL,CAAkB0E,GAAlB,CAAsBjH,CAAC,CAAC6G,MAAxB,CAAR;AAAwC5G,IAAAA,CAAC,IAAEA,CAAC,CAAC2H,OAAF,CAAW3H,CAAC,IAAE;AAACA,MAAAA,CAAC,CAACoH,UAAF,CAAa,CAAb,EAAgBC,gBAAhB,CAAiCL,GAAjC,CAAqC,KAArC,EAA4CM,IAA5C,GAAiD,IAAIU,YAAJ,CAAiBjI,CAAC,CAACuG,SAAF,CAAYE,QAA7B,CAAjD,EAAwFxG,CAAC,CAACoH,UAAF,CAAa,CAAb,EAAgBC,gBAAhB,CAAiCL,GAAjC,CAAqC,MAArC,EAA6CM,IAA7C,GAAkD,CAACvH,CAAC,CAACuG,SAAF,CAAY3C,IAAZ,CAAiBwC,YAAlB,EAA+BpG,CAAC,CAACuG,SAAF,CAAY3C,IAAZ,CAAiByC,aAAhD,CAA1I,EAAyMpG,CAAC,CAACuH,0BAAF,CAA6B,CAA7B,CAAzM;AAAyO,KAAxP,CAAH,EAA8PxH,CAAC,CAAC8H,QAAF,GAAW,CAAC,CAA1Q;AAA4Q;;AAAW,MAAPI,OAAO,GAAE;AAAC,WAAO,KAAK1F,QAAZ;AAAqB;;AAAA2F,EAAAA,OAAO,CAACnI,CAAD,EAAGC,CAAC,GAAC,CAAC,CAAN,EAAQ;AAAC,QAAG,CAAC,KAAK+B,SAAT,EAAmB;AAAO,QAAI9B,CAAC,GAAC,CAAC,CAAP;AAAS,QAAGE,CAAC,CAAC,KAAK8B,qBAAN,EAA6B,CAAClC,CAAD,EAAGI,CAAH,KAAO;AAAC,YAAME,CAAC,GAAC,KAAKgC,QAAL,CAAc2E,GAAd,CAAkB7G,CAAlB,CAAR;;AAA6B,UAAGE,CAAC,IAAEA,CAAC,CAACwH,QAAR,EAAiB;AAAC,cAAM9H,CAAC,GAAC,KAAKuC,YAAL,CAAkB0E,GAAlB,CAAsB7G,CAAtB,CAAR;AAAiC,eAAOJ,CAAC,IAAEA,CAAC,CAAC4H,OAAF,CAAW5H,CAAC,IAAE;AAAC,gBAAMC,CAAC,GAACD,CAAC,CAACqH,UAAF,CAAa,CAAb,EAAgBC,gBAAxB;AAAA,gBAAyCpH,CAAC,GAAC,KAAKoC,QAAL,CAAc2E,GAAd,CAAkB7G,CAAlB,CAA3C;AAAgEH,UAAAA,CAAC,CAACgH,GAAF,CAAM,KAAN,EAAaM,IAAb,GAAkB,IAAIU,YAAJ,CAAiB/H,CAAC,CAACqG,SAAF,CAAYE,QAA7B,CAAlB,EAAyDxG,CAAC,CAACgH,GAAF,CAAM,MAAN,EAAcM,IAAd,GAAmB,IAAIU,YAAJ,CAAiB,CAAC/H,CAAC,CAACqG,SAAF,CAAY3C,IAAZ,CAAiBwC,YAAlB,EAA+BlG,CAAC,CAACqG,SAAF,CAAY3C,IAAZ,CAAiByC,aAAhD,CAAjB,CAA5E,EAA6JrG,CAAC,CAACwH,0BAAF,CAA6B,CAA7B,CAA7J;AAA6L,SAA5Q,CAAH,EAAkR,KAAKtF,qBAAL,CAA2B6E,MAA3B,CAAkC3G,CAAlC,CAAlR,EAAuT,CAAC,CAA/T;AAAiU;;AAAA,aAAO,MAAI,KAAKqH,gBAAL,CAAsB,KAAKvF,qBAAL,CAA2B+E,GAA3B,CAA+B7G,CAA/B,CAAtB,EAAwDH,CAAxD,CAAJ,KAAiEC,CAAC,GAAC,CAAC,CAAH,EAAK,CAAC,CAAvE,CAAP;AAAiF,KAAvgB,CAAD,EAA2gBA,CAA9gB,EAAghB,OAAO,KAAK,KAAKiI,OAAL,CAAa/G,CAAb,EAAe,CAAC,CAAhB,CAAZ;AAA+B,QAAId,CAAC,GAAC,CAAC,CAAP;AAAS,SAAK+B,gBAAL,CAAsBuB,IAAtB,GAA2B,CAA3B,IAA8B,KAAK3B,UAAnC,KAAgD,KAAKc,GAAL,CAAS+D,SAAT,CAAmB,CAAnB,EAAqB,CAArB,EAAuB,KAAKjE,MAAL,CAAYM,KAAnC,EAAyC,KAAKN,MAAL,CAAYO,MAArD,GAA6D,KAAKnB,UAAL,GAAgB,CAAC,CAA9H,GAAiI7B,CAAC,CAAC,KAAKiC,gBAAN,EAAwB,CAACpC,CAAD,EAAGC,CAAH,MAAQ,KAAK6H,uBAAL,CAA6B9H,CAA7B,GAAgC,KAAKoC,gBAAL,CAAsB0E,MAAtB,CAA6B7G,CAA7B,CAAhC,EAAgEI,CAAC,GAAC,CAAC,CAAnE,EAAqEN,CAAC,CAACoI,YAAF,EAArE,EAAsFpI,CAAC,CAACqI,IAAhG,CAAxB,CAAlI,EAAkQ/H,CAAC,IAAEE,CAAC,CAAC,KAAKwB,SAAN,CAAJ,IAAsB,KAAKA,SAAL,CAAesG,OAAf,CAAuB,KAAKzF,MAA5B,CAAxR,EAA4T,KAAKL,QAAL,GAAc,KAAKH,gBAAL,CAAsBuB,IAAtB,GAA2B,CAArW,EAAuW,CAAC,KAAKpB,QAAN,IAAgBlB,CAAC,CAACiH,IAAF,CAAOC,uBAAvB,IAAgD,KAAKC,aAAL,EAAvZ;AAA4a;;AAAAC,EAAAA,cAAc,CAAC1I,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMC,CAAC,GAACF,CAAC,CAAC2I,GAAV;AAAc,SAAKzG,qBAAL,CAA2B0E,GAA3B,CAA+B1G,CAA/B,KAAmC,KAAKgC,qBAAL,CAA2BwE,GAA3B,CAA+BxG,CAA/B,EAAiC;AAAC2G,MAAAA,MAAM,EAAC3G,CAAR;AAAUqG,MAAAA,SAAS,EAAC;AAACC,QAAAA,MAAM,EAAC;AAAC/E,UAAAA,CAAC,EAAC,CAAH;AAAK8D,UAAAA,CAAC,EAAC;AAAP,SAAR;AAAkB3B,QAAAA,IAAI,EAAC;AAACT,UAAAA,KAAK,EAAC,CAAP;AAASC,UAAAA,MAAM,EAAC,CAAhB;AAAkBgD,UAAAA,YAAY,EAAC,CAA/B;AAAiCC,UAAAA,aAAa,EAAC;AAA/C,SAAvB;AAAyEI,QAAAA,QAAQ,EAAC;AAAlF,OAApB;AAA0GH,MAAAA,YAAY,EAACtG,CAAvH;AAAyH8H,MAAAA,QAAQ,EAAC,CAAC;AAAnI,KAAjC,CAAnC,EAA2M,KAAKX,cAAL,CAAoBjH,CAApB,EAAsBD,CAAtB,CAA3M,EAAoO,KAAKmC,gBAAL,CAAsB2E,MAAtB,CAA6B7G,CAA7B,CAApO,EAAoQ,KAAK8E,QAAL,EAApQ;AAAoR;;AAAA4D,EAAAA,iBAAiB,CAAC5I,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMC,CAAC,GAACF,CAAC,CAAC2I,GAAV;AAAc,SAAKvG,gBAAL,CAAsBsE,GAAtB,CAA0BxG,CAA1B,EAA4B,KAAKoC,QAAL,CAAc2E,GAAd,CAAkB/G,CAAlB,CAA5B,GAAkD,KAAKkH,iBAAL,CAAuBlH,CAAvB,EAAyBD,CAAzB,CAAlD;AAA8E;;AAAA+E,EAAAA,QAAQ,GAAE;AAAC,SAAKxC,QAAL,GAAc,CAAC,CAAf;AAAiB;;AAAAiG,EAAAA,aAAa,GAAE;AAAC,QAAG,MAAI,KAAKnG,QAAL,CAAcsB,IAArB,EAA0B;AAAO,UAAM5D,CAAC,GAAC,EAAR;AAAW,SAAKsC,QAAL,CAAcsF,OAAd,CAAuB,CAAC3H,CAAD,EAAGC,CAAH,KAAOF,CAAC,CAAC6I,IAAF,CAAO;AAACC,MAAAA,OAAO,EAAC7I,CAAT;AAAW0I,MAAAA,GAAG,EAACzI;AAAf,KAAP,CAA9B;AAA0D,QAAID,CAAC,GAAC,CAAC,CAAP;;AAAS,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAC,CAAC+I,MAAF,GAAS,CAAvB,EAAyB7I,CAAC,EAA1B,EAA6B,IAAGF,CAAC,CAACE,CAAD,CAAD,CAAKyI,GAAL,CAASK,aAAT,CAAuBhJ,CAAC,CAACE,CAAC,GAAC,CAAH,CAAD,CAAOyI,GAA9B,IAAmC,CAAtC,EAAwC;AAAC1I,MAAAA,CAAC,GAAC,CAAC,CAAH;AAAK;AAAM;;AAAA,QAAG,CAACA,CAAD,IAAI,KAAKmC,gBAAL,CAAsBwB,IAA7B,EAAkC;AAAC5D,MAAAA,CAAC,CAACiJ,IAAF,CAAQ,CAACjJ,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAAC2I,GAAF,CAAMK,aAAN,CAAoB/I,CAAC,CAAC0I,GAAtB,CAAf,GAA4C,KAAKrG,QAAL,CAAcuF,KAAd,EAA5C;;AAAkE,WAAI,MAAK;AAACiB,QAAAA,OAAO,EAAC7I,CAAT;AAAW0I,QAAAA,GAAG,EAACzI;AAAf,OAAT,IAA6BF,CAA7B,EAA+B,KAAKsC,QAAL,CAAcoE,GAAd,CAAkBxG,CAAlB,EAAoBD,CAApB;;AAAuB,WAAK0H,MAAL,IAAc,KAAK3C,QAAL,EAAd;AAA8B;AAAC;;AAAQ,MAAJuD,IAAI,GAAE;AAAC,UAAK;AAACjG,MAAAA,QAAQ,EAACtC,CAAV;AAAYuC,MAAAA,YAAY,EAACtC,CAAzB;AAA2BmC,MAAAA,gBAAgB,EAAClC,CAA5C;AAA8CyD,MAAAA,KAAK,EAACvD;AAApD,QAAuD,IAA5D;AAAA,UAAiEE,CAAC,GAAC,IAAnE;AAAwE,WAAM;AAACgC,MAAAA,QAAQ,EAACtC,CAAV;AAAYuC,MAAAA,YAAY,EAACtC,CAAzB;AAA2BmC,MAAAA,gBAAgB,EAAClC,CAA5C;AAA8CyD,MAAAA,KAAK,EAACvD,CAApD;AAAsDwF,MAAAA,WAAW,EAAC,CAAC5F,CAAD,EAAGC,CAAH,KAAOK,CAAC,CAACsF,WAAF,CAAc5F,CAAd,EAAgBC,CAAhB,CAAzE;AAA4FiJ,MAAAA,GAAG,EAAC,CAAClJ,CAAD,EAAGC,CAAH,KAAOK,CAAC,CAAC6H,OAAF,CAAUnI,CAAV,EAAYC,CAAZ;AAAvG,KAAN;AAA6H;;AAA1sO,CAAvB;AAAmuO0B,CAAC,CAAC4G,IAAF,GAAO;AAACC,EAAAA,uBAAuB,EAAC,CAAC;AAA1B,CAAP,EAAoCxI,CAAC,CAAC,CAACc,CAAC,CAAC;AAACqI,EAAAA,aAAa,EAAC,CAAC;AAAhB,CAAD,CAAF,CAAD,EAAyBxH,CAAC,CAACyH,SAA3B,EAAqC,MAArC,EAA4C,KAAK,CAAjD,CAArC,EAAyFpJ,CAAC,CAAC,CAACc,CAAC,CAAC;AAACe,EAAAA,IAAI,EAACwH;AAAN,CAAD,CAAF,CAAD,EAAqB1H,CAAC,CAACyH,SAAvB,EAAiC,UAAjC,EAA4C,KAAK,CAAjD,CAA1F,EAA8IzH,CAAC,GAACL,CAAC,GAACtB,CAAC,CAAC,CAACgB,CAAC,CAAC,iDAAD,CAAF,CAAD,EAAwDW,CAAxD,CAAnJ;AAA8M,MAAMmE,CAAC,GAAC,CAAR;AAAA,MAAUP,CAAC,GAAC,CAAZ;AAAc,IAAI+D,CAAC,GAAC3H,CAAN;AAAQ,eAAe2H,CAAf;AAAiB,SAAO3H,CAAC,IAAI4H,gBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../chunks/tslib.es6.js\";import t from\"../../../../core/Accessor.js\";import s from\"../../../../core/Evented.js\";import{someMap as i}from\"../../../../core/MapUtils.js\";import{nextHighestPowerOfTwo as r}from\"../../../../core/mathUtils.js\";import{isSome as a,removeMaybe as n}from\"../../../../core/maybe.js\";import{generateUID as h}from\"../../../../core/uid.js\";import{property as o}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/has.js\";import\"../../../../core/accessorSupport/ensureType.js\";import\"../../../../core/Logger.js\";import{subclass as l}from\"../../../../core/accessorSupport/decorators/subclass.js\";import{TaskPriority as d,noBudget as c}from\"../../../support/Scheduler.js\";import m from\"../../../webgl/Texture.js\";var p;const g=512,u=4096,x=.85,T=.95;let v=p=class extends t{constructor(e){super(e),this.type=4,this.id=h(),this.events=new s,this.glTexture=null,this.needsClear=!1,this.elementsToAddOrUpdate=new Map,this.elementsToRemove=new Map,this.elementsToRender=new Map,this.elements=new Map,this.stageObjects=new Map,this.updating=!1}initialize(){this.stage=this.view._stage,this.canvas=this.create2DCanvas(),this.ctx=this.canvas.getContext(\"2d\"),this.stage.add(this);const e=this.computeAtlasResolution(this.view.width,this.view.height);this.createAtlasRegion(e),this.update2DCanvasSize(),this.resetAtlasCursor()}unload(){a(this.glTexture)&&(this.glTexture.dispose(),this.glTexture=null),this.events.emit(\"unloaded\")}get width(){return this.atlas.size.width}get height(){return this.atlas.size.height}get requiresFrameUpdates(){return!1}createDescriptor(e){return{target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,flipped:!0,samplingMode:9987,hasMipmap:!0,preMultiplyAlpha:!0,maxAnisotropy:e.parameters.maxMaxAnisotropy}}load(e){if(a(this.glTexture))return this.glTexture;this.glTexture=new m(e,this.createDescriptor(e),this.canvas);const t=this.view.resourceController.scheduler;return this.frameWorker=t.registerTask(d.TEXT_TEXTURE_ATLAS,this),this.setDirty(),this.glTexture}dispose(){this.elements=null,this.elementsToAddOrUpdate=null,this.elementsToRemove=null,this.elementsToRender=null,this.frameWorker=n(this.frameWorker),this.glTexture&&(this.stage.remove(this),this.glTexture=null),this.canvas.width=0,this.canvas.height=0,this.canvas=null,this.ctx=null}create2DCanvas(){const e=document.createElement(\"canvas\");return e.setAttribute(\"id\",\"canvas2d\"),e.setAttribute(\"style\",\"display:none\"),e.setAttribute(\"width\",g.toString()),e.setAttribute(\"height\",g.toString()),e}update2DCanvasSize(){this.canvas.setAttribute(\"width\",this.atlas.size.width.toString()),this.canvas.setAttribute(\"height\",this.atlas.size.height.toString())}createAtlasRegion(e=g){this.atlas={size:{width:e,height:e},cursor:{x:0,y:0},lineHeight:0}}computeAtlasResolution(e,t){let s=Math.max(e,t);return s+=256,s=r(s),s=Math.min(s,u),s}resizeAtlas(e,t){t=t||e;const s=this.atlas;s.size.width=e,s.size.height=t,a(this.glTexture)&&this.glTexture.resize(e,t),this.update2DCanvasSize()}resetAtlasCursor(){const e=this.atlas;e.cursor.x=f,e.cursor.y=f+y,e.lineHeight=0,this.needsClear=!0}getAtlasUsage(){const e=this.atlas;return(e.cursor.x+e.cursor.y*e.size.width)/(e.size.width*e.size.height)}getExpectedAtlasUsage(){const e=this.elementsToRemove.size,t=this.elementsToAddOrUpdate.size,s=this.elements.size;return this.getAtlasUsage()/s*(s+t-e)}addAtlasElement(e,t,s,i){const r=this.atlas,{renderedWidth:a,renderedHeight:n,displayWidth:h,displayHeight:o}=e.textRenderer;e.placement.offset.x=r.cursor.x,e.placement.offset.y=r.cursor.y,e.placement.size.width=a,e.placement.size.height=n,e.placement.size.displayWidth=h,e.placement.size.displayHeight=o,e.placement.uvMinMax=[e.placement.offset.x/r.size.width,1-(e.placement.offset.y+n)/r.size.height,(e.placement.offset.x+a)/r.size.width,1-e.placement.offset.y/r.size.height],r.cursor.x+=s,r.lineHeight=Math.max(r.lineHeight,i),this.elements.set(t,e)}removeAtlasElement(e){if(e&&this.elements.has(e.textId)){const t=e.placement.offset,s=e.placement.size;this.ctx.clearRect(t.x,t.y,s.width,s.height),this.elements.delete(e.textId)}}ensureStageObjects(e){const t=this.stageObjects.get(e);if(t)return t;const s=new Set;return this.stageObjects.set(e,s),s}addStageObject(e,t){this.ensureStageObjects(e).add(t)}removeStageObject(e,t){const s=this.stageObjects.get(e);s&&s.delete(t)&&(t.geometries[0].vertexAttributes.get(\"size\").data=[0,0],t.geometryVertexAttrsUpdated(0))}_processAddition(e,t){const s=this.atlas,i=e.textId,r=e.textRenderer.renderedWidth,a=e.textRenderer.renderedHeight,n=r+f,h=a+f+y;if(s.cursor.x+n<s.size.width&&s.cursor.y+h<s.size.height)this.addAtlasElement(e,i,n,h),this.elementsToRender.set(i,e),this.elementsToAddOrUpdate.delete(i);else{if(!(s.cursor.y+h+s.lineHeight<s.size.height)){const e=this.getExpectedAtlasUsage(),i=e>x&&s.size.width<u;return i&&this.resizeAtlas(2*s.size.width,2*s.size.height),!t||!i&&e>T&&s.size.width===u?(this.processRemovals(),0):(this.repack(),1)}s.cursor.x=f,s.cursor.y+=s.lineHeight,s.lineHeight=0,this.addAtlasElement(e,i,n,h),this.elementsToRender.set(i,e),this.elementsToAddOrUpdate.delete(i)}return 0}processRemovals(){this.elementsToRemove.forEach(((e,t)=>{const s=this.stageObjects.get(t);s&&0!==s.size||this.removeAtlasElement(e),s&&0===s.size&&this.stageObjects.delete(t)})),this.elementsToRemove.clear()}repack(){this.processRemovals(),this.elements.forEach(((e,t)=>{e.rendered=!1,this.elementsToAddOrUpdate.set(t,e)})),this.elements.clear(),this.resetAtlasCursor(),this.elementsToRender.clear()}processRenderingRequest(e){this.ctx.clearRect(e.placement.offset.x,e.placement.offset.y,e.placement.size.width,e.placement.size.height),e.textRenderer.render(this.ctx,e.placement.offset.x,e.placement.offset.y);const t=this.stageObjects.get(e.textId);t&&t.forEach((t=>{t.geometries[0].vertexAttributes.get(\"uv0\").data=new Float32Array(e.placement.uvMinMax),t.geometries[0].vertexAttributes.get(\"size\").data=[e.placement.size.displayWidth,e.placement.size.displayHeight],t.geometryVertexAttrsUpdated(0)})),e.rendered=!0}get running(){return this.updating}runTask(e,t=!0){if(!this.glTexture)return;let s=!1;if(i(this.elementsToAddOrUpdate,((e,i)=>{const r=this.elements.get(i);if(r&&r.rendered){const e=this.stageObjects.get(i);return e&&e.forEach((e=>{const t=e.geometries[0].vertexAttributes,s=this.elements.get(i);t.get(\"uv0\").data=new Float32Array(s.placement.uvMinMax),t.get(\"size\").data=new Float32Array([s.placement.size.displayWidth,s.placement.size.displayHeight]),e.geometryVertexAttrsUpdated(0)})),this.elementsToAddOrUpdate.delete(i),!1}return 1===this._processAddition(this.elementsToAddOrUpdate.get(i),t)&&(s=!0,!0)})),s)return void this.runTask(c,!1);let r=!1;this.elementsToRender.size>0&&this.needsClear&&(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.needsClear=!1),i(this.elementsToRender,((t,s)=>(this.processRenderingRequest(t),this.elementsToRender.delete(s),r=!0,e.madeProgress(),e.done))),r&&a(this.glTexture)&&this.glTexture.setData(this.canvas),this.updating=this.elementsToRender.size>0,!this.updating&&p.test.orderedRepackingEnabled&&this.repackOrdered()}addTextTexture(e,t){const s=e.key;this.elementsToAddOrUpdate.has(s)||this.elementsToAddOrUpdate.set(s,{textId:s,placement:{offset:{x:0,y:0},size:{width:0,height:0,displayWidth:0,displayHeight:0},uvMinMax:[]},textRenderer:e,rendered:!1}),this.addStageObject(s,t),this.elementsToRemove.delete(s),this.setDirty()}removeTextTexture(e,t){const s=e.key;this.elementsToRemove.set(s,this.elements.get(s)),this.removeStageObject(s,t)}setDirty(){this.updating=!0}repackOrdered(){if(0===this.elements.size)return;const e=[];this.elements.forEach(((t,s)=>e.push({element:t,key:s})));let t=!0;for(let s=0;s<e.length-1;s++)if(e[s].key.localeCompare(e[s+1].key)>0){t=!1;break}if(!t||this.elementsToRemove.size){e.sort(((e,t)=>e.key.localeCompare(t.key))),this.elements.clear();for(const{element:t,key:s}of e)this.elements.set(s,t);this.repack(),this.setDirty()}}get test(){const{elements:e,stageObjects:t,elementsToRemove:s,atlas:i}=this,r=this;return{elements:e,stageObjects:t,elementsToRemove:s,atlas:i,resizeAtlas:(e,t)=>r.resizeAtlas(e,t),run:(e,t)=>r.runTask(e,t)}}};v.test={orderedRepackingEnabled:!1},e([o({constructOnly:!0})],v.prototype,\"view\",void 0),e([o({type:Boolean})],v.prototype,\"updating\",void 0),v=p=e([l(\"esri.views.3d.webgl-engine.lib.TextTextureAtlas\")],v);const f=2,y=2;var A=v;export default A;export{v as TextTextureAtlas};\n"]},"metadata":{},"sourceType":"module"}