{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport \"../../../../geometry.js\";\nimport e from \"../../../../request.js\";\nimport t from \"../../../../core/Error.js\";\nimport i from \"../../../../core/has.js\";\nimport { _parseInfo as n } from \"../../../../core/number.js\";\nimport { urlToObject as r, getFilename as o } from \"../../../../core/urlUtils.js\";\nimport { projectMany as l } from \"../../../../geometry/projection.js\";\nimport { jsonAdapter as s } from \"../../../../geometry/geometryAdapters/json.js\";\nimport { equals as a, isWebMercator as d, WGS84 as u } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport { lngLatToXY as c } from \"../../../../geometry/support/webMercatorUtils.js\";\nimport m from \"../../OptimizedFeature.js\";\nimport f from \"../../OptimizedGeometry.js\";\nimport p from \"../../data/FeatureStore.js\";\nimport { checkProjectionSupport as y } from \"../../data/projectionSupport.js\";\nimport g from \"../../data/QueryEngine.js\";\nimport { readRows as F, inferDelimiter as h, parseRows as I } from \"../csv/csv.js\";\nimport { createDrawingInfo as N } from \"./clientSideDefaults.js\";\nimport _ from \"../../../support/FieldsIndex.js\";\nimport x from \"../../../../geometry/SpatialReference.js\";\nconst b = N(\"esriGeometryPoint\"),\n      T = [\"esriFieldTypeSmallInteger\", \"esriFieldTypeInteger\", \"esriFieldTypeSingle\", \"esriFieldTypeDouble\", \"esriFieldTypeLong\"],\n      j = [\"lat\", \"latitude\", \"latitude83\", \"latdecdeg\", \"lat_dd\", \"y\", \"ycenter\", \"point-y\"],\n      w = [\"lon\", \"lng\", \"long\", \"longitude\", \"longitude83\", \"longdecdeg\", \"long_dd\", \"x\", \"xcenter\", \"point-x\"],\n      E = /^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,\n      D = [\"csv\"],\n      q = [0, 0];\n\nclass S {\n  constructor(e, t) {\n    this.x = e, this.y = t;\n  }\n\n}\n\nconst v = function () {\n  const e = n(),\n        t = new RegExp(\"^\" + e.regexp + \"$\"),\n        i = new RegExp(\"[\" + e.group + \"\\\\s\\\\xa0]\", \"g\"),\n        r = e.factor;\n  return function (n) {\n    const o = t.exec(n);\n    if (e.factor = r, !o) return NaN;\n    let l = o[1];\n\n    if (!o[1]) {\n      if (!o[2]) return NaN;\n      l = o[2], e.factor *= -1;\n    }\n\n    return l = l.replace(i, \"\").replace(e.decimal, \".\"), +l * e.factor;\n  };\n}(),\n      C = \"isInteger\" in Number ? Number.isInteger : e => \"number\" == typeof e && isFinite(e) && Math.floor(e) === e;\n\nclass O {\n  constructor() {\n    this._fieldsIndex = null, this._queryEngine = null;\n  }\n\n  destroy() {\n    this._queryEngine && this._queryEngine && this._queryEngine.destroy(), this._queryEngine = null, this._fieldsIndex = null;\n  }\n\n  async load(e, t = {}) {\n    const [i] = await Promise.all([this._fetch(e.url, t), this._checkProjection(t && e.parsing && e.parsing.spatialReference)]),\n          n = this._parse(i, e);\n\n    if (this._queryEngine = this._createQueryEngine(i, n), n.layerDefinition.extent = this._queryEngine.fullExtent, n.layerDefinition.timeInfo) {\n      const {\n        start: e,\n        end: t\n      } = this._queryEngine.timeExtent;\n      n.layerDefinition.timeInfo.timeExtent = [e, t];\n    }\n\n    return n;\n  }\n\n  async applyEdits() {\n    throw new t(\"csv-source:editing-not-supported\", \"applyEdits() is not supported on CSVLayer\");\n  }\n\n  queryFeatures(e = {}, t = {}) {\n    return this._queryEngine.executeQuery(e, t.signal);\n  }\n\n  queryFeatureCount(e = {}, t = {}) {\n    return this._queryEngine.executeQueryForCount(e, t.signal);\n  }\n\n  queryObjectIds(e = {}, t = {}) {\n    return this._queryEngine.executeQueryForIds(e, t.signal);\n  }\n\n  queryExtent(e = {}, t = {}) {\n    return this._queryEngine.executeQueryForExtent(e, t.signal);\n  }\n\n  querySnapping(e, t = {}) {\n    return this._queryEngine.executeQueryForSnapping(e, t.signal);\n  }\n\n  async _fetch(i, n) {\n    if (!i) throw new t(\"csv-source:invalid-source\", \"url not defined\");\n    const o = r(i);\n    return (await e(o.path, {\n      query: o.query,\n      responseType: \"text\",\n      signal: n.signal\n    })).data;\n  }\n\n  _parse(e, i) {\n    const n = i.parsing || {},\n          r = {\n      columnDelimiter: n.columnDelimiter,\n      layerDefinition: null,\n      locationInfo: {\n        latitudeFieldName: n.latitudeField,\n        longitudeFieldName: n.longitudeField\n      }\n    },\n          l = F(e);\n    let {\n      value: s\n    } = l.next();\n    if (!s) throw new t(\"csv\", \"CSV is empty\", {\n      csv: e\n    });\n\n    if (s = s.trim(), !n.columnDelimiter) {\n      const e = h(s);\n      if (!e) throw new t(\"csv-source:invalid-delimiter\", \"Unable to detect the delimiter from CSV\");\n      r.columnDelimiter = e;\n    }\n\n    const a = s.split(r.columnDelimiter),\n          d = r.layerDefinition = {\n      name: o(i.url, D) || \"csv\",\n      drawingInfo: b,\n      geometryType: \"esriGeometryPoint\",\n      objectIdField: null,\n      fields: [],\n      timeInfo: n.timeInfo,\n      extent: {\n        xmin: Number.POSITIVE_INFINITY,\n        ymin: Number.POSITIVE_INFINITY,\n        xmax: Number.NEGATIVE_INFINITY,\n        ymax: Number.NEGATIVE_INFINITY,\n        spatialReference: n.spatialReference || {\n          wkid: 102100\n        }\n      }\n    };\n\n    if (!n.latitudeField || !n.longitudeField) {\n      const e = this._inferLocationInfo(a);\n\n      if (!n.longitudeField && !e.longitudeFieldName || !n.latitudeField && !e.latitudeFieldName) throw new t(\"csv\", \"Unable to identify latitudeField and/or longitudeField from CSV\");\n      r.locationInfo = {\n        longitudeFieldName: n.longitudeField || e.longitudeFieldName,\n        latitudeFieldName: n.latitudeField || e.latitudeFieldName\n      };\n    }\n\n    const u = this._inferFields(l, r.columnDelimiter, a, r.locationInfo);\n\n    if (n.fields && n.fields.length) {\n      const e = new Map();\n\n      for (const t of n.fields) e.set(t.name.toLowerCase(), t);\n\n      for (const t of u) {\n        const i = e.get(t.name.toLowerCase());\n\n        if (i) {\n          const e = t.name;\n          Object.assign(t, i), t.name = e;\n        }\n      }\n    }\n\n    d.fields = u;\n\n    if (!d.fields.some(e => \"esriFieldTypeOID\" === e.type && (d.objectIdField = e.name, !0))) {\n      const e = {\n        name: \"__OBJECTID\",\n        alias: \"__OBJECTID\",\n        type: \"esriFieldTypeOID\",\n        editable: !1,\n        nullable: !1\n      };\n      d.objectIdField = e.name, d.fields.unshift(e);\n    }\n\n    if (this._fieldsIndex = new _(d.fields), d.timeInfo) {\n      const e = d.timeInfo;\n\n      if (e.startTimeField) {\n        const t = this._fieldsIndex.get(e.startTimeField);\n\n        t ? (e.startTimeField = t.name, t.type = \"esriFieldTypeDate\") : e.startTimeField = null;\n      }\n\n      if (e.endTimeField) {\n        const t = this._fieldsIndex.get(e.endTimeField);\n\n        t ? (e.endTimeField = t.name, t.type = \"esriFieldTypeDate\") : e.endTimeField = null;\n      }\n\n      if (e.trackIdField) {\n        const t = this._fieldsIndex.get(e.trackIdField);\n\n        e.trackIdField = t ? t.name : null;\n      }\n\n      e.startTimeField || e.endTimeField || (d.timeInfo = null);\n    }\n\n    return r;\n  }\n\n  _inferLocationInfo(e) {\n    let t = null,\n        i = null;\n\n    const n = t => e.find(e => e.toLowerCase() === t);\n\n    return w.some(e => (t = n(e), !!t)), j.some(e => (i = n(e), !!i)), {\n      longitudeFieldName: t,\n      latitudeFieldName: i\n    };\n  }\n\n  _inferFields(e, t, i, n) {\n    const r = [],\n          o = I(e, i, t),\n          l = [];\n\n    e: for (; l.length < 10;) {\n      const {\n        value: e,\n        done: t\n      } = o.next();\n      if (t) break e;\n      l.push(e);\n    }\n\n    for (const s of i) if (s === n.longitudeFieldName || s === n.latitudeFieldName) r.push({\n      name: s,\n      type: \"esriFieldTypeDouble\",\n      alias: s\n    });else {\n      const e = l.map(e => e[s]),\n            t = this._inferFieldType(e),\n            i = {\n        name: s,\n        type: null,\n        alias: s\n      };\n\n      switch (t) {\n        case \"integer\":\n          i.type = \"esriFieldTypeInteger\";\n          break;\n\n        case \"double\":\n          i.type = \"esriFieldTypeDouble\";\n          break;\n\n        case \"date\":\n          i.type = \"esriFieldTypeDate\", i.length = 36;\n          break;\n\n        default:\n          i.type = \"esriFieldTypeString\", i.length = 255;\n      }\n\n      r.push(i);\n    }\n\n    return r;\n  }\n\n  _inferFieldType(e) {\n    if (!e.length) return \"string\";\n    const t = /[^+-.,0-9]/;\n    return e.map(e => {\n      let i = !1;\n\n      if (\"\" !== e) {\n        if (t.test(e)) i = !0;else {\n          let t = v(e);\n          if (!isNaN(t)) return /[.,]/.test(e) || !C(t) || t > 214783647 || t < -214783648 ? \"double\" : \"integer\";\n          if (-1 === e.indexOf(\"E\")) i = !0;else {\n            if (t = Number(e), !isNaN(t)) return \"double\";\n            if (-1 === e.indexOf(\",\")) i = !0;else {\n              if (e = e.replace(\",\", \".\"), t = Number(e), !isNaN(t)) return \"double\";\n              i = !0;\n            }\n          }\n        }\n\n        if (i) {\n          if (!/^[-]?\\d*[.,]?\\d*$/.test(e)) {\n            const t = new Date(e);\n            return this._isValidDate(t, e) ? \"date\" : \"string\";\n          }\n\n          return \"string\";\n        }\n\n        return \"string\";\n      }\n    }).reduce((e, t) => void 0 === e || e === t ? t : \"string\" === e || \"string\" === t ? \"string\" : \"double\" === e || \"double\" === t ? \"double\" : void 0);\n  }\n\n  _isValidDate(e, t) {\n    if (!e || \"[object Date]\" !== Object.prototype.toString.call(e) || isNaN(e.getTime())) return !1;\n    let n = !0;\n\n    if (i(\"chrome\") && /\\d+\\W*$/.test(t)) {\n      const e = t.match(/[a-zA-Z]{2,}/);\n\n      if (e) {\n        let t = !1,\n            i = 0;\n\n        for (; !t && i <= e.length;) t = !E.test(e[i]), i++;\n\n        n = !t;\n      }\n    }\n\n    return n;\n  }\n\n  _createQueryEngine(e, t) {\n    const {\n      latitudeFieldName: i,\n      longitudeFieldName: n\n    } = t.locationInfo,\n          {\n      objectIdField: r,\n      fields: o,\n      extent: u,\n      timeInfo: y\n    } = t.layerDefinition;\n    let h = [];\n\n    const N = [],\n          _ = new Set(),\n          b = new Set(),\n          j = [];\n\n    for (const {\n      name: l,\n      type: s\n    } of o) \"esriFieldTypeDate\" === s ? _.add(l) : T.indexOf(s) > -1 && b.add(l), l !== r && j.push(l);\n\n    let w = 0;\n    const E = F(e);\n    E.next();\n    const D = I(E, j, t.columnDelimiter);\n\n    e: for (;;) {\n      const {\n        value: e,\n        done: t\n      } = D.next();\n      if (t) break e;\n\n      const o = this._parseCoordinateValue(e[i]),\n            l = this._parseCoordinateValue(e[n]);\n\n      if (null != l && null != o && !isNaN(o) && !isNaN(l)) {\n        e[i] = o, e[n] = l;\n\n        for (const t in e) if (t !== i && t !== n) if (_.has(t)) {\n          const i = new Date(e[t]);\n          e[t] = this._isValidDate(i, e[t]) ? i.getTime() : null;\n        } else if (b.has(t)) {\n          const i = v(e[t]);\n          isNaN(i) ? e[t] = null : e[t] = i;\n        }\n\n        e[r] = w, w++, h.push(new S(l, o)), N.push(e);\n      }\n    }\n\n    if (!a({\n      wkid: 4326\n    }, u.spatialReference)) if (d(u.spatialReference)) for (const l of h) [l.x, l.y] = c(l.x, l.y, q);else h = l(s, h, x.WGS84, u.spatialReference, null);\n    const C = new p({\n      geometryType: \"esriGeometryPoint\",\n      hasM: !1,\n      hasZ: !1\n    }),\n          O = new g({\n      fields: t.layerDefinition.fields,\n      geometryType: \"esriGeometryPoint\",\n      hasM: !1,\n      hasZ: !1,\n      timeInfo: y,\n      objectIdField: r,\n      spatialReference: u.spatialReference || {\n        wkid: 4326\n      },\n      cacheSpatialQueries: !0,\n      featureStore: C\n    }),\n          V = [];\n\n    for (let l = 0; l < h.length; l++) {\n      const {\n        x: e,\n        y: t\n      } = h[l],\n            i = N[l];\n      i[r] = l + 1, V.push(new m(new f([], [e, t]), i, null, i[r]));\n    }\n\n    return C.addMany(V), O;\n  }\n\n  _parseCoordinateValue(e) {\n    if (null == e || \"\" === e) return null;\n    let t = v(e);\n    return (isNaN(t) || Math.abs(t) > 181) && (t = parseFloat(e)), t;\n  }\n\n  async _checkProjection(e) {\n    try {\n      await y(u, e);\n    } catch {\n      throw new t(\"csv-layer\", \"Projection not supported\");\n    }\n  }\n\n}\n\nexport default O;\nexport { j as csvLatitudeFieldNames, w as csvLongitudeFieldNames };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/layers/graphics/sources/support/CSVSourceWorker.js"],"names":["e","t","i","_parseInfo","n","urlToObject","r","getFilename","o","projectMany","l","jsonAdapter","s","equals","a","isWebMercator","d","WGS84","u","lngLatToXY","c","m","f","p","checkProjectionSupport","y","g","readRows","F","inferDelimiter","h","parseRows","I","createDrawingInfo","N","_","x","b","T","j","w","E","D","q","S","constructor","v","RegExp","regexp","group","factor","exec","NaN","replace","decimal","C","Number","isInteger","isFinite","Math","floor","O","_fieldsIndex","_queryEngine","destroy","load","Promise","all","_fetch","url","_checkProjection","parsing","spatialReference","_parse","_createQueryEngine","layerDefinition","extent","fullExtent","timeInfo","start","end","timeExtent","applyEdits","queryFeatures","executeQuery","signal","queryFeatureCount","executeQueryForCount","queryObjectIds","executeQueryForIds","queryExtent","executeQueryForExtent","querySnapping","executeQueryForSnapping","path","query","responseType","data","columnDelimiter","locationInfo","latitudeFieldName","latitudeField","longitudeFieldName","longitudeField","value","next","csv","trim","split","name","drawingInfo","geometryType","objectIdField","fields","xmin","POSITIVE_INFINITY","ymin","xmax","NEGATIVE_INFINITY","ymax","wkid","_inferLocationInfo","_inferFields","length","Map","set","toLowerCase","get","Object","assign","some","type","alias","editable","nullable","unshift","startTimeField","endTimeField","trackIdField","find","done","push","map","_inferFieldType","test","isNaN","indexOf","Date","_isValidDate","reduce","prototype","toString","call","getTime","match","Set","add","_parseCoordinateValue","has","hasM","hasZ","cacheSpatialQueries","featureStore","V","addMany","abs","parseFloat","csvLatitudeFieldNames","csvLongitudeFieldNames"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport\"../../../../geometry.js\";import e from\"../../../../request.js\";import t from\"../../../../core/Error.js\";import i from\"../../../../core/has.js\";import{_parseInfo as n}from\"../../../../core/number.js\";import{urlToObject as r,getFilename as o}from\"../../../../core/urlUtils.js\";import{projectMany as l}from\"../../../../geometry/projection.js\";import{jsonAdapter as s}from\"../../../../geometry/geometryAdapters/json.js\";import{equals as a,isWebMercator as d,WGS84 as u}from\"../../../../geometry/support/spatialReferenceUtils.js\";import{lngLatToXY as c}from\"../../../../geometry/support/webMercatorUtils.js\";import m from\"../../OptimizedFeature.js\";import f from\"../../OptimizedGeometry.js\";import p from\"../../data/FeatureStore.js\";import{checkProjectionSupport as y}from\"../../data/projectionSupport.js\";import g from\"../../data/QueryEngine.js\";import{readRows as F,inferDelimiter as h,parseRows as I}from\"../csv/csv.js\";import{createDrawingInfo as N}from\"./clientSideDefaults.js\";import _ from\"../../../support/FieldsIndex.js\";import x from\"../../../../geometry/SpatialReference.js\";const b=N(\"esriGeometryPoint\"),T=[\"esriFieldTypeSmallInteger\",\"esriFieldTypeInteger\",\"esriFieldTypeSingle\",\"esriFieldTypeDouble\",\"esriFieldTypeLong\"],j=[\"lat\",\"latitude\",\"latitude83\",\"latdecdeg\",\"lat_dd\",\"y\",\"ycenter\",\"point-y\"],w=[\"lon\",\"lng\",\"long\",\"longitude\",\"longitude83\",\"longdecdeg\",\"long_dd\",\"x\",\"xcenter\",\"point-x\"],E=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,D=[\"csv\"],q=[0,0];class S{constructor(e,t){this.x=e,this.y=t}}const v=function(){const e=n(),t=new RegExp(\"^\"+e.regexp+\"$\"),i=new RegExp(\"[\"+e.group+\"\\\\s\\\\xa0]\",\"g\"),r=e.factor;return function(n){const o=t.exec(n);if(e.factor=r,!o)return NaN;let l=o[1];if(!o[1]){if(!o[2])return NaN;l=o[2],e.factor*=-1}return l=l.replace(i,\"\").replace(e.decimal,\".\"),+l*e.factor}}(),C=\"isInteger\"in Number?Number.isInteger:e=>\"number\"==typeof e&&isFinite(e)&&Math.floor(e)===e;class O{constructor(){this._fieldsIndex=null,this._queryEngine=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=null,this._fieldsIndex=null}async load(e,t={}){const[i]=await Promise.all([this._fetch(e.url,t),this._checkProjection(t&&e.parsing&&e.parsing.spatialReference)]),n=this._parse(i,e);if(this._queryEngine=this._createQueryEngine(i,n),n.layerDefinition.extent=this._queryEngine.fullExtent,n.layerDefinition.timeInfo){const{start:e,end:t}=this._queryEngine.timeExtent;n.layerDefinition.timeInfo.timeExtent=[e,t]}return n}async applyEdits(){throw new t(\"csv-source:editing-not-supported\",\"applyEdits() is not supported on CSVLayer\")}queryFeatures(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}async _fetch(i,n){if(!i)throw new t(\"csv-source:invalid-source\",\"url not defined\");const o=r(i);return(await e(o.path,{query:o.query,responseType:\"text\",signal:n.signal})).data}_parse(e,i){const n=i.parsing||{},r={columnDelimiter:n.columnDelimiter,layerDefinition:null,locationInfo:{latitudeFieldName:n.latitudeField,longitudeFieldName:n.longitudeField}},l=F(e);let{value:s}=l.next();if(!s)throw new t(\"csv\",\"CSV is empty\",{csv:e});if(s=s.trim(),!n.columnDelimiter){const e=h(s);if(!e)throw new t(\"csv-source:invalid-delimiter\",\"Unable to detect the delimiter from CSV\");r.columnDelimiter=e}const a=s.split(r.columnDelimiter),d=r.layerDefinition={name:o(i.url,D)||\"csv\",drawingInfo:b,geometryType:\"esriGeometryPoint\",objectIdField:null,fields:[],timeInfo:n.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:n.spatialReference||{wkid:102100}}};if(!n.latitudeField||!n.longitudeField){const e=this._inferLocationInfo(a);if(!n.longitudeField&&!e.longitudeFieldName||!n.latitudeField&&!e.latitudeFieldName)throw new t(\"csv\",\"Unable to identify latitudeField and/or longitudeField from CSV\");r.locationInfo={longitudeFieldName:n.longitudeField||e.longitudeFieldName,latitudeFieldName:n.latitudeField||e.latitudeFieldName}}const u=this._inferFields(l,r.columnDelimiter,a,r.locationInfo);if(n.fields&&n.fields.length){const e=new Map;for(const t of n.fields)e.set(t.name.toLowerCase(),t);for(const t of u){const i=e.get(t.name.toLowerCase());if(i){const e=t.name;Object.assign(t,i),t.name=e}}}d.fields=u;if(!d.fields.some((e=>\"esriFieldTypeOID\"===e.type&&(d.objectIdField=e.name,!0)))){const e={name:\"__OBJECTID\",alias:\"__OBJECTID\",type:\"esriFieldTypeOID\",editable:!1,nullable:!1};d.objectIdField=e.name,d.fields.unshift(e)}if(this._fieldsIndex=new _(d.fields),d.timeInfo){const e=d.timeInfo;if(e.startTimeField){const t=this._fieldsIndex.get(e.startTimeField);t?(e.startTimeField=t.name,t.type=\"esriFieldTypeDate\"):e.startTimeField=null}if(e.endTimeField){const t=this._fieldsIndex.get(e.endTimeField);t?(e.endTimeField=t.name,t.type=\"esriFieldTypeDate\"):e.endTimeField=null}if(e.trackIdField){const t=this._fieldsIndex.get(e.trackIdField);e.trackIdField=t?t.name:null}e.startTimeField||e.endTimeField||(d.timeInfo=null)}return r}_inferLocationInfo(e){let t=null,i=null;const n=t=>e.find((e=>e.toLowerCase()===t));return w.some((e=>(t=n(e),!!t))),j.some((e=>(i=n(e),!!i))),{longitudeFieldName:t,latitudeFieldName:i}}_inferFields(e,t,i,n){const r=[],o=I(e,i,t),l=[];e:for(;l.length<10;){const{value:e,done:t}=o.next();if(t)break e;l.push(e)}for(const s of i)if(s===n.longitudeFieldName||s===n.latitudeFieldName)r.push({name:s,type:\"esriFieldTypeDouble\",alias:s});else{const e=l.map((e=>e[s])),t=this._inferFieldType(e),i={name:s,type:null,alias:s};switch(t){case\"integer\":i.type=\"esriFieldTypeInteger\";break;case\"double\":i.type=\"esriFieldTypeDouble\";break;case\"date\":i.type=\"esriFieldTypeDate\",i.length=36;break;default:i.type=\"esriFieldTypeString\",i.length=255}r.push(i)}return r}_inferFieldType(e){if(!e.length)return\"string\";const t=/[^+-.,0-9]/;return e.map((e=>{let i=!1;if(\"\"!==e){if(t.test(e))i=!0;else{let t=v(e);if(!isNaN(t))return/[.,]/.test(e)||!C(t)||t>214783647||t<-214783648?\"double\":\"integer\";if(-1===e.indexOf(\"E\"))i=!0;else{if(t=Number(e),!isNaN(t))return\"double\";if(-1===e.indexOf(\",\"))i=!0;else{if(e=e.replace(\",\",\".\"),t=Number(e),!isNaN(t))return\"double\";i=!0}}}if(i){if(!/^[-]?\\d*[.,]?\\d*$/.test(e)){const t=new Date(e);return this._isValidDate(t,e)?\"date\":\"string\"}return\"string\"}return\"string\"}})).reduce(((e,t)=>void 0===e||e===t?t:\"string\"===e||\"string\"===t?\"string\":\"double\"===e||\"double\"===t?\"double\":void 0))}_isValidDate(e,t){if(!e||\"[object Date]\"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;let n=!0;if(i(\"chrome\")&&/\\d+\\W*$/.test(t)){const e=t.match(/[a-zA-Z]{2,}/);if(e){let t=!1,i=0;for(;!t&&i<=e.length;)t=!E.test(e[i]),i++;n=!t}}return n}_createQueryEngine(e,t){const{latitudeFieldName:i,longitudeFieldName:n}=t.locationInfo,{objectIdField:r,fields:o,extent:u,timeInfo:y}=t.layerDefinition;let h=[];const N=[],_=new Set,b=new Set,j=[];for(const{name:l,type:s}of o)\"esriFieldTypeDate\"===s?_.add(l):T.indexOf(s)>-1&&b.add(l),l!==r&&j.push(l);let w=0;const E=F(e);E.next();const D=I(E,j,t.columnDelimiter);e:for(;;){const{value:e,done:t}=D.next();if(t)break e;const o=this._parseCoordinateValue(e[i]),l=this._parseCoordinateValue(e[n]);if(null!=l&&null!=o&&!isNaN(o)&&!isNaN(l)){e[i]=o,e[n]=l;for(const t in e)if(t!==i&&t!==n)if(_.has(t)){const i=new Date(e[t]);e[t]=this._isValidDate(i,e[t])?i.getTime():null}else if(b.has(t)){const i=v(e[t]);isNaN(i)?e[t]=null:e[t]=i}e[r]=w,w++,h.push(new S(l,o)),N.push(e)}}if(!a({wkid:4326},u.spatialReference))if(d(u.spatialReference))for(const l of h)[l.x,l.y]=c(l.x,l.y,q);else h=l(s,h,x.WGS84,u.spatialReference,null);const C=new p({geometryType:\"esriGeometryPoint\",hasM:!1,hasZ:!1}),O=new g({fields:t.layerDefinition.fields,geometryType:\"esriGeometryPoint\",hasM:!1,hasZ:!1,timeInfo:y,objectIdField:r,spatialReference:u.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:C}),V=[];for(let l=0;l<h.length;l++){const{x:e,y:t}=h[l],i=N[l];i[r]=l+1,V.push(new m(new f([],[e,t]),i,null,i[r]))}return C.addMany(V),O}_parseCoordinateValue(e){if(null==e||\"\"===e)return null;let t=v(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t}async _checkProjection(e){try{await y(u,e)}catch{throw new t(\"csv-layer\",\"Projection not supported\")}}}export default O;export{j as csvLatitudeFieldNames,w as csvLongitudeFieldNames};\n"]},"metadata":{},"sourceType":"module"}