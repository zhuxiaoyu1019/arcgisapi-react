{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../chunks/tslib.es6.js\";\nimport t from \"../../../../core/Accessor.js\";\nimport i from \"../../../../core/Evented.js\";\nimport s from \"../../../../core/Handles.js\";\nimport { isSome as r } from \"../../../../core/maybe.js\";\nimport { property as a } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/has.js\";\nimport \"../../../../core/accessorSupport/ensureType.js\";\nimport \"../../../../core/Logger.js\";\nimport { subclass as n } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { ExtentSet as h } from \"./ExtentSet.js\";\nimport { TaskPriority as o } from \"../../../support/Scheduler.js\";\nlet p = class extends t {\n  constructor() {\n    super(...arguments), this.dirtyExtents = new h(), this.globalDirty = !1, this.averageExtentUpdateSize = 0, this.dirtyGraphicsSet = new Set(), this.handles = new s(), this.updateElevation = !1, this.layerView = null, this.graphicsCore = null, this.events = new i();\n  }\n\n  setup(e, t, i, s) {\n    this.layerView = e, this.queryGraphicUIDsInExtent = t, this.graphicsCore = i, this.elevationProvider = s;\n    const r = this.layerView.view.resourceController.scheduler;\n    this.handles.add([s.on(\"elevation-change\", e => this._elevationChanged(e)), this.layerView.watch(\"suspended\", () => this.suspendedChange()), r.registerTask(o.ELEVATION_ALIGNMENT, this)]);\n  }\n\n  destroy() {\n    this.dirtyGraphicsSet.clear(), this.handles.destroy(), this.handles = null, this.layerView = null, this.graphicsCore = null, this.queryGraphicUIDsInExtent = null;\n  }\n\n  clear() {\n    this.dirtyGraphicsSet.clear(), this.notifyChange(\"updating\");\n  }\n\n  suspendedChange() {\n    !0 === this.layerView.suspended ? this.updateElevation = !1 : !1 === this.layerView.suspended && this.updateElevation && (this.globalDirty = !0, this.notifyChange(\"updating\"));\n  }\n\n  elevationInfoChange() {\n    this.globalDirty = !0, this.notifyChange(\"updating\");\n  }\n\n  get updating() {\n    return this.running;\n  }\n\n  get running() {\n    return this.dirtyGraphicsSet.size > 0 || this.dirtyExtents && !this.dirtyExtents.empty || this.globalDirty;\n  }\n\n  get updatingRemaining() {\n    return this.dirtyGraphicsSet.size + this.dirtyExtents.size * this.averageExtentUpdateSize;\n  }\n\n  runTask(e) {\n    for (this.globalDirty && (this.markAllGraphicsElevationDirty(), this.globalDirty = !1, e.madeProgress()), e.run(() => this.dirtyExtents.merge(e)); this.running && !e.done;) this._updateDirtyGraphics(e), this._updateDirtyExtents(e);\n\n    this.layerView.view.deconflictor.setDirty(), this.notifyChange(\"updating\");\n  }\n\n  _updateDirtyGraphics(e) {\n    const t = this.layerView.view.renderCoordsHelper,\n          i = 0 === this.graphicsCore.effectiveUpdatePolicy;\n\n    for (const s of this.dirtyGraphicsSet.keys()) {\n      const a = this.graphicsCore.getGraphics3DGraphicById(s);\n      if (this.dirtyGraphicsSet.delete(s), r(a) && (a.alignWithElevation(this.elevationProvider, t, i), e.madeProgress()), e.done) return;\n    }\n  }\n\n  _updateDirtyExtents(e) {\n    for (; !this.dirtyExtents.empty && !e.done;) {\n      const t = this.dirtyExtents.pop(),\n            i = this.elevationProvider.spatialReference;\n      this.events.emit(\"invalidate-elevation\", {\n        extent: t,\n        spatialReference: i\n      });\n      const s = this.dirtyGraphicsSet.size;\n      this.queryGraphicUIDsInExtent(t, i, e => {\n        const t = this.graphicsCore.getGraphics3DGraphicById(e);\n        r(t) && t.needsElevationUpdates() && this.dirtyGraphicsSet.add(e);\n      }), this.averageExtentUpdateSize = .1 * (this.dirtyGraphicsSet.size - s) + .9 * this.averageExtentUpdateSize, e.madeProgress();\n    }\n  }\n\n  markAllGraphicsElevationDirty() {\n    this.dirtyExtents.clear(), this.dirtyGraphicsSet.clear(), this.graphicsCore.graphics3DGraphics.forEach((e, t) => this.dirtyGraphicsSet.add(t));\n  }\n\n  _elevationChanged(e) {\n    if (\"scene\" === e.context && (!this.graphicsCore.layer.elevationInfo || \"relative-to-scene\" !== this.graphicsCore.layer.elevationInfo.mode)) return;\n    const {\n      extent: t,\n      spatialReference: i\n    } = e;\n\n    if (this.layerView.suspended) {\n      if (!this.updateElevation) {\n        const e = this.graphicsCore.computedExtent;\n        e && t[2] > e.xmin && t[0] < e.xmax && t[3] > e.ymin && t[1] < e.ymax && (this.updateElevation = !0);\n      }\n\n      this.events.emit(\"invalidate-elevation\", {\n        extent: t,\n        spatialReference: i\n      });\n    } else t[0] === -1 / 0 ? this.globalDirty = !0 : this.dirtyExtents.add(t), this.notifyChange(\"updating\");\n  }\n\n};\ne([a({\n  readOnly: !0\n})], p.prototype, \"updating\", null), e([a({\n  readOnly: !0\n})], p.prototype, \"updatingRemaining\", null), p = e([n(\"esri.views.3d.layers.graphics.Graphics3DElevationAlignment\")], p);\nvar d = p;\nexport default d;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DElevationAlignment.js"],"names":["_","e","t","i","s","isSome","r","property","a","subclass","n","ExtentSet","h","TaskPriority","o","p","constructor","arguments","dirtyExtents","globalDirty","averageExtentUpdateSize","dirtyGraphicsSet","Set","handles","updateElevation","layerView","graphicsCore","events","setup","queryGraphicUIDsInExtent","elevationProvider","view","resourceController","scheduler","add","on","_elevationChanged","watch","suspendedChange","registerTask","ELEVATION_ALIGNMENT","destroy","clear","notifyChange","suspended","elevationInfoChange","updating","running","size","empty","updatingRemaining","runTask","markAllGraphicsElevationDirty","madeProgress","run","merge","done","_updateDirtyGraphics","_updateDirtyExtents","deconflictor","setDirty","renderCoordsHelper","effectiveUpdatePolicy","keys","getGraphics3DGraphicById","delete","alignWithElevation","pop","spatialReference","emit","extent","needsElevationUpdates","graphics3DGraphics","forEach","context","layer","elevationInfo","mode","computedExtent","xmin","xmax","ymin","ymax","readOnly","prototype","d"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../chunks/tslib.es6.js\";import t from\"../../../../core/Accessor.js\";import i from\"../../../../core/Evented.js\";import s from\"../../../../core/Handles.js\";import{isSome as r}from\"../../../../core/maybe.js\";import{property as a}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/has.js\";import\"../../../../core/accessorSupport/ensureType.js\";import\"../../../../core/Logger.js\";import{subclass as n}from\"../../../../core/accessorSupport/decorators/subclass.js\";import{ExtentSet as h}from\"./ExtentSet.js\";import{TaskPriority as o}from\"../../../support/Scheduler.js\";let p=class extends t{constructor(){super(...arguments),this.dirtyExtents=new h,this.globalDirty=!1,this.averageExtentUpdateSize=0,this.dirtyGraphicsSet=new Set,this.handles=new s,this.updateElevation=!1,this.layerView=null,this.graphicsCore=null,this.events=new i}setup(e,t,i,s){this.layerView=e,this.queryGraphicUIDsInExtent=t,this.graphicsCore=i,this.elevationProvider=s;const r=this.layerView.view.resourceController.scheduler;this.handles.add([s.on(\"elevation-change\",(e=>this._elevationChanged(e))),this.layerView.watch(\"suspended\",(()=>this.suspendedChange())),r.registerTask(o.ELEVATION_ALIGNMENT,this)])}destroy(){this.dirtyGraphicsSet.clear(),this.handles.destroy(),this.handles=null,this.layerView=null,this.graphicsCore=null,this.queryGraphicUIDsInExtent=null}clear(){this.dirtyGraphicsSet.clear(),this.notifyChange(\"updating\")}suspendedChange(){!0===this.layerView.suspended?this.updateElevation=!1:!1===this.layerView.suspended&&this.updateElevation&&(this.globalDirty=!0,this.notifyChange(\"updating\"))}elevationInfoChange(){this.globalDirty=!0,this.notifyChange(\"updating\")}get updating(){return this.running}get running(){return this.dirtyGraphicsSet.size>0||this.dirtyExtents&&!this.dirtyExtents.empty||this.globalDirty}get updatingRemaining(){return this.dirtyGraphicsSet.size+this.dirtyExtents.size*this.averageExtentUpdateSize}runTask(e){for(this.globalDirty&&(this.markAllGraphicsElevationDirty(),this.globalDirty=!1,e.madeProgress()),e.run((()=>this.dirtyExtents.merge(e)));this.running&&!e.done;)this._updateDirtyGraphics(e),this._updateDirtyExtents(e);this.layerView.view.deconflictor.setDirty(),this.notifyChange(\"updating\")}_updateDirtyGraphics(e){const t=this.layerView.view.renderCoordsHelper,i=0===this.graphicsCore.effectiveUpdatePolicy;for(const s of this.dirtyGraphicsSet.keys()){const a=this.graphicsCore.getGraphics3DGraphicById(s);if(this.dirtyGraphicsSet.delete(s),r(a)&&(a.alignWithElevation(this.elevationProvider,t,i),e.madeProgress()),e.done)return}}_updateDirtyExtents(e){for(;!this.dirtyExtents.empty&&!e.done;){const t=this.dirtyExtents.pop(),i=this.elevationProvider.spatialReference;this.events.emit(\"invalidate-elevation\",{extent:t,spatialReference:i});const s=this.dirtyGraphicsSet.size;this.queryGraphicUIDsInExtent(t,i,(e=>{const t=this.graphicsCore.getGraphics3DGraphicById(e);r(t)&&t.needsElevationUpdates()&&this.dirtyGraphicsSet.add(e)})),this.averageExtentUpdateSize=.1*(this.dirtyGraphicsSet.size-s)+.9*this.averageExtentUpdateSize,e.madeProgress()}}markAllGraphicsElevationDirty(){this.dirtyExtents.clear(),this.dirtyGraphicsSet.clear(),this.graphicsCore.graphics3DGraphics.forEach(((e,t)=>this.dirtyGraphicsSet.add(t)))}_elevationChanged(e){if(\"scene\"===e.context&&(!this.graphicsCore.layer.elevationInfo||\"relative-to-scene\"!==this.graphicsCore.layer.elevationInfo.mode))return;const{extent:t,spatialReference:i}=e;if(this.layerView.suspended){if(!this.updateElevation){const e=this.graphicsCore.computedExtent;e&&t[2]>e.xmin&&t[0]<e.xmax&&t[3]>e.ymin&&t[1]<e.ymax&&(this.updateElevation=!0)}this.events.emit(\"invalidate-elevation\",{extent:t,spatialReference:i})}else t[0]===-1/0?this.globalDirty=!0:this.dirtyExtents.add(t),this.notifyChange(\"updating\")}};e([a({readOnly:!0})],p.prototype,\"updating\",null),e([a({readOnly:!0})],p.prototype,\"updatingRemaining\",null),p=e([n(\"esri.views.3d.layers.graphics.Graphics3DElevationAlignment\")],p);var d=p;export default d;\n"]},"metadata":{},"sourceType":"module"}