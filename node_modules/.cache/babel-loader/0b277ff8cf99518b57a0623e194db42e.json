{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport { S as r } from \"../../../chunks/SimpleAtmosphere.glsl.js\";\nimport { ReloadableShaderModule as i } from \"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as t } from \"../webgl-engine/core/shaderTechnique/ShaderTechnique.js\";\nimport { ShaderTechniqueConfiguration as o, parameter as n } from \"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js\";\nimport { Default3D as s } from \"../webgl-engine/lib/DefaultVertexAttributeLocations.js\";\nimport { Program as l } from \"../webgl-engine/lib/Program.js\";\nimport { makePipelineState as m, separateBlendingParams as g, backFaceCullingParams as c, defaultColorWriteParams as a } from \"../../webgl/renderState.js\";\n\nclass h extends t {\n  initializeProgram(e) {\n    const r = h.shader.get(),\n          i = this.configuration,\n          t = r.build({\n      geometry: i.geometry\n    });\n    return new l(e.rctx, t, s);\n  }\n\n  initializePipeline() {\n    return 1 === this.configuration.geometry ? m({\n      blending: g(770, 1, 771, 771),\n      culling: c,\n      depthTest: {\n        func: 515\n      },\n      colorWrite: a\n    }) : m({\n      blending: g(770, 1, 771, 771),\n      depthTest: {\n        func: 515\n      },\n      colorWrite: a\n    });\n  }\n\n}\n\nh.shader = new i(r, () => import(\"./SimpleAtmosphere.glsl.js\"));\n\nclass u extends o {\n  constructor() {\n    super(...arguments), this.geometry = 0;\n  }\n\n}\n\ne([n({\n  count: 3\n})], u.prototype, \"geometry\", void 0);\nexport { h as SimpleAtmosphereTechnique, u as SimpleAtmosphereTechniqueConfiguration };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/environment/SimpleAtmosphereTechnique.js"],"names":["_","e","S","r","ReloadableShaderModule","i","ShaderTechnique","t","ShaderTechniqueConfiguration","o","parameter","n","Default3D","s","Program","l","makePipelineState","m","separateBlendingParams","g","backFaceCullingParams","c","defaultColorWriteParams","a","h","initializeProgram","shader","get","configuration","build","geometry","rctx","initializePipeline","blending","culling","depthTest","func","colorWrite","u","constructor","arguments","count","prototype","SimpleAtmosphereTechnique","SimpleAtmosphereTechniqueConfiguration"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,8BAAlB;AAAiD,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,0CAAlB;AAA6D,SAAOC,sBAAsB,IAAIC,CAAjC,QAAuC,gEAAvC;AAAwG,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,yDAAhC;AAA0F,SAAOC,4BAA4B,IAAIC,CAAvC,EAAyCC,SAAS,IAAIC,CAAtD,QAA4D,sEAA5D;AAAmI,SAAOC,SAAS,IAAIC,CAApB,QAA0B,wDAA1B;AAAmF,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,gCAAxB;AAAyD,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,sBAAsB,IAAIC,CAAxD,EAA0DC,qBAAqB,IAAIC,CAAnF,EAAqFC,uBAAuB,IAAIC,CAAhH,QAAsH,4BAAtH;;AAAmJ,MAAMC,CAAN,SAAgBjB,CAAhB,CAAiB;AAACkB,EAAAA,iBAAiB,CAACxB,CAAD,EAAG;AAAC,UAAME,CAAC,GAACqB,CAAC,CAACE,MAAF,CAASC,GAAT,EAAR;AAAA,UAAuBtB,CAAC,GAAC,KAAKuB,aAA9B;AAAA,UAA4CrB,CAAC,GAACJ,CAAC,CAAC0B,KAAF,CAAQ;AAACC,MAAAA,QAAQ,EAACzB,CAAC,CAACyB;AAAZ,KAAR,CAA9C;AAA6E,WAAO,IAAIf,CAAJ,CAAMd,CAAC,CAAC8B,IAAR,EAAaxB,CAAb,EAAeM,CAAf,CAAP;AAAyB;;AAAAmB,EAAAA,kBAAkB,GAAE;AAAC,WAAO,MAAI,KAAKJ,aAAL,CAAmBE,QAAvB,GAAgCb,CAAC,CAAC;AAACgB,MAAAA,QAAQ,EAACd,CAAC,CAAC,GAAD,EAAK,CAAL,EAAO,GAAP,EAAW,GAAX,CAAX;AAA2Be,MAAAA,OAAO,EAACb,CAAnC;AAAqCc,MAAAA,SAAS,EAAC;AAACC,QAAAA,IAAI,EAAC;AAAN,OAA/C;AAA0DC,MAAAA,UAAU,EAACd;AAArE,KAAD,CAAjC,GAA2GN,CAAC,CAAC;AAACgB,MAAAA,QAAQ,EAACd,CAAC,CAAC,GAAD,EAAK,CAAL,EAAO,GAAP,EAAW,GAAX,CAAX;AAA2BgB,MAAAA,SAAS,EAAC;AAACC,QAAAA,IAAI,EAAC;AAAN,OAArC;AAAgDC,MAAAA,UAAU,EAACd;AAA3D,KAAD,CAAnH;AAAmL;;AAApU;;AAAqUC,CAAC,CAACE,MAAF,GAAS,IAAIrB,CAAJ,CAAMF,CAAN,EAAS,MAAI,OAAO,4BAAP,CAAb,CAAT;;AAA6D,MAAMmC,CAAN,SAAgB7B,CAAhB,CAAiB;AAAC8B,EAAAA,WAAW,GAAE;AAAC,UAAM,GAAGC,SAAT,GAAoB,KAAKV,QAAL,GAAc,CAAlC;AAAoC;;AAAnD;;AAAoD7B,CAAC,CAAC,CAACU,CAAC,CAAC;AAAC8B,EAAAA,KAAK,EAAC;AAAP,CAAD,CAAF,CAAD,EAAgBH,CAAC,CAACI,SAAlB,EAA4B,UAA5B,EAAuC,KAAK,CAA5C,CAAD;AAAgD,SAAOlB,CAAC,IAAImB,yBAAZ,EAAsCL,CAAC,IAAIM,sCAA3C","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import{S as r}from\"../../../chunks/SimpleAtmosphere.glsl.js\";import{ReloadableShaderModule as i}from\"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js\";import{ShaderTechnique as t}from\"../webgl-engine/core/shaderTechnique/ShaderTechnique.js\";import{ShaderTechniqueConfiguration as o,parameter as n}from\"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js\";import{Default3D as s}from\"../webgl-engine/lib/DefaultVertexAttributeLocations.js\";import{Program as l}from\"../webgl-engine/lib/Program.js\";import{makePipelineState as m,separateBlendingParams as g,backFaceCullingParams as c,defaultColorWriteParams as a}from\"../../webgl/renderState.js\";class h extends t{initializeProgram(e){const r=h.shader.get(),i=this.configuration,t=r.build({geometry:i.geometry});return new l(e.rctx,t,s)}initializePipeline(){return 1===this.configuration.geometry?m({blending:g(770,1,771,771),culling:c,depthTest:{func:515},colorWrite:a}):m({blending:g(770,1,771,771),depthTest:{func:515},colorWrite:a})}}h.shader=new i(r,(()=>import(\"./SimpleAtmosphere.glsl.js\")));class u extends o{constructor(){super(...arguments),this.geometry=0}}e([n({count:3})],u.prototype,\"geometry\",void 0);export{h as SimpleAtmosphereTechnique,u as SimpleAtmosphereTechniqueConfiguration};\n"]},"metadata":{},"sourceType":"module"}