{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { computeDepthRange as t } from \"./DepthRange.js\";\n\nclass e {\n  constructor(t) {\n    this._objects = t;\n  }\n\n  submit(t, e) {\n    this._objects.preSubmit(e);\n\n    const s = this._objects.visibleObjects;\n\n    for (let i = 0; i < s.length; i++) {\n      const e = s[i];\n      e.renderable.material.submit(t, e);\n    }\n  }\n\n  queryShadowCasterDepthRange(e) {\n    return this._objects.visibleObjects.length ? t(e, this._objects.visibleObjects) : null;\n  }\n\n}\n\nexport { e as RenderSubmitSystem };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/RenderSubmitSystem.js"],"names":["computeDepthRange","t","e","constructor","_objects","submit","preSubmit","s","visibleObjects","i","length","renderable","material","queryShadowCasterDepthRange","RenderSubmitSystem"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,iBAAiB,IAAIC,CAA5B,QAAkC,iBAAlC;;AAAoD,MAAMC,CAAN,CAAO;AAACC,EAAAA,WAAW,CAACF,CAAD,EAAG;AAAC,SAAKG,QAAL,GAAcH,CAAd;AAAgB;;AAAAI,EAAAA,MAAM,CAACJ,CAAD,EAAGC,CAAH,EAAK;AAAC,SAAKE,QAAL,CAAcE,SAAd,CAAwBJ,CAAxB;;AAA2B,UAAMK,CAAC,GAAC,KAAKH,QAAL,CAAcI,cAAtB;;AAAqC,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAC,CAACG,MAAhB,EAAuBD,CAAC,EAAxB,EAA2B;AAAC,YAAMP,CAAC,GAACK,CAAC,CAACE,CAAD,CAAT;AAAaP,MAAAA,CAAC,CAACS,UAAF,CAAaC,QAAb,CAAsBP,MAAtB,CAA6BJ,CAA7B,EAA+BC,CAA/B;AAAkC;AAAC;;AAAAW,EAAAA,2BAA2B,CAACX,CAAD,EAAG;AAAC,WAAO,KAAKE,QAAL,CAAcI,cAAd,CAA6BE,MAA7B,GAAoCT,CAAC,CAACC,CAAD,EAAG,KAAKE,QAAL,CAAcI,cAAjB,CAArC,GAAsE,IAA7E;AAAkF;;AAAzS;;AAA0S,SAAON,CAAC,IAAIY,kBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{computeDepthRange as t}from\"./DepthRange.js\";class e{constructor(t){this._objects=t}submit(t,e){this._objects.preSubmit(e);const s=this._objects.visibleObjects;for(let i=0;i<s.length;i++){const e=s[i];e.renderable.material.submit(t,e)}}queryShadowCasterDepthRange(e){return this._objects.visibleObjects.length?t(e,this._objects.visibleObjects):null}}export{e as RenderSubmitSystem};\n"]},"metadata":{},"sourceType":"module"}