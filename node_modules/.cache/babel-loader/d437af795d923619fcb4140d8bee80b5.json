{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { ScreenSpacePass as e } from \"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.js\";\nimport { unoccludedHighlightFlag as o } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { ReadLinearDepth as a } from \"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";\nimport { ReadShadowMap as t } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { CameraSpace as r } from \"../views/3d/webgl-engine/core/shaderLibrary/util/CameraSpace.glsl.js\";\nimport { RgbaFloatEncoding as i } from \"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";\nimport { glsl as l } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as d } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\n\nfunction h(h) {\n  const c = new d();\n  return c.include(t), c.fragment.include(i), c.fragment.include(a), c.include(r), c.include(e), c.fragment.uniforms.add(\"defaultDepthTex\", \"sampler2D\").add(\"highlightDepthTex\", \"sampler2D\").add(\"depthMap\", \"sampler2D\").add(\"highlightMap\", \"sampler2D\").add(\"color\", \"vec4\").add(\"nearFar\", \"vec2\").add(\"opacity\", \"float\").add(\"occludedOpacity\", \"float\").add(\"terminationFactor\", \"float\").add(\"inverseView\", \"mat4\").add(\"lightingMainDirectionView\", \"vec3\").add(\"texelSize\", \"vec2\"), c.fragment.constants.add(\"unoccludedHighlightFlag\", \"vec4\", o).add(\"highlightedThreshold\", \"float\", h.highlightedThreshold).add(\"selfShadowThreshold\", \"float\", h.selfShadowThreshold), c.fragment.code.add(l`vec3 normalFromDepth(vec3 pixelPos, vec2 fragCoord, vec2 uv, vec2 texelSize, sampler2D depthMap, vec2 nearFar) {\nfloat leftPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(-1.0, 0.0) * texelSize, nearFar);\nfloat rightPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(1.0, 0.0) * texelSize, nearFar);\nfloat bottomPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(0.0, -1.0) * texelSize, nearFar);\nfloat topPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(0.0, 1.0) * texelSize, nearFar);\nbool pickLeft = abs(pixelPos.z - leftPixelDepth) < abs(pixelPos.z - rightPixelDepth);\nbool pickBottom = abs(pixelPos.z - bottomPixelDepth) < abs(pixelPos.z - topPixelDepth);\nvec3 fragCoordHorizontal = pickLeft\n? vec3(fragCoord + vec2(-1.0, 0.0), leftPixelDepth)\n: vec3(fragCoord + vec2(1.0, 0.0), rightPixelDepth);\nvec3 fragCoordVertical = pickBottom\n? vec3(fragCoord + vec2(0.0, -1.0), bottomPixelDepth)\n: vec3(fragCoord + vec2(0.0, 1.0), topPixelDepth);\nvec3 verticalPixelPos = reconstructPosition(fragCoordHorizontal.xy, fragCoordHorizontal.z);\nvec3 horizontalPixelPos = reconstructPosition(fragCoordVertical.xy, fragCoordVertical.z);\nvec3 normal = normalize(cross(verticalPixelPos - pixelPos, horizontalPixelPos - pixelPos));\nreturn pickLeft == pickBottom ? normal : -normal;\n}`), c.fragment.code.add(l`void main(void) {\nvec4 highlightInfo = texture2D(highlightMap, uv);\nfloat visiblyHighlighted = (1.0 - clamp(distance(unoccludedHighlightFlag, highlightInfo), 0.0, 1.0)) * highlightInfo.a;\nif (visiblyHighlighted > highlightedThreshold) {\ndiscard;\n}\nfloat depth = rgba2float(texture2D(depthMap, uv));\nif (depth == 0.0) {\ndiscard;\n}\nfloat currentPixelDepth = linearDepthFromFloat(depth, nearFar);\nif (-currentPixelDepth>nearFar.y || -currentPixelDepth<nearFar.x) {\ndiscard;\n}\nvec4 currentPixelPos = vec4(reconstructPosition(gl_FragCoord.xy, currentPixelDepth), 1.0);\nvec4 worldSpacePos = inverseView * currentPixelPos;\nmat4 shadowMatrix;\nfloat linearDepth = -currentPixelDepth;\nint i = chooseCascade(linearDepth, shadowMatrix);\nif (i >= uShadowMapNum) {\ndiscard;\n}\nvec3 lvpos = lightSpacePosition(worldSpacePos.xyz, shadowMatrix);\nif (lvpos.z >= 1.0 || lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) {\ndiscard;\n}\nvec2 uvShadow = cascadeCoordinates(i, lvpos);\nfloat depthHighlight = readShadowMapDepth(uvShadow, highlightDepthTex);\nbool shadowHighlight = depthHighlight < lvpos.z;\nif (!shadowHighlight) {\ndiscard;\n}\nfloat depthDefault = readShadowMapDepth(uvShadow, defaultDepthTex);\nbool shadowDefault = depthDefault < lvpos.z;\nvec3 normal = normalFromDepth(currentPixelPos.xyz, gl_FragCoord.xy, uv, texelSize, depthMap, nearFar);\nbool shaded = dot(normal, lightingMainDirectionView) < selfShadowThreshold;\nfloat differenceOpacity = opacity;\nfloat bothOpacity = occludedOpacity;\nfloat fragOpacity = (shadowDefault || shaded) ? bothOpacity : differenceOpacity;\ngl_FragColor = vec4(color.rgb, color.a * fragOpacity * terminationFactor);\n}`), c;\n}\n\nvar c = Object.freeze({\n  __proto__: null,\n  build: h\n});\nexport { c as S, h as b };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/chunks/ShadowHighlight.glsl.js"],"names":["ScreenSpacePass","e","unoccludedHighlightFlag","o","ReadLinearDepth","a","ReadShadowMap","t","CameraSpace","r","RgbaFloatEncoding","i","glsl","l","ShaderBuilder","d","h","c","include","fragment","uniforms","add","constants","highlightedThreshold","selfShadowThreshold","code","Object","freeze","__proto__","build","S","b"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,eAAe,IAAIC,CAA1B,QAAgC,gEAAhC;AAAiG,SAAOC,uBAAuB,IAAIC,CAAlC,QAAwC,4EAAxC;AAAqH,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,4EAAhC;AAA6G,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,2EAA9B;AAA0G,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,sEAA5B;AAAmG,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,4EAAlC;AAA+G,SAAOC,IAAI,IAAIC,CAAf,QAAqB,2DAArB;AAAiF,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,8DAA9B;;AAA6F,SAASC,CAAT,CAAWA,CAAX,EAAa;AAAC,QAAMC,CAAC,GAAC,IAAIF,CAAJ,EAAR;AAAc,SAAOE,CAAC,CAACC,OAAF,CAAUX,CAAV,GAAaU,CAAC,CAACE,QAAF,CAAWD,OAAX,CAAmBP,CAAnB,CAAb,EAAmCM,CAAC,CAACE,QAAF,CAAWD,OAAX,CAAmBb,CAAnB,CAAnC,EAAyDY,CAAC,CAACC,OAAF,CAAUT,CAAV,CAAzD,EAAsEQ,CAAC,CAACC,OAAF,CAAUjB,CAAV,CAAtE,EAAmFgB,CAAC,CAACE,QAAF,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,iBAAxB,EAA0C,WAA1C,EAAuDA,GAAvD,CAA2D,mBAA3D,EAA+E,WAA/E,EAA4FA,GAA5F,CAAgG,UAAhG,EAA2G,WAA3G,EAAwHA,GAAxH,CAA4H,cAA5H,EAA2I,WAA3I,EAAwJA,GAAxJ,CAA4J,OAA5J,EAAoK,MAApK,EAA4KA,GAA5K,CAAgL,SAAhL,EAA0L,MAA1L,EAAkMA,GAAlM,CAAsM,SAAtM,EAAgN,OAAhN,EAAyNA,GAAzN,CAA6N,iBAA7N,EAA+O,OAA/O,EAAwPA,GAAxP,CAA4P,mBAA5P,EAAgR,OAAhR,EAAyRA,GAAzR,CAA6R,aAA7R,EAA2S,MAA3S,EAAmTA,GAAnT,CAAuT,2BAAvT,EAAmV,MAAnV,EAA2VA,GAA3V,CAA+V,WAA/V,EAA2W,MAA3W,CAAnF,EAAscJ,CAAC,CAACE,QAAF,CAAWG,SAAX,CAAqBD,GAArB,CAAyB,yBAAzB,EAAmD,MAAnD,EAA0DlB,CAA1D,EAA6DkB,GAA7D,CAAiE,sBAAjE,EAAwF,OAAxF,EAAgGL,CAAC,CAACO,oBAAlG,EAAwHF,GAAxH,CAA4H,qBAA5H,EAAkJ,OAAlJ,EAA0JL,CAAC,CAACQ,mBAA5J,CAAtc,EAAunBP,CAAC,CAACE,QAAF,CAAWM,IAAX,CAAgBJ,GAAhB,CAAoBR,CAAE;AAC79C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAjBu8C,CAAvnB,EAiB50BI,CAAC,CAACE,QAAF,CAAWM,IAAX,CAAgBJ,GAAhB,CAAoBR,CAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAxCI,CAjB40B,EAyD50BI,CAzDq0B;AAyDn0B;;AAAA,IAAIA,CAAC,GAACS,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,SAAS,EAAC,IAAX;AAAgBC,EAAAA,KAAK,EAACb;AAAtB,CAAd,CAAN;AAA8C,SAAOC,CAAC,IAAIa,CAAZ,EAAcd,CAAC,IAAIe,CAAnB","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{ScreenSpacePass as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.js\";import{unoccludedHighlightFlag as o}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{ReadLinearDepth as a}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{ReadShadowMap as t}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{CameraSpace as r}from\"../views/3d/webgl-engine/core/shaderLibrary/util/CameraSpace.glsl.js\";import{RgbaFloatEncoding as i}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{glsl as l}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as d}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";function h(h){const c=new d;return c.include(t),c.fragment.include(i),c.fragment.include(a),c.include(r),c.include(e),c.fragment.uniforms.add(\"defaultDepthTex\",\"sampler2D\").add(\"highlightDepthTex\",\"sampler2D\").add(\"depthMap\",\"sampler2D\").add(\"highlightMap\",\"sampler2D\").add(\"color\",\"vec4\").add(\"nearFar\",\"vec2\").add(\"opacity\",\"float\").add(\"occludedOpacity\",\"float\").add(\"terminationFactor\",\"float\").add(\"inverseView\",\"mat4\").add(\"lightingMainDirectionView\",\"vec3\").add(\"texelSize\",\"vec2\"),c.fragment.constants.add(\"unoccludedHighlightFlag\",\"vec4\",o).add(\"highlightedThreshold\",\"float\",h.highlightedThreshold).add(\"selfShadowThreshold\",\"float\",h.selfShadowThreshold),c.fragment.code.add(l`vec3 normalFromDepth(vec3 pixelPos, vec2 fragCoord, vec2 uv, vec2 texelSize, sampler2D depthMap, vec2 nearFar) {\nfloat leftPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(-1.0, 0.0) * texelSize, nearFar);\nfloat rightPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(1.0, 0.0) * texelSize, nearFar);\nfloat bottomPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(0.0, -1.0) * texelSize, nearFar);\nfloat topPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(0.0, 1.0) * texelSize, nearFar);\nbool pickLeft = abs(pixelPos.z - leftPixelDepth) < abs(pixelPos.z - rightPixelDepth);\nbool pickBottom = abs(pixelPos.z - bottomPixelDepth) < abs(pixelPos.z - topPixelDepth);\nvec3 fragCoordHorizontal = pickLeft\n? vec3(fragCoord + vec2(-1.0, 0.0), leftPixelDepth)\n: vec3(fragCoord + vec2(1.0, 0.0), rightPixelDepth);\nvec3 fragCoordVertical = pickBottom\n? vec3(fragCoord + vec2(0.0, -1.0), bottomPixelDepth)\n: vec3(fragCoord + vec2(0.0, 1.0), topPixelDepth);\nvec3 verticalPixelPos = reconstructPosition(fragCoordHorizontal.xy, fragCoordHorizontal.z);\nvec3 horizontalPixelPos = reconstructPosition(fragCoordVertical.xy, fragCoordVertical.z);\nvec3 normal = normalize(cross(verticalPixelPos - pixelPos, horizontalPixelPos - pixelPos));\nreturn pickLeft == pickBottom ? normal : -normal;\n}`),c.fragment.code.add(l`void main(void) {\nvec4 highlightInfo = texture2D(highlightMap, uv);\nfloat visiblyHighlighted = (1.0 - clamp(distance(unoccludedHighlightFlag, highlightInfo), 0.0, 1.0)) * highlightInfo.a;\nif (visiblyHighlighted > highlightedThreshold) {\ndiscard;\n}\nfloat depth = rgba2float(texture2D(depthMap, uv));\nif (depth == 0.0) {\ndiscard;\n}\nfloat currentPixelDepth = linearDepthFromFloat(depth, nearFar);\nif (-currentPixelDepth>nearFar.y || -currentPixelDepth<nearFar.x) {\ndiscard;\n}\nvec4 currentPixelPos = vec4(reconstructPosition(gl_FragCoord.xy, currentPixelDepth), 1.0);\nvec4 worldSpacePos = inverseView * currentPixelPos;\nmat4 shadowMatrix;\nfloat linearDepth = -currentPixelDepth;\nint i = chooseCascade(linearDepth, shadowMatrix);\nif (i >= uShadowMapNum) {\ndiscard;\n}\nvec3 lvpos = lightSpacePosition(worldSpacePos.xyz, shadowMatrix);\nif (lvpos.z >= 1.0 || lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) {\ndiscard;\n}\nvec2 uvShadow = cascadeCoordinates(i, lvpos);\nfloat depthHighlight = readShadowMapDepth(uvShadow, highlightDepthTex);\nbool shadowHighlight = depthHighlight < lvpos.z;\nif (!shadowHighlight) {\ndiscard;\n}\nfloat depthDefault = readShadowMapDepth(uvShadow, defaultDepthTex);\nbool shadowDefault = depthDefault < lvpos.z;\nvec3 normal = normalFromDepth(currentPixelPos.xyz, gl_FragCoord.xy, uv, texelSize, depthMap, nearFar);\nbool shaded = dot(normal, lightingMainDirectionView) < selfShadowThreshold;\nfloat differenceOpacity = opacity;\nfloat bothOpacity = occludedOpacity;\nfloat fragOpacity = (shadowDefault || shaded) ? bothOpacity : differenceOpacity;\ngl_FragColor = vec4(color.rgb, color.a * fragOpacity * terminationFactor);\n}`),c}var c=Object.freeze({__proto__:null,build:h});export{c as S,h as b};\n"]},"metadata":{},"sourceType":"module"}