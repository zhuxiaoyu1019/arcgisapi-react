{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nconst e = function (e, r) {\n  const n = r.width * r.height,\n        a = r.pixelType;\n  return Math.floor(e.byteLength / (n * t(a)));\n},\n      t = function (e) {\n  let t = 1;\n\n  switch (e) {\n    case Uint8Array:\n    case Int8Array:\n      t = 1;\n      break;\n\n    case Uint16Array:\n    case Int16Array:\n      t = 2;\n      break;\n\n    case Uint32Array:\n    case Int32Array:\n    case Float32Array:\n      t = 4;\n      break;\n\n    case Float64Array:\n      t = 8;\n  }\n\n  return t;\n},\n      r = function (e, t) {\n  if (8 * e.byteLength < t) return null;\n  const r = new Uint8Array(e, 0, Math.ceil(t / 8)),\n        n = new Uint8Array(t);\n  let a = 0,\n      s = 0,\n      i = 0,\n      c = 0;\n\n  for (i = 0; i < r.length - 1; i++) for (s = r[i], c = 7; c >= 0; c--) n[a++] = s >> c & 1;\n\n  for (c = 7; a < t - 1;) s = r[r.length - 1], n[a++] = s >> c & 1, c--;\n\n  return n;\n};\n\nclass n {\n  static decode(n, a) {\n    const s = a.pixelType,\n          i = [],\n          c = a.width * a.height,\n          o = e(n, a),\n          {\n      bandIds: h,\n      format: l\n    } = a,\n          y = h && h.length || e(n, a),\n          f = n.byteLength - n.byteLength % (c * t(s)),\n          u = new s(n, 0, c * o);\n    let b, g, A, p, d;\n    if (\"bip\" === l) for (b = 0; b < y; b++) {\n      for (p = new s(c), d = h ? h[b] : b, g = 0; g < c; g++) p[g] = u[g * o + d];\n\n      i.push(p);\n    } else if (\"bsq\" === l) for (b = 0; b < y; b++) d = h ? h[b] : b, i.push(u.subarray(d * c, (d + 1) * c));\n    return f < n.byteLength - 1 && (A = r(n.slice(f), c)), {\n      pixels: i,\n      mask: A\n    };\n  }\n\n}\n\nexport default n;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/layers/support/rasterFormats/Raw.js"],"names":["e","r","n","width","height","a","pixelType","Math","floor","byteLength","t","Uint8Array","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float32Array","Float64Array","ceil","s","i","c","length","decode","o","bandIds","h","format","l","y","f","u","b","g","A","p","d","push","subarray","slice","pixels","mask"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nconst e=function(e,r){const n=r.width*r.height,a=r.pixelType;return Math.floor(e.byteLength/(n*t(a)))},t=function(e){let t=1;switch(e){case Uint8Array:case Int8Array:t=1;break;case Uint16Array:case Int16Array:t=2;break;case Uint32Array:case Int32Array:case Float32Array:t=4;break;case Float64Array:t=8}return t},r=function(e,t){if(8*e.byteLength<t)return null;const r=new Uint8Array(e,0,Math.ceil(t/8)),n=new Uint8Array(t);let a=0,s=0,i=0,c=0;for(i=0;i<r.length-1;i++)for(s=r[i],c=7;c>=0;c--)n[a++]=s>>c&1;for(c=7;a<t-1;)s=r[r.length-1],n[a++]=s>>c&1,c--;return n};class n{static decode(n,a){const s=a.pixelType,i=[],c=a.width*a.height,o=e(n,a),{bandIds:h,format:l}=a,y=h&&h.length||e(n,a),f=n.byteLength-n.byteLength%(c*t(s)),u=new s(n,0,c*o);let b,g,A,p,d;if(\"bip\"===l)for(b=0;b<y;b++){for(p=new s(c),d=h?h[b]:b,g=0;g<c;g++)p[g]=u[g*o+d];i.push(p)}else if(\"bsq\"===l)for(b=0;b<y;b++)d=h?h[b]:b,i.push(u.subarray(d*c,(d+1)*c));return f<n.byteLength-1&&(A=r(n.slice(f),c)),{pixels:i,mask:A}}}export default n;\n"]},"metadata":{},"sourceType":"module"}