{"ast":null,"code":"import { __assign } from 'tslib';\nimport { animate } from './index.js';\nimport { velocityPerSecond } from '../utils/velocity-per-second.js';\nimport { getFrameData } from 'framesync';\n\nfunction inertia(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.velocity,\n      velocity = _c === void 0 ? 0 : _c,\n      min = _a.min,\n      max = _a.max,\n      _d = _a.power,\n      power = _d === void 0 ? 0.8 : _d,\n      _e = _a.timeConstant,\n      timeConstant = _e === void 0 ? 750 : _e,\n      _f = _a.bounceStiffness,\n      bounceStiffness = _f === void 0 ? 500 : _f,\n      _g = _a.bounceDamping,\n      bounceDamping = _g === void 0 ? 10 : _g,\n      _h = _a.restDelta,\n      restDelta = _h === void 0 ? 1 : _h,\n      modifyTarget = _a.modifyTarget,\n      driver = _a.driver,\n      onUpdate = _a.onUpdate,\n      onComplete = _a.onComplete,\n      onStop = _a.onStop;\n  var currentAnimation;\n\n  function isOutOfBounds(v) {\n    return min !== undefined && v < min || max !== undefined && v > max;\n  }\n\n  function boundaryNearest(v) {\n    if (min === undefined) return max;\n    if (max === undefined) return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n\n  function startAnimation(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(__assign(__assign({}, options), {\n      driver: driver,\n      onUpdate: function (v) {\n        var _a;\n\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n      },\n      onComplete: onComplete,\n      onStop: onStop\n    }));\n  }\n\n  function startSpring(options) {\n    startAnimation(__assign({\n      type: \"spring\",\n      stiffness: bounceStiffness,\n      damping: bounceDamping,\n      restDelta: restDelta\n    }, options));\n  }\n\n  if (isOutOfBounds(from)) {\n    startSpring({\n      from: from,\n      velocity: velocity,\n      to: boundaryNearest(from)\n    });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n    var boundary_1 = boundaryNearest(target);\n    var heading_1 = boundary_1 === min ? -1 : 1;\n    var prev_1;\n    var current_1;\n\n    var checkBoundary = function (v) {\n      prev_1 = current_1;\n      current_1 = v;\n      velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n\n      if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n        startSpring({\n          from: v,\n          to: boundary_1,\n          velocity: velocity\n        });\n      }\n    };\n\n    startAnimation({\n      type: \"decay\",\n      from: from,\n      velocity: velocity,\n      timeConstant: timeConstant,\n      power: power,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n    });\n  }\n\n  return {\n    stop: function () {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\n\nexport { inertia };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/popmotion/dist/es/animations/inertia.js"],"names":["__assign","animate","velocityPerSecond","getFrameData","inertia","_a","_b","from","_c","velocity","min","max","_d","power","_e","timeConstant","_f","bounceStiffness","_g","bounceDamping","_h","restDelta","modifyTarget","driver","onUpdate","onComplete","onStop","currentAnimation","isOutOfBounds","v","undefined","boundaryNearest","Math","abs","startAnimation","options","stop","call","startSpring","type","stiffness","damping","to","target","boundary_1","heading_1","prev_1","current_1","checkBoundary","delta"],"mappings":"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","sourcesContent":["import { __assign } from 'tslib';\nimport { animate } from './index.js';\nimport { velocityPerSecond } from '../utils/velocity-per-second.js';\nimport { getFrameData } from 'framesync';\n\nfunction inertia(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.velocity, velocity = _c === void 0 ? 0 : _c, min = _a.min, max = _a.max, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 750 : _e, _f = _a.bounceStiffness, bounceStiffness = _f === void 0 ? 500 : _f, _g = _a.bounceDamping, bounceDamping = _g === void 0 ? 10 : _g, _h = _a.restDelta, restDelta = _h === void 0 ? 1 : _h, modifyTarget = _a.modifyTarget, driver = _a.driver, onUpdate = _a.onUpdate, onComplete = _a.onComplete, onStop = _a.onStop;\n    var currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(__assign(__assign({}, options), { driver: driver, onUpdate: function (v) {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete: onComplete,\n            onStop: onStop }));\n    }\n    function startSpring(options) {\n        startAnimation(__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n    }\n    else {\n        var target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        var boundary_1 = boundaryNearest(target);\n        var heading_1 = boundary_1 === min ? -1 : 1;\n        var prev_1;\n        var current_1;\n        var checkBoundary = function (v) {\n            prev_1 = current_1;\n            current_1 = v;\n            velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n            if ((heading_1 === 1 && v > boundary_1) ||\n                (heading_1 === -1 && v < boundary_1)) {\n                startSpring({ from: v, to: boundary_1, velocity: velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from: from,\n            velocity: velocity,\n            timeConstant: timeConstant,\n            power: power,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: function () { return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(); },\n    };\n}\n\nexport { inertia };\n"]},"metadata":{},"sourceType":"module"}