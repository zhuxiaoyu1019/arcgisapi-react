{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isNone as e, isSome as t, unwrapOr as r } from \"../../../../core/maybe.js\";\nimport i from \"../../../../core/PooledArray.js\";\nimport { castRenderScreenPointArray3 as n, createRenderScreenPointArray as s } from \"../../../../core/screenUtils.js\";\nimport { b as o, n as a, a as c, l, i as d } from \"../../../../chunks/vec3.js\";\nimport { c as h } from \"../../../../chunks/vec3f64.js\";\nimport { create as u } from \"../../../../geometry/support/ray.js\";\nimport { sv3d as m } from \"../../../../geometry/support/vectorStacks.js\";\nimport { fromRenderAtEye as p, fromScreen as y } from \"../../support/geometryUtils/ray.js\";\nimport { Intersector as g } from \"../../webgl-engine/lib/Intersector.js\";\nimport { sliceFilterPredicate as f } from \"../../webgl-engine/lib/intersectorUtils.js\";\n\nclass v {\n  constructor(e, t, r) {\n    this.viewingMode = e, this.layerProvider = t, this.view = r, this.externalIntersectionHandlers = new i(), this.tolerance = g.DEFAULT_TOLERANCE, this.tmpRay = u(), this.validateHUDIntersector = new g(this.viewingMode), this.validateHUDIntersector.options.hud = !1;\n  }\n\n  intersectScreen(e, t) {\n    return this.intersectRay(this.getPickRay(e, this.tmpRay), x(this.viewingMode), t);\n  }\n\n  intersectScreenFreePointFallback(e, t) {\n    return this.intersectRayFreePointFallback(this.getPickRay(e, this.tmpRay), t);\n  }\n\n  intersectRayFreePointFallback(e, t) {\n    return this.intersectRay(e, x(this.viewingMode), t) || this.intersectRayFreePointLocal(e, t);\n  }\n\n  intersectRay(e, t, r, i) {\n    return t.options.selectionMode = !1, t.options.store = 0, this.computeIntersection(e, t, i), !!t.results.min && t.results.min.getIntersectionPoint(r);\n  }\n\n  getCenterRayWithSubpixelOffset(e, t, r = .5, i = .5) {\n    return e.getRenderCenter(M, r, i), M[0] += .0466, M[1] -= .0123, p(e, M, t);\n  }\n\n  intersectIntersectorScreen(e, t, r) {\n    this.computeIntersection(this.getPickRay(e, this.tmpRay), t, r);\n  }\n\n  intersectToolIntersectorScreen(e, t, r) {\n    const i = this.getPickRay(e, this.tmpRay);\n    this.intersectToolIntersectorRay(i, t, r);\n  }\n\n  intersectToolIntersectorRay(e, t, r) {\n    t.options.selectionMode = !0, this.computeIntersection(e, t, r);\n    const i = t.results.min;\n    !!this.view.basemapTerrain && this.view.basemapTerrain.opaque || i.hasIntersectionPoint && \"TerrainRenderer\" !== i.intersector || (t.options.selectionMode = !1, this.computeIntersection(e, t, r));\n  }\n\n  setTolerance(e = g.DEFAULT_TOLERANCE) {\n    this.tolerance = e;\n  }\n\n  addIntersectionHandler(e) {\n    this.externalIntersectionHandlers.push(e), this.externalIntersectionHandlers.sort((e, t) => \"Terrain\" === e.type ? 1 : \"Terrain\" === t.type ? -1 : 0);\n  }\n\n  removeIntersectionHandler(e) {\n    this.externalIntersectionHandlers.removeUnordered(e), this.externalIntersectionHandlers.sort((e, t) => \"Terrain\" === e.type ? 1 : \"Terrain\" === t.type ? -1 : 0);\n  }\n\n  getPickRay(e, t = u()) {\n    const r = this.view.state.camera;\n    return y(r, e, t);\n  }\n\n  intersectRayFreePointLocal(t, r) {\n    if (2 !== this.viewingMode || e(t)) return !1;\n    const i = this.view.dataExtent,\n          n = {\n      x: i.xmax - i.xmin,\n      y: i.ymax - i.ymin,\n      z: 8 * Math.max(i.xmax - i.xmin, i.ymax - i.ymin)\n    },\n          s = Math.max(n.x, n.y, n.z);\n    if (0 === s) return o(r, t.origin, a(m.get(), t.direction)), !0;\n    const d = this.view.state.camera,\n          h = Math.max(0, i.xmin - d.eye[0], d.eye[0] - i.xmax),\n          u = Math.max(0, i.ymin - d.eye[1], d.eye[1] - i.ymax),\n          p = Math.sqrt(h * h + u * u),\n          y = Math.abs(d.relativeElevation) + Number.MIN_VALUE,\n          g = Math.max(0, Math.log(s / y)) ** 2;\n    let f = s / Math.max(1, g);\n    f = Math.max(f, Math.min(p, s));\n    const v = c(m.get(), t.direction, f / l(t.direction));\n    return o(r, t.origin, v), !0;\n  }\n\n  intersectElevationFromScreen(e, t, r = 0, i = null) {\n    return this.intersectElevation(this.getPickRay(e, this.tmpRay), t, r, i);\n  }\n\n  intersectElevation(i, s, a = 0, c = null) {\n    if (e(i)) return null;\n    const l = t(s) ? s.mode : \"absolute-height\",\n          d = t(s) ? r(s.offset, 0) : 0,\n          h = \"on-the-ground\" !== l ? d + a : 0,\n          u = h / this.view.renderCoordsHelper.unitInMeters;\n\n    if (\"absolute-height\" === l) {\n      if (this.view.renderCoordsHelper.intersectInfiniteManifold(i, h, b)) {\n        const e = this.view.computeMapPointFromVec3d(b);\n        return e.z -= d, e;\n      }\n\n      return null;\n    }\n\n    const p = this.view.state.camera,\n          y = n(m.get());\n    p.projectToRenderScreen(i.origin, y);\n    const v = this.prepareFilters(null, w),\n          R = this.view.slicePlane,\n          I = t(R) ? f(R) : null,\n          x = new g(this.viewingMode);\n    x.options.store = 0, x.options.verticalOffset = u;\n    const P = i.origin,\n          M = o(m.get(), P, i.direction);\n    x.reset(P, M), x.point = y, x.camera = p, x.filterPredicate = null;\n    const H = t(c) ? \"type\" in c && \"graphics\" === c.type ? e => e.metadata.layerUid !== c.uid : e => e.metadata.graphicUid !== c.uid : null;\n\n    switch (l) {\n      case \"relative-to-scene\":\n        {\n          const t = t => (e(H) || H(t)) && t.metadata && t.metadata.isElevationSource;\n\n          x.intersect(v.layers, y, p, this.tolerance, null, t), this.externalIntersectionHandlers.forAll(e => {\n            if (\"I3S\" === e.type || \"Terrain\" === e.type) {\n              const t = e.slicePlane ? I : null;\n              e.intersect(x, t, x.rayBeginPoint, x.rayEndPoint, y);\n            }\n          });\n        }\n        break;\n\n      case \"on-the-ground\":\n      case \"relative-to-ground\":\n        this.externalIntersectionHandlers.forAll(e => {\n          if (e.isGround) {\n            const t = e.slicePlane ? I : null;\n            e.intersect(x, t, x.rayBeginPoint, x.rayEndPoint, y);\n          }\n        });\n    }\n\n    if (x.results.min.getIntersectionPoint(b)) {\n      const e = this.view.computeMapPointFromVec3d(b);\n      return e.z = a, e;\n    }\n\n    return null;\n  }\n\n  computeIntersection(i, s, a) {\n    if (e(i)) return;\n    const c = this.view.state.camera,\n          l = n(m.get());\n    c.projectToRenderScreen(i.origin, l);\n    const h = this.prepareFilters(a, w);\n    s.options.selectOpaqueTerrainOnly = !a || !(\"include\" in a || \"exclude\" in a);\n    const u = i.origin,\n          p = o(m.get(), i.origin, i.direction);\n    s.reset(u, p), s.intersect(h.layers, l, c, this.tolerance);\n    const y = this.view.slicePlane,\n          g = t(y) ? f(y) : null;\n    s.intersect(h.sliceableLayers, l, c, this.tolerance, g);\n    const v = a && (a.requiresGroundFeedback || a.enableDraped);\n    this.externalIntersectionHandlers.forAll(e => {\n      if (s.options.isFiltered = !h.filterLayerUid(e.intersectionHandlerId), e.isGround && v || !s.options.isFiltered) {\n        const t = e.slicePlane ? g : null;\n        e.intersect(s, t, u, p, l);\n      }\n    });\n    const R = m.get();\n\n    if (a && a.enableDraped && s.results.ground.getIntersectionPoint(R)) {\n      const e = this.view.basemapTerrain.overlayManager.renderer,\n            t = this.view.renderCoordsHelper.spatialReference,\n            i = m.get();\n      this.view.renderCoordsHelper.fromRenderCoords(R, i, this.view.spatialReference), i[2] = r(this.view.elevationProvider.getElevation(R[0], R[1], R[2], t, \"ground\"), 0), e.intersect(s, i, h.filterRenderGeometry);\n    }\n\n    s.sortResults();\n    const I = s.results.hud;\n\n    if (I.hasIntersectionPoint) {\n      const e = n(m.get()),\n            t = m.get(),\n            r = m.get();\n      this.unprojectHUDResultRay(I.center, e, t, r);\n      const i = d(I.center, t) / d(t, r) * .99;\n      this.validateHUDIntersector.reset(t, r), this.validateHUDIntersector.intersect(h.layers, e, c, this.tolerance), this.validateHUDIntersector.intersect(h.sliceableLayers, e, c, this.tolerance, g), this.externalIntersectionHandlers.forAll(i => {\n        if (!h.filterLayerUid(i.intersectionHandlerId)) return;\n        const n = i.slicePlane ? g : null;\n        i.intersect(this.validateHUDIntersector, n, t, r, e);\n      });\n      const o = this.validateHUDIntersector.results.min;\n      (null == o.dist || i <= o.dist) && (s.results.min.copyFrom(I), s.results.all.splice(0, 0, I));\n    }\n  }\n\n  prepareFilters(e, t) {\n    const r = [],\n          i = [];\n    return this.layerProvider.forEachLayer(e => {\n      e.isPickable && (e.isSliceable ? i : r).push(e);\n    }), t.include = e && e.include, t.exclude = e && e.exclude, t.layers.length = 0, t.sliceableLayers.length = 0, R(r, t.filterLayer, t.layers), R(i, t.filterLayer, t.sliceableLayers), t;\n  }\n\n  unprojectHUDResultRay(e, t, r, i) {\n    const s = this.view.state.camera;\n    s.projectToRenderScreen(e, t);\n    const o = n(m.get());\n    o[0] = t[0], o[1] = t[1], o[2] = 0, s.unprojectFromRenderScreen(o, r), o[2] = 1, s.unprojectFromRenderScreen(o, i);\n  }\n\n}\n\nfunction R(e, t, r) {\n  for (const i of e) t && !t(i) || r.push(i);\n\n  return r;\n}\n\nlet I;\n\nfunction x(e) {\n  return I || (I = new g(e)), I.viewingMode = e, I;\n}\n\nconst w = {\n  include: null,\n  exclude: null,\n  layers: [],\n  sliceableLayers: [],\n  filterLayer: e => w.filterLayerUid(e.apiLayerUid),\n\n  filterLayerUid(t) {\n    const {\n      include: r,\n      exclude: i\n    } = w;\n    return e(t) ? null == r && null == i : (null == r || r.has(t)) && (null == i || !i.has(t));\n  },\n\n  filterRenderGeometry: e => w.filterLayerUid(e.layerUid)\n};\n\nfunction P(e) {\n  return \"object\" == typeof e && \"intersect\" in e;\n}\n\nconst b = h(),\n      M = s();\nexport { v as SceneIntersectionHelper, P as isIntersectionHandler };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/state/helpers/SceneIntersectionHelper.js"],"names":["isNone","e","isSome","t","unwrapOr","r","i","castRenderScreenPointArray3","n","createRenderScreenPointArray","s","b","o","a","c","l","d","h","create","u","sv3d","m","fromRenderAtEye","p","fromScreen","y","Intersector","g","sliceFilterPredicate","f","v","constructor","viewingMode","layerProvider","view","externalIntersectionHandlers","tolerance","DEFAULT_TOLERANCE","tmpRay","validateHUDIntersector","options","hud","intersectScreen","intersectRay","getPickRay","x","intersectScreenFreePointFallback","intersectRayFreePointFallback","intersectRayFreePointLocal","selectionMode","store","computeIntersection","results","min","getIntersectionPoint","getCenterRayWithSubpixelOffset","getRenderCenter","M","intersectIntersectorScreen","intersectToolIntersectorScreen","intersectToolIntersectorRay","basemapTerrain","opaque","hasIntersectionPoint","intersector","setTolerance","addIntersectionHandler","push","sort","type","removeIntersectionHandler","removeUnordered","state","camera","dataExtent","xmax","xmin","ymax","ymin","z","Math","max","origin","get","direction","eye","sqrt","abs","relativeElevation","Number","MIN_VALUE","log","intersectElevationFromScreen","intersectElevation","mode","offset","renderCoordsHelper","unitInMeters","intersectInfiniteManifold","computeMapPointFromVec3d","projectToRenderScreen","prepareFilters","w","R","slicePlane","I","verticalOffset","P","reset","point","filterPredicate","H","metadata","layerUid","uid","graphicUid","isElevationSource","intersect","layers","forAll","rayBeginPoint","rayEndPoint","isGround","selectOpaqueTerrainOnly","sliceableLayers","requiresGroundFeedback","enableDraped","isFiltered","filterLayerUid","intersectionHandlerId","ground","overlayManager","renderer","spatialReference","fromRenderCoords","elevationProvider","getElevation","filterRenderGeometry","sortResults","unprojectHUDResultRay","center","dist","copyFrom","all","splice","forEachLayer","isPickable","isSliceable","include","exclude","length","filterLayer","unprojectFromRenderScreen","apiLayerUid","has","SceneIntersectionHelper","isIntersectionHandler"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isNone as e,isSome as t,unwrapOr as r}from\"../../../../core/maybe.js\";import i from\"../../../../core/PooledArray.js\";import{castRenderScreenPointArray3 as n,createRenderScreenPointArray as s}from\"../../../../core/screenUtils.js\";import{b as o,n as a,a as c,l,i as d}from\"../../../../chunks/vec3.js\";import{c as h}from\"../../../../chunks/vec3f64.js\";import{create as u}from\"../../../../geometry/support/ray.js\";import{sv3d as m}from\"../../../../geometry/support/vectorStacks.js\";import{fromRenderAtEye as p,fromScreen as y}from\"../../support/geometryUtils/ray.js\";import{Intersector as g}from\"../../webgl-engine/lib/Intersector.js\";import{sliceFilterPredicate as f}from\"../../webgl-engine/lib/intersectorUtils.js\";class v{constructor(e,t,r){this.viewingMode=e,this.layerProvider=t,this.view=r,this.externalIntersectionHandlers=new i,this.tolerance=g.DEFAULT_TOLERANCE,this.tmpRay=u(),this.validateHUDIntersector=new g(this.viewingMode),this.validateHUDIntersector.options.hud=!1}intersectScreen(e,t){return this.intersectRay(this.getPickRay(e,this.tmpRay),x(this.viewingMode),t)}intersectScreenFreePointFallback(e,t){return this.intersectRayFreePointFallback(this.getPickRay(e,this.tmpRay),t)}intersectRayFreePointFallback(e,t){return this.intersectRay(e,x(this.viewingMode),t)||this.intersectRayFreePointLocal(e,t)}intersectRay(e,t,r,i){return t.options.selectionMode=!1,t.options.store=0,this.computeIntersection(e,t,i),!!t.results.min&&t.results.min.getIntersectionPoint(r)}getCenterRayWithSubpixelOffset(e,t,r=.5,i=.5){return e.getRenderCenter(M,r,i),M[0]+=.0466,M[1]-=.0123,p(e,M,t)}intersectIntersectorScreen(e,t,r){this.computeIntersection(this.getPickRay(e,this.tmpRay),t,r)}intersectToolIntersectorScreen(e,t,r){const i=this.getPickRay(e,this.tmpRay);this.intersectToolIntersectorRay(i,t,r)}intersectToolIntersectorRay(e,t,r){t.options.selectionMode=!0,this.computeIntersection(e,t,r);const i=t.results.min;!!this.view.basemapTerrain&&this.view.basemapTerrain.opaque||i.hasIntersectionPoint&&\"TerrainRenderer\"!==i.intersector||(t.options.selectionMode=!1,this.computeIntersection(e,t,r))}setTolerance(e=g.DEFAULT_TOLERANCE){this.tolerance=e}addIntersectionHandler(e){this.externalIntersectionHandlers.push(e),this.externalIntersectionHandlers.sort(((e,t)=>\"Terrain\"===e.type?1:\"Terrain\"===t.type?-1:0))}removeIntersectionHandler(e){this.externalIntersectionHandlers.removeUnordered(e),this.externalIntersectionHandlers.sort(((e,t)=>\"Terrain\"===e.type?1:\"Terrain\"===t.type?-1:0))}getPickRay(e,t=u()){const r=this.view.state.camera;return y(r,e,t)}intersectRayFreePointLocal(t,r){if(2!==this.viewingMode||e(t))return!1;const i=this.view.dataExtent,n={x:i.xmax-i.xmin,y:i.ymax-i.ymin,z:8*Math.max(i.xmax-i.xmin,i.ymax-i.ymin)},s=Math.max(n.x,n.y,n.z);if(0===s)return o(r,t.origin,a(m.get(),t.direction)),!0;const d=this.view.state.camera,h=Math.max(0,i.xmin-d.eye[0],d.eye[0]-i.xmax),u=Math.max(0,i.ymin-d.eye[1],d.eye[1]-i.ymax),p=Math.sqrt(h*h+u*u),y=Math.abs(d.relativeElevation)+Number.MIN_VALUE,g=Math.max(0,Math.log(s/y))**2;let f=s/Math.max(1,g);f=Math.max(f,Math.min(p,s));const v=c(m.get(),t.direction,f/l(t.direction));return o(r,t.origin,v),!0}intersectElevationFromScreen(e,t,r=0,i=null){return this.intersectElevation(this.getPickRay(e,this.tmpRay),t,r,i)}intersectElevation(i,s,a=0,c=null){if(e(i))return null;const l=t(s)?s.mode:\"absolute-height\",d=t(s)?r(s.offset,0):0,h=\"on-the-ground\"!==l?d+a:0,u=h/this.view.renderCoordsHelper.unitInMeters;if(\"absolute-height\"===l){if(this.view.renderCoordsHelper.intersectInfiniteManifold(i,h,b)){const e=this.view.computeMapPointFromVec3d(b);return e.z-=d,e}return null}const p=this.view.state.camera,y=n(m.get());p.projectToRenderScreen(i.origin,y);const v=this.prepareFilters(null,w),R=this.view.slicePlane,I=t(R)?f(R):null,x=new g(this.viewingMode);x.options.store=0,x.options.verticalOffset=u;const P=i.origin,M=o(m.get(),P,i.direction);x.reset(P,M),x.point=y,x.camera=p,x.filterPredicate=null;const H=t(c)?\"type\"in c&&\"graphics\"===c.type?e=>e.metadata.layerUid!==c.uid:e=>e.metadata.graphicUid!==c.uid:null;switch(l){case\"relative-to-scene\":{const t=t=>(e(H)||H(t))&&t.metadata&&t.metadata.isElevationSource;x.intersect(v.layers,y,p,this.tolerance,null,t),this.externalIntersectionHandlers.forAll((e=>{if(\"I3S\"===e.type||\"Terrain\"===e.type){const t=e.slicePlane?I:null;e.intersect(x,t,x.rayBeginPoint,x.rayEndPoint,y)}}))}break;case\"on-the-ground\":case\"relative-to-ground\":this.externalIntersectionHandlers.forAll((e=>{if(e.isGround){const t=e.slicePlane?I:null;e.intersect(x,t,x.rayBeginPoint,x.rayEndPoint,y)}}))}if(x.results.min.getIntersectionPoint(b)){const e=this.view.computeMapPointFromVec3d(b);return e.z=a,e}return null}computeIntersection(i,s,a){if(e(i))return;const c=this.view.state.camera,l=n(m.get());c.projectToRenderScreen(i.origin,l);const h=this.prepareFilters(a,w);s.options.selectOpaqueTerrainOnly=!a||!(\"include\"in a||\"exclude\"in a);const u=i.origin,p=o(m.get(),i.origin,i.direction);s.reset(u,p),s.intersect(h.layers,l,c,this.tolerance);const y=this.view.slicePlane,g=t(y)?f(y):null;s.intersect(h.sliceableLayers,l,c,this.tolerance,g);const v=a&&(a.requiresGroundFeedback||a.enableDraped);this.externalIntersectionHandlers.forAll((e=>{if(s.options.isFiltered=!h.filterLayerUid(e.intersectionHandlerId),e.isGround&&v||!s.options.isFiltered){const t=e.slicePlane?g:null;e.intersect(s,t,u,p,l)}}));const R=m.get();if(a&&a.enableDraped&&s.results.ground.getIntersectionPoint(R)){const e=this.view.basemapTerrain.overlayManager.renderer,t=this.view.renderCoordsHelper.spatialReference,i=m.get();this.view.renderCoordsHelper.fromRenderCoords(R,i,this.view.spatialReference),i[2]=r(this.view.elevationProvider.getElevation(R[0],R[1],R[2],t,\"ground\"),0),e.intersect(s,i,h.filterRenderGeometry)}s.sortResults();const I=s.results.hud;if(I.hasIntersectionPoint){const e=n(m.get()),t=m.get(),r=m.get();this.unprojectHUDResultRay(I.center,e,t,r);const i=d(I.center,t)/d(t,r)*.99;this.validateHUDIntersector.reset(t,r),this.validateHUDIntersector.intersect(h.layers,e,c,this.tolerance),this.validateHUDIntersector.intersect(h.sliceableLayers,e,c,this.tolerance,g),this.externalIntersectionHandlers.forAll((i=>{if(!h.filterLayerUid(i.intersectionHandlerId))return;const n=i.slicePlane?g:null;i.intersect(this.validateHUDIntersector,n,t,r,e)}));const o=this.validateHUDIntersector.results.min;(null==o.dist||i<=o.dist)&&(s.results.min.copyFrom(I),s.results.all.splice(0,0,I))}}prepareFilters(e,t){const r=[],i=[];return this.layerProvider.forEachLayer((e=>{e.isPickable&&(e.isSliceable?i:r).push(e)})),t.include=e&&e.include,t.exclude=e&&e.exclude,t.layers.length=0,t.sliceableLayers.length=0,R(r,t.filterLayer,t.layers),R(i,t.filterLayer,t.sliceableLayers),t}unprojectHUDResultRay(e,t,r,i){const s=this.view.state.camera;s.projectToRenderScreen(e,t);const o=n(m.get());o[0]=t[0],o[1]=t[1],o[2]=0,s.unprojectFromRenderScreen(o,r),o[2]=1,s.unprojectFromRenderScreen(o,i)}}function R(e,t,r){for(const i of e)t&&!t(i)||r.push(i);return r}let I;function x(e){return I||(I=new g(e)),I.viewingMode=e,I}const w={include:null,exclude:null,layers:[],sliceableLayers:[],filterLayer:e=>w.filterLayerUid(e.apiLayerUid),filterLayerUid(t){const{include:r,exclude:i}=w;return e(t)?null==r&&null==i:(null==r||r.has(t))&&(null==i||!i.has(t))},filterRenderGeometry:e=>w.filterLayerUid(e.layerUid)};function P(e){return\"object\"==typeof e&&\"intersect\"in e}const b=h(),M=s();export{v as SceneIntersectionHelper,P as isIntersectionHandler};\n"]},"metadata":{},"sourceType":"module"}