{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../Ground.js\";\nimport r from \"../core/Logger.js\";\nimport { ensureType as o } from \"../core/accessorSupport/ensureType.js\";\nconst i = r.getLogger(\"esri.support.groundUtils\"),\n      t = {\n  \"world-elevation\": {\n    id: \"worldElevation\",\n    url: \"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\",\n    layerType: \"ArcGISTiledElevationServiceLayer\"\n  },\n  \"world-topobathymetry\": {\n    id: \"worldTopoBathymetry\",\n    url: \"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer\",\n    layerType: \"ArcGISTiledElevationServiceLayer\"\n  }\n};\n\nfunction a(r) {\n  let a;\n  if (\"string\" == typeof r) {\n    if (r in t) {\n      const o = t[r];\n      a = new e({\n        resourceInfo: {\n          data: {\n            layers: [o]\n          }\n        }\n      });\n    } else i.warn(`Unable to find ground definition for: ${r}. Try \"world-elevation\"`);\n  } else a = o(e, r);\n  return a;\n}\n\nexport { a as ensureType, t as groundElevationLayers };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/support/groundUtils.js"],"names":["e","r","ensureType","o","i","getLogger","t","id","url","layerType","a","resourceInfo","data","layers","warn","groundElevationLayers"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,cAAb;AAA4B,OAAOC,CAAP,MAAa,mBAAb;AAAiC,SAAOC,UAAU,IAAIC,CAArB,QAA2B,uCAA3B;AAAmE,MAAMC,CAAC,GAACH,CAAC,CAACI,SAAF,CAAY,0BAAZ,CAAR;AAAA,MAAgDC,CAAC,GAAC;AAAC,qBAAkB;AAACC,IAAAA,EAAE,EAAC,gBAAJ;AAAqBC,IAAAA,GAAG,EAAC,sFAAzB;AAAgHC,IAAAA,SAAS,EAAC;AAA1H,GAAnB;AAAiL,0BAAuB;AAACF,IAAAA,EAAE,EAAC,qBAAJ;AAA0BC,IAAAA,GAAG,EAAC,wFAA9B;AAAuHC,IAAAA,SAAS,EAAC;AAAjI;AAAxM,CAAlD;;AAAga,SAASC,CAAT,CAAWT,CAAX,EAAa;AAAC,MAAIS,CAAJ;AAAM,MAAG,YAAU,OAAOT,CAApB;AAAsB,QAAGA,CAAC,IAAIK,CAAR,EAAU;AAAC,YAAMH,CAAC,GAACG,CAAC,CAACL,CAAD,CAAT;AAAaS,MAAAA,CAAC,GAAC,IAAIV,CAAJ,CAAM;AAACW,QAAAA,YAAY,EAAC;AAACC,UAAAA,IAAI,EAAC;AAACC,YAAAA,MAAM,EAAC,CAACV,CAAD;AAAR;AAAN;AAAd,OAAN,CAAF;AAA4C,KAApE,MAAyEC,CAAC,CAACU,IAAF,CAAQ,yCAAwCb,CAAE,yBAAlD;AAA/F,SAAgLS,CAAC,GAACP,CAAC,CAACH,CAAD,EAAGC,CAAH,CAAH;AAAS,SAAOS,CAAP;AAAS;;AAAA,SAAOA,CAAC,IAAIR,UAAZ,EAAuBI,CAAC,IAAIS,qBAA5B","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../Ground.js\";import r from\"../core/Logger.js\";import{ensureType as o}from\"../core/accessorSupport/ensureType.js\";const i=r.getLogger(\"esri.support.groundUtils\"),t={\"world-elevation\":{id:\"worldElevation\",url:\"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\",layerType:\"ArcGISTiledElevationServiceLayer\"},\"world-topobathymetry\":{id:\"worldTopoBathymetry\",url:\"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer\",layerType:\"ArcGISTiledElevationServiceLayer\"}};function a(r){let a;if(\"string\"==typeof r)if(r in t){const o=t[r];a=new e({resourceInfo:{data:{layers:[o]}}})}else i.warn(`Unable to find ground definition for: ${r}. Try \"world-elevation\"`);else a=o(e,r);return a}export{a as ensureType,t as groundElevationLayers};\n"]},"metadata":{},"sourceType":"module"}