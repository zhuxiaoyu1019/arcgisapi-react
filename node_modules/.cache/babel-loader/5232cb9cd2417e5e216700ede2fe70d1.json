{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { glsl as i } from \"../../shaderModules/interfaces.js\";\n\nfunction n(n) {\n  const t = n.fragment;\n  t.uniforms.add(\"lightingMainDirection\", \"vec3\"), t.uniforms.add(\"lightingMainIntensity\", \"vec3\"), t.uniforms.add(\"lightingFixedFactor\", \"float\"), t.code.add(i`vec3 evaluateMainLighting(vec3 normal_global, float shadowing) {\nfloat dotVal = clamp(dot(normal_global, lightingMainDirection), 0.0, 1.0);\ndotVal = mix(dotVal, 1.0, lightingFixedFactor);\nreturn lightingMainIntensity * ((1.0 - shadowing) * dotVal);\n}`);\n}\n\nexport { n as EvaluateMainLighting };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateMainLighting.glsl.js"],"names":["glsl","i","n","t","fragment","uniforms","add","code","EvaluateMainLighting"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,mCAArB;;AAAyD,SAASC,CAAT,CAAWA,CAAX,EAAa;AAAC,QAAMC,CAAC,GAACD,CAAC,CAACE,QAAV;AAAmBD,EAAAA,CAAC,CAACE,QAAF,CAAWC,GAAX,CAAe,uBAAf,EAAuC,MAAvC,GAA+CH,CAAC,CAACE,QAAF,CAAWC,GAAX,CAAe,uBAAf,EAAuC,MAAvC,CAA/C,EAA8FH,CAAC,CAACE,QAAF,CAAWC,GAAX,CAAe,qBAAf,EAAqC,OAArC,CAA9F,EAA4IH,CAAC,CAACI,IAAF,CAAOD,GAAP,CAAWL,CAAE;AACnP;AACA;AACA;AACA,EAJsO,CAA5I;AAItF;;AAAA,SAAOC,CAAC,IAAIM,oBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{glsl as i}from\"../../shaderModules/interfaces.js\";function n(n){const t=n.fragment;t.uniforms.add(\"lightingMainDirection\",\"vec3\"),t.uniforms.add(\"lightingMainIntensity\",\"vec3\"),t.uniforms.add(\"lightingFixedFactor\",\"float\"),t.code.add(i`vec3 evaluateMainLighting(vec3 normal_global, float shadowing) {\nfloat dotVal = clamp(dot(normal_global, lightingMainDirection), 0.0, 1.0);\ndotVal = mix(dotVal, 1.0, lightingFixedFactor);\nreturn lightingMainIntensity * ((1.0 - shadowing) * dotVal);\n}`)}export{n as EvaluateMainLighting};\n"]},"metadata":{},"sourceType":"module"}