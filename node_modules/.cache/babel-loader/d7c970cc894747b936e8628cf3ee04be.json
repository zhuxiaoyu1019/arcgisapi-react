{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { isSome as i, unwrap as s } from \"../../../core/maybe.js\";\nimport { urlToObject as a } from \"../../../core/urlUtils.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/Logger.js\";\nimport { subclass as l } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../RasterInfo.js\";\nimport o from \"../RasterStorageInfo.js\";\nimport { readServiceTileInfo as m } from \"../serviceTileInfoProperty.js\";\nimport c from \"../TileInfo.js\";\nimport { TilemapCache as h } from \"../TilemapCache.js\";\nimport u from \"./BaseRaster.js\";\nimport { setValidBoundary as f } from \"../rasterFunctions/pixelUtils.js\";\nimport p from \"../rasterTransforms/GCSShiftTransform.js\";\nimport d from \"../../../rest/support/FeatureSet.js\";\nimport y from \"../../../geometry/SpatialReference.js\";\nimport x from \"../../../geometry/Extent.js\";\nimport g from \"../../../geometry/Point.js\";\nlet v = class extends u {\n  constructor() {\n    super(...arguments), this._levelOffset = 0, this._slices = null, this._tilemapCache = null, this.datasetFormat = \"RasterTileServer\";\n  }\n\n  async open(e) {\n    await this.init();\n    const s = e && e.signal,\n          r = this.sourceJSON ? {\n      data: this.sourceJSON\n    } : await this.request(this.url, {\n      query: {\n        f: \"json\"\n      },\n      signal: s\n    });\n    r.ssl && (this.url = this.url.replace(/^http:/i, \"https:\"));\n    const l = r.data;\n    if (this.sourceJSON = l, !l) throw new t(\"imageserverraster:open\", \"cannot initialize tiled image service, missing service info\");\n    if (!l.tileInfo) throw new t(\"imageserverraster:open\", \"use ImageryLayer to open non-tiled image services\");\n\n    this._fixScaleInServiceInfo();\n\n    const n = [\"jpg\", \"jpeg\", \"png\", \"png8\", \"png24\", \"png32\", \"mixed\"];\n    this.tileType = l.cacheType, null == this.tileType && (n.indexOf(l.tileInfo.format.toLowerCase()) > -1 ? this.tileType = \"Map\" : \"lerc\" === l.tileInfo.format.toLowerCase() ? this.tileType = \"Elevation\" : this.tileType = \"Raster\"), this.datasetName = l.name.slice(l.name.indexOf(\"/\") + 1);\n    const u = await this._fetchRasterInfo({\n      signal: s\n    });\n    if (!i(u)) throw new t(\"image-server-raster:open\", \"cannot initialize image service\");\n    {\n      const e = \"Map\" === this.tileType ? m(l.tileInfo, l) : c.fromJSON(l.tileInfo),\n            {\n        extent: t,\n        pixelSize: i\n      } = u,\n            s = .5 / u.width * i.x;\n      let a, r;\n      const n = e.lodAt(Math.max.apply(null, e.lods.map(e => e.level)));\n      \"Map\" !== this.tileType && 0 !== l.maxScale && (\"Raster\" === this.tileType ? (a = e.lods.filter(e => e.resolution === i.x)[0], a || (a = e.lods[e.lods.length - 1])) : (a = e.lods.filter(e => Math.abs(e.scale - l.maxScale) < s)[0], a || (a = e.lods.filter(e => e.scale > l.maxScale).sort((e, t) => e.scale > t.scale ? 1 : -1)[0])), i.x = i.y = a.resolution, u.width = Math.ceil((t.xmax - t.xmin) / i.x - .1), u.height = Math.ceil((t.ymax - t.ymin) / i.y - .1)), a || (a = n);\n      const h = e.lodAt(Math.min.apply(null, e.lods.map(e => e.level)));\n      \"Map\" === this.tileType ? this._levelOffset = e.lods[0].level : 0 !== l.minScale && \"Elevation\" === this.tileType && (r = e.lods.filter(e => Math.abs(e.scale - l.minScale) < s)[0], this._levelOffset = r.level - h.level), r || (r = h);\n      const f = Math.max(i.x, i.y);\n      (Math.abs(i.x - i.y) > s || !e.lods.some(e => Math.abs(e.resolution - f) < s)) && (i.x = i.y = a.resolution, u.width = Math.ceil((t.xmax - t.xmin) / i.x - .1), u.height = Math.ceil((t.ymax - t.ymin) / i.y - .1));\n      const p = a.level - r.level,\n            [d, y] = e.size,\n            x = [];\n      e.lods.forEach(e => {\n        e.level >= r.level && e.level <= a.level && x.push({\n          x: e.resolution,\n          y: e.resolution\n        });\n      }), x.sort((e, t) => e.x - t.x);\n      const g = this.computeBlockBoundary(t, d, y, e.origin, x, p),\n            v = x.length > 1 ? x.slice(1) : null;\n      u.storageInfo = new o({\n        blockWidth: e.size[0],\n        blockHeight: e.size[1],\n        pyramidBlockWidth: e.size[0],\n        pyramidBlockHeight: e.size[1],\n        pyramidResolutions: v,\n        compression: e.format,\n        origin: e.origin,\n        firstPyramidLevel: 1,\n        maximumPyramidLevel: p,\n        tileInfo: e,\n        blockBoundary: g\n      }), this._fixGCSShift(u), this._set(\"rasterInfo\", u);\n    }\n\n    if (l.capabilities.toLowerCase().indexOf(\"tilemap\") > -1) {\n      const e = {\n        tileInfo: u.storageInfo.tileInfo,\n        parsedUrl: a(this.url),\n        url: this.url,\n        tileServers: [],\n        type: \"tile\"\n      };\n      this._tilemapCache = new h({\n        layer: e\n      });\n    }\n  }\n\n  async fetchRawTile(e, t, i, s = {}) {\n    const {\n      storageInfo: a,\n      extent: r\n    } = this.rasterInfo,\n          l = a.maximumPyramidLevel - e + this._levelOffset,\n          n = `${this.url}/tile/${l}/${t}/${i}`,\n          o = this._slices ? {\n      sliceId: s.sliceId || 0\n    } : null,\n          {\n      data: m\n    } = await this.request(n, {\n      query: o,\n      responseType: \"array-buffer\",\n      signal: s.signal\n    });\n    if (!m) return null;\n    const c = await this.decodePixelBlock(m, {\n      width: a.tileInfo.size[0],\n      height: a.tileInfo.size[1],\n      planes: null,\n      pixelType: null,\n      isPoint: \"Elevation\" === this.tileType\n    }),\n          h = a.blockBoundary[e];\n    if (\"jpg\" !== a.compression || i > h.minCol && i < h.maxCol && t > h.minRow && t < h.maxRow) return c;\n    const {\n      origin: u,\n      blockWidth: p,\n      blockHeight: d\n    } = a,\n          {\n      x: y,\n      y: x\n    } = this.getPyramidPixelSize(e),\n          g = Math.round((r.xmin - u.x) / y) % p,\n          v = Math.round((r.xmax - u.x) / y) % p,\n          S = Math.round((u.y - r.ymax) / x) % d,\n          w = Math.round((u.y - r.ymin) / x) % d,\n          I = i === h.minCol ? g : 0,\n          b = t === h.minRow ? S : 0,\n          j = i === h.maxCol ? v : p,\n          T = t === h.maxRow ? w : d;\n    return f(c, {\n      x: I,\n      y: b\n    }, {\n      width: j - I,\n      height: T - b\n    }), c;\n  }\n\n  getSliceIndex(e) {\n    if (null == e || !e.length || !this._slices) return null;\n    const t = e;\n\n    for (let i = 0; i < this._slices.length; i++) {\n      const e = this._slices[i].multidimensionalDefinition;\n      if (e.length === t.length && !e.some(e => {\n        const i = t.filter(t => e.variableName === t.variableName && t.dimensionName === e.dimensionName)[0];\n        if (!i) return !0;\n        return (Array.isArray(e.values[0]) ? e.values[0][0] : e.values[0]) !== (Array.isArray(i.values[0]) ? i.values[0][0] : i.values[0]);\n      })) return i;\n    }\n\n    return null;\n  }\n\n  async fetchVariableStatisticsHistograms(e, t) {\n    const i = this.request(this.url + \"/statistics\", {\n      query: {\n        variable: e,\n        f: \"json\"\n      },\n      signal: t\n    }).then(e => {\n      var t;\n      return null == (t = e.data) ? void 0 : t.statistics;\n    }),\n          s = this.request(this.url + \"/histograms\", {\n      query: {\n        variable: e,\n        f: \"json\"\n      },\n      signal: t\n    }).then(e => {\n      var t;\n      return null == (t = e.data) ? void 0 : t.histograms;\n    }),\n          a = await Promise.all([i, s]);\n    return a[0] && a[0].forEach(e => {\n      e.avg = e.mean, e.stddev = e.standardDeviation;\n    }), {\n      statistics: a[0] || null,\n      histograms: a[1] || null\n    };\n  }\n\n  async computeBestPyramidLevelForLocation(e, t = {}) {\n    if (!this._tilemapCache) return 0;\n    let i = this.identifyPixelLocation(e, 0, s(t.datumTransformation));\n    if (null === i) return null;\n    let a = 0;\n    const {\n      maximumPyramidLevel: r\n    } = this.rasterInfo.storageInfo;\n    let l = r - a + this._levelOffset;\n    const n = i.srcLocation;\n\n    for (; l >= 0;) {\n      try {\n        if (\"available\" === (await this._tilemapCache.fetchAvailability(l, i.row, i.col, t))) break;\n      } catch {}\n\n      if (l--, a++, i = this.identifyPixelLocation(n, a, s(t.datumTransformation)), null === i) return null;\n    }\n\n    return -1 === l || null == i ? null : a;\n  }\n\n  async _fetchRasterInfo(e) {\n    const t = this.sourceJSON,\n          i = Math.ceil((t.extent.xmax - t.extent.xmin) / t.pixelSizeX - .1),\n          s = Math.ceil((t.extent.ymax - t.extent.ymin) / t.pixelSizeY - .1),\n          a = y.fromJSON(t.spatialReference || t.extent.spatialReference);\n    if (\"Map\" === this.tileType) return new n({\n      width: i,\n      height: s,\n      bandCount: 3,\n      extent: x.fromJSON(t.extent),\n      spatialReference: a,\n      pixelSize: new g({\n        x: t.pixelSizeX,\n        y: t.pixelSizeY,\n        spatialReference: a\n      }),\n      pixelType: \"u8\",\n      statistics: null,\n      keyProperties: {\n        DataType: \"processed\"\n      }\n    });\n\n    const {\n      slice: r,\n      signal: l\n    } = e,\n          o = !!t.hasRasterAttributeTable && this.request(this.url + \"/rasterAttributeTable\", {\n      query: {\n        slice: r,\n        f: \"json\"\n      },\n      signal: l\n    }).then(e => d.fromJSON(e.data)).catch(() => null),\n          m = !!t.hasColormap && this.request(this.url + \"/colormap\", {\n      query: {\n        slice: r,\n        f: \"json\"\n      },\n      signal: l\n    }).then(e => {\n      var t;\n      return null == (t = e.data) ? void 0 : t.colormap;\n    }),\n          c = !!t.hasHistograms && this.request(this.url + \"/histograms\", {\n      query: {\n        slice: r,\n        f: \"json\"\n      },\n      signal: l\n    }).then(e => {\n      var t;\n      return null == (t = e.data) ? void 0 : t.histograms;\n    }),\n          h = this.request(this.url + \"/keyProperties\", {\n      query: {\n        f: \"json\"\n      },\n      signal: l\n    }).then(e => e.data).catch(() => {}),\n          u = !!t.hasMultidimensions && this._fetchMultidimensionalInfo(),\n          f = !!t.hasMultidimensions && this.request(this.url + \"/slices\", {\n      query: {\n        f: \"json\"\n      },\n      signal: l\n    }).then(e => e.data && e.data.slices).catch(() => {});\n\n    return Promise.all([o, m, c, h, u, f]).then(e => {\n      let r = null;\n\n      if (t.minValues && t.minValues.length === t.bandCount) {\n        r = [];\n\n        for (let e = 0; e < t.minValues.length; e++) r.push({\n          min: t.minValues[e],\n          max: t.maxValues[e],\n          avg: t.meanValues[e],\n          stddev: t.stdvValues[e]\n        });\n      }\n\n      return this._slices = e[5] || null, new n({\n        width: i,\n        height: s,\n        bandCount: t.bandCount,\n        extent: x.fromJSON(t.extent),\n        spatialReference: a,\n        pixelSize: new g({\n          x: t.pixelSizeX,\n          y: t.pixelSizeY,\n          spatialReference: a\n        }),\n        pixelType: t.pixelType.toLowerCase(),\n        statistics: r,\n        attributeTable: e[0] || null,\n        colormap: e[1] || null,\n        histograms: e[2] || null,\n        keyProperties: e[3] || {},\n        multidimensionalInfo: e[4] || null\n      });\n    });\n  }\n\n  async _fetchMultidimensionalInfo(e) {\n    var t;\n    const i = await this.request(this.url + \"/multidimensionalInfo\", {\n      query: {\n        f: \"json\"\n      },\n      signal: e\n    }).then(e => {\n      var t;\n      return null == (t = e.data) ? void 0 : t.multidimensionalInfo;\n    });\n    return null != (t = i.variables) && t.length && i.variables.forEach(e => {\n      var t;\n      null != (t = e.statistics) && t.length && e.statistics.forEach(e => {\n        e.avg = e.mean, e.stddev = e.standardDeviation;\n      });\n    }), i;\n  }\n\n  _fixScaleInServiceInfo() {\n    const {\n      sourceJSON: e\n    } = this;\n    e.minScale && e.minScale < 0 && (e.minScale = 0), e.maxScale && e.maxScale < 0 && (e.maxScale = 0);\n  }\n\n  _fixGCSShift(e) {\n    const {\n      extent: t,\n      spatialReference: i\n    } = e;\n    0 === t.xmin && 360 === t.xmax && i.wkid && i.isGeographic && (e.nativeExtent = e.extent, e.transform = new p(), e.extent = e.transform.forwardTransform(t));\n  }\n\n};\ne([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], v.prototype, \"datasetFormat\", void 0), e([r()], v.prototype, \"tileType\", void 0), v = e([l(\"esri.layers.support.rasterDatasets.ImageServerRaster\")], v);\nvar S = v;\nexport default S;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js"],"names":["_","e","t","isSome","i","unwrap","s","urlToObject","a","property","r","subclass","l","n","o","readServiceTileInfo","m","c","TilemapCache","h","u","setValidBoundary","f","p","d","y","x","g","v","constructor","arguments","_levelOffset","_slices","_tilemapCache","datasetFormat","open","init","signal","sourceJSON","data","request","url","query","ssl","replace","tileInfo","_fixScaleInServiceInfo","tileType","cacheType","indexOf","format","toLowerCase","datasetName","name","slice","_fetchRasterInfo","fromJSON","extent","pixelSize","width","lodAt","Math","max","apply","lods","map","level","maxScale","filter","resolution","length","abs","scale","sort","ceil","xmax","xmin","height","ymax","ymin","min","minScale","some","size","forEach","push","computeBlockBoundary","origin","storageInfo","blockWidth","blockHeight","pyramidBlockWidth","pyramidBlockHeight","pyramidResolutions","compression","firstPyramidLevel","maximumPyramidLevel","blockBoundary","_fixGCSShift","_set","capabilities","parsedUrl","tileServers","type","layer","fetchRawTile","rasterInfo","sliceId","responseType","decodePixelBlock","planes","pixelType","isPoint","minCol","maxCol","minRow","maxRow","getPyramidPixelSize","round","S","w","I","b","j","T","getSliceIndex","multidimensionalDefinition","variableName","dimensionName","Array","isArray","values","fetchVariableStatisticsHistograms","variable","then","statistics","histograms","Promise","all","avg","mean","stddev","standardDeviation","computeBestPyramidLevelForLocation","identifyPixelLocation","datumTransformation","srcLocation","fetchAvailability","row","col","pixelSizeX","pixelSizeY","spatialReference","bandCount","keyProperties","DataType","hasRasterAttributeTable","catch","hasColormap","colormap","hasHistograms","hasMultidimensions","_fetchMultidimensionalInfo","slices","minValues","maxValues","meanValues","stdvValues","attributeTable","multidimensionalInfo","variables","wkid","isGeographic","nativeExtent","transform","forwardTransform","String","json","write","prototype"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{isSome as i,unwrap as s}from\"../../../core/maybe.js\";import{urlToObject as a}from\"../../../core/urlUtils.js\";import{property as r}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/Logger.js\";import{subclass as l}from\"../../../core/accessorSupport/decorators/subclass.js\";import n from\"../RasterInfo.js\";import o from\"../RasterStorageInfo.js\";import{readServiceTileInfo as m}from\"../serviceTileInfoProperty.js\";import c from\"../TileInfo.js\";import{TilemapCache as h}from\"../TilemapCache.js\";import u from\"./BaseRaster.js\";import{setValidBoundary as f}from\"../rasterFunctions/pixelUtils.js\";import p from\"../rasterTransforms/GCSShiftTransform.js\";import d from\"../../../rest/support/FeatureSet.js\";import y from\"../../../geometry/SpatialReference.js\";import x from\"../../../geometry/Extent.js\";import g from\"../../../geometry/Point.js\";let v=class extends u{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat=\"RasterTileServer\"}async open(e){await this.init();const s=e&&e.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:\"json\"},signal:s});r.ssl&&(this.url=this.url.replace(/^http:/i,\"https:\"));const l=r.data;if(this.sourceJSON=l,!l)throw new t(\"imageserverraster:open\",\"cannot initialize tiled image service, missing service info\");if(!l.tileInfo)throw new t(\"imageserverraster:open\",\"use ImageryLayer to open non-tiled image services\");this._fixScaleInServiceInfo();const n=[\"jpg\",\"jpeg\",\"png\",\"png8\",\"png24\",\"png32\",\"mixed\"];this.tileType=l.cacheType,null==this.tileType&&(n.indexOf(l.tileInfo.format.toLowerCase())>-1?this.tileType=\"Map\":\"lerc\"===l.tileInfo.format.toLowerCase()?this.tileType=\"Elevation\":this.tileType=\"Raster\"),this.datasetName=l.name.slice(l.name.indexOf(\"/\")+1);const u=await this._fetchRasterInfo({signal:s});if(!i(u))throw new t(\"image-server-raster:open\",\"cannot initialize image service\");{const e=\"Map\"===this.tileType?m(l.tileInfo,l):c.fromJSON(l.tileInfo),{extent:t,pixelSize:i}=u,s=.5/u.width*i.x;let a,r;const n=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));\"Map\"!==this.tileType&&0!==l.maxScale&&(\"Raster\"===this.tileType?(a=e.lods.filter((e=>e.resolution===i.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-l.maxScale)<s))[0],a||(a=e.lods.filter((e=>e.scale>l.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,u.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),u.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=n);const h=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));\"Map\"===this.tileType?this._levelOffset=e.lods[0].level:0!==l.minScale&&\"Elevation\"===this.tileType&&(r=e.lods.filter((e=>Math.abs(e.scale-l.minScale)<s))[0],this._levelOffset=r.level-h.level),r||(r=h);const f=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-f)<s)))&&(i.x=i.y=a.resolution,u.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),u.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const p=a.level-r.level,[d,y]=e.size,x=[];e.lods.forEach((e=>{e.level>=r.level&&e.level<=a.level&&x.push({x:e.resolution,y:e.resolution})})),x.sort(((e,t)=>e.x-t.x));const g=this.computeBlockBoundary(t,d,y,e.origin,x,p),v=x.length>1?x.slice(1):null;u.storageInfo=new o({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:v,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:e,blockBoundary:g}),this._fixGCSShift(u),this._set(\"rasterInfo\",u)}if(l.capabilities.toLowerCase().indexOf(\"tilemap\")>-1){const e={tileInfo:u.storageInfo.tileInfo,parsedUrl:a(this.url),url:this.url,tileServers:[],type:\"tile\"};this._tilemapCache=new h({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:a,extent:r}=this.rasterInfo,l=a.maximumPyramidLevel-e+this._levelOffset,n=`${this.url}/tile/${l}/${t}/${i}`,o=this._slices?{sliceId:s.sliceId||0}:null,{data:m}=await this.request(n,{query:o,responseType:\"array-buffer\",signal:s.signal});if(!m)return null;const c=await this.decodePixelBlock(m,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:\"Elevation\"===this.tileType}),h=a.blockBoundary[e];if(\"jpg\"!==a.compression||i>h.minCol&&i<h.maxCol&&t>h.minRow&&t<h.maxRow)return c;const{origin:u,blockWidth:p,blockHeight:d}=a,{x:y,y:x}=this.getPyramidPixelSize(e),g=Math.round((r.xmin-u.x)/y)%p,v=Math.round((r.xmax-u.x)/y)%p,S=Math.round((u.y-r.ymax)/x)%d,w=Math.round((u.y-r.ymin)/x)%d,I=i===h.minCol?g:0,b=t===h.minRow?S:0,j=i===h.maxCol?v:p,T=t===h.maxRow?w:d;return f(c,{x:I,y:b},{width:j-I,height:T-b}),c}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];if(!i)return!0;return(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+\"/statistics\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),s=this.request(this.url+\"/histograms\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=await Promise.all([i,s]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,s(t.datumTransformation));if(null===i)return null;let a=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let l=r-a+this._levelOffset;const n=i.srcLocation;for(;l>=0;){try{if(\"available\"===await this._tilemapCache.fetchAvailability(l,i.row,i.col,t))break}catch{}if(l--,a++,i=this.identifyPixelLocation(n,a,s(t.datumTransformation)),null===i)return null}return-1===l||null==i?null:a}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=y.fromJSON(t.spatialReference||t.extent.spatialReference);if(\"Map\"===this.tileType)return new n({width:i,height:s,bandCount:3,extent:x.fromJSON(t.extent),spatialReference:a,pixelSize:new g({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:\"u8\",statistics:null,keyProperties:{DataType:\"processed\"}});const{slice:r,signal:l}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+\"/rasterAttributeTable\",{query:{slice:r,f:\"json\"},signal:l}).then((e=>d.fromJSON(e.data))).catch((()=>null)),m=!!t.hasColormap&&this.request(this.url+\"/colormap\",{query:{slice:r,f:\"json\"},signal:l}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),c=!!t.hasHistograms&&this.request(this.url+\"/histograms\",{query:{slice:r,f:\"json\"},signal:l}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),h=this.request(this.url+\"/keyProperties\",{query:{f:\"json\"},signal:l}).then((e=>e.data)).catch((()=>{})),u=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+\"/slices\",{query:{f:\"json\"},signal:l}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([o,m,c,h,u,f]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new n({width:i,height:s,bandCount:t.bandCount,extent:x.fromJSON(t.extent),spatialReference:a,pixelSize:new g({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+\"/multidimensionalInfo\",{query:{f:\"json\"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new p,e.extent=e.transform.forwardTransform(t))}};e([r({type:String,json:{write:!0}})],v.prototype,\"datasetFormat\",void 0),e([r()],v.prototype,\"tileType\",void 0),v=e([l(\"esri.layers.support.rasterDatasets.ImageServerRaster\")],v);var S=v;export default S;\n"]},"metadata":{},"sourceType":"module"}