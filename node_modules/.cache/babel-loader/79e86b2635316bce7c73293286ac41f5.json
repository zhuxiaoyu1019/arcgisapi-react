{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../chunks/tslib.es6.js\";\nimport { JSONMap as e } from \"../core/jsonMap.js\";\nimport { property as r } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/has.js\";\nimport \"../core/accessorSupport/ensureType.js\";\nimport \"../core/Logger.js\";\nimport { subclass as s } from \"../core/accessorSupport/decorators/subclass.js\";\nimport { execute as o, getGpServerUrl as a, printCacheMap as p, getGpPrintParams as c } from \"../rest/print.js\";\nimport i from \"./Task.js\";\nconst n = new e({\n  esriExecutionTypeSynchronous: \"sync\",\n  esriExecutionTypeAsynchronous: \"async\"\n});\nlet u = class extends i {\n  constructor(...t) {\n    super(...t), this._gpMetadata = null, this.updateDelay = 1e3;\n  }\n\n  get mode() {\n    return this._gpMetadata && this._gpMetadata.executionType ? n.fromJSON(this._gpMetadata.executionType) : \"sync\";\n  }\n\n  execute(t, e) {\n    return t && (t.updateDelay = this.updateDelay), o(this.url, t, { ...this.requestOptions,\n      ...e\n    });\n  }\n\n  async _getGpPrintParams(t) {\n    const e = a(this.url),\n          r = p.get(e);\n    return c(t, r);\n  }\n\n};\nt([r()], u.prototype, \"_gpMetadata\", void 0), t([r({\n  readOnly: !0\n})], u.prototype, \"mode\", null), t([r()], u.prototype, \"updateDelay\", void 0), u = t([s(\"esri.tasks.PrintTask\")], u);\nvar y = u;\nexport default y;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/tasks/PrintTask.js"],"names":["_","t","JSONMap","e","property","r","subclass","s","execute","o","getGpServerUrl","a","printCacheMap","p","getGpPrintParams","c","i","n","esriExecutionTypeSynchronous","esriExecutionTypeAsynchronous","u","constructor","_gpMetadata","updateDelay","mode","executionType","fromJSON","url","requestOptions","_getGpPrintParams","get","prototype","readOnly","y"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,wBAAlB;AAA2C,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,oBAAxB;AAA6C,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,gDAAzB;AAA0E,OAAM,gBAAN;AAAuB,OAAM,uCAAN;AAA8C,OAAM,mBAAN;AAA0B,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,gDAAzB;AAA0E,SAAOC,OAAO,IAAIC,CAAlB,EAAoBC,cAAc,IAAIC,CAAtC,EAAwCC,aAAa,IAAIC,CAAzD,EAA2DC,gBAAgB,IAAIC,CAA/E,QAAqF,kBAArF;AAAwG,OAAOC,CAAP,MAAa,WAAb;AAAyB,MAAMC,CAAC,GAAC,IAAId,CAAJ,CAAM;AAACe,EAAAA,4BAA4B,EAAC,MAA9B;AAAqCC,EAAAA,6BAA6B,EAAC;AAAnE,CAAN,CAAR;AAA2F,IAAIC,CAAC,GAAC,cAAcJ,CAAd,CAAe;AAACK,EAAAA,WAAW,CAAC,GAAGpB,CAAJ,EAAM;AAAC,UAAM,GAAGA,CAAT,GAAY,KAAKqB,WAAL,GAAiB,IAA7B,EAAkC,KAAKC,WAAL,GAAiB,GAAnD;AAAuD;;AAAQ,MAAJC,IAAI,GAAE;AAAC,WAAO,KAAKF,WAAL,IAAkB,KAAKA,WAAL,CAAiBG,aAAnC,GAAiDR,CAAC,CAACS,QAAF,CAAW,KAAKJ,WAAL,CAAiBG,aAA5B,CAAjD,GAA4F,MAAnG;AAA0G;;AAAAjB,EAAAA,OAAO,CAACP,CAAD,EAAGE,CAAH,EAAK;AAAC,WAAOF,CAAC,KAAGA,CAAC,CAACsB,WAAF,GAAc,KAAKA,WAAtB,CAAD,EAAoCd,CAAC,CAAC,KAAKkB,GAAN,EAAU1B,CAAV,EAAY,EAAC,GAAG,KAAK2B,cAAT;AAAwB,SAAGzB;AAA3B,KAAZ,CAA5C;AAAuF;;AAAuB,QAAjB0B,iBAAiB,CAAC5B,CAAD,EAAG;AAAC,UAAME,CAAC,GAACQ,CAAC,CAAC,KAAKgB,GAAN,CAAT;AAAA,UAAoBtB,CAAC,GAACQ,CAAC,CAACiB,GAAF,CAAM3B,CAAN,CAAtB;AAA+B,WAAOY,CAAC,CAACd,CAAD,EAAGI,CAAH,CAAR;AAAc;;AAA3W,CAArB;AAAkYJ,CAAC,CAAC,CAACI,CAAC,EAAF,CAAD,EAAOe,CAAC,CAACW,SAAT,EAAmB,aAAnB,EAAiC,KAAK,CAAtC,CAAD,EAA0C9B,CAAC,CAAC,CAACI,CAAC,CAAC;AAAC2B,EAAAA,QAAQ,EAAC,CAAC;AAAX,CAAD,CAAF,CAAD,EAAoBZ,CAAC,CAACW,SAAtB,EAAgC,MAAhC,EAAuC,IAAvC,CAA3C,EAAwF9B,CAAC,CAAC,CAACI,CAAC,EAAF,CAAD,EAAOe,CAAC,CAACW,SAAT,EAAmB,aAAnB,EAAiC,KAAK,CAAtC,CAAzF,EAAkIX,CAAC,GAACnB,CAAC,CAAC,CAACM,CAAC,CAAC,sBAAD,CAAF,CAAD,EAA6Ba,CAA7B,CAArI;AAAqK,IAAIa,CAAC,GAACb,CAAN;AAAQ,eAAea,CAAf","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../chunks/tslib.es6.js\";import{JSONMap as e}from\"../core/jsonMap.js\";import{property as r}from\"../core/accessorSupport/decorators/property.js\";import\"../core/has.js\";import\"../core/accessorSupport/ensureType.js\";import\"../core/Logger.js\";import{subclass as s}from\"../core/accessorSupport/decorators/subclass.js\";import{execute as o,getGpServerUrl as a,printCacheMap as p,getGpPrintParams as c}from\"../rest/print.js\";import i from\"./Task.js\";const n=new e({esriExecutionTypeSynchronous:\"sync\",esriExecutionTypeAsynchronous:\"async\"});let u=class extends i{constructor(...t){super(...t),this._gpMetadata=null,this.updateDelay=1e3}get mode(){return this._gpMetadata&&this._gpMetadata.executionType?n.fromJSON(this._gpMetadata.executionType):\"sync\"}execute(t,e){return t&&(t.updateDelay=this.updateDelay),o(this.url,t,{...this.requestOptions,...e})}async _getGpPrintParams(t){const e=a(this.url),r=p.get(e);return c(t,r)}};t([r()],u.prototype,\"_gpMetadata\",void 0),t([r({readOnly:!0})],u.prototype,\"mode\",null),t([r()],u.prototype,\"updateDelay\",void 0),u=t([s(\"esri.tasks.PrintTask\")],u);var y=u;export default y;\n"]},"metadata":{},"sourceType":"module"}