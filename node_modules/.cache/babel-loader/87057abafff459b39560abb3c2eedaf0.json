{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { bindProjectionMatrix as r, bindView as e } from \"../core/shaderLibrary/util/View.glsl.js\";\nimport { ReloadableShaderModule as i } from \"../core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as o } from \"../core/shaderTechnique/ShaderTechnique.js\";\nimport { Default3D as t } from \"../lib/DefaultVertexAttributeLocations.js\";\nimport { Program as a } from \"../lib/Program.js\";\nimport { S as s } from \"../../../../chunks/SlicePlaneMaterial.glsl.js\";\nimport { makePipelineState as l, separateBlendingParams as n, defaultColorWriteParams as m } from \"../../../webgl/renderState.js\";\n\nclass d extends o {\n  initializeProgram(r) {\n    const e = d.shader.get().build();\n    return new a(r.rctx, e, t);\n  }\n\n  bindPass(e, i) {\n    r(this.program, i.camera.projectionMatrix), this.program.setUniform4fv(\"backgroundColor\", e.backgroundColor), this.program.setUniform4fv(\"gridColor\", e.gridColor), this.program.setUniform1f(\"gridWidth\", e.gridWidth);\n  }\n\n  bindDraw(r) {\n    e(this.program, r), this.program.rebindTextures();\n  }\n\n  initializePipeline() {\n    return l({\n      blending: n(1, 1, 771, 771),\n      depthTest: {\n        func: 513\n      },\n      colorWrite: m\n    });\n  }\n\n}\n\nd.shader = new i(s, () => import(\"./SlicePlaneMaterial.glsl.js\"));\nexport { d as SlicePlaneMaterialTechnique };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/webgl-engine/shaders/SlicePlaneMaterialTechnique.js"],"names":["bindProjectionMatrix","r","bindView","e","ReloadableShaderModule","i","ShaderTechnique","o","Default3D","t","Program","a","S","s","makePipelineState","l","separateBlendingParams","n","defaultColorWriteParams","m","d","initializeProgram","shader","get","build","rctx","bindPass","program","camera","projectionMatrix","setUniform4fv","backgroundColor","gridColor","setUniform1f","gridWidth","bindDraw","rebindTextures","initializePipeline","blending","depthTest","func","colorWrite","SlicePlaneMaterialTechnique"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,oBAAoB,IAAIC,CAA/B,EAAiCC,QAAQ,IAAIC,CAA7C,QAAmD,yCAAnD;AAA6F,SAAOC,sBAAsB,IAAIC,CAAjC,QAAuC,mDAAvC;AAA2F,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,4CAAhC;AAA6E,SAAOC,SAAS,IAAIC,CAApB,QAA0B,2CAA1B;AAAsE,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,mBAAxB;AAA4C,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,+CAAlB;AAAkE,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,sBAAsB,IAAIC,CAAxD,EAA0DC,uBAAuB,IAAIC,CAArF,QAA2F,+BAA3F;;AAA2H,MAAMC,CAAN,SAAgBb,CAAhB,CAAiB;AAACc,EAAAA,iBAAiB,CAACpB,CAAD,EAAG;AAAC,UAAME,CAAC,GAACiB,CAAC,CAACE,MAAF,CAASC,GAAT,GAAeC,KAAf,EAAR;AAA+B,WAAO,IAAIb,CAAJ,CAAMV,CAAC,CAACwB,IAAR,EAAatB,CAAb,EAAeM,CAAf,CAAP;AAAyB;;AAAAiB,EAAAA,QAAQ,CAACvB,CAAD,EAAGE,CAAH,EAAK;AAACJ,IAAAA,CAAC,CAAC,KAAK0B,OAAN,EAActB,CAAC,CAACuB,MAAF,CAASC,gBAAvB,CAAD,EAA0C,KAAKF,OAAL,CAAaG,aAAb,CAA2B,iBAA3B,EAA6C3B,CAAC,CAAC4B,eAA/C,CAA1C,EAA0G,KAAKJ,OAAL,CAAaG,aAAb,CAA2B,WAA3B,EAAuC3B,CAAC,CAAC6B,SAAzC,CAA1G,EAA8J,KAAKL,OAAL,CAAaM,YAAb,CAA0B,WAA1B,EAAsC9B,CAAC,CAAC+B,SAAxC,CAA9J;AAAiN;;AAAAC,EAAAA,QAAQ,CAAClC,CAAD,EAAG;AAACE,IAAAA,CAAC,CAAC,KAAKwB,OAAN,EAAc1B,CAAd,CAAD,EAAkB,KAAK0B,OAAL,CAAaS,cAAb,EAAlB;AAAgD;;AAAAC,EAAAA,kBAAkB,GAAE;AAAC,WAAOtB,CAAC,CAAC;AAACuB,MAAAA,QAAQ,EAACrB,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,GAAL,EAAS,GAAT,CAAX;AAAyBsB,MAAAA,SAAS,EAAC;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAnC;AAA8CC,MAAAA,UAAU,EAACtB;AAAzD,KAAD,CAAR;AAAsE;;AAApc;;AAAqcC,CAAC,CAACE,MAAF,GAAS,IAAIjB,CAAJ,CAAMQ,CAAN,EAAS,MAAI,OAAO,8BAAP,CAAb,CAAT;AAA+D,SAAOO,CAAC,IAAIsB,2BAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{bindProjectionMatrix as r,bindView as e}from\"../core/shaderLibrary/util/View.glsl.js\";import{ReloadableShaderModule as i}from\"../core/shaderTechnique/ReloadableShaderModule.js\";import{ShaderTechnique as o}from\"../core/shaderTechnique/ShaderTechnique.js\";import{Default3D as t}from\"../lib/DefaultVertexAttributeLocations.js\";import{Program as a}from\"../lib/Program.js\";import{S as s}from\"../../../../chunks/SlicePlaneMaterial.glsl.js\";import{makePipelineState as l,separateBlendingParams as n,defaultColorWriteParams as m}from\"../../../webgl/renderState.js\";class d extends o{initializeProgram(r){const e=d.shader.get().build();return new a(r.rctx,e,t)}bindPass(e,i){r(this.program,i.camera.projectionMatrix),this.program.setUniform4fv(\"backgroundColor\",e.backgroundColor),this.program.setUniform4fv(\"gridColor\",e.gridColor),this.program.setUniform1f(\"gridWidth\",e.gridWidth)}bindDraw(r){e(this.program,r),this.program.rebindTextures()}initializePipeline(){return l({blending:n(1,1,771,771),depthTest:{func:513},colorWrite:m})}}d.shader=new i(s,(()=>import(\"./SlicePlaneMaterial.glsl.js\")));export{d as SlicePlaneMaterialTechnique};\n"]},"metadata":{},"sourceType":"module"}