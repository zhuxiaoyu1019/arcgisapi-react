{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { lerp as t } from \"../../../core/mathUtils.js\";\nimport { wrap as e } from \"../../../geometry/support/aaBoundingBox.js\";\nimport { intersectsAABB as i } from \"../../../geometry/support/frustum.js\";\nimport { createPlanarGlobePatch as s } from \"./PatchGeometryFactory.js\";\nimport n from \"./Tile.js\";\n\nclass r extends n {\n  constructor(t, e, i) {\n    super(r.NumSubdivisionsAtLevel), void 0 !== t && this.init(t, e, i);\n  }\n\n  init(e, i, s) {\n    super.init(e, i, s), this._edgeLen = this.extent[2] - this.extent[0], this._edgeLen2 = this._edgeLen * this._edgeLen, this.centerAtSeaLevel[0] = t(this.extent[0], this.extent[2], .5), this.centerAtSeaLevel[1] = t(this.extent[1], this.extent[3], .5), this.centerAtSeaLevel[2] = 0, this.updateRadiusAndCenter();\n  }\n\n  updateRadiusAndCenter() {\n    this._updateCenter();\n\n    const t = (this.extent[2] - this.extent[0]) * Math.SQRT1_2,\n          e = .5 * (this.elevationBounds[0] - this.elevationBounds[1]);\n    this._center[1][3] = Math.sqrt(t * t + e * e);\n  }\n\n  _isVisible(t) {\n    return this.intersectsClippingArea && i(t, e(this.extent[0], this.extent[1], this.elevationBounds[0], this.extent[2], this.extent[3], this.elevationBounds[1]));\n  }\n\n  createGeometry(t, e) {\n    s(t, this.extent, e, this.renderData), this.setMemoryDirty();\n  }\n\n}\n\nr.NumSubdivisionsAtLevel = [2, 2, 2, 2, 2, 2, 2, 2];\nexport { r as PlanarPatch };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/terrain/PlanarPatch.js"],"names":["lerp","t","wrap","e","intersectsAABB","i","createPlanarGlobePatch","s","n","r","constructor","NumSubdivisionsAtLevel","init","_edgeLen","extent","_edgeLen2","centerAtSeaLevel","updateRadiusAndCenter","_updateCenter","Math","SQRT1_2","elevationBounds","_center","sqrt","_isVisible","intersectsClippingArea","createGeometry","renderData","setMemoryDirty","PlanarPatch"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,4BAArB;AAAkD,SAAOC,IAAI,IAAIC,CAAf,QAAqB,4CAArB;AAAkE,SAAOC,cAAc,IAAIC,CAAzB,QAA+B,sCAA/B;AAAsE,SAAOC,sBAAsB,IAAIC,CAAjC,QAAuC,2BAAvC;AAAmE,OAAOC,CAAP,MAAa,WAAb;;AAAyB,MAAMC,CAAN,SAAgBD,CAAhB,CAAiB;AAACE,EAAAA,WAAW,CAACT,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAO;AAAC,UAAMI,CAAC,CAACE,sBAAR,GAAgC,KAAK,CAAL,KAASV,CAAT,IAAY,KAAKW,IAAL,CAAUX,CAAV,EAAYE,CAAZ,EAAcE,CAAd,CAA5C;AAA6D;;AAAAO,EAAAA,IAAI,CAACT,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAO;AAAC,UAAMK,IAAN,CAAWT,CAAX,EAAaE,CAAb,EAAeE,CAAf,GAAkB,KAAKM,QAAL,GAAc,KAAKC,MAAL,CAAY,CAAZ,IAAe,KAAKA,MAAL,CAAY,CAAZ,CAA/C,EAA8D,KAAKC,SAAL,GAAe,KAAKF,QAAL,GAAc,KAAKA,QAAhG,EAAyG,KAAKG,gBAAL,CAAsB,CAAtB,IAAyBf,CAAC,CAAC,KAAKa,MAAL,CAAY,CAAZ,CAAD,EAAgB,KAAKA,MAAL,CAAY,CAAZ,CAAhB,EAA+B,EAA/B,CAAnI,EAAsK,KAAKE,gBAAL,CAAsB,CAAtB,IAAyBf,CAAC,CAAC,KAAKa,MAAL,CAAY,CAAZ,CAAD,EAAgB,KAAKA,MAAL,CAAY,CAAZ,CAAhB,EAA+B,EAA/B,CAAhM,EAAmO,KAAKE,gBAAL,CAAsB,CAAtB,IAAyB,CAA5P,EAA8P,KAAKC,qBAAL,EAA9P;AAA2R;;AAAAA,EAAAA,qBAAqB,GAAE;AAAC,SAAKC,aAAL;;AAAqB,UAAMjB,CAAC,GAAC,CAAC,KAAKa,MAAL,CAAY,CAAZ,IAAe,KAAKA,MAAL,CAAY,CAAZ,CAAhB,IAAgCK,IAAI,CAACC,OAA7C;AAAA,UAAqDjB,CAAC,GAAC,MAAI,KAAKkB,eAAL,CAAqB,CAArB,IAAwB,KAAKA,eAAL,CAAqB,CAArB,CAA5B,CAAvD;AAA4G,SAAKC,OAAL,CAAa,CAAb,EAAgB,CAAhB,IAAmBH,IAAI,CAACI,IAAL,CAAUtB,CAAC,GAACA,CAAF,GAAIE,CAAC,GAACA,CAAhB,CAAnB;AAAsC;;AAAAqB,EAAAA,UAAU,CAACvB,CAAD,EAAG;AAAC,WAAO,KAAKwB,sBAAL,IAA6BpB,CAAC,CAACJ,CAAD,EAAGE,CAAC,CAAC,KAAKW,MAAL,CAAY,CAAZ,CAAD,EAAgB,KAAKA,MAAL,CAAY,CAAZ,CAAhB,EAA+B,KAAKO,eAAL,CAAqB,CAArB,CAA/B,EAAuD,KAAKP,MAAL,CAAY,CAAZ,CAAvD,EAAsE,KAAKA,MAAL,CAAY,CAAZ,CAAtE,EAAqF,KAAKO,eAAL,CAAqB,CAArB,CAArF,CAAJ,CAArC;AAAwJ;;AAAAK,EAAAA,cAAc,CAACzB,CAAD,EAAGE,CAAH,EAAK;AAACI,IAAAA,CAAC,CAACN,CAAD,EAAG,KAAKa,MAAR,EAAeX,CAAf,EAAiB,KAAKwB,UAAtB,CAAD,EAAmC,KAAKC,cAAL,EAAnC;AAAyD;;AAA1yB;;AAA2yBnB,CAAC,CAACE,sBAAF,GAAyB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAAzB;AAA2C,SAAOF,CAAC,IAAIoB,WAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{lerp as t}from\"../../../core/mathUtils.js\";import{wrap as e}from\"../../../geometry/support/aaBoundingBox.js\";import{intersectsAABB as i}from\"../../../geometry/support/frustum.js\";import{createPlanarGlobePatch as s}from\"./PatchGeometryFactory.js\";import n from\"./Tile.js\";class r extends n{constructor(t,e,i){super(r.NumSubdivisionsAtLevel),void 0!==t&&this.init(t,e,i)}init(e,i,s){super.init(e,i,s),this._edgeLen=this.extent[2]-this.extent[0],this._edgeLen2=this._edgeLen*this._edgeLen,this.centerAtSeaLevel[0]=t(this.extent[0],this.extent[2],.5),this.centerAtSeaLevel[1]=t(this.extent[1],this.extent[3],.5),this.centerAtSeaLevel[2]=0,this.updateRadiusAndCenter()}updateRadiusAndCenter(){this._updateCenter();const t=(this.extent[2]-this.extent[0])*Math.SQRT1_2,e=.5*(this.elevationBounds[0]-this.elevationBounds[1]);this._center[1][3]=Math.sqrt(t*t+e*e)}_isVisible(t){return this.intersectsClippingArea&&i(t,e(this.extent[0],this.extent[1],this.elevationBounds[0],this.extent[2],this.extent[3],this.elevationBounds[1]))}createGeometry(t,e){s(t,this.extent,e,this.renderData),this.setMemoryDirty()}}r.NumSubdivisionsAtLevel=[2,2,2,2,2,2,2,2];export{r as PlanarPatch};\n"]},"metadata":{},"sourceType":"module"}