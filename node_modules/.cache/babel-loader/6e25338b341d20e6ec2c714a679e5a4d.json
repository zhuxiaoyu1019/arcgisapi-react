{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nclass t {\n  constructor(t, e, r = 0, f, s) {\n    this.TypedArrayConstructor = t, this.elementCount = 16;\n    const i = this.TypedArrayConstructor;\n    void 0 === f && (f = 16 * i.BYTES_PER_ELEMENT);\n    const d = 0 === e.byteLength ? 0 : r;\n    this.typedBuffer = null == s ? new i(e, d) : new i(e, d, (s - r) / i.BYTES_PER_ELEMENT), this.typedBufferStride = f / i.BYTES_PER_ELEMENT, this.count = Math.ceil(this.typedBuffer.length / this.typedBufferStride), this.stride = this.typedBufferStride * this.TypedArrayConstructor.BYTES_PER_ELEMENT;\n  }\n\n  sliceBuffer(t, e, r = this.count - e) {\n    const f = this.typedBuffer.byteOffset + e * this.stride;\n    return new t(this.buffer, f, this.stride, f + r * this.stride);\n  }\n\n  getMat(t, e) {\n    let r = t * this.typedBufferStride;\n\n    for (let f = 0; f < 16; f++) e[f] = this.typedBuffer[r++];\n\n    return e;\n  }\n\n  setMat(t, e) {\n    let r = t * this.typedBufferStride;\n\n    for (let f = 0; f < 16; f++) this.typedBuffer[r++] = e[f];\n  }\n\n  get(t, e) {\n    return this.typedBuffer[t * this.typedBufferStride + e];\n  }\n\n  set(t, e, r) {\n    this.typedBuffer[t * this.typedBufferStride + e] = r;\n  }\n\n  copyFrom(t, e, r) {\n    const f = this.typedBuffer,\n          s = e.typedBuffer;\n    let i = t * this.typedBufferStride,\n        d = r * e.typedBufferStride;\n\n    for (let u = 0; u < 16; ++u) f[i++] = s[d++];\n  }\n\n  get buffer() {\n    return this.typedBuffer.buffer;\n  }\n\n}\n\nt.ElementCount = 16;\nexport { t as BufferViewMat4Impl };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/geometry/support/buffer/internals/Mat4.js"],"names":["t","constructor","e","r","f","s","TypedArrayConstructor","elementCount","i","BYTES_PER_ELEMENT","d","byteLength","typedBuffer","typedBufferStride","count","Math","ceil","length","stride","sliceBuffer","byteOffset","buffer","getMat","setMat","get","set","copyFrom","u","ElementCount","BufferViewMat4Impl"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nclass t{constructor(t,e,r=0,f,s){this.TypedArrayConstructor=t,this.elementCount=16;const i=this.TypedArrayConstructor;void 0===f&&(f=16*i.BYTES_PER_ELEMENT);const d=0===e.byteLength?0:r;this.typedBuffer=null==s?new i(e,d):new i(e,d,(s-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=f/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(t,e,r=this.count-e){const f=this.typedBuffer.byteOffset+e*this.stride;return new t(this.buffer,f,this.stride,f+r*this.stride)}getMat(t,e){let r=t*this.typedBufferStride;for(let f=0;f<16;f++)e[f]=this.typedBuffer[r++];return e}setMat(t,e){let r=t*this.typedBufferStride;for(let f=0;f<16;f++)this.typedBuffer[r++]=e[f]}get(t,e){return this.typedBuffer[t*this.typedBufferStride+e]}set(t,e,r){this.typedBuffer[t*this.typedBufferStride+e]=r}copyFrom(t,e,r){const f=this.typedBuffer,s=e.typedBuffer;let i=t*this.typedBufferStride,d=r*e.typedBufferStride;for(let u=0;u<16;++u)f[i++]=s[d++]}get buffer(){return this.typedBuffer.buffer}}t.ElementCount=16;export{t as BufferViewMat4Impl};\n"]},"metadata":{},"sourceType":"module"}