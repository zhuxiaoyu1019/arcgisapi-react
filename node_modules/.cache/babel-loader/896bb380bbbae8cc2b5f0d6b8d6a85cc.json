{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport t from \"../request.js\";\nimport { isSome as o } from \"../core/maybe.js\";\nimport { normalizeCentralMeridian as s } from \"../geometry/support/normalizeUtils.js\";\nimport { parseUrl as e, encode as n, asValidOptions as a } from \"./utils.js\";\nimport r from \"./support/ImageIdentifyResult.js\";\nimport i from \"./support/ImageSampleResult.js\";\n\nfunction u(t) {\n  const o = null == t ? void 0 : t.time;\n\n  if (o && (null != o.start || null != o.end)) {\n    const s = [];\n    null != o.start && s.push(o.start), null != o.end && -1 === s.indexOf(o.end) && s.push(o.end), t.time = s.join(\",\");\n  }\n}\n\nasync function m(t, r, i) {\n  const m = e(t),\n        l = r.geometry ? [r.geometry] : [],\n        c = await s(l),\n        p = r.toJSON();\n  u(p);\n  const f = c && c[0];\n  o(f) && (p.geometry = f.toJSON());\n  const g = n({ ...m.query,\n    f: \"json\",\n    ...p\n  });\n  return a(g, i);\n}\n\nasync function l(o, s, n) {\n  const a = await m(o, s, n),\n        r = e(o),\n        {\n    data: i\n  } = await t(`${r.path}/computeStatisticsHistograms`, a),\n        {\n    statistics: u\n  } = i;\n  return null != u && u.length && u.forEach(t => {\n    t.avg = t.mean, t.stddev = t.standardDeviation;\n  }), {\n    statistics: u,\n    histograms: i.histograms\n  };\n}\n\nasync function c(o, s, n) {\n  const a = await m(o, s, n),\n        r = e(o),\n        {\n    data: i\n  } = await t(`${r.path}/computeHistograms`, a);\n  return {\n    histograms: i.histograms\n  };\n}\n\nasync function p(r, m, l) {\n  var c, p;\n  const f = m.toJSON();\n  u(f), null != (c = f.outFields) && c.length && (f.outFields = f.outFields.join(\",\"));\n  const g = await s(m.geometry),\n        d = null == g ? void 0 : g[0];\n  o(d) && (f.geometry = d.toJSON());\n  const y = e(r),\n        h = n({ ...y.query,\n    f: \"json\",\n    ...f\n  }),\n        N = a(h, l),\n        {\n    data: S\n  } = await t(`${y.path}/getSamples`, N),\n        j = null == S || null == (p = S.samples) ? void 0 : p.map(t => {\n    const o = \"NaN\" === t.value || \"\" === t.value ? null : t.value.split(\" \").map(t => Number(t));\n    return { ...t,\n      pixelValue: o\n    };\n  });\n  return i.fromJSON({\n    samples: j\n  });\n}\n\nasync function f(i, u, m) {\n  const l = e(i),\n        c = u.geometry ? [u.geometry] : [];\n  return s(c).then(s => {\n    const e = u.toJSON(),\n          r = s && s[0];\n    o(r) && (e.geometry = JSON.stringify(r.toJSON()));\n    const i = n({ ...l.query,\n      f: \"json\",\n      ...e\n    }),\n          c = a(i, m);\n    return t(l.path + \"/identify\", c);\n  }).then(t => r.fromJSON(t.data));\n}\n\nexport { c as computeHistograms, l as computeStatisticsHistograms, p as getSamples, f as identify };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/rest/imageService.js"],"names":["t","isSome","o","normalizeCentralMeridian","s","parseUrl","e","encode","n","asValidOptions","a","r","i","u","time","start","end","push","indexOf","join","m","l","geometry","c","p","toJSON","f","g","query","data","path","statistics","length","forEach","avg","mean","stddev","standardDeviation","histograms","outFields","d","y","h","N","S","j","samples","map","value","split","Number","pixelValue","fromJSON","then","JSON","stringify","computeHistograms","computeStatisticsHistograms","getSamples","identify"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,eAAb;AAA6B,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,kBAAvB;AAA0C,SAAOC,wBAAwB,IAAIC,CAAnC,QAAyC,uCAAzC;AAAiF,SAAOC,QAAQ,IAAIC,CAAnB,EAAqBC,MAAM,IAAIC,CAA/B,EAAiCC,cAAc,IAAIC,CAAnD,QAAyD,YAAzD;AAAsE,OAAOC,CAAP,MAAa,kCAAb;AAAgD,OAAOC,CAAP,MAAa,gCAAb;;AAA8C,SAASC,CAAT,CAAWb,CAAX,EAAa;AAAC,QAAME,CAAC,GAAC,QAAMF,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAACc,IAAzB;;AAA8B,MAAGZ,CAAC,KAAG,QAAMA,CAAC,CAACa,KAAR,IAAe,QAAMb,CAAC,CAACc,GAA1B,CAAJ,EAAmC;AAAC,UAAMZ,CAAC,GAAC,EAAR;AAAW,YAAMF,CAAC,CAACa,KAAR,IAAeX,CAAC,CAACa,IAAF,CAAOf,CAAC,CAACa,KAAT,CAAf,EAA+B,QAAMb,CAAC,CAACc,GAAR,IAAa,CAAC,CAAD,KAAKZ,CAAC,CAACc,OAAF,CAAUhB,CAAC,CAACc,GAAZ,CAAlB,IAAoCZ,CAAC,CAACa,IAAF,CAAOf,CAAC,CAACc,GAAT,CAAnE,EAAiFhB,CAAC,CAACc,IAAF,GAAOV,CAAC,CAACe,IAAF,CAAO,GAAP,CAAxF;AAAoG;AAAC;;AAAA,eAAeC,CAAf,CAAiBpB,CAAjB,EAAmBW,CAAnB,EAAqBC,CAArB,EAAuB;AAAC,QAAMQ,CAAC,GAACd,CAAC,CAACN,CAAD,CAAT;AAAA,QAAaqB,CAAC,GAACV,CAAC,CAACW,QAAF,GAAW,CAACX,CAAC,CAACW,QAAH,CAAX,GAAwB,EAAvC;AAAA,QAA0CC,CAAC,GAAC,MAAMnB,CAAC,CAACiB,CAAD,CAAnD;AAAA,QAAuDG,CAAC,GAACb,CAAC,CAACc,MAAF,EAAzD;AAAoEZ,EAAAA,CAAC,CAACW,CAAD,CAAD;AAAK,QAAME,CAAC,GAACH,CAAC,IAAEA,CAAC,CAAC,CAAD,CAAZ;AAAgBrB,EAAAA,CAAC,CAACwB,CAAD,CAAD,KAAOF,CAAC,CAACF,QAAF,GAAWI,CAAC,CAACD,MAAF,EAAlB;AAA8B,QAAME,CAAC,GAACnB,CAAC,CAAC,EAAC,GAAGY,CAAC,CAACQ,KAAN;AAAYF,IAAAA,CAAC,EAAC,MAAd;AAAqB,OAAGF;AAAxB,GAAD,CAAT;AAAsC,SAAOd,CAAC,CAACiB,CAAD,EAAGf,CAAH,CAAR;AAAc;;AAAA,eAAeS,CAAf,CAAiBnB,CAAjB,EAAmBE,CAAnB,EAAqBI,CAArB,EAAuB;AAAC,QAAME,CAAC,GAAC,MAAMU,CAAC,CAAClB,CAAD,EAAGE,CAAH,EAAKI,CAAL,CAAf;AAAA,QAAuBG,CAAC,GAACL,CAAC,CAACJ,CAAD,CAA1B;AAAA,QAA8B;AAAC2B,IAAAA,IAAI,EAACjB;AAAN,MAAS,MAAMZ,CAAC,CAAE,GAAEW,CAAC,CAACmB,IAAK,8BAAX,EAAyCpB,CAAzC,CAA9C;AAAA,QAA0F;AAACqB,IAAAA,UAAU,EAAClB;AAAZ,MAAeD,CAAzG;AAA2G,SAAO,QAAMC,CAAN,IAASA,CAAC,CAACmB,MAAX,IAAmBnB,CAAC,CAACoB,OAAF,CAAWjC,CAAC,IAAE;AAACA,IAAAA,CAAC,CAACkC,GAAF,GAAMlC,CAAC,CAACmC,IAAR,EAAanC,CAAC,CAACoC,MAAF,GAASpC,CAAC,CAACqC,iBAAxB;AAA0C,GAAzD,CAAnB,EAA+E;AAACN,IAAAA,UAAU,EAAClB,CAAZ;AAAcyB,IAAAA,UAAU,EAAC1B,CAAC,CAAC0B;AAA3B,GAAtF;AAA6H;;AAAA,eAAef,CAAf,CAAiBrB,CAAjB,EAAmBE,CAAnB,EAAqBI,CAArB,EAAuB;AAAC,QAAME,CAAC,GAAC,MAAMU,CAAC,CAAClB,CAAD,EAAGE,CAAH,EAAKI,CAAL,CAAf;AAAA,QAAuBG,CAAC,GAACL,CAAC,CAACJ,CAAD,CAA1B;AAAA,QAA8B;AAAC2B,IAAAA,IAAI,EAACjB;AAAN,MAAS,MAAMZ,CAAC,CAAE,GAAEW,CAAC,CAACmB,IAAK,oBAAX,EAA+BpB,CAA/B,CAA9C;AAAgF,SAAM;AAAC4B,IAAAA,UAAU,EAAC1B,CAAC,CAAC0B;AAAd,GAAN;AAAgC;;AAAA,eAAed,CAAf,CAAiBb,CAAjB,EAAmBS,CAAnB,EAAqBC,CAArB,EAAuB;AAAC,MAAIE,CAAJ,EAAMC,CAAN;AAAQ,QAAME,CAAC,GAACN,CAAC,CAACK,MAAF,EAAR;AAAmBZ,EAAAA,CAAC,CAACa,CAAD,CAAD,EAAK,SAAOH,CAAC,GAACG,CAAC,CAACa,SAAX,KAAuBhB,CAAC,CAACS,MAAzB,KAAkCN,CAAC,CAACa,SAAF,GAAYb,CAAC,CAACa,SAAF,CAAYpB,IAAZ,CAAiB,GAAjB,CAA9C,CAAL;AAA0E,QAAMQ,CAAC,GAAC,MAAMvB,CAAC,CAACgB,CAAC,CAACE,QAAH,CAAf;AAAA,QAA4BkB,CAAC,GAAC,QAAMb,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAAC,CAAD,CAA9C;AAAkDzB,EAAAA,CAAC,CAACsC,CAAD,CAAD,KAAOd,CAAC,CAACJ,QAAF,GAAWkB,CAAC,CAACf,MAAF,EAAlB;AAA8B,QAAMgB,CAAC,GAACnC,CAAC,CAACK,CAAD,CAAT;AAAA,QAAa+B,CAAC,GAAClC,CAAC,CAAC,EAAC,GAAGiC,CAAC,CAACb,KAAN;AAAYF,IAAAA,CAAC,EAAC,MAAd;AAAqB,OAAGA;AAAxB,GAAD,CAAhB;AAAA,QAA6CiB,CAAC,GAACjC,CAAC,CAACgC,CAAD,EAAGrB,CAAH,CAAhD;AAAA,QAAsD;AAACQ,IAAAA,IAAI,EAACe;AAAN,MAAS,MAAM5C,CAAC,CAAE,GAAEyC,CAAC,CAACX,IAAK,aAAX,EAAwBa,CAAxB,CAAtE;AAAA,QAAiGE,CAAC,GAAC,QAAMD,CAAN,IAAS,SAAOpB,CAAC,GAACoB,CAAC,CAACE,OAAX,CAAT,GAA6B,KAAK,CAAlC,GAAoCtB,CAAC,CAACuB,GAAF,CAAO/C,CAAC,IAAE;AAAC,UAAME,CAAC,GAAC,UAAQF,CAAC,CAACgD,KAAV,IAAiB,OAAKhD,CAAC,CAACgD,KAAxB,GAA8B,IAA9B,GAAmChD,CAAC,CAACgD,KAAF,CAAQC,KAAR,CAAc,GAAd,EAAmBF,GAAnB,CAAwB/C,CAAC,IAAEkD,MAAM,CAAClD,CAAD,CAAjC,CAA3C;AAAkF,WAAM,EAAC,GAAGA,CAAJ;AAAMmD,MAAAA,UAAU,EAACjD;AAAjB,KAAN;AAA0B,GAAvH,CAAvI;AAAiQ,SAAOU,CAAC,CAACwC,QAAF,CAAW;AAACN,IAAAA,OAAO,EAACD;AAAT,GAAX,CAAP;AAA+B;;AAAA,eAAenB,CAAf,CAAiBd,CAAjB,EAAmBC,CAAnB,EAAqBO,CAArB,EAAuB;AAAC,QAAMC,CAAC,GAACf,CAAC,CAACM,CAAD,CAAT;AAAA,QAAaW,CAAC,GAACV,CAAC,CAACS,QAAF,GAAW,CAACT,CAAC,CAACS,QAAH,CAAX,GAAwB,EAAvC;AAA0C,SAAOlB,CAAC,CAACmB,CAAD,CAAD,CAAK8B,IAAL,CAAWjD,CAAC,IAAE;AAAC,UAAME,CAAC,GAACO,CAAC,CAACY,MAAF,EAAR;AAAA,UAAmBd,CAAC,GAACP,CAAC,IAAEA,CAAC,CAAC,CAAD,CAAzB;AAA6BF,IAAAA,CAAC,CAACS,CAAD,CAAD,KAAOL,CAAC,CAACgB,QAAF,GAAWgC,IAAI,CAACC,SAAL,CAAe5C,CAAC,CAACc,MAAF,EAAf,CAAlB;AAA8C,UAAMb,CAAC,GAACJ,CAAC,CAAC,EAAC,GAAGa,CAAC,CAACO,KAAN;AAAYF,MAAAA,CAAC,EAAC,MAAd;AAAqB,SAAGpB;AAAxB,KAAD,CAAT;AAAA,UAAsCiB,CAAC,GAACb,CAAC,CAACE,CAAD,EAAGQ,CAAH,CAAzC;AAA+C,WAAOpB,CAAC,CAACqB,CAAC,CAACS,IAAF,GAAO,WAAR,EAAoBP,CAApB,CAAR;AAA+B,GAAxK,EAA2K8B,IAA3K,CAAiLrD,CAAC,IAAEW,CAAC,CAACyC,QAAF,CAAWpD,CAAC,CAAC6B,IAAb,CAApL,CAAP;AAAgN;;AAAA,SAAON,CAAC,IAAIiC,iBAAZ,EAA8BnC,CAAC,IAAIoC,2BAAnC,EAA+DjC,CAAC,IAAIkC,UAApE,EAA+EhC,CAAC,IAAIiC,QAApF","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport t from\"../request.js\";import{isSome as o}from\"../core/maybe.js\";import{normalizeCentralMeridian as s}from\"../geometry/support/normalizeUtils.js\";import{parseUrl as e,encode as n,asValidOptions as a}from\"./utils.js\";import r from\"./support/ImageIdentifyResult.js\";import i from\"./support/ImageSampleResult.js\";function u(t){const o=null==t?void 0:t.time;if(o&&(null!=o.start||null!=o.end)){const s=[];null!=o.start&&s.push(o.start),null!=o.end&&-1===s.indexOf(o.end)&&s.push(o.end),t.time=s.join(\",\")}}async function m(t,r,i){const m=e(t),l=r.geometry?[r.geometry]:[],c=await s(l),p=r.toJSON();u(p);const f=c&&c[0];o(f)&&(p.geometry=f.toJSON());const g=n({...m.query,f:\"json\",...p});return a(g,i)}async function l(o,s,n){const a=await m(o,s,n),r=e(o),{data:i}=await t(`${r.path}/computeStatisticsHistograms`,a),{statistics:u}=i;return null!=u&&u.length&&u.forEach((t=>{t.avg=t.mean,t.stddev=t.standardDeviation})),{statistics:u,histograms:i.histograms}}async function c(o,s,n){const a=await m(o,s,n),r=e(o),{data:i}=await t(`${r.path}/computeHistograms`,a);return{histograms:i.histograms}}async function p(r,m,l){var c,p;const f=m.toJSON();u(f),null!=(c=f.outFields)&&c.length&&(f.outFields=f.outFields.join(\",\"));const g=await s(m.geometry),d=null==g?void 0:g[0];o(d)&&(f.geometry=d.toJSON());const y=e(r),h=n({...y.query,f:\"json\",...f}),N=a(h,l),{data:S}=await t(`${y.path}/getSamples`,N),j=null==S||null==(p=S.samples)?void 0:p.map((t=>{const o=\"NaN\"===t.value||\"\"===t.value?null:t.value.split(\" \").map((t=>Number(t)));return{...t,pixelValue:o}}));return i.fromJSON({samples:j})}async function f(i,u,m){const l=e(i),c=u.geometry?[u.geometry]:[];return s(c).then((s=>{const e=u.toJSON(),r=s&&s[0];o(r)&&(e.geometry=JSON.stringify(r.toJSON()));const i=n({...l.query,f:\"json\",...e}),c=a(i,m);return t(l.path+\"/identify\",c)})).then((t=>r.fromJSON(t.data)))}export{c as computeHistograms,l as computeStatisticsHistograms,p as getSamples,f as identify};\n"]},"metadata":{},"sourceType":"module"}