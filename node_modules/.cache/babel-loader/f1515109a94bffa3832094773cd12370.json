{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { unwrap as r, isSome as i } from \"../../../core/maybe.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/Logger.js\";\nimport { subclass as a } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../RasterInfo.js\";\nimport o from \"../RasterStorageInfo.js\";\nimport l from \"./BaseRaster.js\";\nimport { parseSpatialReference as f, parsePAMInfo as u } from \"./pamParser.js\";\nimport { p as m, g as p, b as c, c as h, i as d } from \"../../../chunks/TiffDecoder.js\";\nimport y from \"../rasterFormats/TiffTags.js\";\nimport { estimateStatisticsFromHistograms as g } from \"../rasterFunctions/pixelUtils.js\";\nimport x from \"../rasterTransforms/PolynomialTransform.js\";\nimport T from \"../../../geometry/SpatialReference.js\";\nimport I from \"../../../geometry/Extent.js\";\nimport w from \"../../../geometry/Point.js\";\n\nconst b = function (e, t) {\n  const r = e.get(t);\n  return r && r.values;\n},\n      E = function (e, t) {\n  const r = e.get(t);\n  return r && r.values[0];\n};\n\nlet S = class extends l {\n  constructor() {\n    super(...arguments), this._files = null, this._headerInfo = null, this._bufferSize = 1048576, this.datasetFormat = \"TIFF\";\n  }\n\n  async open(e) {\n    var s, a, l;\n    await this.init();\n    const u = e ? r(e.signal) : null,\n          {\n      data: c\n    } = await this.request(this.url, {\n      range: {\n        from: 0,\n        to: this._bufferSize\n      },\n      responseType: \"array-buffer\",\n      signal: u\n    });\n    if (!c) throw new t(\"tiffraster:open\", \"failed to open url \" + this.url);\n    this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n    const {\n      littleEndian: h,\n      firstIFD: d,\n      isBigTiff: y\n    } = m(c),\n          b = [];\n    await this.readIFDs(b, c, h, d, 0, y ? 8 : 4, u);\n    const E = p(b),\n          {\n      width: S,\n      height: v,\n      tileWidth: F,\n      tileHeight: R,\n      planes: _,\n      pixelType: k,\n      compression: j,\n      firstPyramidLevel: B,\n      maximumPyramidLevel: L,\n      pyramidBlockWidth: D,\n      pyramidBlockHeight: z,\n      tileBoundary: O,\n      affine: P,\n      metadata: H\n    } = E,\n          A = (null == (s = E.extent.spatialReference) ? void 0 : s.wkt) || (null == (a = E.extent.spatialReference) ? void 0 : a.wkid);\n    let G = f(A),\n        q = !1;\n    null == G && (q = !0, G = new T({\n      wkid: 3857\n    }));\n    const C = new I({ ...E.extent,\n      spatialReference: G\n    }),\n          W = new w(C ? {\n      x: C.xmin,\n      y: C.ymax,\n      spatialReference: G\n    } : {\n      x: 0,\n      y: 0\n    }),\n          Y = new o({\n      blockWidth: F,\n      blockHeight: R,\n      pyramidBlockWidth: D,\n      pyramidBlockHeight: z,\n      compression: j,\n      origin: W,\n      firstPyramidLevel: B,\n      maximumPyramidLevel: L,\n      blockBoundary: O\n    }),\n          U = new w({\n      x: (C.xmax - C.xmin) / S,\n      y: (C.ymax - C.ymin) / v,\n      spatialReference: G\n    }),\n          M = H ? {\n      BandProperties: H.bandProperties,\n      DataType: H.dataType\n    } : {},\n          N = new n({\n      width: S,\n      height: v,\n      bandCount: _,\n      pixelType: k,\n      compression: j,\n      pixelSize: U,\n      storageInfo: Y,\n      spatialReference: G,\n      isPseudoSpatialReference: q,\n      keyProperties: M,\n      extent: C,\n      statistics: H ? H.statistics : null\n    });\n\n    if (null != P && P.length && (N.nativeExtent = new I({\n      xmin: -.5,\n      ymin: .5 - v,\n      xmax: S - .5,\n      ymax: .5,\n      spatialReference: G\n    }), N.transform = new x({\n      polynomialOrder: 1,\n      forwardCoefficients: [P[2] + P[0] / 2, P[5] - P[3] / 2, P[0], P[3], -P[1], -P[4]]\n    }), N.extent = N.transform.forwardTransform(N.nativeExtent), N.pixelSize = new w({\n      x: (C.xmax - C.xmin) / S,\n      y: (C.ymax - C.ymin) / v,\n      spatialReference: G\n    }), Y.origin.x = -.5, Y.origin.y = .5), null == (l = this.ioConfig.skipExtensions) || !l.includes(\"aux.xml\")) {\n      const t = await this._fetchAuxiliaryData(e);\n\n      if (null != t) {\n        var K;\n\n        if (N.statistics = null != (K = t.statistics) ? K : N.statistics, N.histograms = t.histograms, t.histograms && !i(N.statistics) && (N.statistics = g(t.histograms)), t.transform && !P) {\n          N.transform = t.transform, N.nativeExtent = N.extent;\n          const e = N.transform.forwardTransform(N.nativeExtent);\n          N.pixelSize = new w({\n            x: (e.xmax - e.xmin) / S,\n            y: (e.ymax - e.ymin) / v,\n            spatialReference: G\n          }), N.extent = e;\n        }\n\n        N.spatialReference || (N.spatialReference = t.spatialReference);\n      }\n    }\n\n    if (this._set(\"rasterInfo\", N), this._headerInfo = {\n      littleEndian: h,\n      isBigTiff: y,\n      ifds: b,\n      ...E\n    }, !this._headerInfo.isSupported) throw new t(\"tiffraster:open\", \"this tiff is not supported: \" + this._headerInfo.message);\n    this.updateTileInfo();\n  }\n\n  async fetchRawTile(e, t, r, i = {}) {\n    var s;\n    if (null == (s = this._headerInfo) || !s.isSupported || this.isBlockOutside(e, t, r)) return null;\n    const a = this.getTileLocation(e, t, r);\n    if (!a) return null;\n    const {\n      ranges: n,\n      actualTileWidth: o,\n      actualTileHeight: l,\n      ifd: f\n    } = a,\n          u = n.map(e => this.request(this.url, {\n      range: e,\n      responseType: \"array-buffer\",\n      signal: i.signal\n    })),\n          m = await Promise.all(u),\n          p = m.map(e => e.data.byteLength).reduce((e, t) => e + t),\n          c = 1 === m.length ? m[0].data : new ArrayBuffer(p),\n          h = [0],\n          d = [0];\n\n    if (m.length > 1) {\n      const e = new Uint8Array(c);\n\n      for (let t = 0, r = 0; t < m.length; t++) {\n        const i = m[t].data;\n        e.set(new Uint8Array(i), r), h[t] = r, r += i.byteLength, d[t] = i.byteLength;\n      }\n    }\n\n    const {\n      blockWidth: y,\n      blockHeight: g\n    } = this.getBlockWidthHeight(e),\n          x = await this.decodePixelBlock(c, {\n      format: \"tiff\",\n      customOptions: {\n        headerInfo: this._headerInfo,\n        ifd: f,\n        offsets: h,\n        sizes: d\n      },\n      width: y,\n      height: g,\n      planes: null,\n      pixelType: null\n    });\n    let T, I, w;\n\n    if (o !== y || l !== g) {\n      let e = x.mask;\n      if (e) {\n        for (T = 0; T < g; T++) if (w = T * y, T < l) for (I = o; I < y; I++) e[w + I] = 0;else for (I = 0; I < y; I++) e[w + I] = 0;\n      } else for (e = new Uint8Array(y * g), x.mask = e, T = 0; T < l; T++) for (w = T * y, I = 0; I < o; I++) e[w + I] = 1;\n    }\n\n    return x;\n  }\n\n  async readIFDs(e, t, r, i, s, a = 4, n) {\n    if (!i) return null;\n\n    if (i >= t.byteLength || i < 0) {\n      t = (await this.request(this.url, {\n        range: {\n          from: i + s,\n          to: i + s + this._bufferSize\n        },\n        responseType: \"array-buffer\",\n        signal: n\n      })).data, s = i + s, i = 0;\n    }\n\n    const o = await this.readIFD(t, r, i, s, y.TIFF_TAGS, a, n);\n    if (e.push(o.ifd), !o.nextIFD) return null;\n    await this.readIFDs(e, t, r, o.nextIFD - s, s, a, n);\n  }\n\n  async readIFD(e, t, r, i, s = y.TIFF_TAGS, a = 4, n) {\n    if (!e) return null;\n    const o = c(e, t, r, i, s, a);\n\n    if (o.success) {\n      const r = [];\n\n      if (o.ifd.forEach(e => {\n        e.values || r.push(e);\n      }), r.length > 0) {\n        const s = r.map(e => e.offlineOffsetSize),\n              a = Math.min.apply(null, s.map(e => e[0]));\n\n        if (Math.min.apply(null, s.map(e => e[0] + e[1])) - a <= this._bufferSize) {\n          const {\n            data: s\n          } = await this.request(this.url, {\n            range: {\n              from: a,\n              to: a + this._bufferSize\n            },\n            responseType: \"array-buffer\",\n            signal: n\n          });\n          e = s, i = a, r.forEach(r => h(e, t, r, i));\n        }\n      }\n\n      if (o.ifd.has(\"GEOKEYDIRECTORY\")) {\n        const r = o.ifd.get(\"GEOKEYDIRECTORY\"),\n              s = r.values;\n\n        if (s && s.length > 4) {\n          const a = s[0] + \".\" + s[1] + \".\" + s[2],\n                o = await this.readIFD(e, t, r.valueOffset + 6 - i, i, y.GEO_KEYS, 2, n);\n          r.data = o.ifd, r.data && r.data.set(\"GEOTIFFVersion\", {\n            id: 0,\n            type: 2,\n            valueCount: 1,\n            valueOffset: null,\n            values: [a]\n          });\n        }\n      }\n\n      return o;\n    }\n\n    if (o.requiredBufferSize && o.requiredBufferSize !== e.byteLength) {\n      const r = await this.request(this.url, {\n        range: {\n          from: i,\n          to: i + o.requiredBufferSize + 4\n        },\n        responseType: \"array-buffer\",\n        signal: n\n      });\n      return (e = r.data).byteLength < o.requiredBufferSize ? null : this.readIFD(e, t, 0, i, y.TIFF_TAGS, 4, n);\n    }\n  }\n\n  getTileLocation(e, t, r) {\n    const {\n      firstPyramidLevel: i,\n      blockBoundary: s\n    } = this.rasterInfo.storageInfo,\n          a = 0 === e ? 0 : e - (i - 1),\n          n = this._headerInfo.ifds[a];\n    if (!n) return null;\n    const o = d(n, this._headerInfo),\n          l = b(n, \"TILEOFFSETS\");\n    if (void 0 === l) return null;\n    const f = b(n, \"TILEBYTECOUNTS\"),\n          {\n      minRow: u,\n      minCol: m,\n      maxRow: p,\n      maxCol: c\n    } = s[a];\n    if (t > p || r > c || t < u || r < m) return null;\n    const h = E(n, \"IMAGEWIDTH\"),\n          y = E(n, \"IMAGELENGTH\"),\n          g = E(n, \"TILEWIDTH\"),\n          x = E(n, \"TILELENGTH\"),\n          T = o ? this.rasterInfo.bandCount : 1,\n          I = T * t * (c + 1) + r,\n          w = [{\n      from: l[I],\n      to: l[I + T - 1] + f[I + T - 1] - 1\n    }];\n\n    if (o) {\n      let e = !0;\n\n      for (let t = 0; t < T; t++) if (l[I + t] + f[I + t] !== l[I + t + 1]) {\n        e = !1;\n        break;\n      }\n\n      if (!e) for (let t = 0; t < T; t++) w[t] = {\n        from: l[I + t],\n        to: l[I + t] + f[I + t] - 1\n      };\n    }\n\n    const S = l[I],\n          v = f[I];\n    if (null == S || null == v) return null;\n    return {\n      ranges: w,\n      ifd: n,\n      actualTileWidth: r === c ? h % g : g,\n      actualTileHeight: t === p ? y % x : x\n    };\n  }\n\n  async _fetchAuxiliaryData(e) {\n    try {\n      const {\n        data: t\n      } = await this.request(this.url + \".aux.xml\", {\n        responseType: \"xml\",\n        signal: null == e ? void 0 : e.signal\n      });\n      return u(t);\n    } catch {\n      return null;\n    }\n  }\n\n};\ne([s()], S.prototype, \"_files\", void 0), e([s()], S.prototype, \"_headerInfo\", void 0), e([s()], S.prototype, \"_bufferSize\", void 0), e([s({\n  type: String,\n  json: {\n    write: !0\n  }\n})], S.prototype, \"datasetFormat\", void 0), S = e([a(\"esri.layers.support.rasterDatasets.TIFFRaster\")], S);\nvar v = S;\nexport default v;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/layers/support/rasterDatasets/TIFFRaster.js"],"names":["_","e","t","unwrap","r","isSome","i","property","s","subclass","a","n","o","l","parseSpatialReference","f","parsePAMInfo","u","p","m","g","b","c","h","d","y","estimateStatisticsFromHistograms","x","T","I","w","get","values","E","S","constructor","arguments","_files","_headerInfo","_bufferSize","datasetFormat","open","init","signal","data","request","url","range","from","to","responseType","datasetName","slice","lastIndexOf","littleEndian","firstIFD","isBigTiff","readIFDs","width","height","v","tileWidth","F","tileHeight","R","planes","pixelType","k","compression","j","firstPyramidLevel","B","maximumPyramidLevel","L","pyramidBlockWidth","D","pyramidBlockHeight","z","tileBoundary","O","affine","P","metadata","H","A","extent","spatialReference","wkt","wkid","G","q","C","W","xmin","ymax","Y","blockWidth","blockHeight","origin","blockBoundary","U","xmax","ymin","M","BandProperties","bandProperties","DataType","dataType","N","bandCount","pixelSize","storageInfo","isPseudoSpatialReference","keyProperties","statistics","length","nativeExtent","transform","polynomialOrder","forwardCoefficients","forwardTransform","ioConfig","skipExtensions","includes","_fetchAuxiliaryData","K","histograms","_set","ifds","isSupported","message","updateTileInfo","fetchRawTile","isBlockOutside","getTileLocation","ranges","actualTileWidth","actualTileHeight","ifd","map","Promise","all","byteLength","reduce","ArrayBuffer","Uint8Array","set","getBlockWidthHeight","decodePixelBlock","format","customOptions","headerInfo","offsets","sizes","mask","readIFD","TIFF_TAGS","push","nextIFD","success","forEach","offlineOffsetSize","Math","min","apply","has","valueOffset","GEO_KEYS","id","type","valueCount","requiredBufferSize","rasterInfo","minRow","minCol","maxRow","maxCol","prototype","String","json","write"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{unwrap as r,isSome as i}from\"../../../core/maybe.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/Logger.js\";import{subclass as a}from\"../../../core/accessorSupport/decorators/subclass.js\";import n from\"../RasterInfo.js\";import o from\"../RasterStorageInfo.js\";import l from\"./BaseRaster.js\";import{parseSpatialReference as f,parsePAMInfo as u}from\"./pamParser.js\";import{p as m,g as p,b as c,c as h,i as d}from\"../../../chunks/TiffDecoder.js\";import y from\"../rasterFormats/TiffTags.js\";import{estimateStatisticsFromHistograms as g}from\"../rasterFunctions/pixelUtils.js\";import x from\"../rasterTransforms/PolynomialTransform.js\";import T from\"../../../geometry/SpatialReference.js\";import I from\"../../../geometry/Extent.js\";import w from\"../../../geometry/Point.js\";const b=function(e,t){const r=e.get(t);return r&&r.values},E=function(e,t){const r=e.get(t);return r&&r.values[0]};let S=class extends l{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat=\"TIFF\"}async open(e){var s,a,l;await this.init();const u=e?r(e.signal):null,{data:c}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:\"array-buffer\",signal:u});if(!c)throw new t(\"tiffraster:open\",\"failed to open url \"+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const{littleEndian:h,firstIFD:d,isBigTiff:y}=m(c),b=[];await this.readIFDs(b,c,h,d,0,y?8:4,u);const E=p(b),{width:S,height:v,tileWidth:F,tileHeight:R,planes:_,pixelType:k,compression:j,firstPyramidLevel:B,maximumPyramidLevel:L,pyramidBlockWidth:D,pyramidBlockHeight:z,tileBoundary:O,affine:P,metadata:H}=E,A=(null==(s=E.extent.spatialReference)?void 0:s.wkt)||(null==(a=E.extent.spatialReference)?void 0:a.wkid);let G=f(A),q=!1;null==G&&(q=!0,G=new T({wkid:3857}));const C=new I({...E.extent,spatialReference:G}),W=new w(C?{x:C.xmin,y:C.ymax,spatialReference:G}:{x:0,y:0}),Y=new o({blockWidth:F,blockHeight:R,pyramidBlockWidth:D,pyramidBlockHeight:z,compression:j,origin:W,firstPyramidLevel:B,maximumPyramidLevel:L,blockBoundary:O}),U=new w({x:(C.xmax-C.xmin)/S,y:(C.ymax-C.ymin)/v,spatialReference:G}),M=H?{BandProperties:H.bandProperties,DataType:H.dataType}:{},N=new n({width:S,height:v,bandCount:_,pixelType:k,compression:j,pixelSize:U,storageInfo:Y,spatialReference:G,isPseudoSpatialReference:q,keyProperties:M,extent:C,statistics:H?H.statistics:null});if(null!=P&&P.length&&(N.nativeExtent=new I({xmin:-.5,ymin:.5-v,xmax:S-.5,ymax:.5,spatialReference:G}),N.transform=new x({polynomialOrder:1,forwardCoefficients:[P[2]+P[0]/2,P[5]-P[3]/2,P[0],P[3],-P[1],-P[4]]}),N.extent=N.transform.forwardTransform(N.nativeExtent),N.pixelSize=new w({x:(C.xmax-C.xmin)/S,y:(C.ymax-C.ymin)/v,spatialReference:G}),Y.origin.x=-.5,Y.origin.y=.5),null==(l=this.ioConfig.skipExtensions)||!l.includes(\"aux.xml\")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var K;if(N.statistics=null!=(K=t.statistics)?K:N.statistics,N.histograms=t.histograms,t.histograms&&!i(N.statistics)&&(N.statistics=g(t.histograms)),t.transform&&!P){N.transform=t.transform,N.nativeExtent=N.extent;const e=N.transform.forwardTransform(N.nativeExtent);N.pixelSize=new w({x:(e.xmax-e.xmin)/S,y:(e.ymax-e.ymin)/v,spatialReference:G}),N.extent=e}N.spatialReference||(N.spatialReference=t.spatialReference)}}if(this._set(\"rasterInfo\",N),this._headerInfo={littleEndian:h,isBigTiff:y,ifds:b,...E},!this._headerInfo.isSupported)throw new t(\"tiffraster:open\",\"this tiff is not supported: \"+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,r,i={}){var s;if(null==(s=this._headerInfo)||!s.isSupported||this.isBlockOutside(e,t,r))return null;const a=this.getTileLocation(e,t,r);if(!a)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:l,ifd:f}=a,u=n.map((e=>this.request(this.url,{range:e,responseType:\"array-buffer\",signal:i.signal}))),m=await Promise.all(u),p=m.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),c=1===m.length?m[0].data:new ArrayBuffer(p),h=[0],d=[0];if(m.length>1){const e=new Uint8Array(c);for(let t=0,r=0;t<m.length;t++){const i=m[t].data;e.set(new Uint8Array(i),r),h[t]=r,r+=i.byteLength,d[t]=i.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(c,{format:\"tiff\",customOptions:{headerInfo:this._headerInfo,ifd:f,offsets:h,sizes:d},width:y,height:g,planes:null,pixelType:null});let T,I,w;if(o!==y||l!==g){let e=x.mask;if(e)for(T=0;T<g;T++)if(w=T*y,T<l)for(I=o;I<y;I++)e[w+I]=0;else for(I=0;I<y;I++)e[w+I]=0;else for(e=new Uint8Array(y*g),x.mask=e,T=0;T<l;T++)for(w=T*y,I=0;I<o;I++)e[w+I]=1}return x}async readIFDs(e,t,r,i,s,a=4,n){if(!i)return null;if(i>=t.byteLength||i<0){t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:\"array-buffer\",signal:n})).data,s=i+s,i=0}const o=await this.readIFD(t,r,i,s,y.TIFF_TAGS,a,n);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,r,o.nextIFD-s,s,a,n)}async readIFD(e,t,r,i,s=y.TIFF_TAGS,a=4,n){if(!e)return null;const o=c(e,t,r,i,s,a);if(o.success){const r=[];if(o.ifd.forEach((e=>{e.values||r.push(e)})),r.length>0){const s=r.map((e=>e.offlineOffsetSize)),a=Math.min.apply(null,s.map((e=>e[0])));if(Math.min.apply(null,s.map((e=>e[0]+e[1])))-a<=this._bufferSize){const{data:s}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:\"array-buffer\",signal:n});e=s,i=a,r.forEach((r=>h(e,t,r,i)))}}if(o.ifd.has(\"GEOKEYDIRECTORY\")){const r=o.ifd.get(\"GEOKEYDIRECTORY\"),s=r.values;if(s&&s.length>4){const a=s[0]+\".\"+s[1]+\".\"+s[2],o=await this.readIFD(e,t,r.valueOffset+6-i,i,y.GEO_KEYS,2,n);r.data=o.ifd,r.data&&r.data.set(\"GEOTIFFVersion\",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const r=await this.request(this.url,{range:{from:i,to:i+o.requiredBufferSize+4},responseType:\"array-buffer\",signal:n});return(e=r.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,i,y.TIFF_TAGS,4,n)}}getTileLocation(e,t,r){const{firstPyramidLevel:i,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(i-1),n=this._headerInfo.ifds[a];if(!n)return null;const o=d(n,this._headerInfo),l=b(n,\"TILEOFFSETS\");if(void 0===l)return null;const f=b(n,\"TILEBYTECOUNTS\"),{minRow:u,minCol:m,maxRow:p,maxCol:c}=s[a];if(t>p||r>c||t<u||r<m)return null;const h=E(n,\"IMAGEWIDTH\"),y=E(n,\"IMAGELENGTH\"),g=E(n,\"TILEWIDTH\"),x=E(n,\"TILELENGTH\"),T=o?this.rasterInfo.bandCount:1,I=T*t*(c+1)+r,w=[{from:l[I],to:l[I+T-1]+f[I+T-1]-1}];if(o){let e=!0;for(let t=0;t<T;t++)if(l[I+t]+f[I+t]!==l[I+t+1]){e=!1;break}if(!e)for(let t=0;t<T;t++)w[t]={from:l[I+t],to:l[I+t]+f[I+t]-1}}const S=l[I],v=f[I];if(null==S||null==v)return null;return{ranges:w,ifd:n,actualTileWidth:r===c?h%g:g,actualTileHeight:t===p?y%x:x}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:null==e?void 0:e.signal});return u(t)}catch{return null}}};e([s()],S.prototype,\"_files\",void 0),e([s()],S.prototype,\"_headerInfo\",void 0),e([s()],S.prototype,\"_bufferSize\",void 0),e([s({type:String,json:{write:!0}})],S.prototype,\"datasetFormat\",void 0),S=e([a(\"esri.layers.support.rasterDatasets.TIFFRaster\")],S);var v=S;export default v;\n"]},"metadata":{},"sourceType":"module"}