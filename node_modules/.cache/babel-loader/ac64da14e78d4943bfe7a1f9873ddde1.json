{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport t from \"../../../core/Evented.js\";\nimport e from \"../../../core/Logger.js\";\nimport { isSome as i } from \"../../../core/maybe.js\";\nimport { MemCacheStorage as s, MemCache as a } from \"../../../core/MemCache.js\";\nimport { isMemoryManagedLayerView as r } from \"../layers/support/MemoryManagedLayerView.js\";\nconst h = e.getLogger(\"esri.views.3d.support.MemoryController\");\n\nfunction o(t) {\n  return new d(t);\n}\n\nconst m = 1,\n      y = 1,\n      n = .75,\n      _ = .6,\n      l = 1.3;\n\nclass d {\n  constructor(e) {\n    this._view = e, this.events = new t(), this.minQuality = .1, this._maxMemory = 500, this._additionalCacheMemory = 100, this._quality = 1, this._stableQuality = 0, this._downscaleMemoryUsed = 0, this._canFastRecover = !1, this._memoryUsed = 0, this._memoryPredicted = 0, this._cacheStorage = new s(), this._numQualityChanges = 0, this._updating = !1;\n  }\n\n  destroy() {\n    this.events = null, this._cacheStorage.destroy();\n  }\n\n  getMemCache(t, e) {\n    return new a(t, this._cacheStorage, e);\n  }\n\n  set maxMemory(t) {\n    null != t && t > 0 && (this._stableQuality = 0, this._canFastRecover = !1, this._maxMemory < t && this._updateQuality(m), this._maxMemory = t);\n  }\n\n  get maxMemory() {\n    return this._maxMemory;\n  }\n\n  set additionalCacheMemory(t) {\n    null != t && t >= 0 && (this._additionalCacheMemory = t);\n  }\n\n  disableMemCache() {\n    this._additionalCacheMemory = -4096;\n  }\n\n  get memoryFactor() {\n    return this._quality;\n  }\n\n  get updating() {\n    return this._updating;\n  }\n\n  get usedMemory() {\n    return this._memoryUsed;\n  }\n\n  resetStableQuality() {\n    this._stableQuality = 0;\n  }\n\n  update() {\n    if (this._updateMemory(), this._memoryPredicted <= 0 && !this._updating) return;\n\n    let t = this._layersUpdating();\n\n    if (this._memoryPredicted < _ && this._canFastRecover) this._downscaleMemoryUsed = 0, this._stableQuality = 0, this._canFastRecover = !1, this._updateQuality(m);else if (t) (this._memoryPredicted > 1.1 * y || this._memoryUsed > y) && (this._stableQuality > 0 ? (this._downscaleMemoryUsed = 0, this._updateQuality(this._stableQuality)) : this._quality > this.minQuality && this._downscaleMemoryUsed < this._memoryUsed && (this._updateQuality(this._quality / l), this._downscaleMemoryUsed = this._memoryUsed, this._canFastRecover = !1));else if (this._downscaleMemoryUsed = 0, this._memoryUsed > y) this._stableQuality = 0, this._canFastRecover = !1, t = this._updateQuality(this._quality / l), this._downscaleMemoryUsed = this._memoryPredicted;else if (this._stableQuality !== this._quality) if (this._memoryUsed < n && this._quality < m) {\n      this._stableQuality = this._quality;\n      const e = .05;\n      t = this._updateQuality(this._quality + e);\n    } else this._quality < 1 && (this._canFastRecover = !0);\n    this.updating !== t && (this._updating = t, this.events.emit(\"updating-changed\", this.updating));\n  }\n\n  _updateQuality(t) {\n    return (t = Math.min(Math.max(t, this.minQuality), m)) !== this._quality && (this._quality = t, this.events.emit(\"quality-changed\", this._quality), ++this._numQualityChanges, !0);\n  }\n\n  _layersUpdating() {\n    return this._view.allLayerViews.some(t => !!t.updating);\n  }\n\n  _updateMemory() {\n    let t = 0,\n        e = 0;\n    this._view.basemapTerrain && this._view.basemapTerrain.getUsedMemory && (t += this._view.basemapTerrain.getUsedMemory());\n    const s = this._view._stage && this._view._stage.renderView && this._view._stage.renderView.edgeView;\n    i(s) && (t += s.usedMemory), this._view.allLayerViews && this._view.allLayerViews.forEach(i => {\n      if (r(i)) {\n        const s = i.ignoresMemoryFactor() ? this._quality : 1;\n        t += i.getUsedMemory() * s, e += i.getUnloadedMemory() * s;\n      }\n    });\n    const a = null == this._warnMemoryUsage || Math.round(10 * t) !== Math.round(10 * this._warnMemoryUsage),\n          o = 1048576 * this._maxMemory;\n\n    if (t > o && a) {\n      this._warnMemoryUsage = t;\n\n      const i = t => (t / 1048576).toLocaleString(void 0, {\n        maximumFractionDigits: 1\n      }) + \" MB\",\n            s = Math.round(100 * this._quality);\n\n      h.warn(`Memory Limit exceeded! Limit: ${i(o)} Current: ${i(t)} Projected: ${i(t + e)} Quality: ${s}%`);\n    }\n\n    this._memoryUsed = t / o, this._memoryPredicted = (t + e) / o;\n    const m = o - t;\n    this._cacheStorage.maxSize = Math.max(0, m + 1048576 * this._additionalCacheMemory), this.events.emit(\"memory-used\", this._memoryUsed);\n  }\n\n  get test() {\n    const t = this;\n    return {\n      cacheStorage: this._cacheStorage,\n      resetQualityChanges: () => {\n        const e = t._numQualityChanges;\n        return t._numQualityChanges = 0, e;\n      }\n    };\n  }\n\n}\n\nexport { o as newMemoryController };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/support/MemoryController.js"],"names":["t","e","isSome","i","MemCacheStorage","s","MemCache","a","isMemoryManagedLayerView","r","h","getLogger","o","d","m","y","n","_","l","constructor","_view","events","minQuality","_maxMemory","_additionalCacheMemory","_quality","_stableQuality","_downscaleMemoryUsed","_canFastRecover","_memoryUsed","_memoryPredicted","_cacheStorage","_numQualityChanges","_updating","destroy","getMemCache","maxMemory","_updateQuality","additionalCacheMemory","disableMemCache","memoryFactor","updating","usedMemory","resetStableQuality","update","_updateMemory","_layersUpdating","emit","Math","min","max","allLayerViews","some","basemapTerrain","getUsedMemory","_stage","renderView","edgeView","forEach","ignoresMemoryFactor","getUnloadedMemory","_warnMemoryUsage","round","toLocaleString","maximumFractionDigits","warn","maxSize","test","cacheStorage","resetQualityChanges","newMemoryController"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport t from\"../../../core/Evented.js\";import e from\"../../../core/Logger.js\";import{isSome as i}from\"../../../core/maybe.js\";import{MemCacheStorage as s,MemCache as a}from\"../../../core/MemCache.js\";import{isMemoryManagedLayerView as r}from\"../layers/support/MemoryManagedLayerView.js\";const h=e.getLogger(\"esri.views.3d.support.MemoryController\");function o(t){return new d(t)}const m=1,y=1,n=.75,_=.6,l=1.3;class d{constructor(e){this._view=e,this.events=new t,this.minQuality=.1,this._maxMemory=500,this._additionalCacheMemory=100,this._quality=1,this._stableQuality=0,this._downscaleMemoryUsed=0,this._canFastRecover=!1,this._memoryUsed=0,this._memoryPredicted=0,this._cacheStorage=new s,this._numQualityChanges=0,this._updating=!1}destroy(){this.events=null,this._cacheStorage.destroy()}getMemCache(t,e){return new a(t,this._cacheStorage,e)}set maxMemory(t){null!=t&&t>0&&(this._stableQuality=0,this._canFastRecover=!1,this._maxMemory<t&&this._updateQuality(m),this._maxMemory=t)}get maxMemory(){return this._maxMemory}set additionalCacheMemory(t){null!=t&&t>=0&&(this._additionalCacheMemory=t)}disableMemCache(){this._additionalCacheMemory=-4096}get memoryFactor(){return this._quality}get updating(){return this._updating}get usedMemory(){return this._memoryUsed}resetStableQuality(){this._stableQuality=0}update(){if(this._updateMemory(),this._memoryPredicted<=0&&!this._updating)return;let t=this._layersUpdating();if(this._memoryPredicted<_&&this._canFastRecover)this._downscaleMemoryUsed=0,this._stableQuality=0,this._canFastRecover=!1,this._updateQuality(m);else if(t)(this._memoryPredicted>1.1*y||this._memoryUsed>y)&&(this._stableQuality>0?(this._downscaleMemoryUsed=0,this._updateQuality(this._stableQuality)):this._quality>this.minQuality&&this._downscaleMemoryUsed<this._memoryUsed&&(this._updateQuality(this._quality/l),this._downscaleMemoryUsed=this._memoryUsed,this._canFastRecover=!1));else if(this._downscaleMemoryUsed=0,this._memoryUsed>y)this._stableQuality=0,this._canFastRecover=!1,t=this._updateQuality(this._quality/l),this._downscaleMemoryUsed=this._memoryPredicted;else if(this._stableQuality!==this._quality)if(this._memoryUsed<n&&this._quality<m){this._stableQuality=this._quality;const e=.05;t=this._updateQuality(this._quality+e)}else this._quality<1&&(this._canFastRecover=!0);this.updating!==t&&(this._updating=t,this.events.emit(\"updating-changed\",this.updating))}_updateQuality(t){return(t=Math.min(Math.max(t,this.minQuality),m))!==this._quality&&(this._quality=t,this.events.emit(\"quality-changed\",this._quality),++this._numQualityChanges,!0)}_layersUpdating(){return this._view.allLayerViews.some((t=>!!t.updating))}_updateMemory(){let t=0,e=0;this._view.basemapTerrain&&this._view.basemapTerrain.getUsedMemory&&(t+=this._view.basemapTerrain.getUsedMemory());const s=this._view._stage&&this._view._stage.renderView&&this._view._stage.renderView.edgeView;i(s)&&(t+=s.usedMemory),this._view.allLayerViews&&this._view.allLayerViews.forEach((i=>{if(r(i)){const s=i.ignoresMemoryFactor()?this._quality:1;t+=i.getUsedMemory()*s,e+=i.getUnloadedMemory()*s}}));const a=null==this._warnMemoryUsage||Math.round(10*t)!==Math.round(10*this._warnMemoryUsage),o=1048576*this._maxMemory;if(t>o&&a){this._warnMemoryUsage=t;const i=t=>(t/1048576).toLocaleString(void 0,{maximumFractionDigits:1})+\" MB\",s=Math.round(100*this._quality);h.warn(`Memory Limit exceeded! Limit: ${i(o)} Current: ${i(t)} Projected: ${i(t+e)} Quality: ${s}%`)}this._memoryUsed=t/o,this._memoryPredicted=(t+e)/o;const m=o-t;this._cacheStorage.maxSize=Math.max(0,m+1048576*this._additionalCacheMemory),this.events.emit(\"memory-used\",this._memoryUsed)}get test(){const t=this;return{cacheStorage:this._cacheStorage,resetQualityChanges:()=>{const e=t._numQualityChanges;return t._numQualityChanges=0,e}}}}export{o as newMemoryController};\n"]},"metadata":{},"sourceType":"module"}