{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../../../core/Logger.js\";\nimport { isSome as t } from \"../../../../core/maybe.js\";\nimport { getShaderOutputID as i, ShaderOutputTypes as r } from \"../core/shaderLibrary/ShaderOutputOptions.js\";\nimport { assert as a } from \"./Util.js\";\nconst s = e.getLogger(\"esri.views.3d.webgl-engine.lib.GLMaterialRep\");\n\nclass o {\n  constructor(e) {\n    this.refCnt = 0, this.glMaterial = e;\n  }\n\n  incRefCnt() {\n    ++this.refCnt;\n  }\n\n  decRefCnt() {\n    --this.refCnt, a(this.refCnt >= 0);\n  }\n\n  getRefCnt() {\n    return this.refCnt;\n  }\n\n  getGLMaterial() {\n    return this.glMaterial;\n  }\n\n}\n\nclass n {\n  constructor(e, t, i) {\n    this._textureRep = e, this._techniqueRep = t, this.onMaterialChanged = i, this._id2glMaterialRef = new Map();\n  }\n\n  dispose() {\n    this._textureRep.dispose();\n  }\n\n  acquire(e, t) {\n    this.ownMaterial(e);\n    const r = i(e.id, t);\n\n    let a = this._id2glMaterialRef.get(r);\n\n    if (null == a) {\n      const i = e.getGLMaterial({\n        material: e,\n        techniqueRep: this._techniqueRep,\n        textureRep: this._textureRep,\n        output: t\n      });\n      return a = new o(i), a.incRefCnt(), this._id2glMaterialRef.set(r, a), i;\n    }\n\n    return a.incRefCnt(), a.getGLMaterial();\n  }\n\n  release(e, t) {\n    const r = i(e.id, t),\n          a = this._id2glMaterialRef.get(r);\n\n    if (a.decRefCnt(), 0 === a.getRefCnt()) {\n      const e = a.getGLMaterial();\n      e && e.dispose(), this._id2glMaterialRef.delete(r);\n    }\n  }\n\n  materialChanged(e) {\n    for (const t of r) if (5 !== t.output && 6 !== t.output) {\n      const r = this._id2glMaterialRef.get(i(e.id, t.output));\n\n      if (r && r.getGLMaterial()) {\n        const e = r.getGLMaterial();\n        e.updateParameters && e.updateParameters();\n      }\n    }\n\n    this.onMaterialChanged && this.onMaterialChanged(e);\n  }\n\n  ownMaterial(e) {\n    t(e.materialRepository) && e.materialRepository !== this && s.error(\"Material is already owned by a different material repository\"), e.materialRepository = this;\n  }\n\n}\n\nexport default n;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/lib/GLMaterialRep.js"],"names":["e","isSome","t","getShaderOutputID","i","ShaderOutputTypes","r","assert","a","s","getLogger","o","constructor","refCnt","glMaterial","incRefCnt","decRefCnt","getRefCnt","getGLMaterial","n","_textureRep","_techniqueRep","onMaterialChanged","_id2glMaterialRef","Map","dispose","acquire","ownMaterial","id","get","material","techniqueRep","textureRep","output","set","release","delete","materialChanged","updateParameters","materialRepository","error"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Logger.js\";import{isSome as t}from\"../../../../core/maybe.js\";import{getShaderOutputID as i,ShaderOutputTypes as r}from\"../core/shaderLibrary/ShaderOutputOptions.js\";import{assert as a}from\"./Util.js\";const s=e.getLogger(\"esri.views.3d.webgl-engine.lib.GLMaterialRep\");class o{constructor(e){this.refCnt=0,this.glMaterial=e}incRefCnt(){++this.refCnt}decRefCnt(){--this.refCnt,a(this.refCnt>=0)}getRefCnt(){return this.refCnt}getGLMaterial(){return this.glMaterial}}class n{constructor(e,t,i){this._textureRep=e,this._techniqueRep=t,this.onMaterialChanged=i,this._id2glMaterialRef=new Map}dispose(){this._textureRep.dispose()}acquire(e,t){this.ownMaterial(e);const r=i(e.id,t);let a=this._id2glMaterialRef.get(r);if(null==a){const i=e.getGLMaterial({material:e,techniqueRep:this._techniqueRep,textureRep:this._textureRep,output:t});return a=new o(i),a.incRefCnt(),this._id2glMaterialRef.set(r,a),i}return a.incRefCnt(),a.getGLMaterial()}release(e,t){const r=i(e.id,t),a=this._id2glMaterialRef.get(r);if(a.decRefCnt(),0===a.getRefCnt()){const e=a.getGLMaterial();e&&e.dispose(),this._id2glMaterialRef.delete(r)}}materialChanged(e){for(const t of r)if(5!==t.output&&6!==t.output){const r=this._id2glMaterialRef.get(i(e.id,t.output));if(r&&r.getGLMaterial()){const e=r.getGLMaterial();e.updateParameters&&e.updateParameters()}}this.onMaterialChanged&&this.onMaterialChanged(e)}ownMaterial(e){t(e.materialRepository)&&e.materialRepository!==this&&s.error(\"Material is already owned by a different material repository\"),e.materialRepository=this}}export default n;\n"]},"metadata":{},"sourceType":"module"}