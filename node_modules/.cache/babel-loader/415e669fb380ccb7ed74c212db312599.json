{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { lerp as t, clamp as e } from \"../../../core/mathUtils.js\";\nimport { getMetersPerUnitForSR as i } from \"../../../core/unitUtils.js\";\nimport { f as r, n as s, d as n, l as a } from \"../../../chunks/vec3.js\";\nimport { c as o } from \"../../../chunks/vec3f64.js\";\nimport { getReferenceEllipsoid as m } from \"../../../geometry/projectionEllipsoid.js\";\n\nfunction h(t, e, i) {\n  return 1 === t ? new l(i) : new c(e, i);\n}\n\nclass c {\n  constructor(t, e) {\n    this.elevationProvider = t, this._referenceEllipsoid = m(e), this.unitInMeters = i(e, this._referenceEllipsoid.metersPerDegree);\n  }\n\n  compute(i, a, o, m, h) {\n    h || (h = {\n      near: 0,\n      far: 0\n    });\n    let c = i[2] * this.unitInMeters;\n    const l = c,\n          M = c - m,\n          v = this.elevationProvider ? this.elevationProvider.elevationBounds : null;\n    v && (c = M >= 0 ? l - this.unitInMeters * v.min : this.unitInMeters * v.max - l);\n    const I = {\n      x: o.xmax - o.xmin,\n      y: o.ymax - o.ymin,\n      z: 4 * Math.max(o.xmax - o.xmin, o.ymax - o.ymin)\n    },\n          E = Math.max(I.x, I.y, I.z);\n    r(y, a, i), d[0] = y[0] > 0 ? o.xmax : o.xmin, d[1] = y[1] > 0 ? o.ymax : o.ymin, d[2] = y[2] > 0 ? E / 2 : -E / 2, r(d, d, i), s(y, y);\n\n    const j = 1.1 * n(d, y) * this.unitInMeters,\n          _ = Math.sqrt(c * (c + 2 * this._referenceEllipsoid.radius)),\n          g = Math.max(o.xmax - o.xmin, o.ymax - o.ymin),\n          P = g * f * this.unitInMeters,\n          b = g * p * this.unitInMeters;\n\n    let k = e((c - b) / (P - b), 0, 1);\n    k *= k * k;\n    let q = t(_, j, k);\n    return q *= Math.max(Math.log(Math.abs(M)), 1), q = Math.min(q, Math.max(34064e4, E)), q /= this.unitInMeters, u(q, x, this.unitInMeters, h);\n  }\n\n}\n\nclass l {\n  constructor(t) {\n    this._referenceEllipsoid = m(t);\n  }\n\n  compute(t, i, r, s, n) {\n    n || (n = {\n      near: 0,\n      far: 0\n    });\n\n    const o = a(t) - this._referenceEllipsoid.radius,\n          m = this._referenceEllipsoid.radius + Math.min(0, s),\n          h = Math.abs(o - s),\n          c = Math.max(h, Math.abs(o));\n\n    return u(1.2 * Math.sqrt(c * (c + 2 * m)), e(2e4 - (Math.log(c) - 7.983) / 9.011 * 19e3, 1e3, 2e4), 1, n);\n  }\n\n}\n\nfunction u(t, e, i, r) {\n  const s = M / i;\n  return t / e > s ? (r.far = t, r.near = r.far / e) : (r.near = s, r.far = r.near * e), r;\n}\n\nconst x = 2e4,\n      M = 2,\n      f = .001,\n      p = 1e-4,\n      d = o(),\n      y = o();\nexport { h as createNearFarHeuristic };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/state/NearFarHeuristic.js"],"names":["lerp","t","clamp","e","getMetersPerUnitForSR","i","f","r","n","s","d","l","a","c","o","getReferenceEllipsoid","m","h","constructor","elevationProvider","_referenceEllipsoid","unitInMeters","metersPerDegree","compute","near","far","M","v","elevationBounds","min","max","I","x","xmax","xmin","y","ymax","ymin","z","Math","E","j","_","sqrt","radius","g","P","b","p","k","q","log","abs","u","createNearFarHeuristic"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{lerp as t,clamp as e}from\"../../../core/mathUtils.js\";import{getMetersPerUnitForSR as i}from\"../../../core/unitUtils.js\";import{f as r,n as s,d as n,l as a}from\"../../../chunks/vec3.js\";import{c as o}from\"../../../chunks/vec3f64.js\";import{getReferenceEllipsoid as m}from\"../../../geometry/projectionEllipsoid.js\";function h(t,e,i){return 1===t?new l(i):new c(e,i)}class c{constructor(t,e){this.elevationProvider=t,this._referenceEllipsoid=m(e),this.unitInMeters=i(e,this._referenceEllipsoid.metersPerDegree)}compute(i,a,o,m,h){h||(h={near:0,far:0});let c=i[2]*this.unitInMeters;const l=c,M=c-m,v=this.elevationProvider?this.elevationProvider.elevationBounds:null;v&&(c=M>=0?l-this.unitInMeters*v.min:this.unitInMeters*v.max-l);const I={x:o.xmax-o.xmin,y:o.ymax-o.ymin,z:4*Math.max(o.xmax-o.xmin,o.ymax-o.ymin)},E=Math.max(I.x,I.y,I.z);r(y,a,i),d[0]=y[0]>0?o.xmax:o.xmin,d[1]=y[1]>0?o.ymax:o.ymin,d[2]=y[2]>0?E/2:-E/2,r(d,d,i),s(y,y);const j=1.1*n(d,y)*this.unitInMeters,_=Math.sqrt(c*(c+2*this._referenceEllipsoid.radius)),g=Math.max(o.xmax-o.xmin,o.ymax-o.ymin),P=g*f*this.unitInMeters,b=g*p*this.unitInMeters;let k=e((c-b)/(P-b),0,1);k*=k*k;let q=t(_,j,k);return q*=Math.max(Math.log(Math.abs(M)),1),q=Math.min(q,Math.max(34064e4,E)),q/=this.unitInMeters,u(q,x,this.unitInMeters,h)}}class l{constructor(t){this._referenceEllipsoid=m(t)}compute(t,i,r,s,n){n||(n={near:0,far:0});const o=a(t)-this._referenceEllipsoid.radius,m=this._referenceEllipsoid.radius+Math.min(0,s),h=Math.abs(o-s),c=Math.max(h,Math.abs(o));return u(1.2*Math.sqrt(c*(c+2*m)),e(2e4-(Math.log(c)-7.983)/9.011*19e3,1e3,2e4),1,n)}}function u(t,e,i,r){const s=M/i;return t/e>s?(r.far=t,r.near=r.far/e):(r.near=s,r.far=r.near*e),r}const x=2e4,M=2,f=.001,p=1e-4,d=o(),y=o();export{h as createNearFarHeuristic};\n"]},"metadata":{},"sourceType":"module"}