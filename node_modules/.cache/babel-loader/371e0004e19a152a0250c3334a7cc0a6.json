{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../config.js\";\nimport r from \"../../core/Error.js\";\nimport t from \"../Portal.js\";\nimport o from \"../../rest/support/ProjectParameters.js\";\n\nasync function i(o = null, i) {\n  if (e.geometryServiceUrl) {\n    return new (0, (await import(\"../../tasks/GeometryService.js\")).default)({\n      url: e.geometryServiceUrl\n    });\n  }\n\n  if (!o) throw new r(\"internal:geometry-service-url-not-configured\");\n  let n;\n\n  if (n = \"portal\" in o ? o.portal || t.getDefault() : o, await n.load({\n    signal: i\n  }), n.helperServices && n.helperServices.geometry && n.helperServices.geometry.url) {\n    return new (0, (await import(\"../../tasks/GeometryService.js\")).default)({\n      url: n.helperServices.geometry.url\n    });\n  }\n\n  throw new r(\"internal:geometry-service-url-not-configured\");\n}\n\nasync function n(e, t, n = null, a) {\n  const l = await i(n, a),\n        s = new o();\n  s.geometries = [e], s.outSpatialReference = t;\n  const c = await l.project(s, {\n    signal: a\n  });\n  if (c && Array.isArray(c) && 1 === c.length) return c[0];\n  throw new r(\"internal:geometry-service-projection-failed\");\n}\n\nexport { i as create, n as projectGeometry };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/portal/support/geometryServiceUtils.js"],"names":["e","r","t","o","i","geometryServiceUrl","default","url","n","portal","getDefault","load","signal","helperServices","geometry","a","l","s","geometries","outSpatialReference","c","project","Array","isArray","length","create","projectGeometry"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,iBAAb;AAA+B,OAAOC,CAAP,MAAa,qBAAb;AAAmC,OAAOC,CAAP,MAAa,cAAb;AAA4B,OAAOC,CAAP,MAAa,yCAAb;;AAAuD,eAAeC,CAAf,CAAiBD,CAAC,GAAC,IAAnB,EAAwBC,CAAxB,EAA0B;AAAC,MAAGJ,CAAC,CAACK,kBAAL,EAAwB;AAAC,WAAO,KAAI,GAAE,CAAC,MAAM,OAAO,gCAAP,CAAP,EAAiDC,OAAvD,EAAgE;AAACC,MAAAA,GAAG,EAACP,CAAC,CAACK;AAAP,KAAhE,CAAP;AAAmG;;AAAA,MAAG,CAACF,CAAJ,EAAM,MAAM,IAAIF,CAAJ,CAAM,8CAAN,CAAN;AAA4D,MAAIO,CAAJ;;AAAM,MAAGA,CAAC,GAAC,YAAWL,CAAX,GAAaA,CAAC,CAACM,MAAF,IAAUP,CAAC,CAACQ,UAAF,EAAvB,GAAsCP,CAAxC,EAA0C,MAAMK,CAAC,CAACG,IAAF,CAAO;AAACC,IAAAA,MAAM,EAACR;AAAR,GAAP,CAAhD,EAAmEI,CAAC,CAACK,cAAF,IAAkBL,CAAC,CAACK,cAAF,CAAiBC,QAAnC,IAA6CN,CAAC,CAACK,cAAF,CAAiBC,QAAjB,CAA0BP,GAA7I,EAAiJ;AAAC,WAAO,KAAI,GAAE,CAAC,MAAM,OAAO,gCAAP,CAAP,EAAiDD,OAAvD,EAAgE;AAACC,MAAAA,GAAG,EAACC,CAAC,CAACK,cAAF,CAAiBC,QAAjB,CAA0BP;AAA/B,KAAhE,CAAP;AAA4G;;AAAA,QAAM,IAAIN,CAAJ,CAAM,8CAAN,CAAN;AAA4D;;AAAA,eAAeO,CAAf,CAAiBR,CAAjB,EAAmBE,CAAnB,EAAqBM,CAAC,GAAC,IAAvB,EAA4BO,CAA5B,EAA8B;AAAC,QAAMC,CAAC,GAAC,MAAMZ,CAAC,CAACI,CAAD,EAAGO,CAAH,CAAf;AAAA,QAAqBE,CAAC,GAAC,IAAId,CAAJ,EAAvB;AAA6Bc,EAAAA,CAAC,CAACC,UAAF,GAAa,CAAClB,CAAD,CAAb,EAAiBiB,CAAC,CAACE,mBAAF,GAAsBjB,CAAvC;AAAyC,QAAMkB,CAAC,GAAC,MAAMJ,CAAC,CAACK,OAAF,CAAUJ,CAAV,EAAY;AAACL,IAAAA,MAAM,EAACG;AAAR,GAAZ,CAAd;AAAsC,MAAGK,CAAC,IAAEE,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAH,IAAqB,MAAIA,CAAC,CAACI,MAA9B,EAAqC,OAAOJ,CAAC,CAAC,CAAD,CAAR;AAAY,QAAM,IAAInB,CAAJ,CAAM,6CAAN,CAAN;AAA2D;;AAAA,SAAOG,CAAC,IAAIqB,MAAZ,EAAmBjB,CAAC,IAAIkB,eAAxB","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../config.js\";import r from\"../../core/Error.js\";import t from\"../Portal.js\";import o from\"../../rest/support/ProjectParameters.js\";async function i(o=null,i){if(e.geometryServiceUrl){return new(0,(await import(\"../../tasks/GeometryService.js\")).default)({url:e.geometryServiceUrl})}if(!o)throw new r(\"internal:geometry-service-url-not-configured\");let n;if(n=\"portal\"in o?o.portal||t.getDefault():o,await n.load({signal:i}),n.helperServices&&n.helperServices.geometry&&n.helperServices.geometry.url){return new(0,(await import(\"../../tasks/GeometryService.js\")).default)({url:n.helperServices.geometry.url})}throw new r(\"internal:geometry-service-url-not-configured\")}async function n(e,t,n=null,a){const l=await i(n,a),s=new o;s.geometries=[e],s.outSpatialReference=t;const c=await l.project(s,{signal:a});if(c&&Array.isArray(c)&&1===c.length)return c[0];throw new r(\"internal:geometry-service-projection-failed\")}export{i as create,n as projectGeometry};\n"]},"metadata":{},"sourceType":"module"}