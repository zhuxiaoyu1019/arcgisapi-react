{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../../shaderModules/interfaces.js\";\n\nfunction t(t, o) {\n  t.varyings.add(\"vtc\", \"vec2\"), t.vertex.uniforms.add(\"texOffsetAndScale\", \"vec4\"), t.fragment.uniforms.add(\"tex\", \"sampler2D\"), t.fragment.uniforms.add(\"compositeBackground\", \"bool\"), t.fragment.uniforms.add(\"textureOpacity\", \"float\"), t.fragment.uniforms.add(\"baseOpacity\", \"float\"), o.textureFadingEnabled && (t.vertex.uniforms.add(\"nextTexOffsetAndScale\", \"vec4\"), t.varyings.add(\"nvtc\", \"vec2\"), t.fragment.uniforms.add(\"texNext\", \"sampler2D\"), t.fragment.uniforms.add(\"textureFadeFactor\", \"float\")), t.vertex.code.add(e`\n  void forwardTextureCoordinates(in vec2 uv) {\n    vtc = uv * texOffsetAndScale.zw + texOffsetAndScale.xy;\n    ${o.textureFadingEnabled ? e`nvtc = uv * nextTexOffsetAndScale.zw + nextTexOffsetAndScale.xy;` : e``}\n  }\n  `), o.useGrid ? (t.fragment.code.add(e`float lineFactorAtPosition(float value) {\nfloat pos = value * 129.0;\nif(pos < 0.5 || pos > 128.5) {\nreturn 1.0;\n}\npos = pos + 0.5;\nfloat modulo = mod(pos, 16.0);\nreturn modulo <= 2.0 ?  1.0 - abs(modulo - 1.0) : 0.0;\n}\nfloat lineFactorAtUV(vec2 uv) {\nreturn max(lineFactorAtPosition(uv.x), lineFactorAtPosition(uv.y));\n}\nfloat lineFactor(vec2 uv) {\nvec2 offset = fwidth(uv) * 0.25;\nreturn (lineFactorAtUV(vec2(uv.x + offset.x, uv.y + offset.y)) +\nlineFactorAtUV(vec2(uv.x - offset.x, uv.y + offset.y)) +\nlineFactorAtUV(vec2(uv.x + offset.x, uv.y - offset.y)) +\nlineFactorAtUV(vec2(uv.x - offset.x, uv.y - offset.y))) / 4.0;\n}`), t.fragment.code.add(e`\n    vec4 getTileColor() {\n      vec4 color = ${o.textureFadingEnabled ? e`textureFadeFactor < 1.0 ? mix(texture2D(texNext, nvtc), texture2D(tex, vtc), textureFadeFactor) : texture2D(tex, vtc);` : e`texture2D(tex, vtc);`};\n      if(!compositeBackground) {\n        return color;\n      }\n\n      float line = lineFactor(vtc) * 0.1 + 0.9;\n      vec4 gridColor = vec4(1.0, 0.972, 0.918, 1.0) * line * baseOpacity;\n      float alpha = textureOpacity * color.a;\n      return mix(gridColor, color, alpha);\n    }`)) : o.hasBackgroundColor ? (t.fragment.uniforms.add(\"backgroundColor\", \"vec4\"), t.fragment.code.add(e`\n    vec4 getTileColor() {\n      vec4 color = ${o.textureFadingEnabled ? e`textureFadeFactor < 1.0 ? mix(texture2D(texNext, nvtc), texture2D(tex, vtc), textureFadeFactor) : texture2D(tex, vtc);` : e`texture2D(tex, vtc);`};\n      float alpha = textureOpacity * color.a;\n      return compositeBackground ? mix(backgroundColor * baseOpacity, color, alpha) : color;\n    }`)) : t.fragment.code.add(e`\n    vec4 getTileColor() {\n      return ${o.textureFadingEnabled ? e`textureFadeFactor < 1.0 ? mix(texture2D(texNext, nvtc), texture2D(tex, vtc), textureFadeFactor) : texture2D(tex, vtc);` : e`texture2D(tex, vtc);`}\n  }\n  `);\n}\n\nexport { t as TerrainTexture };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/terrain/TerrainTexture.glsl.js"],"names":["glsl","e","t","o","varyings","add","vertex","uniforms","fragment","textureFadingEnabled","code","useGrid","hasBackgroundColor","TerrainTexture"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,mCAArB;;AAAyD,SAASC,CAAT,CAAWA,CAAX,EAAaC,CAAb,EAAe;AAACD,EAAAA,CAAC,CAACE,QAAF,CAAWC,GAAX,CAAe,KAAf,EAAqB,MAArB,GAA6BH,CAAC,CAACI,MAAF,CAASC,QAAT,CAAkBF,GAAlB,CAAsB,mBAAtB,EAA0C,MAA1C,CAA7B,EAA+EH,CAAC,CAACM,QAAF,CAAWD,QAAX,CAAoBF,GAApB,CAAwB,KAAxB,EAA8B,WAA9B,CAA/E,EAA0HH,CAAC,CAACM,QAAF,CAAWD,QAAX,CAAoBF,GAApB,CAAwB,qBAAxB,EAA8C,MAA9C,CAA1H,EAAgLH,CAAC,CAACM,QAAF,CAAWD,QAAX,CAAoBF,GAApB,CAAwB,gBAAxB,EAAyC,OAAzC,CAAhL,EAAkOH,CAAC,CAACM,QAAF,CAAWD,QAAX,CAAoBF,GAApB,CAAwB,aAAxB,EAAsC,OAAtC,CAAlO,EAAiRF,CAAC,CAACM,oBAAF,KAAyBP,CAAC,CAACI,MAAF,CAASC,QAAT,CAAkBF,GAAlB,CAAsB,uBAAtB,EAA8C,MAA9C,GAAsDH,CAAC,CAACE,QAAF,CAAWC,GAAX,CAAe,MAAf,EAAsB,MAAtB,CAAtD,EAAoFH,CAAC,CAACM,QAAF,CAAWD,QAAX,CAAoBF,GAApB,CAAwB,SAAxB,EAAkC,WAAlC,CAApF,EAAmIH,CAAC,CAACM,QAAF,CAAWD,QAAX,CAAoBF,GAApB,CAAwB,mBAAxB,EAA4C,OAA5C,CAA5J,CAAjR,EAAmeH,CAAC,CAACI,MAAF,CAASI,IAAT,CAAcL,GAAd,CAAkBJ,CAAE;AAChkB;AACA;AACA,MAAME,CAAC,CAACM,oBAAF,GAAuBR,CAAE,kEAAzB,GAA2FA,CAAE,EAAE;AACrG;AACA,GAL4iB,CAAne,EAKpEE,CAAC,CAACQ,OAAF,IAAWT,CAAC,CAACM,QAAF,CAAWE,IAAX,CAAgBL,GAAhB,CAAoBJ,CAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAlBgB,GAkBZC,CAAC,CAACM,QAAF,CAAWE,IAAX,CAAgBL,GAAhB,CAAoBJ,CAAE;AAC1B;AACA,qBAAqBE,CAAC,CAACM,oBAAF,GAAuBR,CAAE,wHAAzB,GAAiJA,CAAE,sBAAsB;AAC9L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAXI,CAlBC,IA6BIE,CAAC,CAACS,kBAAF,IAAsBV,CAAC,CAACM,QAAF,CAAWD,QAAX,CAAoBF,GAApB,CAAwB,iBAAxB,EAA0C,MAA1C,GAAkDH,CAAC,CAACM,QAAF,CAAWE,IAAX,CAAgBL,GAAhB,CAAoBJ,CAAE;AACvG;AACA,qBAAqBE,CAAC,CAACM,oBAAF,GAAuBR,CAAE,wHAAzB,GAAiJA,CAAE,sBAAsB;AAC9L;AACA;AACA,MALiF,CAAxE,IAKAC,CAAC,CAACM,QAAF,CAAWE,IAAX,CAAgBL,GAAhB,CAAoBJ,CAAE;AAC/B;AACA,eAAeE,CAAC,CAACM,oBAAF,GAAuBR,CAAE,wHAAzB,GAAiJA,CAAE,sBAAsB;AACxL;AACA,GAJS,CAvCgE;AA2CpE;;AAAA,SAAOC,CAAC,IAAIW,cAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function t(t,o){t.varyings.add(\"vtc\",\"vec2\"),t.vertex.uniforms.add(\"texOffsetAndScale\",\"vec4\"),t.fragment.uniforms.add(\"tex\",\"sampler2D\"),t.fragment.uniforms.add(\"compositeBackground\",\"bool\"),t.fragment.uniforms.add(\"textureOpacity\",\"float\"),t.fragment.uniforms.add(\"baseOpacity\",\"float\"),o.textureFadingEnabled&&(t.vertex.uniforms.add(\"nextTexOffsetAndScale\",\"vec4\"),t.varyings.add(\"nvtc\",\"vec2\"),t.fragment.uniforms.add(\"texNext\",\"sampler2D\"),t.fragment.uniforms.add(\"textureFadeFactor\",\"float\")),t.vertex.code.add(e`\n  void forwardTextureCoordinates(in vec2 uv) {\n    vtc = uv * texOffsetAndScale.zw + texOffsetAndScale.xy;\n    ${o.textureFadingEnabled?e`nvtc = uv * nextTexOffsetAndScale.zw + nextTexOffsetAndScale.xy;`:e``}\n  }\n  `),o.useGrid?(t.fragment.code.add(e`float lineFactorAtPosition(float value) {\nfloat pos = value * 129.0;\nif(pos < 0.5 || pos > 128.5) {\nreturn 1.0;\n}\npos = pos + 0.5;\nfloat modulo = mod(pos, 16.0);\nreturn modulo <= 2.0 ?  1.0 - abs(modulo - 1.0) : 0.0;\n}\nfloat lineFactorAtUV(vec2 uv) {\nreturn max(lineFactorAtPosition(uv.x), lineFactorAtPosition(uv.y));\n}\nfloat lineFactor(vec2 uv) {\nvec2 offset = fwidth(uv) * 0.25;\nreturn (lineFactorAtUV(vec2(uv.x + offset.x, uv.y + offset.y)) +\nlineFactorAtUV(vec2(uv.x - offset.x, uv.y + offset.y)) +\nlineFactorAtUV(vec2(uv.x + offset.x, uv.y - offset.y)) +\nlineFactorAtUV(vec2(uv.x - offset.x, uv.y - offset.y))) / 4.0;\n}`),t.fragment.code.add(e`\n    vec4 getTileColor() {\n      vec4 color = ${o.textureFadingEnabled?e`textureFadeFactor < 1.0 ? mix(texture2D(texNext, nvtc), texture2D(tex, vtc), textureFadeFactor) : texture2D(tex, vtc);`:e`texture2D(tex, vtc);`};\n      if(!compositeBackground) {\n        return color;\n      }\n\n      float line = lineFactor(vtc) * 0.1 + 0.9;\n      vec4 gridColor = vec4(1.0, 0.972, 0.918, 1.0) * line * baseOpacity;\n      float alpha = textureOpacity * color.a;\n      return mix(gridColor, color, alpha);\n    }`)):o.hasBackgroundColor?(t.fragment.uniforms.add(\"backgroundColor\",\"vec4\"),t.fragment.code.add(e`\n    vec4 getTileColor() {\n      vec4 color = ${o.textureFadingEnabled?e`textureFadeFactor < 1.0 ? mix(texture2D(texNext, nvtc), texture2D(tex, vtc), textureFadeFactor) : texture2D(tex, vtc);`:e`texture2D(tex, vtc);`};\n      float alpha = textureOpacity * color.a;\n      return compositeBackground ? mix(backgroundColor * baseOpacity, color, alpha) : color;\n    }`)):t.fragment.code.add(e`\n    vec4 getTileColor() {\n      return ${o.textureFadingEnabled?e`textureFadeFactor < 1.0 ? mix(texture2D(texNext, nvtc), texture2D(tex, vtc), textureFadeFactor) : texture2D(tex, vtc);`:e`texture2D(tex, vtc);`}\n  }\n  `)}export{t as TerrainTexture};\n"]},"metadata":{},"sourceType":"module"}