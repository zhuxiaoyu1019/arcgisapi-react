{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { Transform as o } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { glsl as e } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as i } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\n\nfunction t(t) {\n  const r = new i();\n  if (2 === t.geometry) r.attributes.add(\"position\", \"vec2\"), r.varyings.add(\"color\", \"vec4\"), r.vertex.uniforms.add(\"lightingMainDirection\", \"vec3\").add(\"cameraPosition\", \"vec3\").add(\"undergroundFadeAlpha\", \"float\"), r.vertex.code.add(e`void main(void) {\nfloat ndotl = dot(normalize(cameraPosition), lightingMainDirection);\nfloat lighting = max(0.0, smoothstep(-1.0, 0.8, 2.0 * ndotl));\ncolor = vec4(vec3(lighting), undergroundFadeAlpha);\ngl_Position = vec4(position.xy, 1.0, 1.0);\n}`), r.fragment.code.add(e`void main() {\ngl_FragColor = color;\n}`);else {\n    r.include(o, {\n      linearDepth: !1\n    }), r.attributes.add(\"position\", \"vec3\"), r.varyings.add(\"vtc\", \"vec2\"), r.varyings.add(\"falloff\", \"float\");\n    const i = 1 === t.geometry;\n    r.vertex.uniforms.add(\"proj\", \"mat4\").add(\"view\", \"mat4\").add(\"lightingMainDirection\", \"vec3\"), i || (r.varyings.add(\"innerFactor\", \"float\"), r.vertex.uniforms.add(\"silCircleCenter\", \"vec3\").add(\"silCircleV1\", \"vec3\").add(\"silCircleV2\", \"vec3\").add(\"texV\", \"vec2\").add(\"innerScale\", \"float\"));\n    const a = 6.2831853,\n          n = 1 / 128;\n    r.vertex.code.add(e`\n\t\tvoid main(void) {\n      ${i ? e`\n      vec3 pos = position;\n      float ndotl = lightingMainDirection.z;\n      vtc = vec2(0.0, position.z + 0.05);` : e`\n      innerFactor = clamp(-position.z, 0.0, 1.0);\n      float scale = position.y * (1.0 + innerFactor * innerScale);\n      float phi = position.x * ${e.float(a * n)} + 1.0;\n      vec3 pos =  (silCircleCenter + sin(phi) * silCircleV1 + cos(phi) * silCircleV2) * scale;\n      float ndotl = dot(normalize(position.y > 0.0 ? pos: silCircleCenter), lightingMainDirection);\n      vtc.x = position.x  * ${e.float(n)};\n      vtc.y = texV.x * (1.0 - position.z) + texV.y * position.z;\n      `}\n      falloff = max(0.0, smoothstep(-1.0, 0.8, 2.0 * ndotl));\n\n\t\t  gl_Position = transformPosition(proj, view, pos);\n\t\t  gl_Position.z = gl_Position.w; // project atmosphere onto the far plane\n    }\n\t  `), r.fragment.uniforms.add(\"tex\", \"sampler2D\"), i || r.fragment.uniforms.add(\"altitudeFade\", \"float\"), r.fragment.code.add(e`\n\t\tvoid main() {\n\t\t\tvec4 atmosphereColor = texture2D(tex, vtc) * falloff;\n      ${i ? e`gl_FragColor = atmosphereColor;` : e`\n\t\t\tvec4 innerColor = vec4(atmosphereColor.rgb, 1.0 - altitudeFade);\n\t\t\tgl_FragColor = mix(atmosphereColor, innerColor, smoothstep(0.0, 1.0, innerFactor));\n      `}\n    }`);\n  }\n  return r;\n}\n\nvar r = Object.freeze({\n  __proto__: null,\n  build: t\n});\nexport { r as S, t as b };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/chunks/SimpleAtmosphere.glsl.js"],"names":["Transform","o","glsl","e","ShaderBuilder","i","t","r","geometry","attributes","add","varyings","vertex","uniforms","code","fragment","include","linearDepth","a","n","float","Object","freeze","__proto__","build","S","b"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{Transform as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{glsl as e}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as i}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";function t(t){const r=new i;if(2===t.geometry)r.attributes.add(\"position\",\"vec2\"),r.varyings.add(\"color\",\"vec4\"),r.vertex.uniforms.add(\"lightingMainDirection\",\"vec3\").add(\"cameraPosition\",\"vec3\").add(\"undergroundFadeAlpha\",\"float\"),r.vertex.code.add(e`void main(void) {\nfloat ndotl = dot(normalize(cameraPosition), lightingMainDirection);\nfloat lighting = max(0.0, smoothstep(-1.0, 0.8, 2.0 * ndotl));\ncolor = vec4(vec3(lighting), undergroundFadeAlpha);\ngl_Position = vec4(position.xy, 1.0, 1.0);\n}`),r.fragment.code.add(e`void main() {\ngl_FragColor = color;\n}`);else{r.include(o,{linearDepth:!1}),r.attributes.add(\"position\",\"vec3\"),r.varyings.add(\"vtc\",\"vec2\"),r.varyings.add(\"falloff\",\"float\");const i=1===t.geometry;r.vertex.uniforms.add(\"proj\",\"mat4\").add(\"view\",\"mat4\").add(\"lightingMainDirection\",\"vec3\"),i||(r.varyings.add(\"innerFactor\",\"float\"),r.vertex.uniforms.add(\"silCircleCenter\",\"vec3\").add(\"silCircleV1\",\"vec3\").add(\"silCircleV2\",\"vec3\").add(\"texV\",\"vec2\").add(\"innerScale\",\"float\"));const a=6.2831853,n=1/128;r.vertex.code.add(e`\n\t\tvoid main(void) {\n      ${i?e`\n      vec3 pos = position;\n      float ndotl = lightingMainDirection.z;\n      vtc = vec2(0.0, position.z + 0.05);`:e`\n      innerFactor = clamp(-position.z, 0.0, 1.0);\n      float scale = position.y * (1.0 + innerFactor * innerScale);\n      float phi = position.x * ${e.float(a*n)} + 1.0;\n      vec3 pos =  (silCircleCenter + sin(phi) * silCircleV1 + cos(phi) * silCircleV2) * scale;\n      float ndotl = dot(normalize(position.y > 0.0 ? pos: silCircleCenter), lightingMainDirection);\n      vtc.x = position.x  * ${e.float(n)};\n      vtc.y = texV.x * (1.0 - position.z) + texV.y * position.z;\n      `}\n      falloff = max(0.0, smoothstep(-1.0, 0.8, 2.0 * ndotl));\n\n\t\t  gl_Position = transformPosition(proj, view, pos);\n\t\t  gl_Position.z = gl_Position.w; // project atmosphere onto the far plane\n    }\n\t  `),r.fragment.uniforms.add(\"tex\",\"sampler2D\"),i||r.fragment.uniforms.add(\"altitudeFade\",\"float\"),r.fragment.code.add(e`\n\t\tvoid main() {\n\t\t\tvec4 atmosphereColor = texture2D(tex, vtc) * falloff;\n      ${i?e`gl_FragColor = atmosphereColor;`:e`\n\t\t\tvec4 innerColor = vec4(atmosphereColor.rgb, 1.0 - altitudeFade);\n\t\t\tgl_FragColor = mix(atmosphereColor, innerColor, smoothstep(0.0, 1.0, innerFactor));\n      `}\n    }`)}return r}var r=Object.freeze({__proto__:null,build:t});export{r as S,t as b};\n"]},"metadata":{},"sourceType":"module"}