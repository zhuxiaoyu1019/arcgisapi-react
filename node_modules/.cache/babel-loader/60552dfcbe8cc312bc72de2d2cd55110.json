{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport r from \"../../core/Error.js\";\nimport { isSome as t } from \"../../core/maybe.js\";\nimport { eachAlways as o } from \"../../core/promiseUtils.js\";\nimport { property as s } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/has.js\";\nimport \"../../core/accessorSupport/ensureType.js\";\nimport \"../../core/Logger.js\";\nimport { subclass as a } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { calculateTolerance as p } from \"../../renderers/support/clickToleranceUtils.js\";\n\nconst i = i => {\n  let c = class extends i {\n    async fetchPopupFeatures(e, s) {\n      const {\n        layer: a\n      } = this;\n      if (!e) return Promise.reject(new r(\"tilelayerview:fetchPopupFeatures\", \"Nothing to fetch without area\", {\n        layer: a\n      }));\n      if (\"tile\" !== a.type) return Promise.reject(new r(\"tilelayerview:fetchPopupFeatures\", \"Layer type should be 'tile'\", {\n        type: a.type\n      }));\n      const i = this.get(\"view.scale\"),\n            c = a.allSublayers.toArray().filter(e => {\n        const r = 0 === e.minScale || i <= e.minScale,\n              t = 0 === e.maxScale || i >= e.maxScale;\n        return e.popupTemplate && e.popupEnabled && e.visible && r && t;\n      });\n      return o(c.map(async r => {\n        const o = r.createQuery(),\n              a = t(s) ? s.event : null,\n              i = p({\n          renderer: r.renderer,\n          event: a\n        });\n        o.geometry = this.createFetchPopupFeaturesQueryGeometry(e, i), o.outFields = await r.popupTemplate.getRequiredFields();\n        return (await r.queryFeatures(o)).features;\n      })).then(e => [].concat(...e.map(e => e.value).filter(Boolean)));\n    }\n\n  };\n  return e([s()], c.prototype, \"layer\", void 0), c = e([a(\"esri.layers.mixins.TileLayerView\")], c), c;\n};\n\nexport default i;\nexport { i as TileLayerView };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/layers/TileLayerView.js"],"names":["_","e","r","isSome","t","eachAlways","o","property","s","subclass","a","calculateTolerance","p","i","c","fetchPopupFeatures","layer","Promise","reject","type","get","allSublayers","toArray","filter","minScale","maxScale","popupTemplate","popupEnabled","visible","map","createQuery","event","renderer","geometry","createFetchPopupFeaturesQueryGeometry","outFields","getRequiredFields","queryFeatures","features","then","concat","value","Boolean","prototype","TileLayerView"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import r from\"../../core/Error.js\";import{isSome as t}from\"../../core/maybe.js\";import{eachAlways as o}from\"../../core/promiseUtils.js\";import{property as s}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/has.js\";import\"../../core/accessorSupport/ensureType.js\";import\"../../core/Logger.js\";import{subclass as a}from\"../../core/accessorSupport/decorators/subclass.js\";import{calculateTolerance as p}from\"../../renderers/support/clickToleranceUtils.js\";const i=i=>{let c=class extends i{async fetchPopupFeatures(e,s){const{layer:a}=this;if(!e)return Promise.reject(new r(\"tilelayerview:fetchPopupFeatures\",\"Nothing to fetch without area\",{layer:a}));if(\"tile\"!==a.type)return Promise.reject(new r(\"tilelayerview:fetchPopupFeatures\",\"Layer type should be 'tile'\",{type:a.type}));const i=this.get(\"view.scale\"),c=a.allSublayers.toArray().filter((e=>{const r=0===e.minScale||i<=e.minScale,t=0===e.maxScale||i>=e.maxScale;return e.popupTemplate&&e.popupEnabled&&e.visible&&r&&t}));return o(c.map((async r=>{const o=r.createQuery(),a=t(s)?s.event:null,i=p({renderer:r.renderer,event:a});o.geometry=this.createFetchPopupFeaturesQueryGeometry(e,i),o.outFields=await r.popupTemplate.getRequiredFields();return(await r.queryFeatures(o)).features}))).then((e=>[].concat(...e.map((e=>e.value)).filter(Boolean))))}};return e([s()],c.prototype,\"layer\",void 0),c=e([a(\"esri.layers.mixins.TileLayerView\")],c),c};export default i;export{i as TileLayerView};\n"]},"metadata":{},"sourceType":"module"}