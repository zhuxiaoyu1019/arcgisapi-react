{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from \"../../../../core/Error.js\";\nconst t = !0,\n      o = {\n  identifierOffset: 0,\n  identifierLength: 10,\n  versionOffset: 10,\n  checksumOffset: 12,\n  byteCount: 16\n};\n\nfunction r(e, r, n) {\n  return {\n    identifier: String.fromCharCode.apply(null, new Uint8Array(e, n + o.identifierOffset, o.identifierLength)),\n    version: r.getUint16(n + o.versionOffset, t),\n    checksum: r.getUint32(n + o.checksumOffset, t)\n  };\n}\n\nconst n = {\n  sizeLo: 0,\n  sizeHi: 4,\n  minX: 8,\n  minY: 16,\n  minZ: 24,\n  maxX: 32,\n  maxY: 40,\n  maxZ: 48,\n  errorX: 56,\n  errorY: 64,\n  errorZ: 72,\n  count: 80,\n  reserved: 84,\n  byteCount: 88\n};\n\nfunction i(e, o) {\n  return {\n    sizeLo: e.getUint32(o + n.sizeLo, t),\n    sizeHi: e.getUint32(o + n.sizeHi, t),\n    minX: e.getFloat64(o + n.minX, t),\n    minY: e.getFloat64(o + n.minY, t),\n    minZ: e.getFloat64(o + n.minZ, t),\n    maxX: e.getFloat64(o + n.maxX, t),\n    maxY: e.getFloat64(o + n.maxY, t),\n    maxZ: e.getFloat64(o + n.maxZ, t),\n    errorX: e.getFloat64(o + n.errorX, t),\n    errorY: e.getFloat64(o + n.errorY, t),\n    errorZ: e.getFloat64(o + n.errorZ, t),\n    count: e.getUint32(o + n.count, t),\n    reserved: e.getUint32(o + n.reserved, t)\n  };\n}\n\nfunction c(t) {\n  const c = new DataView(t, 0);\n  let d = 0;\n  const {\n    identifier: l,\n    version: a\n  } = r(t, c, d);\n  if (d += o.byteCount, \"LEPCC     \" !== l) throw new e(\"lepcc-decode-error\", \"Bad identifier\");\n  if (a > 1) throw new e(\"lepcc-decode-error\", \"Unknown version\");\n  const u = i(c, d);\n  d += n.byteCount;\n  if (u.sizeHi * 2 ** 32 + u.sizeLo !== t.byteLength) throw new e(\"lepcc-decode-error\", \"Bad size\");\n  const f = new Float64Array(3 * u.count),\n        h = [],\n        w = [],\n        g = [],\n        p = [];\n  if (d = s(t, d, h), d = s(t, d, w), d = s(t, d, g), d = s(t, d, p), d !== t.byteLength) throw new e(\"lepcc-decode-error\", \"Bad length\");\n  let m = 0,\n      U = 0;\n\n  for (let e = 0; e < h.length; e++) {\n    U += h[e];\n    let t = 0;\n\n    for (let o = 0; o < w[e]; o++) {\n      t += g[m];\n      const e = p[m];\n      f[3 * m] = Math.min(u.maxX, u.minX + 2 * u.errorX * t), f[3 * m + 1] = Math.min(u.maxY, u.minY + 2 * u.errorY * U), f[3 * m + 2] = Math.min(u.maxZ, u.minZ + 2 * u.errorZ * e), m++;\n    }\n  }\n\n  return {\n    errorX: u.errorX,\n    errorY: u.errorY,\n    errorZ: u.errorZ,\n    result: f\n  };\n}\n\nfunction s(e, t, o) {\n  const r = [];\n  t = d(e, t, r);\n  const n = [];\n\n  for (let i = 0; i < r.length; i++) {\n    n.length = 0, t = d(e, t, n);\n\n    for (let e = 0; e < n.length; e++) o.push(n[e] + r[i]);\n  }\n\n  return t;\n}\n\nfunction d(o, r, n) {\n  const i = new DataView(o, r),\n        c = i.getUint8(0),\n        s = 31 & c,\n        d = !!(32 & c),\n        l = (192 & c) >> 6;\n  let a = 0;\n  if (0 === l) a = i.getUint32(1, t), r += 5;else if (1 === l) a = i.getUint16(1, t), r += 3;else {\n    if (2 !== l) throw new e(\"lepcc-decode-error\", \"Bad count type\");\n    a = i.getUint8(1), r += 2;\n  }\n  if (d) throw new e(\"lepcc-decode-error\", \"LUT not implemented\");\n  const u = Math.ceil(a * s / 8),\n        f = new Uint8Array(o, r, u);\n  let h = 0,\n      w = 0,\n      g = 0;\n  const p = -1 >>> 32 - s;\n\n  for (let e = 0; e < a; e++) {\n    for (; w < s;) h |= f[g] << w, w += 8, g += 1;\n\n    n[e] = h & p, h >>>= s, w -= s, w + s > 32 && (h |= f[g - 1] >> 8 - w);\n  }\n\n  return r + g;\n}\n\nconst l = {\n  sizeLo: 0,\n  sizeHi: 4,\n  count: 8,\n  colorMapCount: 12,\n  lookupMethod: 14,\n  compressionMethod: 15,\n  byteCount: 16\n};\n\nfunction a(e, o) {\n  return {\n    sizeLo: e.getUint32(o + l.sizeLo, t),\n    sizeHi: e.getUint32(o + l.sizeHi, t),\n    count: e.getUint32(o + l.count, t),\n    colorMapCount: e.getUint16(o + l.colorMapCount, t),\n    lookupMethod: e.getUint8(o + l.lookupMethod),\n    compressionMethod: e.getUint8(o + l.compressionMethod)\n  };\n}\n\nfunction u(t) {\n  const n = new DataView(t, 0);\n  let i = 0;\n  const {\n    identifier: c,\n    version: s\n  } = r(t, n, i);\n  if (i += o.byteCount, \"ClusterRGB\" !== c) throw new e(\"lepcc-decode-error\", \"Bad identifier\");\n  if (s > 1) throw new e(\"lepcc-decode-error\", \"Unknown version\");\n  const d = a(n, i);\n  i += l.byteCount;\n  if (d.sizeHi * 2 ** 32 + d.sizeLo !== t.byteLength) throw new e(\"lepcc-decode-error\", \"Bad size\");\n\n  if ((2 === d.lookupMethod || 1 === d.lookupMethod) && 0 === d.compressionMethod) {\n    if (3 * d.colorMapCount + d.count + i !== t.byteLength || d.colorMapCount > 256) throw new e(\"lepcc-decode-error\", \"Bad count\");\n    const o = new Uint8Array(t, i, 3 * d.colorMapCount),\n          r = new Uint8Array(t, i + 3 * d.colorMapCount, d.count),\n          n = new Uint8Array(3 * d.count);\n\n    for (let e = 0; e < d.count; e++) {\n      const t = r[e];\n      n[3 * e] = o[3 * t], n[3 * e + 1] = o[3 * t + 1], n[3 * e + 2] = o[3 * t + 2];\n    }\n\n    return n;\n  }\n\n  if (0 === d.lookupMethod && 0 === d.compressionMethod) {\n    if (3 * d.count + i !== t.byteLength || 0 !== d.colorMapCount) throw new e(\"lepcc-decode-error\", \"Bad count\");\n    return new Uint8Array(t, i).slice();\n  }\n\n  if (d.lookupMethod <= 2 && 1 === d.compressionMethod) {\n    if (i + 3 !== t.byteLength || 1 !== d.colorMapCount) throw new e(\"lepcc-decode-error\", \"Bad count\");\n    const o = n.getUint8(i),\n          r = n.getUint8(i + 1),\n          c = n.getUint8(i + 2),\n          s = new Uint8Array(3 * d.count);\n\n    for (let e = 0; e < d.count; e++) s[3 * e] = o, s[3 * e + 1] = r, s[3 * e + 2] = c;\n\n    return s;\n  }\n\n  throw new e(\"lepcc-decode-error\", \"Bad method \" + d.lookupMethod + \",\" + d.compressionMethod);\n}\n\nconst f = {\n  sizeLo: 0,\n  sizeHi: 4,\n  count: 8,\n  scaleFactor: 12,\n  bitsPerPoint: 14,\n  reserved: 15,\n  byteCount: 16\n};\n\nfunction h(e, o) {\n  return {\n    sizeLo: e.getUint32(o + f.sizeLo, t),\n    sizeHi: e.getUint32(o + f.sizeHi, t),\n    count: e.getUint32(o + f.count, t),\n    scaleFactor: e.getUint16(o + f.scaleFactor, t),\n    bitsPerPoint: e.getUint8(o + f.bitsPerPoint),\n    reserved: e.getUint8(o + f.reserved)\n  };\n}\n\nfunction w(t) {\n  const n = new DataView(t, 0);\n  let i = 0;\n  const {\n    identifier: c,\n    version: s\n  } = r(t, n, i);\n  if (i += o.byteCount, \"Intensity \" !== c) throw new e(\"lepcc-decode-error\", \"Bad identifier\");\n  if (s > 1) throw new e(\"lepcc-decode-error\", \"Unknown version\");\n  const l = h(n, i);\n  i += f.byteCount;\n  if (l.sizeHi * 2 ** 32 + l.sizeLo !== t.byteLength) throw new e(\"lepcc-decode-error\", \"Bad size\");\n  const a = new Uint16Array(l.count);\n\n  if (8 === l.bitsPerPoint) {\n    if (l.count + i !== t.byteLength) throw new e(\"lepcc-decode-error\", \"Bad size\");\n    const o = new Uint8Array(t, i, l.count);\n\n    for (let e = 0; e < l.count; e++) a[e] = o[e] * l.scaleFactor;\n  } else if (16 === l.bitsPerPoint) {\n    if (2 * l.count + i !== t.byteLength) throw new e(\"lepcc-decode-error\", \"Bad size\");\n    const o = new Uint16Array(t, i, l.count);\n\n    for (let e = 0; e < l.count; e++) a[e] = o[e] * l.scaleFactor;\n  } else {\n    const o = [];\n    if (d(t, i, o) !== t.byteLength) throw new e(\"lepcc-decode-error\", \"Bad size\");\n\n    for (let e = 0; e < l.count; e++) a[e] = o[e] * l.scaleFactor;\n  }\n\n  return a;\n}\n\nexport { w as decodeIntensity, u as decodeRGB, c as decodeXYZ };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/views/3d/layers/i3s/LEPCC.js"],"names":["e","t","o","identifierOffset","identifierLength","versionOffset","checksumOffset","byteCount","r","n","identifier","String","fromCharCode","apply","Uint8Array","version","getUint16","checksum","getUint32","sizeLo","sizeHi","minX","minY","minZ","maxX","maxY","maxZ","errorX","errorY","errorZ","count","reserved","i","getFloat64","c","DataView","d","l","a","u","byteLength","f","Float64Array","h","w","g","p","s","m","U","length","Math","min","result","push","getUint8","ceil","colorMapCount","lookupMethod","compressionMethod","slice","scaleFactor","bitsPerPoint","Uint16Array","decodeIntensity","decodeRGB","decodeXYZ"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,2BAAb;AAAyC,MAAMC,CAAC,GAAC,CAAC,CAAT;AAAA,MAAWC,CAAC,GAAC;AAACC,EAAAA,gBAAgB,EAAC,CAAlB;AAAoBC,EAAAA,gBAAgB,EAAC,EAArC;AAAwCC,EAAAA,aAAa,EAAC,EAAtD;AAAyDC,EAAAA,cAAc,EAAC,EAAxE;AAA2EC,EAAAA,SAAS,EAAC;AAArF,CAAb;;AAAsG,SAASC,CAAT,CAAWR,CAAX,EAAaQ,CAAb,EAAeC,CAAf,EAAiB;AAAC,SAAM;AAACC,IAAAA,UAAU,EAACC,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAA+B,IAAIC,UAAJ,CAAed,CAAf,EAAiBS,CAAC,GAACP,CAAC,CAACC,gBAArB,EAAsCD,CAAC,CAACE,gBAAxC,CAA/B,CAAZ;AAAsGW,IAAAA,OAAO,EAACP,CAAC,CAACQ,SAAF,CAAYP,CAAC,GAACP,CAAC,CAACG,aAAhB,EAA8BJ,CAA9B,CAA9G;AAA+IgB,IAAAA,QAAQ,EAACT,CAAC,CAACU,SAAF,CAAYT,CAAC,GAACP,CAAC,CAACI,cAAhB,EAA+BL,CAA/B;AAAxJ,GAAN;AAAiM;;AAAA,MAAMQ,CAAC,GAAC;AAACU,EAAAA,MAAM,EAAC,CAAR;AAAUC,EAAAA,MAAM,EAAC,CAAjB;AAAmBC,EAAAA,IAAI,EAAC,CAAxB;AAA0BC,EAAAA,IAAI,EAAC,EAA/B;AAAkCC,EAAAA,IAAI,EAAC,EAAvC;AAA0CC,EAAAA,IAAI,EAAC,EAA/C;AAAkDC,EAAAA,IAAI,EAAC,EAAvD;AAA0DC,EAAAA,IAAI,EAAC,EAA/D;AAAkEC,EAAAA,MAAM,EAAC,EAAzE;AAA4EC,EAAAA,MAAM,EAAC,EAAnF;AAAsFC,EAAAA,MAAM,EAAC,EAA7F;AAAgGC,EAAAA,KAAK,EAAC,EAAtG;AAAyGC,EAAAA,QAAQ,EAAC,EAAlH;AAAqHxB,EAAAA,SAAS,EAAC;AAA/H,CAAR;;AAA2I,SAASyB,CAAT,CAAWhC,CAAX,EAAaE,CAAb,EAAe;AAAC,SAAM;AAACiB,IAAAA,MAAM,EAACnB,CAAC,CAACkB,SAAF,CAAYhB,CAAC,GAACO,CAAC,CAACU,MAAhB,EAAuBlB,CAAvB,CAAR;AAAkCmB,IAAAA,MAAM,EAACpB,CAAC,CAACkB,SAAF,CAAYhB,CAAC,GAACO,CAAC,CAACW,MAAhB,EAAuBnB,CAAvB,CAAzC;AAAmEoB,IAAAA,IAAI,EAACrB,CAAC,CAACiC,UAAF,CAAa/B,CAAC,GAACO,CAAC,CAACY,IAAjB,EAAsBpB,CAAtB,CAAxE;AAAiGqB,IAAAA,IAAI,EAACtB,CAAC,CAACiC,UAAF,CAAa/B,CAAC,GAACO,CAAC,CAACa,IAAjB,EAAsBrB,CAAtB,CAAtG;AAA+HsB,IAAAA,IAAI,EAACvB,CAAC,CAACiC,UAAF,CAAa/B,CAAC,GAACO,CAAC,CAACc,IAAjB,EAAsBtB,CAAtB,CAApI;AAA6JuB,IAAAA,IAAI,EAACxB,CAAC,CAACiC,UAAF,CAAa/B,CAAC,GAACO,CAAC,CAACe,IAAjB,EAAsBvB,CAAtB,CAAlK;AAA2LwB,IAAAA,IAAI,EAACzB,CAAC,CAACiC,UAAF,CAAa/B,CAAC,GAACO,CAAC,CAACgB,IAAjB,EAAsBxB,CAAtB,CAAhM;AAAyNyB,IAAAA,IAAI,EAAC1B,CAAC,CAACiC,UAAF,CAAa/B,CAAC,GAACO,CAAC,CAACiB,IAAjB,EAAsBzB,CAAtB,CAA9N;AAAuP0B,IAAAA,MAAM,EAAC3B,CAAC,CAACiC,UAAF,CAAa/B,CAAC,GAACO,CAAC,CAACkB,MAAjB,EAAwB1B,CAAxB,CAA9P;AAAyR2B,IAAAA,MAAM,EAAC5B,CAAC,CAACiC,UAAF,CAAa/B,CAAC,GAACO,CAAC,CAACmB,MAAjB,EAAwB3B,CAAxB,CAAhS;AAA2T4B,IAAAA,MAAM,EAAC7B,CAAC,CAACiC,UAAF,CAAa/B,CAAC,GAACO,CAAC,CAACoB,MAAjB,EAAwB5B,CAAxB,CAAlU;AAA6V6B,IAAAA,KAAK,EAAC9B,CAAC,CAACkB,SAAF,CAAYhB,CAAC,GAACO,CAAC,CAACqB,KAAhB,EAAsB7B,CAAtB,CAAnW;AAA4X8B,IAAAA,QAAQ,EAAC/B,CAAC,CAACkB,SAAF,CAAYhB,CAAC,GAACO,CAAC,CAACsB,QAAhB,EAAyB9B,CAAzB;AAArY,GAAN;AAAwa;;AAAA,SAASiC,CAAT,CAAWjC,CAAX,EAAa;AAAC,QAAMiC,CAAC,GAAC,IAAIC,QAAJ,CAAalC,CAAb,EAAe,CAAf,CAAR;AAA0B,MAAImC,CAAC,GAAC,CAAN;AAAQ,QAAK;AAAC1B,IAAAA,UAAU,EAAC2B,CAAZ;AAActB,IAAAA,OAAO,EAACuB;AAAtB,MAAyB9B,CAAC,CAACP,CAAD,EAAGiC,CAAH,EAAKE,CAAL,CAA/B;AAAuC,MAAGA,CAAC,IAAElC,CAAC,CAACK,SAAL,EAAe,iBAAe8B,CAAjC,EAAmC,MAAM,IAAIrC,CAAJ,CAAM,oBAAN,EAA2B,gBAA3B,CAAN;AAAmD,MAAGsC,CAAC,GAAC,CAAL,EAAO,MAAM,IAAItC,CAAJ,CAAM,oBAAN,EAA2B,iBAA3B,CAAN;AAAoD,QAAMuC,CAAC,GAACP,CAAC,CAACE,CAAD,EAAGE,CAAH,CAAT;AAAeA,EAAAA,CAAC,IAAE3B,CAAC,CAACF,SAAL;AAAe,MAAGgC,CAAC,CAACnB,MAAF,GAAS,KAAG,EAAZ,GAAemB,CAAC,CAACpB,MAAjB,KAA0BlB,CAAC,CAACuC,UAA/B,EAA0C,MAAM,IAAIxC,CAAJ,CAAM,oBAAN,EAA2B,UAA3B,CAAN;AAA6C,QAAMyC,CAAC,GAAC,IAAIC,YAAJ,CAAiB,IAAEH,CAAC,CAACT,KAArB,CAAR;AAAA,QAAoCa,CAAC,GAAC,EAAtC;AAAA,QAAyCC,CAAC,GAAC,EAA3C;AAAA,QAA8CC,CAAC,GAAC,EAAhD;AAAA,QAAmDC,CAAC,GAAC,EAArD;AAAwD,MAAGV,CAAC,GAACW,CAAC,CAAC9C,CAAD,EAAGmC,CAAH,EAAKO,CAAL,CAAH,EAAWP,CAAC,GAACW,CAAC,CAAC9C,CAAD,EAAGmC,CAAH,EAAKQ,CAAL,CAAd,EAAsBR,CAAC,GAACW,CAAC,CAAC9C,CAAD,EAAGmC,CAAH,EAAKS,CAAL,CAAzB,EAAiCT,CAAC,GAACW,CAAC,CAAC9C,CAAD,EAAGmC,CAAH,EAAKU,CAAL,CAApC,EAA4CV,CAAC,KAAGnC,CAAC,CAACuC,UAArD,EAAgE,MAAM,IAAIxC,CAAJ,CAAM,oBAAN,EAA2B,YAA3B,CAAN;AAA+C,MAAIgD,CAAC,GAAC,CAAN;AAAA,MAAQC,CAAC,GAAC,CAAV;;AAAY,OAAI,IAAIjD,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC2C,CAAC,CAACO,MAAhB,EAAuBlD,CAAC,EAAxB,EAA2B;AAACiD,IAAAA,CAAC,IAAEN,CAAC,CAAC3C,CAAD,CAAJ;AAAQ,QAAIC,CAAC,GAAC,CAAN;;AAAQ,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC0C,CAAC,CAAC5C,CAAD,CAAf,EAAmBE,CAAC,EAApB,EAAuB;AAACD,MAAAA,CAAC,IAAE4C,CAAC,CAACG,CAAD,CAAJ;AAAQ,YAAMhD,CAAC,GAAC8C,CAAC,CAACE,CAAD,CAAT;AAAaP,MAAAA,CAAC,CAAC,IAAEO,CAAH,CAAD,GAAOG,IAAI,CAACC,GAAL,CAASb,CAAC,CAACf,IAAX,EAAgBe,CAAC,CAAClB,IAAF,GAAO,IAAEkB,CAAC,CAACZ,MAAJ,GAAW1B,CAAlC,CAAP,EAA4CwC,CAAC,CAAC,IAAEO,CAAF,GAAI,CAAL,CAAD,GAASG,IAAI,CAACC,GAAL,CAASb,CAAC,CAACd,IAAX,EAAgBc,CAAC,CAACjB,IAAF,GAAO,IAAEiB,CAAC,CAACX,MAAJ,GAAWqB,CAAlC,CAArD,EAA0FR,CAAC,CAAC,IAAEO,CAAF,GAAI,CAAL,CAAD,GAASG,IAAI,CAACC,GAAL,CAASb,CAAC,CAACb,IAAX,EAAgBa,CAAC,CAAChB,IAAF,GAAO,IAAEgB,CAAC,CAACV,MAAJ,GAAW7B,CAAlC,CAAnG,EAAwIgD,CAAC,EAAzI;AAA4I;AAAC;;AAAA,SAAM;AAACrB,IAAAA,MAAM,EAACY,CAAC,CAACZ,MAAV;AAAiBC,IAAAA,MAAM,EAACW,CAAC,CAACX,MAA1B;AAAiCC,IAAAA,MAAM,EAACU,CAAC,CAACV,MAA1C;AAAiDwB,IAAAA,MAAM,EAACZ;AAAxD,GAAN;AAAiE;;AAAA,SAASM,CAAT,CAAW/C,CAAX,EAAaC,CAAb,EAAeC,CAAf,EAAiB;AAAC,QAAMM,CAAC,GAAC,EAAR;AAAWP,EAAAA,CAAC,GAACmC,CAAC,CAACpC,CAAD,EAAGC,CAAH,EAAKO,CAAL,CAAH;AAAW,QAAMC,CAAC,GAAC,EAAR;;AAAW,OAAI,IAAIuB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACxB,CAAC,CAAC0C,MAAhB,EAAuBlB,CAAC,EAAxB,EAA2B;AAACvB,IAAAA,CAAC,CAACyC,MAAF,GAAS,CAAT,EAAWjD,CAAC,GAACmC,CAAC,CAACpC,CAAD,EAAGC,CAAH,EAAKQ,CAAL,CAAd;;AAAsB,SAAI,IAAIT,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACS,CAAC,CAACyC,MAAhB,EAAuBlD,CAAC,EAAxB,EAA2BE,CAAC,CAACoD,IAAF,CAAO7C,CAAC,CAACT,CAAD,CAAD,GAAKQ,CAAC,CAACwB,CAAD,CAAb;AAAkB;;AAAA,SAAO/B,CAAP;AAAS;;AAAA,SAASmC,CAAT,CAAWlC,CAAX,EAAaM,CAAb,EAAeC,CAAf,EAAiB;AAAC,QAAMuB,CAAC,GAAC,IAAIG,QAAJ,CAAajC,CAAb,EAAeM,CAAf,CAAR;AAAA,QAA0B0B,CAAC,GAACF,CAAC,CAACuB,QAAF,CAAW,CAAX,CAA5B;AAAA,QAA0CR,CAAC,GAAC,KAAGb,CAA/C;AAAA,QAAiDE,CAAC,GAAC,CAAC,EAAE,KAAGF,CAAL,CAApD;AAAA,QAA4DG,CAAC,GAAC,CAAC,MAAIH,CAAL,KAAS,CAAvE;AAAyE,MAAII,CAAC,GAAC,CAAN;AAAQ,MAAG,MAAID,CAAP,EAASC,CAAC,GAACN,CAAC,CAACd,SAAF,CAAY,CAAZ,EAAcjB,CAAd,CAAF,EAAmBO,CAAC,IAAE,CAAtB,CAAT,KAAsC,IAAG,MAAI6B,CAAP,EAASC,CAAC,GAACN,CAAC,CAAChB,SAAF,CAAY,CAAZ,EAAcf,CAAd,CAAF,EAAmBO,CAAC,IAAE,CAAtB,CAAT,KAAqC;AAAC,QAAG,MAAI6B,CAAP,EAAS,MAAM,IAAIrC,CAAJ,CAAM,oBAAN,EAA2B,gBAA3B,CAAN;AAAmDsC,IAAAA,CAAC,GAACN,CAAC,CAACuB,QAAF,CAAW,CAAX,CAAF,EAAgB/C,CAAC,IAAE,CAAnB;AAAqB;AAAA,MAAG4B,CAAH,EAAK,MAAM,IAAIpC,CAAJ,CAAM,oBAAN,EAA2B,qBAA3B,CAAN;AAAwD,QAAMuC,CAAC,GAACY,IAAI,CAACK,IAAL,CAAUlB,CAAC,GAACS,CAAF,GAAI,CAAd,CAAR;AAAA,QAAyBN,CAAC,GAAC,IAAI3B,UAAJ,CAAeZ,CAAf,EAAiBM,CAAjB,EAAmB+B,CAAnB,CAA3B;AAAiD,MAAII,CAAC,GAAC,CAAN;AAAA,MAAQC,CAAC,GAAC,CAAV;AAAA,MAAYC,CAAC,GAAC,CAAd;AAAgB,QAAMC,CAAC,GAAC,CAAC,CAAD,KAAK,KAAGC,CAAhB;;AAAkB,OAAI,IAAI/C,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACsC,CAAd,EAAgBtC,CAAC,EAAjB,EAAoB;AAAC,WAAK4C,CAAC,GAACG,CAAP,GAAUJ,CAAC,IAAEF,CAAC,CAACI,CAAD,CAAD,IAAMD,CAAT,EAAWA,CAAC,IAAE,CAAd,EAAgBC,CAAC,IAAE,CAAnB;;AAAqBpC,IAAAA,CAAC,CAACT,CAAD,CAAD,GAAK2C,CAAC,GAACG,CAAP,EAASH,CAAC,MAAII,CAAd,EAAgBH,CAAC,IAAEG,CAAnB,EAAqBH,CAAC,GAACG,CAAF,GAAI,EAAJ,KAASJ,CAAC,IAAEF,CAAC,CAACI,CAAC,GAAC,CAAH,CAAD,IAAQ,IAAED,CAAtB,CAArB;AAA8C;;AAAA,SAAOpC,CAAC,GAACqC,CAAT;AAAW;;AAAA,MAAMR,CAAC,GAAC;AAAClB,EAAAA,MAAM,EAAC,CAAR;AAAUC,EAAAA,MAAM,EAAC,CAAjB;AAAmBU,EAAAA,KAAK,EAAC,CAAzB;AAA2B2B,EAAAA,aAAa,EAAC,EAAzC;AAA4CC,EAAAA,YAAY,EAAC,EAAzD;AAA4DC,EAAAA,iBAAiB,EAAC,EAA9E;AAAiFpD,EAAAA,SAAS,EAAC;AAA3F,CAAR;;AAAuG,SAAS+B,CAAT,CAAWtC,CAAX,EAAaE,CAAb,EAAe;AAAC,SAAM;AAACiB,IAAAA,MAAM,EAACnB,CAAC,CAACkB,SAAF,CAAYhB,CAAC,GAACmC,CAAC,CAAClB,MAAhB,EAAuBlB,CAAvB,CAAR;AAAkCmB,IAAAA,MAAM,EAACpB,CAAC,CAACkB,SAAF,CAAYhB,CAAC,GAACmC,CAAC,CAACjB,MAAhB,EAAuBnB,CAAvB,CAAzC;AAAmE6B,IAAAA,KAAK,EAAC9B,CAAC,CAACkB,SAAF,CAAYhB,CAAC,GAACmC,CAAC,CAACP,KAAhB,EAAsB7B,CAAtB,CAAzE;AAAkGwD,IAAAA,aAAa,EAACzD,CAAC,CAACgB,SAAF,CAAYd,CAAC,GAACmC,CAAC,CAACoB,aAAhB,EAA8BxD,CAA9B,CAAhH;AAAiJyD,IAAAA,YAAY,EAAC1D,CAAC,CAACuD,QAAF,CAAWrD,CAAC,GAACmC,CAAC,CAACqB,YAAf,CAA9J;AAA2LC,IAAAA,iBAAiB,EAAC3D,CAAC,CAACuD,QAAF,CAAWrD,CAAC,GAACmC,CAAC,CAACsB,iBAAf;AAA7M,GAAN;AAAsP;;AAAA,SAASpB,CAAT,CAAWtC,CAAX,EAAa;AAAC,QAAMQ,CAAC,GAAC,IAAI0B,QAAJ,CAAalC,CAAb,EAAe,CAAf,CAAR;AAA0B,MAAI+B,CAAC,GAAC,CAAN;AAAQ,QAAK;AAACtB,IAAAA,UAAU,EAACwB,CAAZ;AAAcnB,IAAAA,OAAO,EAACgC;AAAtB,MAAyBvC,CAAC,CAACP,CAAD,EAAGQ,CAAH,EAAKuB,CAAL,CAA/B;AAAuC,MAAGA,CAAC,IAAE9B,CAAC,CAACK,SAAL,EAAe,iBAAe2B,CAAjC,EAAmC,MAAM,IAAIlC,CAAJ,CAAM,oBAAN,EAA2B,gBAA3B,CAAN;AAAmD,MAAG+C,CAAC,GAAC,CAAL,EAAO,MAAM,IAAI/C,CAAJ,CAAM,oBAAN,EAA2B,iBAA3B,CAAN;AAAoD,QAAMoC,CAAC,GAACE,CAAC,CAAC7B,CAAD,EAAGuB,CAAH,CAAT;AAAeA,EAAAA,CAAC,IAAEK,CAAC,CAAC9B,SAAL;AAAe,MAAG6B,CAAC,CAAChB,MAAF,GAAS,KAAG,EAAZ,GAAegB,CAAC,CAACjB,MAAjB,KAA0BlB,CAAC,CAACuC,UAA/B,EAA0C,MAAM,IAAIxC,CAAJ,CAAM,oBAAN,EAA2B,UAA3B,CAAN;;AAA6C,MAAG,CAAC,MAAIoC,CAAC,CAACsB,YAAN,IAAoB,MAAItB,CAAC,CAACsB,YAA3B,KAA0C,MAAItB,CAAC,CAACuB,iBAAnD,EAAqE;AAAC,QAAG,IAAEvB,CAAC,CAACqB,aAAJ,GAAkBrB,CAAC,CAACN,KAApB,GAA0BE,CAA1B,KAA8B/B,CAAC,CAACuC,UAAhC,IAA4CJ,CAAC,CAACqB,aAAF,GAAgB,GAA/D,EAAmE,MAAM,IAAIzD,CAAJ,CAAM,oBAAN,EAA2B,WAA3B,CAAN;AAA8C,UAAME,CAAC,GAAC,IAAIY,UAAJ,CAAeb,CAAf,EAAiB+B,CAAjB,EAAmB,IAAEI,CAAC,CAACqB,aAAvB,CAAR;AAAA,UAA8CjD,CAAC,GAAC,IAAIM,UAAJ,CAAeb,CAAf,EAAiB+B,CAAC,GAAC,IAAEI,CAAC,CAACqB,aAAvB,EAAqCrB,CAAC,CAACN,KAAvC,CAAhD;AAAA,UAA8FrB,CAAC,GAAC,IAAIK,UAAJ,CAAe,IAAEsB,CAAC,CAACN,KAAnB,CAAhG;;AAA0H,SAAI,IAAI9B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoC,CAAC,CAACN,KAAhB,EAAsB9B,CAAC,EAAvB,EAA0B;AAAC,YAAMC,CAAC,GAACO,CAAC,CAACR,CAAD,CAAT;AAAaS,MAAAA,CAAC,CAAC,IAAET,CAAH,CAAD,GAAOE,CAAC,CAAC,IAAED,CAAH,CAAR,EAAcQ,CAAC,CAAC,IAAET,CAAF,GAAI,CAAL,CAAD,GAASE,CAAC,CAAC,IAAED,CAAF,GAAI,CAAL,CAAxB,EAAgCQ,CAAC,CAAC,IAAET,CAAF,GAAI,CAAL,CAAD,GAASE,CAAC,CAAC,IAAED,CAAF,GAAI,CAAL,CAA1C;AAAkD;;AAAA,WAAOQ,CAAP;AAAS;;AAAA,MAAG,MAAI2B,CAAC,CAACsB,YAAN,IAAoB,MAAItB,CAAC,CAACuB,iBAA7B,EAA+C;AAAC,QAAG,IAAEvB,CAAC,CAACN,KAAJ,GAAUE,CAAV,KAAc/B,CAAC,CAACuC,UAAhB,IAA4B,MAAIJ,CAAC,CAACqB,aAArC,EAAmD,MAAM,IAAIzD,CAAJ,CAAM,oBAAN,EAA2B,WAA3B,CAAN;AAA8C,WAAO,IAAIc,UAAJ,CAAeb,CAAf,EAAiB+B,CAAjB,EAAoB4B,KAApB,EAAP;AAAmC;;AAAA,MAAGxB,CAAC,CAACsB,YAAF,IAAgB,CAAhB,IAAmB,MAAItB,CAAC,CAACuB,iBAA5B,EAA8C;AAAC,QAAG3B,CAAC,GAAC,CAAF,KAAM/B,CAAC,CAACuC,UAAR,IAAoB,MAAIJ,CAAC,CAACqB,aAA7B,EAA2C,MAAM,IAAIzD,CAAJ,CAAM,oBAAN,EAA2B,WAA3B,CAAN;AAA8C,UAAME,CAAC,GAACO,CAAC,CAAC8C,QAAF,CAAWvB,CAAX,CAAR;AAAA,UAAsBxB,CAAC,GAACC,CAAC,CAAC8C,QAAF,CAAWvB,CAAC,GAAC,CAAb,CAAxB;AAAA,UAAwCE,CAAC,GAACzB,CAAC,CAAC8C,QAAF,CAAWvB,CAAC,GAAC,CAAb,CAA1C;AAAA,UAA0De,CAAC,GAAC,IAAIjC,UAAJ,CAAe,IAAEsB,CAAC,CAACN,KAAnB,CAA5D;;AAAsF,SAAI,IAAI9B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoC,CAAC,CAACN,KAAhB,EAAsB9B,CAAC,EAAvB,EAA0B+C,CAAC,CAAC,IAAE/C,CAAH,CAAD,GAAOE,CAAP,EAAS6C,CAAC,CAAC,IAAE/C,CAAF,GAAI,CAAL,CAAD,GAASQ,CAAlB,EAAoBuC,CAAC,CAAC,IAAE/C,CAAF,GAAI,CAAL,CAAD,GAASkC,CAA7B;;AAA+B,WAAOa,CAAP;AAAS;;AAAA,QAAM,IAAI/C,CAAJ,CAAM,oBAAN,EAA2B,gBAAcoC,CAAC,CAACsB,YAAhB,GAA6B,GAA7B,GAAiCtB,CAAC,CAACuB,iBAA9D,CAAN;AAAuF;;AAAA,MAAMlB,CAAC,GAAC;AAACtB,EAAAA,MAAM,EAAC,CAAR;AAAUC,EAAAA,MAAM,EAAC,CAAjB;AAAmBU,EAAAA,KAAK,EAAC,CAAzB;AAA2B+B,EAAAA,WAAW,EAAC,EAAvC;AAA0CC,EAAAA,YAAY,EAAC,EAAvD;AAA0D/B,EAAAA,QAAQ,EAAC,EAAnE;AAAsExB,EAAAA,SAAS,EAAC;AAAhF,CAAR;;AAA4F,SAASoC,CAAT,CAAW3C,CAAX,EAAaE,CAAb,EAAe;AAAC,SAAM;AAACiB,IAAAA,MAAM,EAACnB,CAAC,CAACkB,SAAF,CAAYhB,CAAC,GAACuC,CAAC,CAACtB,MAAhB,EAAuBlB,CAAvB,CAAR;AAAkCmB,IAAAA,MAAM,EAACpB,CAAC,CAACkB,SAAF,CAAYhB,CAAC,GAACuC,CAAC,CAACrB,MAAhB,EAAuBnB,CAAvB,CAAzC;AAAmE6B,IAAAA,KAAK,EAAC9B,CAAC,CAACkB,SAAF,CAAYhB,CAAC,GAACuC,CAAC,CAACX,KAAhB,EAAsB7B,CAAtB,CAAzE;AAAkG4D,IAAAA,WAAW,EAAC7D,CAAC,CAACgB,SAAF,CAAYd,CAAC,GAACuC,CAAC,CAACoB,WAAhB,EAA4B5D,CAA5B,CAA9G;AAA6I6D,IAAAA,YAAY,EAAC9D,CAAC,CAACuD,QAAF,CAAWrD,CAAC,GAACuC,CAAC,CAACqB,YAAf,CAA1J;AAAuL/B,IAAAA,QAAQ,EAAC/B,CAAC,CAACuD,QAAF,CAAWrD,CAAC,GAACuC,CAAC,CAACV,QAAf;AAAhM,GAAN;AAAgO;;AAAA,SAASa,CAAT,CAAW3C,CAAX,EAAa;AAAC,QAAMQ,CAAC,GAAC,IAAI0B,QAAJ,CAAalC,CAAb,EAAe,CAAf,CAAR;AAA0B,MAAI+B,CAAC,GAAC,CAAN;AAAQ,QAAK;AAACtB,IAAAA,UAAU,EAACwB,CAAZ;AAAcnB,IAAAA,OAAO,EAACgC;AAAtB,MAAyBvC,CAAC,CAACP,CAAD,EAAGQ,CAAH,EAAKuB,CAAL,CAA/B;AAAuC,MAAGA,CAAC,IAAE9B,CAAC,CAACK,SAAL,EAAe,iBAAe2B,CAAjC,EAAmC,MAAM,IAAIlC,CAAJ,CAAM,oBAAN,EAA2B,gBAA3B,CAAN;AAAmD,MAAG+C,CAAC,GAAC,CAAL,EAAO,MAAM,IAAI/C,CAAJ,CAAM,oBAAN,EAA2B,iBAA3B,CAAN;AAAoD,QAAMqC,CAAC,GAACM,CAAC,CAAClC,CAAD,EAAGuB,CAAH,CAAT;AAAeA,EAAAA,CAAC,IAAES,CAAC,CAAClC,SAAL;AAAe,MAAG8B,CAAC,CAACjB,MAAF,GAAS,KAAG,EAAZ,GAAeiB,CAAC,CAAClB,MAAjB,KAA0BlB,CAAC,CAACuC,UAA/B,EAA0C,MAAM,IAAIxC,CAAJ,CAAM,oBAAN,EAA2B,UAA3B,CAAN;AAA6C,QAAMsC,CAAC,GAAC,IAAIyB,WAAJ,CAAgB1B,CAAC,CAACP,KAAlB,CAAR;;AAAiC,MAAG,MAAIO,CAAC,CAACyB,YAAT,EAAsB;AAAC,QAAGzB,CAAC,CAACP,KAAF,GAAQE,CAAR,KAAY/B,CAAC,CAACuC,UAAjB,EAA4B,MAAM,IAAIxC,CAAJ,CAAM,oBAAN,EAA2B,UAA3B,CAAN;AAA6C,UAAME,CAAC,GAAC,IAAIY,UAAJ,CAAeb,CAAf,EAAiB+B,CAAjB,EAAmBK,CAAC,CAACP,KAArB,CAAR;;AAAoC,SAAI,IAAI9B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACqC,CAAC,CAACP,KAAhB,EAAsB9B,CAAC,EAAvB,EAA0BsC,CAAC,CAACtC,CAAD,CAAD,GAAKE,CAAC,CAACF,CAAD,CAAD,GAAKqC,CAAC,CAACwB,WAAZ;AAAwB,GAAtL,MAA2L,IAAG,OAAKxB,CAAC,CAACyB,YAAV,EAAuB;AAAC,QAAG,IAAEzB,CAAC,CAACP,KAAJ,GAAUE,CAAV,KAAc/B,CAAC,CAACuC,UAAnB,EAA8B,MAAM,IAAIxC,CAAJ,CAAM,oBAAN,EAA2B,UAA3B,CAAN;AAA6C,UAAME,CAAC,GAAC,IAAI6D,WAAJ,CAAgB9D,CAAhB,EAAkB+B,CAAlB,EAAoBK,CAAC,CAACP,KAAtB,CAAR;;AAAqC,SAAI,IAAI9B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACqC,CAAC,CAACP,KAAhB,EAAsB9B,CAAC,EAAvB,EAA0BsC,CAAC,CAACtC,CAAD,CAAD,GAAKE,CAAC,CAACF,CAAD,CAAD,GAAKqC,CAAC,CAACwB,WAAZ;AAAwB,GAA1L,MAA8L;AAAC,UAAM3D,CAAC,GAAC,EAAR;AAAW,QAAGkC,CAAC,CAACnC,CAAD,EAAG+B,CAAH,EAAK9B,CAAL,CAAD,KAAWD,CAAC,CAACuC,UAAhB,EAA2B,MAAM,IAAIxC,CAAJ,CAAM,oBAAN,EAA2B,UAA3B,CAAN;;AAA6C,SAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACqC,CAAC,CAACP,KAAhB,EAAsB9B,CAAC,EAAvB,EAA0BsC,CAAC,CAACtC,CAAD,CAAD,GAAKE,CAAC,CAACF,CAAD,CAAD,GAAKqC,CAAC,CAACwB,WAAZ;AAAwB;;AAAA,SAAOvB,CAAP;AAAS;;AAAA,SAAOM,CAAC,IAAIoB,eAAZ,EAA4BzB,CAAC,IAAI0B,SAAjC,EAA2C/B,CAAC,IAAIgC,SAAhD","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";const t=!0,o={identifierOffset:0,identifierLength:10,versionOffset:10,checksumOffset:12,byteCount:16};function r(e,r,n){return{identifier:String.fromCharCode.apply(null,new Uint8Array(e,n+o.identifierOffset,o.identifierLength)),version:r.getUint16(n+o.versionOffset,t),checksum:r.getUint32(n+o.checksumOffset,t)}}const n={sizeLo:0,sizeHi:4,minX:8,minY:16,minZ:24,maxX:32,maxY:40,maxZ:48,errorX:56,errorY:64,errorZ:72,count:80,reserved:84,byteCount:88};function i(e,o){return{sizeLo:e.getUint32(o+n.sizeLo,t),sizeHi:e.getUint32(o+n.sizeHi,t),minX:e.getFloat64(o+n.minX,t),minY:e.getFloat64(o+n.minY,t),minZ:e.getFloat64(o+n.minZ,t),maxX:e.getFloat64(o+n.maxX,t),maxY:e.getFloat64(o+n.maxY,t),maxZ:e.getFloat64(o+n.maxZ,t),errorX:e.getFloat64(o+n.errorX,t),errorY:e.getFloat64(o+n.errorY,t),errorZ:e.getFloat64(o+n.errorZ,t),count:e.getUint32(o+n.count,t),reserved:e.getUint32(o+n.reserved,t)}}function c(t){const c=new DataView(t,0);let d=0;const{identifier:l,version:a}=r(t,c,d);if(d+=o.byteCount,\"LEPCC     \"!==l)throw new e(\"lepcc-decode-error\",\"Bad identifier\");if(a>1)throw new e(\"lepcc-decode-error\",\"Unknown version\");const u=i(c,d);d+=n.byteCount;if(u.sizeHi*2**32+u.sizeLo!==t.byteLength)throw new e(\"lepcc-decode-error\",\"Bad size\");const f=new Float64Array(3*u.count),h=[],w=[],g=[],p=[];if(d=s(t,d,h),d=s(t,d,w),d=s(t,d,g),d=s(t,d,p),d!==t.byteLength)throw new e(\"lepcc-decode-error\",\"Bad length\");let m=0,U=0;for(let e=0;e<h.length;e++){U+=h[e];let t=0;for(let o=0;o<w[e];o++){t+=g[m];const e=p[m];f[3*m]=Math.min(u.maxX,u.minX+2*u.errorX*t),f[3*m+1]=Math.min(u.maxY,u.minY+2*u.errorY*U),f[3*m+2]=Math.min(u.maxZ,u.minZ+2*u.errorZ*e),m++}}return{errorX:u.errorX,errorY:u.errorY,errorZ:u.errorZ,result:f}}function s(e,t,o){const r=[];t=d(e,t,r);const n=[];for(let i=0;i<r.length;i++){n.length=0,t=d(e,t,n);for(let e=0;e<n.length;e++)o.push(n[e]+r[i])}return t}function d(o,r,n){const i=new DataView(o,r),c=i.getUint8(0),s=31&c,d=!!(32&c),l=(192&c)>>6;let a=0;if(0===l)a=i.getUint32(1,t),r+=5;else if(1===l)a=i.getUint16(1,t),r+=3;else{if(2!==l)throw new e(\"lepcc-decode-error\",\"Bad count type\");a=i.getUint8(1),r+=2}if(d)throw new e(\"lepcc-decode-error\",\"LUT not implemented\");const u=Math.ceil(a*s/8),f=new Uint8Array(o,r,u);let h=0,w=0,g=0;const p=-1>>>32-s;for(let e=0;e<a;e++){for(;w<s;)h|=f[g]<<w,w+=8,g+=1;n[e]=h&p,h>>>=s,w-=s,w+s>32&&(h|=f[g-1]>>8-w)}return r+g}const l={sizeLo:0,sizeHi:4,count:8,colorMapCount:12,lookupMethod:14,compressionMethod:15,byteCount:16};function a(e,o){return{sizeLo:e.getUint32(o+l.sizeLo,t),sizeHi:e.getUint32(o+l.sizeHi,t),count:e.getUint32(o+l.count,t),colorMapCount:e.getUint16(o+l.colorMapCount,t),lookupMethod:e.getUint8(o+l.lookupMethod),compressionMethod:e.getUint8(o+l.compressionMethod)}}function u(t){const n=new DataView(t,0);let i=0;const{identifier:c,version:s}=r(t,n,i);if(i+=o.byteCount,\"ClusterRGB\"!==c)throw new e(\"lepcc-decode-error\",\"Bad identifier\");if(s>1)throw new e(\"lepcc-decode-error\",\"Unknown version\");const d=a(n,i);i+=l.byteCount;if(d.sizeHi*2**32+d.sizeLo!==t.byteLength)throw new e(\"lepcc-decode-error\",\"Bad size\");if((2===d.lookupMethod||1===d.lookupMethod)&&0===d.compressionMethod){if(3*d.colorMapCount+d.count+i!==t.byteLength||d.colorMapCount>256)throw new e(\"lepcc-decode-error\",\"Bad count\");const o=new Uint8Array(t,i,3*d.colorMapCount),r=new Uint8Array(t,i+3*d.colorMapCount,d.count),n=new Uint8Array(3*d.count);for(let e=0;e<d.count;e++){const t=r[e];n[3*e]=o[3*t],n[3*e+1]=o[3*t+1],n[3*e+2]=o[3*t+2]}return n}if(0===d.lookupMethod&&0===d.compressionMethod){if(3*d.count+i!==t.byteLength||0!==d.colorMapCount)throw new e(\"lepcc-decode-error\",\"Bad count\");return new Uint8Array(t,i).slice()}if(d.lookupMethod<=2&&1===d.compressionMethod){if(i+3!==t.byteLength||1!==d.colorMapCount)throw new e(\"lepcc-decode-error\",\"Bad count\");const o=n.getUint8(i),r=n.getUint8(i+1),c=n.getUint8(i+2),s=new Uint8Array(3*d.count);for(let e=0;e<d.count;e++)s[3*e]=o,s[3*e+1]=r,s[3*e+2]=c;return s}throw new e(\"lepcc-decode-error\",\"Bad method \"+d.lookupMethod+\",\"+d.compressionMethod)}const f={sizeLo:0,sizeHi:4,count:8,scaleFactor:12,bitsPerPoint:14,reserved:15,byteCount:16};function h(e,o){return{sizeLo:e.getUint32(o+f.sizeLo,t),sizeHi:e.getUint32(o+f.sizeHi,t),count:e.getUint32(o+f.count,t),scaleFactor:e.getUint16(o+f.scaleFactor,t),bitsPerPoint:e.getUint8(o+f.bitsPerPoint),reserved:e.getUint8(o+f.reserved)}}function w(t){const n=new DataView(t,0);let i=0;const{identifier:c,version:s}=r(t,n,i);if(i+=o.byteCount,\"Intensity \"!==c)throw new e(\"lepcc-decode-error\",\"Bad identifier\");if(s>1)throw new e(\"lepcc-decode-error\",\"Unknown version\");const l=h(n,i);i+=f.byteCount;if(l.sizeHi*2**32+l.sizeLo!==t.byteLength)throw new e(\"lepcc-decode-error\",\"Bad size\");const a=new Uint16Array(l.count);if(8===l.bitsPerPoint){if(l.count+i!==t.byteLength)throw new e(\"lepcc-decode-error\",\"Bad size\");const o=new Uint8Array(t,i,l.count);for(let e=0;e<l.count;e++)a[e]=o[e]*l.scaleFactor}else if(16===l.bitsPerPoint){if(2*l.count+i!==t.byteLength)throw new e(\"lepcc-decode-error\",\"Bad size\");const o=new Uint16Array(t,i,l.count);for(let e=0;e<l.count;e++)a[e]=o[e]*l.scaleFactor}else{const o=[];if(d(t,i,o)!==t.byteLength)throw new e(\"lepcc-decode-error\",\"Bad size\");for(let e=0;e<l.count;e++)a[e]=o[e]*l.scaleFactor}return a}export{w as decodeIntensity,u as decodeRGB,c as decodeXYZ};\n"]},"metadata":{},"sourceType":"module"}