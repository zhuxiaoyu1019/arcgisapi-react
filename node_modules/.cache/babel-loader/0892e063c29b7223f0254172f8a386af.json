{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport \"../../symbols.js\";\nimport { analyzeCIMSymbol as e } from \"./cimAnalyzer.js\";\nimport { ExpandedCIM as r } from \"./ExpandedCIM.js\";\nimport t from \"../WebStyleSymbol.js\";\n\nconst a = async (e, r, t) => Promise.all(e.map(e => i(e, r, t))),\n      m = async (t, a) => new r(await e(t.data, a), t.data, t.rendererKey, t.maxVVSize),\n      i = async (e, r, a) => {\n  if (!e) return null;\n  if (\"cim\" === e.type) return m(e, r);\n\n  if (\"web-style\" === e.type) {\n    const i = t.fromJSON(e),\n          n = {\n      type: \"cim\",\n      data: (await i.fetchCIMSymbol(a)).data,\n      rendererKey: e.rendererKey,\n      maxVVSize: e.maxVVSize\n    };\n    return m(n, r);\n  }\n\n  return e;\n};\n\nexport { i as expandSymbol, a as expandSymbols };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/symbols/cim/cimSymbolUtils.js"],"names":["analyzeCIMSymbol","e","ExpandedCIM","r","t","a","Promise","all","map","i","m","data","rendererKey","maxVVSize","type","fromJSON","n","fetchCIMSymbol","expandSymbol","expandSymbols"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAM,kBAAN;AAAyB,SAAOA,gBAAgB,IAAIC,CAA3B,QAAiC,kBAAjC;AAAoD,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,kBAA5B;AAA+C,OAAOC,CAAP,MAAa,sBAAb;;AAAoC,MAAMC,CAAC,GAAC,OAAMJ,CAAN,EAAQE,CAAR,EAAUC,CAAV,KAAcE,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACO,GAAF,CAAOP,CAAC,IAAEQ,CAAC,CAACR,CAAD,EAAGE,CAAH,EAAKC,CAAL,CAAX,CAAZ,CAAtB;AAAA,MAAwDM,CAAC,GAAC,OAAMN,CAAN,EAAQC,CAAR,KAAY,IAAIF,CAAJ,CAAM,MAAMF,CAAC,CAACG,CAAC,CAACO,IAAH,EAAQN,CAAR,CAAb,EAAwBD,CAAC,CAACO,IAA1B,EAA+BP,CAAC,CAACQ,WAAjC,EAA6CR,CAAC,CAACS,SAA/C,CAAtE;AAAA,MAAgIJ,CAAC,GAAC,OAAMR,CAAN,EAAQE,CAAR,EAAUE,CAAV,KAAc;AAAC,MAAG,CAACJ,CAAJ,EAAM,OAAO,IAAP;AAAY,MAAG,UAAQA,CAAC,CAACa,IAAb,EAAkB,OAAOJ,CAAC,CAACT,CAAD,EAAGE,CAAH,CAAR;;AAAc,MAAG,gBAAcF,CAAC,CAACa,IAAnB,EAAwB;AAAC,UAAML,CAAC,GAACL,CAAC,CAACW,QAAF,CAAWd,CAAX,CAAR;AAAA,UAAsBe,CAAC,GAAC;AAACF,MAAAA,IAAI,EAAC,KAAN;AAAYH,MAAAA,IAAI,EAAC,CAAC,MAAMF,CAAC,CAACQ,cAAF,CAAiBZ,CAAjB,CAAP,EAA4BM,IAA7C;AAAkDC,MAAAA,WAAW,EAACX,CAAC,CAACW,WAAhE;AAA4EC,MAAAA,SAAS,EAACZ,CAAC,CAACY;AAAxF,KAAxB;AAA2H,WAAOH,CAAC,CAACM,CAAD,EAAGb,CAAH,CAAR;AAAc;;AAAA,SAAOF,CAAP;AAAS,CAA9W;;AAA+W,SAAOQ,CAAC,IAAIS,YAAZ,EAAyBb,CAAC,IAAIc,aAA9B","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport\"../../symbols.js\";import{analyzeCIMSymbol as e}from\"./cimAnalyzer.js\";import{ExpandedCIM as r}from\"./ExpandedCIM.js\";import t from\"../WebStyleSymbol.js\";const a=async(e,r,t)=>Promise.all(e.map((e=>i(e,r,t)))),m=async(t,a)=>new r(await e(t.data,a),t.data,t.rendererKey,t.maxVVSize),i=async(e,r,a)=>{if(!e)return null;if(\"cim\"===e.type)return m(e,r);if(\"web-style\"===e.type){const i=t.fromJSON(e),n={type:\"cim\",data:(await i.fetchCIMSymbol(a)).data,rendererKey:e.rendererKey,maxVVSize:e.maxVVSize};return m(n,r)}return e};export{i as expandSymbol,a as expandSymbols};\n"]},"metadata":{},"sourceType":"module"}