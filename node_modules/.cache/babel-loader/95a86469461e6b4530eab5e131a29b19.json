{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as t } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\n\nfunction o() {\n  const o = new t();\n  o.vertex.uniforms.add(\"proj\", \"mat4\").add(\"view\", \"mat4\").add(\"width\", \"float\"), o.attributes.add(\"position\", \"vec3\"), o.attributes.add(\"normal\", \"vec3\"), o.attributes.add(\"uv0\", \"vec2\"), o.attributes.add(\"auxpos1\", \"float\"), o.varyings.add(\"vtc\", \"vec2\"), o.varyings.add(\"vlength\", \"float\"), o.varyings.add(\"vradius\", \"float\"), o.vertex.code.add(e`void main(void) {\nvec3 bitangent = normal;\nvtc = uv0;\nvlength = auxpos1;\nvradius = 0.5 * width;\nvec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);\ngl_Position = proj * pos;\n}`), o.fragment.uniforms.add(\"outlineSize\", \"float\").add(\"outlineColor\", \"vec4\").add(\"stripeLength\", \"float\").add(\"stripeEvenColor\", \"vec4\").add(\"stripeOddColor\", \"vec4\");\n  const r = 1 / Math.sqrt(2);\n  return o.fragment.code.add(e`\n    const float INV_SQRT2 = ${e.float(r)};\n\n    vec4 arrowColor(vec2 tc, float len) {\n      float d = INV_SQRT2 * (tc.x - abs(tc.y));\n      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));\n      d = min(d, 1.0 - abs(tc.y));\n\n      if (d < 0.0) {\n        return vec4(0.0);\n      } else if (d < outlineSize) {\n        return outlineColor;\n      } else {\n        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;\n      }\n    }\n\n    void main(void) {\n      vec2 ntc = vec2(vtc.x / vradius, vtc.y);\n      vec4 color = arrowColor(ntc, vlength / vradius);\n      if (color.a == 0.0) {\n        discard;\n      }\n      gl_FragColor = color;\n    }\n  `), o;\n}\n\nvar r = Object.freeze({\n  __proto__: null,\n  build: o\n});\nexport { r as M, o as b };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgis-api-react/node_modules/@arcgis/core/chunks/MeasurementArrow.glsl.js"],"names":["glsl","e","ShaderBuilder","t","o","vertex","uniforms","add","attributes","varyings","code","fragment","r","Math","sqrt","float","Object","freeze","__proto__","build","M","b"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,2DAArB;AAAiF,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,8DAA9B;;AAA6F,SAASC,CAAT,GAAY;AAAC,QAAMA,CAAC,GAAC,IAAID,CAAJ,EAAR;AAAcC,EAAAA,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBC,GAAlB,CAAsB,MAAtB,EAA6B,MAA7B,EAAqCA,GAArC,CAAyC,MAAzC,EAAgD,MAAhD,EAAwDA,GAAxD,CAA4D,OAA5D,EAAoE,OAApE,GAA6EH,CAAC,CAACI,UAAF,CAAaD,GAAb,CAAiB,UAAjB,EAA4B,MAA5B,CAA7E,EAAiHH,CAAC,CAACI,UAAF,CAAaD,GAAb,CAAiB,QAAjB,EAA0B,MAA1B,CAAjH,EAAmJH,CAAC,CAACI,UAAF,CAAaD,GAAb,CAAiB,KAAjB,EAAuB,MAAvB,CAAnJ,EAAkLH,CAAC,CAACI,UAAF,CAAaD,GAAb,CAAiB,SAAjB,EAA2B,OAA3B,CAAlL,EAAsNH,CAAC,CAACK,QAAF,CAAWF,GAAX,CAAe,KAAf,EAAqB,MAArB,CAAtN,EAAmPH,CAAC,CAACK,QAAF,CAAWF,GAAX,CAAe,SAAf,EAAyB,OAAzB,CAAnP,EAAqRH,CAAC,CAACK,QAAF,CAAWF,GAAX,CAAe,SAAf,EAAyB,OAAzB,CAArR,EAAuTH,CAAC,CAACC,MAAF,CAASK,IAAT,CAAcH,GAAd,CAAkBN,CAAE;AACphB;AACA;AACA;AACA;AACA;AACA;AACA,EAPggB,CAAvT,EAOrMG,CAAC,CAACO,QAAF,CAAWL,QAAX,CAAoBC,GAApB,CAAwB,aAAxB,EAAsC,OAAtC,EAA+CA,GAA/C,CAAmD,cAAnD,EAAkE,MAAlE,EAA0EA,GAA1E,CAA8E,cAA9E,EAA6F,OAA7F,EAAsGA,GAAtG,CAA0G,iBAA1G,EAA4H,MAA5H,EAAoIA,GAApI,CAAwI,gBAAxI,EAAyJ,MAAzJ,CAPqM;AAOpC,QAAMK,CAAC,GAAC,IAAEC,IAAI,CAACC,IAAL,CAAU,CAAV,CAAV;AAAuB,SAAOV,CAAC,CAACO,QAAF,CAAWD,IAAX,CAAgBH,GAAhB,CAAoBN,CAAE;AACzN,8BAA8BA,CAAC,CAACc,KAAF,CAAQH,CAAR,CAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAzBmM,GAyB9LR,CAzBuL;AAyBrL;;AAAA,IAAIQ,CAAC,GAACI,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,SAAS,EAAC,IAAX;AAAgBC,EAAAA,KAAK,EAACf;AAAtB,CAAd,CAAN;AAA8C,SAAOQ,CAAC,IAAIQ,CAAZ,EAAchB,CAAC,IAAIiB,CAAnB","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as t}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";function o(){const o=new t;o.vertex.uniforms.add(\"proj\",\"mat4\").add(\"view\",\"mat4\").add(\"width\",\"float\"),o.attributes.add(\"position\",\"vec3\"),o.attributes.add(\"normal\",\"vec3\"),o.attributes.add(\"uv0\",\"vec2\"),o.attributes.add(\"auxpos1\",\"float\"),o.varyings.add(\"vtc\",\"vec2\"),o.varyings.add(\"vlength\",\"float\"),o.varyings.add(\"vradius\",\"float\"),o.vertex.code.add(e`void main(void) {\nvec3 bitangent = normal;\nvtc = uv0;\nvlength = auxpos1;\nvradius = 0.5 * width;\nvec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);\ngl_Position = proj * pos;\n}`),o.fragment.uniforms.add(\"outlineSize\",\"float\").add(\"outlineColor\",\"vec4\").add(\"stripeLength\",\"float\").add(\"stripeEvenColor\",\"vec4\").add(\"stripeOddColor\",\"vec4\");const r=1/Math.sqrt(2);return o.fragment.code.add(e`\n    const float INV_SQRT2 = ${e.float(r)};\n\n    vec4 arrowColor(vec2 tc, float len) {\n      float d = INV_SQRT2 * (tc.x - abs(tc.y));\n      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));\n      d = min(d, 1.0 - abs(tc.y));\n\n      if (d < 0.0) {\n        return vec4(0.0);\n      } else if (d < outlineSize) {\n        return outlineColor;\n      } else {\n        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;\n      }\n    }\n\n    void main(void) {\n      vec2 ntc = vec2(vtc.x / vradius, vtc.y);\n      vec4 color = arrowColor(ntc, vlength / vradius);\n      if (color.a == 0.0) {\n        discard;\n      }\n      gl_FragColor = color;\n    }\n  `),o}var r=Object.freeze({__proto__:null,build:o});export{r as M,o as b};\n"]},"metadata":{},"sourceType":"module"}