{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { isAbortError as e } from \"../../../../core/promiseUtils.js\";\nimport t from \"./WorkerTile.js\";\nimport s from \"./style/StyleRepository.js\";\n\nclass r {\n  constructor() {\n    this._spriteInfo = {}, this._glyphInfo = {};\n  }\n\n  reset() {\n    return this._spriteInfo = {}, this._glyphInfo = {}, Promise.resolve();\n  }\n\n  getLayers() {\n    var e;\n    return null == (e = this._styleRepository) ? void 0 : e.layers;\n  }\n\n  async createTileAndParse(s, r) {\n    const {\n      key: o\n    } = s,\n          i = {};\n\n    for (const e of Object.keys(s.sourceName2DataAndRefKey)) {\n      const t = s.sourceName2DataAndRefKey[e];\n      i[e] = t.refKey;\n    }\n\n    const n = new t(o, i, this, this._styleRepository);\n\n    try {\n      return await n.parse(s, this._vectorTileLayerMaxBuffers, r);\n    } catch (l) {\n      if (n.setObsolete(), n.release(), !e(l)) throw l;\n      return null;\n    }\n  }\n\n  updateStyle(e) {\n    if (!e || 0 === e.length || !this._styleRepository) return;\n    const t = this._styleRepository;\n\n    for (const s of e) {\n      const e = s.type,\n            r = s.data;\n\n      switch (e) {\n        case 0:\n          t.setPaintProperties(r.layer, r.paint);\n          break;\n\n        case 1:\n          t.setLayoutProperties(r.layer, r.layout);\n          break;\n\n        case 3:\n          t.deleteStyleLayer(r.layer);\n          break;\n\n        case 2:\n          t.setStyleLayer(r.layer, r.index);\n      }\n    }\n  }\n\n  setStyle(e) {\n    this._styleRepository = new s(e.style), this._spriteInfo = {}, this._glyphInfo = {}, this._vectorTileLayerMaxBuffers = e.vectorTileLayerMaxBuffers;\n  }\n\n  fetchSprites(e, t, s) {\n    const r = [],\n          o = this._spriteInfo;\n    return e.forEach(e => {\n      void 0 === o[e.name] && r.push(e);\n    }), 0 === r.length ? Promise.resolve() : t.invoke(\"getSprites\", r, {\n      signal: s && s.signal\n    }).then(e => {\n      for (const t in e) {\n        const s = e[t];\n        o[t] = s;\n      }\n    });\n  }\n\n  getSpriteItems() {\n    return this._spriteInfo;\n  }\n\n  fetchGlyphs(e, t, s, r, o) {\n    const i = [];\n    let n = this._glyphInfo[t];\n    return n ? s.forEach(e => {\n      n[e] || i.push(e);\n    }) : (n = this._glyphInfo[t] = [], s.forEach(e => i.push(e))), 0 === i.length ? Promise.resolve() : r.invoke(\"getGlyphs\", {\n      tileID: e,\n      font: t,\n      codePoints: i\n    }, o).then(e => {\n      for (let t = 0; t < e.length; t++) e[t] && (n[t] = e[t]);\n    });\n  }\n\n  getGlyphItems(e) {\n    return this._glyphInfo[e];\n  }\n\n}\n\nexport default r;","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/2d/engine/vectorTiles/WorkerTileHandler.js"],"names":["isAbortError","e","t","s","r","constructor","_spriteInfo","_glyphInfo","reset","Promise","resolve","getLayers","_styleRepository","layers","createTileAndParse","key","o","i","Object","keys","sourceName2DataAndRefKey","refKey","n","parse","_vectorTileLayerMaxBuffers","l","setObsolete","release","updateStyle","length","type","data","setPaintProperties","layer","paint","setLayoutProperties","layout","deleteStyleLayer","setStyleLayer","index","setStyle","style","vectorTileLayerMaxBuffers","fetchSprites","forEach","name","push","invoke","signal","then","getSpriteItems","fetchGlyphs","tileID","font","codePoints","getGlyphItems"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{isAbortError as e}from\"../../../../core/promiseUtils.js\";import t from\"./WorkerTile.js\";import s from\"./style/StyleRepository.js\";class r{constructor(){this._spriteInfo={},this._glyphInfo={}}reset(){return this._spriteInfo={},this._glyphInfo={},Promise.resolve()}getLayers(){var e;return null==(e=this._styleRepository)?void 0:e.layers}async createTileAndParse(s,r){const{key:o}=s,i={};for(const e of Object.keys(s.sourceName2DataAndRefKey)){const t=s.sourceName2DataAndRefKey[e];i[e]=t.refKey}const n=new t(o,i,this,this._styleRepository);try{return await n.parse(s,this._vectorTileLayerMaxBuffers,r)}catch(l){if(n.setObsolete(),n.release(),!e(l))throw l;return null}}updateStyle(e){if(!e||0===e.length||!this._styleRepository)return;const t=this._styleRepository;for(const s of e){const e=s.type,r=s.data;switch(e){case 0:t.setPaintProperties(r.layer,r.paint);break;case 1:t.setLayoutProperties(r.layer,r.layout);break;case 3:t.deleteStyleLayer(r.layer);break;case 2:t.setStyleLayer(r.layer,r.index)}}}setStyle(e){this._styleRepository=new s(e.style),this._spriteInfo={},this._glyphInfo={},this._vectorTileLayerMaxBuffers=e.vectorTileLayerMaxBuffers}fetchSprites(e,t,s){const r=[],o=this._spriteInfo;return e.forEach((e=>{void 0===o[e.name]&&r.push(e)})),0===r.length?Promise.resolve():t.invoke(\"getSprites\",r,{signal:s&&s.signal}).then((e=>{for(const t in e){const s=e[t];o[t]=s}}))}getSpriteItems(){return this._spriteInfo}fetchGlyphs(e,t,s,r,o){const i=[];let n=this._glyphInfo[t];return n?s.forEach((e=>{n[e]||i.push(e)})):(n=this._glyphInfo[t]=[],s.forEach((e=>i.push(e)))),0===i.length?Promise.resolve():r.invoke(\"getGlyphs\",{tileID:e,font:t,codePoints:i},o).then((e=>{for(let t=0;t<e.length;t++)e[t]&&(n[t]=e[t])}))}getGlyphItems(e){return this._glyphInfo[e]}}export default r;\n"]},"metadata":{},"sourceType":"module"}