{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nconst t = .03;\n\nclass e {\n  constructor() {\n    this._path = [];\n  }\n\n  path() {\n    return this._path;\n  }\n\n  addPath(t, e) {\n    e || t.reverse(), Array.prototype.push.apply(this._path, t), e || t.reverse();\n  }\n\n  static mergePath(t, e) {\n    e && Array.prototype.push.apply(t, e);\n  }\n\n  startPath(t) {\n    this._path.push(t);\n  }\n\n  lineTo(t) {\n    this._path.push(t);\n  }\n\n  close() {\n    const t = this._path;\n    t.length > 1 && (t[0][0] === t[t.length - 1][0] && t[0][1] === t[t.length - 1][1] || t.push([t[0][0], t[0][1]]));\n  }\n\n}\n\nclass s {\n  constructor(t = 0, e = !1) {}\n\n  normalize(t) {\n    const e = Math.sqrt(t[0] * t[0] + t[1] * t[1]);\n    t[0] /= e, t[1] /= e;\n  }\n\n  calculateLength(t, e) {\n    const s = e[0] - t[0],\n          n = e[1] - t[1];\n    return Math.sqrt(s * s + n * n);\n  }\n\n  calculateSegLength(t, e) {\n    return this.calculateLength(t[e], t[e + 1]);\n  }\n\n  calculatePathLength(t) {\n    let e = 0;\n    const s = t ? t.length : 0;\n\n    for (let n = 0; n < s - 1; ++n) e += this.calculateSegLength(t, n);\n\n    return e;\n  }\n\n  calculatePathArea(t) {\n    let e = 0;\n    const s = t ? t.length : 0;\n\n    for (let n = 0; n < s - 1; ++n) e += (t[n + 1][0] - t[n][0]) * (t[n + 1][1] + t[n][1]);\n\n    return e / 2;\n  }\n\n  getCoord2D(t, e, s) {\n    return [t[0] + (e[0] - t[0]) * s, t[1] + (e[1] - t[1]) * s];\n  }\n\n  getSegCoord2D(t, e, s) {\n    return this.getCoord2D(t[e], t[e + 1], s);\n  }\n\n  getAngle(t, e, s) {\n    const n = e[0] - t[0],\n          r = e[1] - t[1];\n    return Math.atan2(r, n);\n  }\n\n  getSegAngle(t, e, s) {\n    return this.getAngle(t[e], t[e + 1], s);\n  }\n\n  getAngleCS(t, e, s) {\n    const n = e[0] - t[0],\n          r = e[1] - t[1],\n          h = Math.sqrt(n * n + r * r);\n    return h > 0 ? [n / h, r / h] : [1, 0];\n  }\n\n  getSegAngleCS(t, e, s) {\n    return this.getAngleCS(t[e], t[e + 1], s);\n  }\n\n  cut(t, e, s, n) {\n    return [s <= 0 ? t[e] : this.getSegCoord2D(t, e, s), n >= 1 ? t[e + 1] : this.getSegCoord2D(t, e, n)];\n  }\n\n  addSegment(t, e, s) {\n    s && t.push(e[0]), t.push(e[1]);\n  }\n\n  getSubCurve(t, e, s) {\n    const n = [];\n    return this.appendSubCurve(n, t, e, s) ? n : null;\n  }\n\n  appendSubCurve(t, e, s, n) {\n    const r = e ? e.length - 1 : 0;\n    let h = 0,\n        l = !0,\n        a = 0;\n\n    for (; a < r;) {\n      const r = this.calculateSegLength(e, a);\n\n      if (0 !== r) {\n        if (l) {\n          if (h + r > s) {\n            const o = (s - h) / r;\n            let u = 1,\n                c = !1;\n            h + r >= n && (u = (n - h) / r, c = !0);\n            const i = this.cut(e, a, o, u);\n            if (i && this.addSegment(t, i, l), c) break;\n            l = !1;\n          }\n        } else {\n          if (h + r > n) {\n            const s = this.cut(e, a, 0, (n - h) / r);\n            s && this.addSegment(t, s, l);\n            break;\n          }\n\n          this.addSegment(t, [e[a], e[a + 1]], l);\n        }\n\n        h += r, ++a;\n      } else ++a;\n    }\n\n    return !0;\n  }\n\n  getCIMPointAlong(t, e) {\n    const s = t ? t.length - 1 : 0;\n    let n = 0,\n        r = -1;\n\n    for (; r < s;) {\n      ++r;\n      const s = this.calculateSegLength(t, r);\n\n      if (0 !== s) {\n        if (n + s > e) {\n          const h = (e - n) / s;\n          return this.getCoord2D(t[r], t[r + 1], h);\n        }\n\n        n += s;\n      }\n    }\n\n    return null;\n  }\n\n  isEmpty(t, e) {\n    if (!t || t.length <= 1) return !0;\n    const s = t ? t.length - 1 : 0;\n    let n = -1;\n\n    for (; n < s;) {\n      if (++n, t[n + 1][0] !== t[n][0] || t[n + 1][1] !== t[n][1]) return !1;\n      if (e && t[n + 1][2] !== t[n][2]) return !1;\n    }\n\n    return !0;\n  }\n\n  offset(t, e, s, n, r) {\n    if (!t || t.length < 2) return null;\n    let h = t.length;\n    const l = t[0][0] === t[h - 1][0] && t[0][1] === t[h - 1][1];\n\n    if (l) {\n      if (t.length < 3) return null;\n      --h;\n    }\n\n    const a = [];\n    let o = l ? t[h - 1] : null,\n        u = t[0];\n\n    for (let c = 0; c < h; c++) {\n      const r = c === h - 1 ? l ? t[0] : null : t[c + 1];\n      if (o) {\n        if (r) {\n          const t = [r[0] - u[0], r[1] - u[1]];\n          this.normalize(t);\n          const h = [u[0] - o[0], u[1] - o[1]];\n          this.normalize(h);\n          const l = h[0] * t[1] - h[1] * t[0],\n                c = h[0] * t[0] + h[1] * t[1];\n\n          if (l >= 0 == e <= 0) {\n            const s = [t[0] - h[0], t[1] - h[1]];\n            this.normalize(s);\n            const n = Math.sqrt((1 + c) / 2),\n                  r = -Math.abs(e) / n;\n            a.push([u[0] - s[0] * r, u[1] - s[1] * r]);\n          } else switch (s) {\n            case \"Mitered\":\n              {\n                const s = Math.sqrt((1 + c) / 2);\n\n                if (s > 0 && 1 / s < n) {\n                  const n = [t[0] - h[0], t[1] - h[1]];\n                  this.normalize(n);\n                  const r = Math.abs(e) / s;\n                  a.push([u[0] - n[0] * r, u[1] - n[1] * r]);\n                  break;\n                }\n              }\n\n            case \"Bevelled\":\n              a.push([u[0] + h[1] * e, u[1] - h[0] * e]), a.push([u[0] + t[1] * e, u[1] - t[0] * e]);\n              break;\n\n            case \"Rounded\":\n              {\n                a.push([u[0] + h[1] * e, u[1] - h[0] * e]);\n                const s = 5,\n                      n = 1 / s;\n                let r = n;\n\n                for (let l = 1; l < s; l++, r += n) {\n                  const s = [h[1] * (1 - r) + t[1] * r, -h[0] * (1 - r) - t[0] * r];\n                  this.normalize(s), a.push([u[0] + s[0] * e, u[1] + s[1] * e]);\n                }\n\n                a.push([u[0] + t[1] * e, u[1] - t[0] * e]);\n                break;\n              }\n\n            case \"Square\":\n            default:\n              if (l < 0) a.push([u[0] + (h[1] + h[0]) * e, u[1] + (h[1] - h[0]) * e]), a.push([u[0] + (t[1] - t[0]) * e, u[1] - (t[0] + t[1]) * e]);else {\n                const s = Math.sqrt((1 + Math.abs(c)) / 2),\n                      n = [t[0] - h[0], t[1] - h[1]];\n                this.normalize(n);\n                const r = e / s;\n                a.push([u[0] - n[0] * r, u[1] - n[1] * r]);\n              }\n          }\n        } else {\n          const t = [u[0] - o[0], u[1] - o[1]];\n          this.normalize(t), a.push([u[0] + t[1] * e, u[1] - t[0] * e]);\n        }\n      } else {\n        const t = [r[0] - u[0], r[1] - u[1]];\n        this.normalize(t), a.push([u[0] + t[1] * e, u[1] - t[0] * e]);\n      }\n      o = u, u = r;\n    }\n\n    return l && a.push([a[0][0], a[0][1]]), a;\n  }\n\n}\n\nexport { s as CurveHelper, t as PIXEL_TOLERANCE, e as PathHelper };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/symbols/cim/CurveHelper.js"],"names":["t","e","constructor","_path","path","addPath","reverse","Array","prototype","push","apply","mergePath","startPath","lineTo","close","length","s","normalize","Math","sqrt","calculateLength","n","calculateSegLength","calculatePathLength","calculatePathArea","getCoord2D","getSegCoord2D","getAngle","r","atan2","getSegAngle","getAngleCS","h","getSegAngleCS","cut","addSegment","getSubCurve","appendSubCurve","l","a","o","u","c","i","getCIMPointAlong","isEmpty","offset","abs","CurveHelper","PIXEL_TOLERANCE","PathHelper"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,CAAC,GAAC,GAAR;;AAAY,MAAMC,CAAN,CAAO;AAACC,EAAAA,WAAW,GAAE;AAAC,SAAKC,KAAL,GAAW,EAAX;AAAc;;AAAAC,EAAAA,IAAI,GAAE;AAAC,WAAO,KAAKD,KAAZ;AAAkB;;AAAAE,EAAAA,OAAO,CAACL,CAAD,EAAGC,CAAH,EAAK;AAACA,IAAAA,CAAC,IAAED,CAAC,CAACM,OAAF,EAAH,EAAeC,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,KAAKP,KAAhC,EAAsCH,CAAtC,CAAf,EAAwDC,CAAC,IAAED,CAAC,CAACM,OAAF,EAA3D;AAAuE;;AAAgB,SAATK,SAAS,CAACX,CAAD,EAAGC,CAAH,EAAK;AAACA,IAAAA,CAAC,IAAEM,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2BV,CAA3B,EAA6BC,CAA7B,CAAH;AAAmC;;AAAAW,EAAAA,SAAS,CAACZ,CAAD,EAAG;AAAC,SAAKG,KAAL,CAAWM,IAAX,CAAgBT,CAAhB;AAAmB;;AAAAa,EAAAA,MAAM,CAACb,CAAD,EAAG;AAAC,SAAKG,KAAL,CAAWM,IAAX,CAAgBT,CAAhB;AAAmB;;AAAAc,EAAAA,KAAK,GAAE;AAAC,UAAMd,CAAC,GAAC,KAAKG,KAAb;AAAmBH,IAAAA,CAAC,CAACe,MAAF,GAAS,CAAT,KAAaf,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,MAAUA,CAAC,CAACA,CAAC,CAACe,MAAF,GAAS,CAAV,CAAD,CAAc,CAAd,CAAV,IAA4Bf,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,MAAUA,CAAC,CAACA,CAAC,CAACe,MAAF,GAAS,CAAV,CAAD,CAAc,CAAd,CAAtC,IAAwDf,CAAC,CAACS,IAAF,CAAO,CAACT,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAD,EAASA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAT,CAAP,CAArE;AAAgG;;AAA3X;;AAA4X,MAAMgB,CAAN,CAAO;AAACd,EAAAA,WAAW,CAACF,CAAC,GAAC,CAAH,EAAKC,CAAC,GAAC,CAAC,CAAR,EAAU,CAAE;;AAAAgB,EAAAA,SAAS,CAACjB,CAAD,EAAG;AAAC,UAAMC,CAAC,GAACiB,IAAI,CAACC,IAAL,CAAUnB,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAN,GAAUA,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAA1B,CAAR;AAAuCA,IAAAA,CAAC,CAAC,CAAD,CAAD,IAAMC,CAAN,EAAQD,CAAC,CAAC,CAAD,CAAD,IAAMC,CAAd;AAAgB;;AAAAmB,EAAAA,eAAe,CAACpB,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMe,CAAC,GAACf,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAd;AAAA,UAAkBqB,CAAC,GAACpB,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAA1B;AAA8B,WAAOkB,IAAI,CAACC,IAAL,CAAUH,CAAC,GAACA,CAAF,GAAIK,CAAC,GAACA,CAAhB,CAAP;AAA0B;;AAAAC,EAAAA,kBAAkB,CAACtB,CAAD,EAAGC,CAAH,EAAK;AAAC,WAAO,KAAKmB,eAAL,CAAqBpB,CAAC,CAACC,CAAD,CAAtB,EAA0BD,CAAC,CAACC,CAAC,GAAC,CAAH,CAA3B,CAAP;AAAyC;;AAAAsB,EAAAA,mBAAmB,CAACvB,CAAD,EAAG;AAAC,QAAIC,CAAC,GAAC,CAAN;AAAQ,UAAMe,CAAC,GAAChB,CAAC,GAACA,CAAC,CAACe,MAAH,GAAU,CAAnB;;AAAqB,SAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,CAAC,GAAC,CAAhB,EAAkB,EAAEK,CAApB,EAAsBpB,CAAC,IAAE,KAAKqB,kBAAL,CAAwBtB,CAAxB,EAA0BqB,CAA1B,CAAH;;AAAgC,WAAOpB,CAAP;AAAS;;AAAAuB,EAAAA,iBAAiB,CAACxB,CAAD,EAAG;AAAC,QAAIC,CAAC,GAAC,CAAN;AAAQ,UAAMe,CAAC,GAAChB,CAAC,GAACA,CAAC,CAACe,MAAH,GAAU,CAAnB;;AAAqB,SAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,CAAC,GAAC,CAAhB,EAAkB,EAAEK,CAApB,EAAsBpB,CAAC,IAAE,CAACD,CAAC,CAACqB,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,IAAUrB,CAAC,CAACqB,CAAD,CAAD,CAAK,CAAL,CAAX,KAAqBrB,CAAC,CAACqB,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,IAAUrB,CAAC,CAACqB,CAAD,CAAD,CAAK,CAAL,CAA/B,CAAH;;AAA2C,WAAOpB,CAAC,GAAC,CAAT;AAAW;;AAAAwB,EAAAA,UAAU,CAACzB,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAO;AAAC,WAAM,CAAChB,CAAC,CAAC,CAAD,CAAD,GAAK,CAACC,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAP,IAAYgB,CAAlB,EAAoBhB,CAAC,CAAC,CAAD,CAAD,GAAK,CAACC,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAP,IAAYgB,CAArC,CAAN;AAA8C;;AAAAU,EAAAA,aAAa,CAAC1B,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAO;AAAC,WAAO,KAAKS,UAAL,CAAgBzB,CAAC,CAACC,CAAD,CAAjB,EAAqBD,CAAC,CAACC,CAAC,GAAC,CAAH,CAAtB,EAA4Be,CAA5B,CAAP;AAAsC;;AAAAW,EAAAA,QAAQ,CAAC3B,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAO;AAAC,UAAMK,CAAC,GAACpB,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAd;AAAA,UAAkB4B,CAAC,GAAC3B,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAA1B;AAA8B,WAAOkB,IAAI,CAACW,KAAL,CAAWD,CAAX,EAAaP,CAAb,CAAP;AAAuB;;AAAAS,EAAAA,WAAW,CAAC9B,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAO;AAAC,WAAO,KAAKW,QAAL,CAAc3B,CAAC,CAACC,CAAD,CAAf,EAAmBD,CAAC,CAACC,CAAC,GAAC,CAAH,CAApB,EAA0Be,CAA1B,CAAP;AAAoC;;AAAAe,EAAAA,UAAU,CAAC/B,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAO;AAAC,UAAMK,CAAC,GAACpB,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAd;AAAA,UAAkB4B,CAAC,GAAC3B,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAA1B;AAAA,UAA8BgC,CAAC,GAACd,IAAI,CAACC,IAAL,CAAUE,CAAC,GAACA,CAAF,GAAIO,CAAC,GAACA,CAAhB,CAAhC;AAAmD,WAAOI,CAAC,GAAC,CAAF,GAAI,CAACX,CAAC,GAACW,CAAH,EAAKJ,CAAC,GAACI,CAAP,CAAJ,GAAc,CAAC,CAAD,EAAG,CAAH,CAArB;AAA2B;;AAAAC,EAAAA,aAAa,CAACjC,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAO;AAAC,WAAO,KAAKe,UAAL,CAAgB/B,CAAC,CAACC,CAAD,CAAjB,EAAqBD,CAAC,CAACC,CAAC,GAAC,CAAH,CAAtB,EAA4Be,CAA5B,CAAP;AAAsC;;AAAAkB,EAAAA,GAAG,CAAClC,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAOK,CAAP,EAAS;AAAC,WAAM,CAACL,CAAC,IAAE,CAAH,GAAKhB,CAAC,CAACC,CAAD,CAAN,GAAU,KAAKyB,aAAL,CAAmB1B,CAAnB,EAAqBC,CAArB,EAAuBe,CAAvB,CAAX,EAAqCK,CAAC,IAAE,CAAH,GAAKrB,CAAC,CAACC,CAAC,GAAC,CAAH,CAAN,GAAY,KAAKyB,aAAL,CAAmB1B,CAAnB,EAAqBC,CAArB,EAAuBoB,CAAvB,CAAjD,CAAN;AAAkF;;AAAAc,EAAAA,UAAU,CAACnC,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAO;AAACA,IAAAA,CAAC,IAAEhB,CAAC,CAACS,IAAF,CAAOR,CAAC,CAAC,CAAD,CAAR,CAAH,EAAgBD,CAAC,CAACS,IAAF,CAAOR,CAAC,CAAC,CAAD,CAAR,CAAhB;AAA6B;;AAAAmC,EAAAA,WAAW,CAACpC,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAO;AAAC,UAAMK,CAAC,GAAC,EAAR;AAAW,WAAO,KAAKgB,cAAL,CAAoBhB,CAApB,EAAsBrB,CAAtB,EAAwBC,CAAxB,EAA0Be,CAA1B,IAA6BK,CAA7B,GAA+B,IAAtC;AAA2C;;AAAAgB,EAAAA,cAAc,CAACrC,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAOK,CAAP,EAAS;AAAC,UAAMO,CAAC,GAAC3B,CAAC,GAACA,CAAC,CAACc,MAAF,GAAS,CAAV,GAAY,CAArB;AAAuB,QAAIiB,CAAC,GAAC,CAAN;AAAA,QAAQM,CAAC,GAAC,CAAC,CAAX;AAAA,QAAaC,CAAC,GAAC,CAAf;;AAAiB,WAAKA,CAAC,GAACX,CAAP,GAAU;AAAC,YAAMA,CAAC,GAAC,KAAKN,kBAAL,CAAwBrB,CAAxB,EAA0BsC,CAA1B,CAAR;;AAAqC,UAAG,MAAIX,CAAP,EAAS;AAAC,YAAGU,CAAH,EAAK;AAAC,cAAGN,CAAC,GAACJ,CAAF,GAAIZ,CAAP,EAAS;AAAC,kBAAMwB,CAAC,GAAC,CAACxB,CAAC,GAACgB,CAAH,IAAMJ,CAAd;AAAgB,gBAAIa,CAAC,GAAC,CAAN;AAAA,gBAAQC,CAAC,GAAC,CAAC,CAAX;AAAaV,YAAAA,CAAC,GAACJ,CAAF,IAAKP,CAAL,KAASoB,CAAC,GAAC,CAACpB,CAAC,GAACW,CAAH,IAAMJ,CAAR,EAAUc,CAAC,GAAC,CAAC,CAAtB;AAAyB,kBAAMC,CAAC,GAAC,KAAKT,GAAL,CAASjC,CAAT,EAAWsC,CAAX,EAAaC,CAAb,EAAeC,CAAf,CAAR;AAA0B,gBAAGE,CAAC,IAAE,KAAKR,UAAL,CAAgBnC,CAAhB,EAAkB2C,CAAlB,EAAoBL,CAApB,CAAH,EAA0BI,CAA7B,EAA+B;AAAMJ,YAAAA,CAAC,GAAC,CAAC,CAAH;AAAK;AAAC,SAA3I,MAA+I;AAAC,cAAGN,CAAC,GAACJ,CAAF,GAAIP,CAAP,EAAS;AAAC,kBAAML,CAAC,GAAC,KAAKkB,GAAL,CAASjC,CAAT,EAAWsC,CAAX,EAAa,CAAb,EAAe,CAAClB,CAAC,GAACW,CAAH,IAAMJ,CAArB,CAAR;AAAgCZ,YAAAA,CAAC,IAAE,KAAKmB,UAAL,CAAgBnC,CAAhB,EAAkBgB,CAAlB,EAAoBsB,CAApB,CAAH;AAA0B;AAAM;;AAAA,eAAKH,UAAL,CAAgBnC,CAAhB,EAAkB,CAACC,CAAC,CAACsC,CAAD,CAAF,EAAMtC,CAAC,CAACsC,CAAC,GAAC,CAAH,CAAP,CAAlB,EAAgCD,CAAhC;AAAmC;;AAAAN,QAAAA,CAAC,IAAEJ,CAAH,EAAK,EAAEW,CAAP;AAAS,OAAhR,MAAoR,EAAEA,CAAF;AAAI;;AAAA,WAAM,CAAC,CAAP;AAAS;;AAAAK,EAAAA,gBAAgB,CAAC5C,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMe,CAAC,GAAChB,CAAC,GAACA,CAAC,CAACe,MAAF,GAAS,CAAV,GAAY,CAArB;AAAuB,QAAIM,CAAC,GAAC,CAAN;AAAA,QAAQO,CAAC,GAAC,CAAC,CAAX;;AAAa,WAAKA,CAAC,GAACZ,CAAP,GAAU;AAAC,QAAEY,CAAF;AAAI,YAAMZ,CAAC,GAAC,KAAKM,kBAAL,CAAwBtB,CAAxB,EAA0B4B,CAA1B,CAAR;;AAAqC,UAAG,MAAIZ,CAAP,EAAS;AAAC,YAAGK,CAAC,GAACL,CAAF,GAAIf,CAAP,EAAS;AAAC,gBAAM+B,CAAC,GAAC,CAAC/B,CAAC,GAACoB,CAAH,IAAML,CAAd;AAAgB,iBAAO,KAAKS,UAAL,CAAgBzB,CAAC,CAAC4B,CAAD,CAAjB,EAAqB5B,CAAC,CAAC4B,CAAC,GAAC,CAAH,CAAtB,EAA4BI,CAA5B,CAAP;AAAsC;;AAAAX,QAAAA,CAAC,IAAEL,CAAH;AAAK;AAAC;;AAAA,WAAO,IAAP;AAAY;;AAAA6B,EAAAA,OAAO,CAAC7C,CAAD,EAAGC,CAAH,EAAK;AAAC,QAAG,CAACD,CAAD,IAAIA,CAAC,CAACe,MAAF,IAAU,CAAjB,EAAmB,OAAM,CAAC,CAAP;AAAS,UAAMC,CAAC,GAAChB,CAAC,GAACA,CAAC,CAACe,MAAF,GAAS,CAAV,GAAY,CAArB;AAAuB,QAAIM,CAAC,GAAC,CAAC,CAAP;;AAAS,WAAKA,CAAC,GAACL,CAAP,GAAU;AAAC,UAAG,EAAEK,CAAF,EAAIrB,CAAC,CAACqB,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,MAAYrB,CAAC,CAACqB,CAAD,CAAD,CAAK,CAAL,CAAZ,IAAqBrB,CAAC,CAACqB,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,MAAYrB,CAAC,CAACqB,CAAD,CAAD,CAAK,CAAL,CAAxC,EAAgD,OAAM,CAAC,CAAP;AAAS,UAAGpB,CAAC,IAAED,CAAC,CAACqB,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,MAAYrB,CAAC,CAACqB,CAAD,CAAD,CAAK,CAAL,CAAlB,EAA0B,OAAM,CAAC,CAAP;AAAS;;AAAA,WAAM,CAAC,CAAP;AAAS;;AAAAyB,EAAAA,MAAM,CAAC9C,CAAD,EAAGC,CAAH,EAAKe,CAAL,EAAOK,CAAP,EAASO,CAAT,EAAW;AAAC,QAAG,CAAC5B,CAAD,IAAIA,CAAC,CAACe,MAAF,GAAS,CAAhB,EAAkB,OAAO,IAAP;AAAY,QAAIiB,CAAC,GAAChC,CAAC,CAACe,MAAR;AAAe,UAAMuB,CAAC,GAACtC,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,MAAUA,CAAC,CAACgC,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,CAAV,IAAqBhC,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,MAAUA,CAAC,CAACgC,CAAC,GAAC,CAAH,CAAD,CAAO,CAAP,CAAvC;;AAAiD,QAAGM,CAAH,EAAK;AAAC,UAAGtC,CAAC,CAACe,MAAF,GAAS,CAAZ,EAAc,OAAO,IAAP;AAAY,QAAEiB,CAAF;AAAI;;AAAA,UAAMO,CAAC,GAAC,EAAR;AAAW,QAAIC,CAAC,GAACF,CAAC,GAACtC,CAAC,CAACgC,CAAC,GAAC,CAAH,CAAF,GAAQ,IAAf;AAAA,QAAoBS,CAAC,GAACzC,CAAC,CAAC,CAAD,CAAvB;;AAA2B,SAAI,IAAI0C,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACV,CAAd,EAAgBU,CAAC,EAAjB,EAAoB;AAAC,YAAMd,CAAC,GAACc,CAAC,KAAGV,CAAC,GAAC,CAAN,GAAQM,CAAC,GAACtC,CAAC,CAAC,CAAD,CAAF,GAAM,IAAf,GAAoBA,CAAC,CAAC0C,CAAC,GAAC,CAAH,CAA7B;AAAmC,UAAGF,CAAH;AAAK,YAAGZ,CAAH,EAAK;AAAC,gBAAM5B,CAAC,GAAC,CAAC4B,CAAC,CAAC,CAAD,CAAD,GAAKa,CAAC,CAAC,CAAD,CAAP,EAAWb,CAAC,CAAC,CAAD,CAAD,GAAKa,CAAC,CAAC,CAAD,CAAjB,CAAR;AAA8B,eAAKxB,SAAL,CAAejB,CAAf;AAAkB,gBAAMgC,CAAC,GAAC,CAACS,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAP,EAAWC,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAjB,CAAR;AAA8B,eAAKvB,SAAL,CAAee,CAAf;AAAkB,gBAAMM,CAAC,GAACN,CAAC,CAAC,CAAD,CAAD,GAAKhC,CAAC,CAAC,CAAD,CAAN,GAAUgC,CAAC,CAAC,CAAD,CAAD,GAAKhC,CAAC,CAAC,CAAD,CAAxB;AAAA,gBAA4B0C,CAAC,GAACV,CAAC,CAAC,CAAD,CAAD,GAAKhC,CAAC,CAAC,CAAD,CAAN,GAAUgC,CAAC,CAAC,CAAD,CAAD,GAAKhC,CAAC,CAAC,CAAD,CAA9C;;AAAkD,cAAGsC,CAAC,IAAE,CAAH,IAAMrC,CAAC,IAAE,CAAZ,EAAc;AAAC,kBAAMe,CAAC,GAAC,CAAChB,CAAC,CAAC,CAAD,CAAD,GAAKgC,CAAC,CAAC,CAAD,CAAP,EAAWhC,CAAC,CAAC,CAAD,CAAD,GAAKgC,CAAC,CAAC,CAAD,CAAjB,CAAR;AAA8B,iBAAKf,SAAL,CAAeD,CAAf;AAAkB,kBAAMK,CAAC,GAACH,IAAI,CAACC,IAAL,CAAU,CAAC,IAAEuB,CAAH,IAAM,CAAhB,CAAR;AAAA,kBAA2Bd,CAAC,GAAC,CAACV,IAAI,CAAC6B,GAAL,CAAS9C,CAAT,CAAD,GAAaoB,CAA1C;AAA4CkB,YAAAA,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAKzB,CAAC,CAAC,CAAD,CAAD,GAAKY,CAAX,EAAaa,CAAC,CAAC,CAAD,CAAD,GAAKzB,CAAC,CAAC,CAAD,CAAD,GAAKY,CAAvB,CAAP;AAAkC,WAA7I,MAAkJ,QAAOZ,CAAP;AAAU,iBAAI,SAAJ;AAAc;AAAC,sBAAMA,CAAC,GAACE,IAAI,CAACC,IAAL,CAAU,CAAC,IAAEuB,CAAH,IAAM,CAAhB,CAAR;;AAA2B,oBAAG1B,CAAC,GAAC,CAAF,IAAK,IAAEA,CAAF,GAAIK,CAAZ,EAAc;AAAC,wBAAMA,CAAC,GAAC,CAACrB,CAAC,CAAC,CAAD,CAAD,GAAKgC,CAAC,CAAC,CAAD,CAAP,EAAWhC,CAAC,CAAC,CAAD,CAAD,GAAKgC,CAAC,CAAC,CAAD,CAAjB,CAAR;AAA8B,uBAAKf,SAAL,CAAeI,CAAf;AAAkB,wBAAMO,CAAC,GAACV,IAAI,CAAC6B,GAAL,CAAS9C,CAAT,IAAYe,CAApB;AAAsBuB,kBAAAA,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAKpB,CAAC,CAAC,CAAD,CAAD,GAAKO,CAAX,EAAaa,CAAC,CAAC,CAAD,CAAD,GAAKpB,CAAC,CAAC,CAAD,CAAD,GAAKO,CAAvB,CAAP;AAAkC;AAAM;AAAC;;AAAA,iBAAI,UAAJ;AAAeW,cAAAA,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAKT,CAAC,CAAC,CAAD,CAAD,GAAK/B,CAAX,EAAawC,CAAC,CAAC,CAAD,CAAD,GAAKT,CAAC,CAAC,CAAD,CAAD,GAAK/B,CAAvB,CAAP,GAAkCsC,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAKzC,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAX,EAAawC,CAAC,CAAC,CAAD,CAAD,GAAKzC,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAvB,CAAP,CAAlC;AAAoE;;AAAM,iBAAI,SAAJ;AAAc;AAACsC,gBAAAA,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAKT,CAAC,CAAC,CAAD,CAAD,GAAK/B,CAAX,EAAawC,CAAC,CAAC,CAAD,CAAD,GAAKT,CAAC,CAAC,CAAD,CAAD,GAAK/B,CAAvB,CAAP;AAAkC,sBAAMe,CAAC,GAAC,CAAR;AAAA,sBAAUK,CAAC,GAAC,IAAEL,CAAd;AAAgB,oBAAIY,CAAC,GAACP,CAAN;;AAAQ,qBAAI,IAAIiB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACtB,CAAd,EAAgBsB,CAAC,IAAGV,CAAC,IAAEP,CAAvB,EAAyB;AAAC,wBAAML,CAAC,GAAC,CAACgB,CAAC,CAAC,CAAD,CAAD,IAAM,IAAEJ,CAAR,IAAW5B,CAAC,CAAC,CAAD,CAAD,GAAK4B,CAAjB,EAAmB,CAACI,CAAC,CAAC,CAAD,CAAF,IAAO,IAAEJ,CAAT,IAAY5B,CAAC,CAAC,CAAD,CAAD,GAAK4B,CAApC,CAAR;AAA+C,uBAAKX,SAAL,CAAeD,CAAf,GAAkBuB,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAKzB,CAAC,CAAC,CAAD,CAAD,GAAKf,CAAX,EAAawC,CAAC,CAAC,CAAD,CAAD,GAAKzB,CAAC,CAAC,CAAD,CAAD,GAAKf,CAAvB,CAAP,CAAlB;AAAoD;;AAAAsC,gBAAAA,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAKzC,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAX,EAAawC,CAAC,CAAC,CAAD,CAAD,GAAKzC,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAvB,CAAP;AAAkC;AAAM;;AAAA,iBAAI,QAAJ;AAAa;AAAQ,kBAAGqC,CAAC,GAAC,CAAL,EAAOC,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAK,CAACT,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAP,IAAY/B,CAAlB,EAAoBwC,CAAC,CAAC,CAAD,CAAD,GAAK,CAACT,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAP,IAAY/B,CAArC,CAAP,GAAgDsC,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAK,CAACzC,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAP,IAAYC,CAAlB,EAAoBwC,CAAC,CAAC,CAAD,CAAD,GAAK,CAACzC,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAP,IAAYC,CAArC,CAAP,CAAhD,CAAP,KAA2G;AAAC,sBAAMe,CAAC,GAACE,IAAI,CAACC,IAAL,CAAU,CAAC,IAAED,IAAI,CAAC6B,GAAL,CAASL,CAAT,CAAH,IAAgB,CAA1B,CAAR;AAAA,sBAAqCrB,CAAC,GAAC,CAACrB,CAAC,CAAC,CAAD,CAAD,GAAKgC,CAAC,CAAC,CAAD,CAAP,EAAWhC,CAAC,CAAC,CAAD,CAAD,GAAKgC,CAAC,CAAC,CAAD,CAAjB,CAAvC;AAA6D,qBAAKf,SAAL,CAAeI,CAAf;AAAkB,sBAAMO,CAAC,GAAC3B,CAAC,GAACe,CAAV;AAAYuB,gBAAAA,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAKpB,CAAC,CAAC,CAAD,CAAD,GAAKO,CAAX,EAAaa,CAAC,CAAC,CAAD,CAAD,GAAKpB,CAAC,CAAC,CAAD,CAAD,GAAKO,CAAvB,CAAP;AAAkC;AAAvvB;AAAyvB,SAAniC,MAAuiC;AAAC,gBAAM5B,CAAC,GAAC,CAACyC,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAP,EAAWC,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,CAAC,CAAD,CAAjB,CAAR;AAA8B,eAAKvB,SAAL,CAAejB,CAAf,GAAkBuC,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAKzC,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAX,EAAawC,CAAC,CAAC,CAAD,CAAD,GAAKzC,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAvB,CAAP,CAAlB;AAAoD;AAA/nC,aAAmoC;AAAC,cAAMD,CAAC,GAAC,CAAC4B,CAAC,CAAC,CAAD,CAAD,GAAKa,CAAC,CAAC,CAAD,CAAP,EAAWb,CAAC,CAAC,CAAD,CAAD,GAAKa,CAAC,CAAC,CAAD,CAAjB,CAAR;AAA8B,aAAKxB,SAAL,CAAejB,CAAf,GAAkBuC,CAAC,CAAC9B,IAAF,CAAO,CAACgC,CAAC,CAAC,CAAD,CAAD,GAAKzC,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAX,EAAawC,CAAC,CAAC,CAAD,CAAD,GAAKzC,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAvB,CAAP,CAAlB;AAAoD;AAAAuC,MAAAA,CAAC,GAACC,CAAF,EAAIA,CAAC,GAACb,CAAN;AAAQ;;AAAA,WAAOU,CAAC,IAAEC,CAAC,CAAC9B,IAAF,CAAO,CAAC8B,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAD,EAASA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAT,CAAP,CAAH,EAA6BA,CAApC;AAAsC;;AAA90G;;AAA+0G,SAAOvB,CAAC,IAAIgC,WAAZ,EAAwBhD,CAAC,IAAIiD,eAA7B,EAA6ChD,CAAC,IAAIiD,UAAlD","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nconst t=.03;class e{constructor(){this._path=[]}path(){return this._path}addPath(t,e){e||t.reverse(),Array.prototype.push.apply(this._path,t),e||t.reverse()}static mergePath(t,e){e&&Array.prototype.push.apply(t,e)}startPath(t){this._path.push(t)}lineTo(t){this._path.push(t)}close(){const t=this._path;t.length>1&&(t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]||t.push([t[0][0],t[0][1]]))}}class s{constructor(t=0,e=!1){}normalize(t){const e=Math.sqrt(t[0]*t[0]+t[1]*t[1]);t[0]/=e,t[1]/=e}calculateLength(t,e){const s=e[0]-t[0],n=e[1]-t[1];return Math.sqrt(s*s+n*n)}calculateSegLength(t,e){return this.calculateLength(t[e],t[e+1])}calculatePathLength(t){let e=0;const s=t?t.length:0;for(let n=0;n<s-1;++n)e+=this.calculateSegLength(t,n);return e}calculatePathArea(t){let e=0;const s=t?t.length:0;for(let n=0;n<s-1;++n)e+=(t[n+1][0]-t[n][0])*(t[n+1][1]+t[n][1]);return e/2}getCoord2D(t,e,s){return[t[0]+(e[0]-t[0])*s,t[1]+(e[1]-t[1])*s]}getSegCoord2D(t,e,s){return this.getCoord2D(t[e],t[e+1],s)}getAngle(t,e,s){const n=e[0]-t[0],r=e[1]-t[1];return Math.atan2(r,n)}getSegAngle(t,e,s){return this.getAngle(t[e],t[e+1],s)}getAngleCS(t,e,s){const n=e[0]-t[0],r=e[1]-t[1],h=Math.sqrt(n*n+r*r);return h>0?[n/h,r/h]:[1,0]}getSegAngleCS(t,e,s){return this.getAngleCS(t[e],t[e+1],s)}cut(t,e,s,n){return[s<=0?t[e]:this.getSegCoord2D(t,e,s),n>=1?t[e+1]:this.getSegCoord2D(t,e,n)]}addSegment(t,e,s){s&&t.push(e[0]),t.push(e[1])}getSubCurve(t,e,s){const n=[];return this.appendSubCurve(n,t,e,s)?n:null}appendSubCurve(t,e,s,n){const r=e?e.length-1:0;let h=0,l=!0,a=0;for(;a<r;){const r=this.calculateSegLength(e,a);if(0!==r){if(l){if(h+r>s){const o=(s-h)/r;let u=1,c=!1;h+r>=n&&(u=(n-h)/r,c=!0);const i=this.cut(e,a,o,u);if(i&&this.addSegment(t,i,l),c)break;l=!1}}else{if(h+r>n){const s=this.cut(e,a,0,(n-h)/r);s&&this.addSegment(t,s,l);break}this.addSegment(t,[e[a],e[a+1]],l)}h+=r,++a}else++a}return!0}getCIMPointAlong(t,e){const s=t?t.length-1:0;let n=0,r=-1;for(;r<s;){++r;const s=this.calculateSegLength(t,r);if(0!==s){if(n+s>e){const h=(e-n)/s;return this.getCoord2D(t[r],t[r+1],h)}n+=s}}return null}isEmpty(t,e){if(!t||t.length<=1)return!0;const s=t?t.length-1:0;let n=-1;for(;n<s;){if(++n,t[n+1][0]!==t[n][0]||t[n+1][1]!==t[n][1])return!1;if(e&&t[n+1][2]!==t[n][2])return!1}return!0}offset(t,e,s,n,r){if(!t||t.length<2)return null;let h=t.length;const l=t[0][0]===t[h-1][0]&&t[0][1]===t[h-1][1];if(l){if(t.length<3)return null;--h}const a=[];let o=l?t[h-1]:null,u=t[0];for(let c=0;c<h;c++){const r=c===h-1?l?t[0]:null:t[c+1];if(o)if(r){const t=[r[0]-u[0],r[1]-u[1]];this.normalize(t);const h=[u[0]-o[0],u[1]-o[1]];this.normalize(h);const l=h[0]*t[1]-h[1]*t[0],c=h[0]*t[0]+h[1]*t[1];if(l>=0==e<=0){const s=[t[0]-h[0],t[1]-h[1]];this.normalize(s);const n=Math.sqrt((1+c)/2),r=-Math.abs(e)/n;a.push([u[0]-s[0]*r,u[1]-s[1]*r])}else switch(s){case\"Mitered\":{const s=Math.sqrt((1+c)/2);if(s>0&&1/s<n){const n=[t[0]-h[0],t[1]-h[1]];this.normalize(n);const r=Math.abs(e)/s;a.push([u[0]-n[0]*r,u[1]-n[1]*r]);break}}case\"Bevelled\":a.push([u[0]+h[1]*e,u[1]-h[0]*e]),a.push([u[0]+t[1]*e,u[1]-t[0]*e]);break;case\"Rounded\":{a.push([u[0]+h[1]*e,u[1]-h[0]*e]);const s=5,n=1/s;let r=n;for(let l=1;l<s;l++,r+=n){const s=[h[1]*(1-r)+t[1]*r,-h[0]*(1-r)-t[0]*r];this.normalize(s),a.push([u[0]+s[0]*e,u[1]+s[1]*e])}a.push([u[0]+t[1]*e,u[1]-t[0]*e]);break}case\"Square\":default:if(l<0)a.push([u[0]+(h[1]+h[0])*e,u[1]+(h[1]-h[0])*e]),a.push([u[0]+(t[1]-t[0])*e,u[1]-(t[0]+t[1])*e]);else{const s=Math.sqrt((1+Math.abs(c))/2),n=[t[0]-h[0],t[1]-h[1]];this.normalize(n);const r=e/s;a.push([u[0]-n[0]*r,u[1]-n[1]*r])}}}else{const t=[u[0]-o[0],u[1]-o[1]];this.normalize(t),a.push([u[0]+t[1]*e,u[1]-t[0]*e])}else{const t=[r[0]-u[0],r[1]-u[1]];this.normalize(t),a.push([u[0]+t[1]*e,u[1]-t[0]*e])}o=u,u=r}return l&&a.push([a[0][0],a[0][1]]),a}}export{s as CurveHelper,t as PIXEL_TOLERANCE,e as PathHelper};\n"]},"metadata":{},"sourceType":"module"}