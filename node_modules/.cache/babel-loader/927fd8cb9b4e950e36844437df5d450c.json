{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport { glsl as r } from \"../../shaderModules/interfaces.js\";\n\nfunction e(e) {\n  e.fragment.uniforms.add(\"u_colormap\", \"sampler2D\"), e.fragment.uniforms.add(\"u_colormapOffset\", \"float\"), e.fragment.uniforms.add(\"u_colormapMaxIndex\", \"float\"), e.fragment.code.add(r`vec4 colormap(vec4 currentPixel, bool isFloat) {\nfloat clrIndex = isFloat ? currentPixel.r - u_colormapOffset : currentPixel.r * 255.0 - u_colormapOffset;\nvec4 result;\nif (currentPixel.a == 0.0 || clrIndex > u_colormapMaxIndex) {\nresult = vec4(0.0, 0.0, 0.0, 0.0);\n} else {\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nresult = vec4(color.rgb, 1.0) * color.a * u_opacity;\n}\nreturn result;\n}`);\n}\n\nexport { e as Colormap };","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/arcgisapi-react/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/raster/Colormap.glsl.js"],"names":["glsl","r","e","fragment","uniforms","add","code","Colormap"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,mCAArB;;AAAyD,SAASC,CAAT,CAAWA,CAAX,EAAa;AAACA,EAAAA,CAAC,CAACC,QAAF,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,YAAxB,EAAqC,WAArC,GAAkDH,CAAC,CAACC,QAAF,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,kBAAxB,EAA2C,OAA3C,CAAlD,EAAsGH,CAAC,CAACC,QAAF,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,oBAAxB,EAA6C,OAA7C,CAAtG,EAA4JH,CAAC,CAACC,QAAF,CAAWG,IAAX,CAAgBD,GAAhB,CAAoBJ,CAAE;AACzP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAXmO,CAA5J;AAWnE;;AAAA,SAAOC,CAAC,IAAIK,QAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport{glsl as r}from\"../../shaderModules/interfaces.js\";function e(e){e.fragment.uniforms.add(\"u_colormap\",\"sampler2D\"),e.fragment.uniforms.add(\"u_colormapOffset\",\"float\"),e.fragment.uniforms.add(\"u_colormapMaxIndex\",\"float\"),e.fragment.code.add(r`vec4 colormap(vec4 currentPixel, bool isFloat) {\nfloat clrIndex = isFloat ? currentPixel.r - u_colormapOffset : currentPixel.r * 255.0 - u_colormapOffset;\nvec4 result;\nif (currentPixel.a == 0.0 || clrIndex > u_colormapMaxIndex) {\nresult = vec4(0.0, 0.0, 0.0, 0.0);\n} else {\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nresult = vec4(color.rgb, 1.0) * color.a * u_opacity;\n}\nreturn result;\n}`)}export{e as Colormap};\n"]},"metadata":{},"sourceType":"module"}