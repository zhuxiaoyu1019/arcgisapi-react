/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../Viewpoint.js";import{deprecatedProperty as o}from"../core/deprecate.js";import r from"../core/Error.js";import{IdentifiableMixin as i}from"../core/Identifiable.js";import{JSONSupport as n}from"../core/JSONSupport.js";import{clone as s}from"../core/lang.js";import p from"../core/Logger.js";import{isSome as a,isNone as m}from"../core/maybe.js";import{property as c}from"../core/accessorSupport/decorators/property.js";import{cast as l}from"../core/accessorSupport/decorators/cast.js";import"../core/has.js";import{reader as u}from"../core/accessorSupport/decorators/reader.js";import{subclass as w}from"../core/accessorSupport/decorators/subclass.js";import{writer as y}from"../core/accessorSupport/decorators/writer.js";import{ensureType as h}from"../core/accessorSupport/ensureType.js";import d from"../geometry/Extent.js";import f from"../webdoc/support/Thumbnail.js";var j;const v="esri.webmap.Bookmark",b=p.getLogger(v);let g=j=class extends(i(n)){constructor(e){super(e),this.name=null,this.thumbnail=new f}set extent(e){o(b,"extent",{replacement:"viewpoint",version:"4.17"}),this._set("viewpoint",new t({targetGeometry:e.clone()})),this._set("extent",e)}castThumbnail(e){return"string"==typeof e?new f({url:e}):h(f,e)}set viewpoint(e){const{targetGeometry:t,scale:o}=e;a(t)&&("extent"===t.type?this._set("extent",t.clone()):"point"===t.type&&m(o)&&b.warn("Bookmark.viewpoint should include 'scale' when its targetGeometry is a point.",e)),this._set("viewpoint",e)}readViewpoint(e,o){const{extent:r,viewpoint:i}=o;return t.fromJSON(i||{targetGeometry:r})}writeViewpoint(e,t,o,i){if(!e)return;const{targetGeometry:n}=e;if(a(n)&&"extent"!==n.type){const e="Bookmark.viewpoint cannot be written to JSON when the viewpoint's targetGeometry is not an extent.";null!=i&&i.messages?i.messages.push(new r("property:unsupported",e)):b.error(e)}else t[o]=e.toJSON()}clone(){return new j(s({name:this.name,thumbnail:this.thumbnail,viewpoint:this.viewpoint}))}};e([c({type:d,nonNullable:!0,json:{read:!1,write:{isRequired:!0}}})],g.prototype,"extent",null),e([c({type:String,nonNullable:!0,json:{write:{isRequired:!0}}})],g.prototype,"name",void 0),e([c({type:f,json:{write:{overridePolicy:e=>({enabled:!(!e||!e.url)})}}})],g.prototype,"thumbnail",void 0),e([l("thumbnail")],g.prototype,"castThumbnail",null),e([c({type:t,nonNullable:!0,json:{write:!0}})],g.prototype,"viewpoint",null),e([u("viewpoint",["extent","viewpoint"])],g.prototype,"readViewpoint",null),e([y("viewpoint")],g.prototype,"writeViewpoint",null),g=j=e([w(v)],g);var x=g;export default x;
