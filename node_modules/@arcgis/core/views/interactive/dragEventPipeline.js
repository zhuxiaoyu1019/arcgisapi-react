/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{handlesGroup as t}from"../../core/handleUtils.js";import{clone as n}from"../../core/lang.js";import{clamp as e}from"../../core/mathUtils.js";import{isSome as r,isNone as a,unwrap as o}from"../../core/maybe.js";import{createScreenPoint as c}from"../../core/screenUtils.js";import{f as s}from"../../chunks/vec3f64.js";import{project as l}from"../../geometry/projection.js";import{move as i}from"../draw/support/drawUtils.js";function u(t,n){let e=null,o=null;return c=>{if("cancel"===c.action)return void(r(o)&&(o.execute({action:"cancel"}),e=null,o=null));const s={action:c.action,screenStart:c.start,screenEnd:c.screenPoint};"start"===c.action&&a(e)&&(e=new b,o=new b,n(t,e,o,c.pointerType,s)),r(e)&&e.execute(s),"end"===c.action&&r(e)&&(e=null,o=null)}}function m(t,n){return t.events.on("drag",u(t,n))}function f(n,e){const r=[];for(const t of n)r.push(m(t,e));return t(r)}function p(t,n){const e=[t.x,t.y,t.z],r=n,a=[Math.cos(r),Math.sin(r)],o=Math.sqrt(a[0]*a[0]+a[1]*a[1]);if(0===o)return null;a[0]/=o,a[1]/=o;const c=t=>{const n=(t.x-e[0])*a[0]+(t.y-e[1])*a[1];t.x=e[0]+n*a[0],t.y=e[1]+n*a[1]};return t=>(c(t.mapStart),c(t.mapEnd),t)}function y(t,n){let e=null;return r=>{if("start"===r.action&&(e=x(t,r.mapStart.spatialReference,n)),a(e))return null;const o=r.mapEnd.x-r.mapStart.x,c=r.mapEnd.y-r.mapStart.y,s=r.mapEnd.z-r.mapStart.z;return e.move(o,c,s),{...r,translationX:o,translationY:c,translationZ:s}}}function d(t,n){return a(t)?null:t.spatialReference.equals(n)?t.clone():l(t,n)}function x(t,n,e){const r=t.geometry;if(a(r))return null;if("mesh"===r.type)return E(t,r,n,e);const o=d(r,n),c=r.spatialReference;return a(o)?null:{move:(n,e,r)=>{const a=i(o.clone(),n,e,r);a.spatialReference.equals(c)?t.geometry=a:t.geometry=l(a,c)}}}function E(t,n,e,a){if(r(n.transform))return h(t,n,n.transform,e);if(!n.spatialReference.equals(e))return null;let o=0,c=0,s=0;return{move:(e,r,l)=>{const i=e-o,u=r-c,m=l-s;if(i||u||m){const f=n.origin.clone().offset(i,u,m);n.centerAt(f,{geographic:1===a}),t.notifyGeometryChanged(),o=e,c=r,s=l}}}}function h(t,n,e,o){const c=d(e.getOriginPoint(n.spatialReference),o),u=n.spatialReference;return a(c)?null:{move:(n,a,o)=>{const m=i(c.clone(),n,a,o);if(m.spatialReference.equals(u))e.origin=s(m.x,m.y,m.z);else{const t=l(m,u);r(t)&&(e.origin=s(t.x,t.y,t.z))}t.notifyGeometryChanged()}}}function g(t,n=null,e){let o=null;const c=r(n)&&!t.spatialReference.equals(n)?t=>r(t)?l(t,n):t:t=>t,s={exclude:[],...e};return n=>{if("start"===n.action&&(o=c(t.toMap(n.screenStart,s))),a(o))return null;const e=c(t.toMap(n.screenEnd,s));return r(e)?{...n,mapStart:o,mapEnd:e}:null}}function S(t,n){const e=t.map((t=>o(y(t,n)))).filter((t=>r(t)));return t=>{const n=t.mapEnd.x-t.mapStart.x,r=t.mapEnd.y-t.mapStart.y,a=t.mapEnd.z-t.mapStart.z;return e.forEach((n=>n(t))),{...t,translationX:n,translationY:r,translationZ:a}}}function R(t,e){const r=new Map;for(const a of e)r.set(a,n(t[a]));return n=>(r.forEach(((n,e)=>{t[e]=n})),n)}function z(t){return r(t.geometry)&&"mesh"===t.geometry.type?j(t,t.geometry):R(t,["geometry"])}function j(t,n){const e=r(n.transform)?n.transform.clone():null,a=n.vertexAttributes.clonePositional();return r=>(n.transform=e,n.vertexAttributes=a,t.notifyGeometryChanged(),r)}function v(t){const n=t.map((t=>o(z(t)))).filter((t=>r(t)));return t=>(n.forEach((n=>n(t))),t)}function w(t){return R(t,["symbol"])}function q(){let t=0,n=0,e=0;return r=>{"start"===r.action&&(t=r.mapStart.x,n=r.mapStart.y,e=r.mapStart.z);const a=r.mapEnd.x-t,o=r.mapEnd.y-n,c=r.mapEnd.z-e;return t=r.mapEnd.x,n=r.mapEnd.y,e=r.mapEnd.z,{...r,mapDeltaX:a,mapDeltaY:o,mapDeltaZ:c,mapDeltaSpatialReference:r.mapStart.spatialReference}}}function D(){let t=0,n=0;return e=>{"start"===e.action&&(t=e.screenStart.x,n=e.screenStart.y);const r=e.screenEnd.x-t,a=e.screenEnd.y-n;return t=e.screenEnd.x,n=e.screenEnd.y,{...e,screenDeltaX:r,screenDeltaY:a}}}function M(t,n){let r=null,a=0,o=0;return s=>{if("start"===s.action&&(r=t.toScreen(n),r.x<0||r.x>t.width||r.y<0||r.y>t.height?r=null:(a=s.screenStart.x-r.x,o=s.screenStart.y-r.y)),null==r)return null;const l=e(s.screenEnd.x-a,0,t.width),i=e(s.screenEnd.y-o,0,t.height),u=c(l,i);return s.screenStart=r,s.screenEnd=u,s}}class b{constructor(){this.execute=()=>{}}next(t,n=new b){return r(t)&&(this.execute=e=>{const a=t(e);r(a)&&n.execute(a)}),n}}export{b as EventPipeline,q as addMapDelta,D as addScreenDelta,p as constrainToMapAxis,u as createDragEventPipelineCallback,m as createManipulatorDragEventPipeline,f as createManipulatorDragEventPipelineMany,M as dragAtLocation,y as dragGraphic,S as dragGraphicMany,z as resetGraphic,v as resetGraphicMany,R as resetProperties,w as resetSymbol,g as screenToMap};
