/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{equals as t}from"../../../core/arrayUtils.js";import e from"../../../core/Evented.js";import{isSome as s,isNone as r}from"../../../core/maybe.js";import i from"../../../geometry/Polygon.js";import n from"../../../geometry/Polyline.js";import{createCoordinateHelper as o}from"../coordinateHelper.js";class h{constructor(t){this.left=null,this.right=null,this.type="vertex",this.index=null,this.component=t}get pos(){return this._pos}set pos(t){this._pos=t,this.component.unnormalizeVertexPositions()}}class c{constructor(t,e,s){this.type="edge",this.component=t,this.left=e,this.right=s,e.right=this,s.left=this}}class l{constructor(t){this.vertices=[],this.edges=[],this.data=t}unnormalizeVertexPositions(){this.vertices.length<=1||this.data.coordinateHelper.unnormalize(this.vertices)}updateVertexIndex(t,e){if(0===this.vertices.length)return;const s=this.vertices[0];let r=null,i=t,n=e;do{r=i,r.index=n++,i=r.right?r.right.right:null}while(null!=i&&i!==s);r.left&&r!==this.vertices[this.vertices.length-1]&&this.swapVertices(this.vertices.indexOf(r),this.vertices.length-1)}getFirstVertex(){return 0===this.vertices.length?null:this.vertices[0]}getLastVertex(){return 0===this.vertices.length?null:this.vertices[this.vertices.length-1]}isClosed(){return this.vertices.length>2&&null!==this.vertices[0].left}swapVertices(t,e){const s=this.vertices[t];this.vertices[t]=this.vertices[e],this.vertices[e]=s}iterateVertices(t){if(0===this.vertices.length)return;const e=this.vertices[0];let r=e;do{t(r,r.index),r=s(r.right)?r.right.right:null}while(r!==e&&null!=r)}}class a extends e{constructor(t){super(),this.coordinateHelper=t,this.undoStack=[],this.redoStack=[],this.components=[]}apply(t,e=1){return 0!==e&&!r(this.lastOperation)&&this.lastOperation.accumulate(t)||(t.apply(),this.undoStack.push(t),this.redoStack=[]),t}undo(){if(this.undoStack.length>0){const t=this.undoStack.pop();return t.undo(),this.redoStack.push(t),t}return null}get canUndo(){return this.undoStack.length>0}get lastOperation(){return this.undoStack.length>0?this.undoStack[this.undoStack.length-1]:null}redo(){if(this.redoStack.length>0){const t=this.redoStack.pop();return t.apply(),this.undoStack.push(t),t}return null}get canRedo(){return this.redoStack.length>0}toPoint(){return 0===this.components.length||0===this.components[0].vertices.length?null:this.coordinateHelper.createPoint(this.components[0].vertices[0].pos)}toPolyline(){const t=[],e=this.coordinateHelper.toArray;return this.components.forEach(((s,r)=>{const i=[];let n=s.vertices.find((t=>null==t.left));const o=n;do{i.push(e(n.pos)),n=n.right?n.right.right:null}while(n&&n!==o);t.push(i)})),new n({paths:t,spatialReference:this.coordinateHelper.spatialReference,hasZ:this.coordinateHelper.hasZ(),hasM:this.coordinateHelper.hasM()})}toPolygon(){const t=[],e=this.coordinateHelper.toArray;return this.components.forEach(((r,i)=>{const n=[],o=r.vertices[0];let h=o;const c=h;do{n.push(e(h.pos)),h=s(h.right)?h.right.right:null}while(h&&h!==c);r.isClosed()&&n.push(e(o.pos)),t.push(n)})),new i({rings:t,spatialReference:this.coordinateHelper.spatialReference,hasZ:this.coordinateHelper.hasZ(),hasM:this.coordinateHelper.hasM()})}static fromGeometry(e,s){const r=o(e.hasZ,e.hasM,e.spatialReference,s),i=new a(r);switch(e.type){case"polygon":{const s=e.rings;for(let e=0;e<s.length;++e){const n=s[e],o=new l(i),a=n.length>2&&t(n[0],n[n.length-1]),p=a?n.length-1:n.length;for(let t=0;t<p;++t){const e=r.fromArray(n[t]),s=new h(o);o.vertices.push(s),s.pos=e,s.index=t}const u=o.vertices.length-1;for(let t=0;t<u;++t){const e=o.vertices[t],s=o.vertices[t+1],r=new c(o,e,s);o.edges.push(r)}if(a){const t=new c(o,o.vertices[o.vertices.length-1],o.vertices[0]);o.edges.push(t)}i.components.push(o)}}break;case"polyline":for(const t of e.paths){const e=new l(i),s=t.length;for(let i=0;i<s;++i){const s=r.fromArray(t[i]),n=new h(e);e.vertices.push(n),n.pos=s,n.index=i}const n=e.vertices.length-1;for(let t=0;t<n;++t){const s=e.vertices[t],r=e.vertices[t+1],i=new c(e,s,r);e.edges.push(i)}i.components.push(e)}break;case"point":{const t=new l(i),s=new h(t);s.index=0,s.pos=i.coordinateHelper.fromPoint(e),t.vertices.push(s),i.components.push(t)}}return i}}export{l as Component,c as Edge,a as EditGeometry,h as Vertex};
