/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../core/Evented.js";import{EditGeometry as t}from"./EditGeometry.js";export{Component,Edge,EditGeometry,Vertex}from"./EditGeometry.js";import{AppendVertex as r}from"./operations/AppendVertex.js";import{UpdateVertices as o}from"./operations/UpdateVertices.js";import{RemoveVertices as i}from"./operations/RemoveVertices.js";import{SplitEdge as s}from"./operations/SplitEdge.js";import{MoveVertex as n}from"./operations/MoveVertex.js";import{OffsetEdgeVertex as m}from"./operations/OffsetEdgeVertex.js";import{RotateVertex as d}from"./operations/RotateVertex.js";import{ScaleVertex as p}from"./operations/ScaleVertex.js";import{UndoGroup as y}from"./operations/UndoGroup.js";class a extends e{constructor(e,t){super(),this.editGeometry=e,this.type=t,this._geometry=null,this._dirty=!0,this._listener=this.editGeometry.on("change",(e=>{this._dirty=!0,e.addedVertices&&this.emit("vertex-add",{type:"vertex-add",vertices:e.addedVertices,operation:e.operation}),e.removedVertices&&this.emit("vertex-remove",{type:"vertex-remove",vertices:e.removedVertices,operation:e.operation}),e.updatedVertices&&this.emit("vertex-update",{type:"vertex-update",vertices:e.updatedVertices,operation:e.operation})}))}destroy(){this._listener.remove()}splitEdge(e,t){return this.editGeometry.apply(new s(this.editGeometry,e,t))}updateVertices(e,t,r=1){return this.editGeometry.apply(new o(this.editGeometry,e,t),r)}moveVertices(e,t,r,o,i=1){return this.updateVertices(e,new n(this.editGeometry.coordinateHelper,t,r,o),i)}scaleVertices(e,t,r,o,i,s=1,n=0){return this.updateVertices(e,new p(this.editGeometry.coordinateHelper,t,r,o,i,n),s)}rotateVertices(e,t,r,o=1,i=0){return this.updateVertices(e,new d(this.editGeometry.coordinateHelper,t,r,i),o)}removeVertices(e){return this.editGeometry.apply(new i(this.editGeometry,e,this._minNumVerticesPerType))}appendVertex(e){return 0===this.editGeometry.components.length?null:this.editGeometry.apply(new r(this.editGeometry,this.editGeometry.components[0],e))}offsetEdge(e,t,r,o=1){return this.updateVertices([t.left,t.right],new m(this.editGeometry.coordinateHelper,e,t,r),o)}canRemoveVertex(){return this.editGeometry.components[0].vertices.length>this._minNumVerticesPerType}createUndoGroup(){const e=new y;return this.editGeometry.apply(e),{remove:()=>e.close()}}undo(){return this.editGeometry.undo()}get canUndo(){return this.editGeometry.canUndo}redo(){return this.editGeometry.redo()}get canRedo(){return this.editGeometry.canRedo}get geometry(){if(this._dirty){switch(this.type){case"point":this._geometry=this.editGeometry.toPoint();break;case"polyline":this._geometry=this.editGeometry.toPolyline();break;case"polygon":this._geometry=this.editGeometry.toPolygon()}this._dirty=!1}return this._geometry}get _minNumVerticesPerType(){switch(this.type){case"point":return 1;case"polyline":return 2;case"polygon":return 3;default:return 0}}static fromGeometry(e,r){return new a(t.fromGeometry(e,r),e.type)}}export{a as EditGeometryHelper};
