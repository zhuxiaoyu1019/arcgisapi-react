/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{resultOrAbort as t}from"../../../../../core/asyncUtils.js";import{isNone as e}from"../../../../../core/maybe.js";import{createTask as s}from"../../../../../core/promiseUtils.js";import{fromExtent as a,intersects as r,create as o}from"../../../../../geometry/support/aaBoundingRect.js";class u{constructor(t,e){this.data=t,this.resolution=e,this.state={type:0},this.alive=!0}process(t){switch(this.state.type){case 0:return this.state=this.gotoFetchCount(this.state,t),this.state.task.promise.then(t.resume,t.resume);case 1:break;case 2:return this.state=this.gotoFetchFeatures(this.state,t),this.state.task.promise.then(t.resume,t.resume);case 3:break;case 4:this.state=this.goToDone(this.state,t)}return null}get debugInfo(){return{data:this.data,featureCount:this.featureCount,state:this.stateToString}}get featureCount(){switch(this.state.type){case 0:case 1:return 0;case 2:return this.state.featureCount;case 3:return this.state.previous.featureCount;case 4:return this.state.features.length;case 5:return this.state.previous.features.length}}get stateToString(){switch(this.state.type){case 0:return"created";case 1:return"fetch-count";case 2:return"fetched-count";case 3:return"fetch-features";case 4:return"fetched-features";case 5:return"done"}}gotoFetchCount(e,a){return{type:1,previous:e,task:s((async e=>{const s=await t(a.fetchCount(this,e));1===this.state.type&&(this.state=this.gotoFetchedCount(this.state,s.ok?s.value:1/0))}))}}gotoFetchedCount(t,e){return{type:2,featureCount:e,previous:t}}gotoFetchFeatures(e,a){return{type:3,previous:e,task:s((async s=>{const r=await t(a.fetchFeatures(this,e.featureCount,s));3===this.state.type&&(this.state=this.gotoFetchedFeatures(this.state,r.ok?r.value:[]))}))}}gotoFetchedFeatures(t,e){return{type:4,previous:t,features:e}}goToDone(t,e){return e.finish(this,t.features),{type:5,previous:t}}reset(){const t=this.state;switch(this.state={type:0},t.type){case 0:case 2:case 4:case 5:break;case 1:case 3:t.task.abort()}}intersects(t){return!(!e(t)&&this.data.extent)||(a(t,i),r(this.data.extent,i))}}const i=o();export{u as PendingFeatureTile};
