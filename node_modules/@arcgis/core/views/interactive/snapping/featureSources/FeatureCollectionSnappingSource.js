/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as r}from"../../../../chunks/tslib.es6.js";import e from"../../../../core/Accessor.js";import{isSome as o}from"../../../../core/maybe.js";import{property as t}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import i from"../../../../geometry/Point.js";import{convertSnappingCandidate as a}from"./queryEngineUtils.js";let c=class extends e{constructor(r){super(r)}get availability(){return 1}refresh(){}async fetchCandidates(r,e){const t=this.layerSource.layer.source;return t.querySnapping?(await t.querySnapping({distance:r.distance,point:r.coordinateHelper.toPoint(r.point,new i).toJSON(),types:r.types,query:o(r.filter)?r.filter.createQuery().toJSON():{where:"1=1"}},{signal:e})).candidates.map((e=>a(e,r.coordinateHelper))):[]}};r([t({constructOnly:!0})],c.prototype,"layerSource",void 0),r([t({readOnly:!0})],c.prototype,"availability",null),c=r([s("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],c);export{c as FeatureCollectionSnappingSource};
