/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../Camera.js";import"../geometry.js";import i from"../Graphic.js";import r from"../Ground.js";import s from"../Viewpoint.js";import n from"../core/Collection.js";import{byId as a}from"../core/domUtils.js";import o from"../core/Error.js";import{on as l}from"../core/events.js";import{handlesGroup as p,makeHandle as h}from"../core/handleUtils.js";import d from"../core/has.js";import c from"../core/Logger.js";import{isNone as u,isSome as g,unwrapOr as m}from"../core/maybe.js";import{createAbortController as f,throwIfAborted as y}from"../core/promiseUtils.js";import{setFrameDuration as w}from"../core/scheduling.js";import{on as v,whenOnce as _,init as b,whenTrueOnce as R}from"../core/watchUtils.js";import{initialize as x}from"../core/workers/workers.js";import{screenPointObjectToArray as S,createScreenPoint as M,createScreenPointArray as T}from"../core/screenUtils.js";import{property as O}from"../core/accessorSupport/decorators/property.js";import{cast as C}from"../core/accessorSupport/decorators/cast.js";import{subclass as V}from"../core/accessorSupport/decorators/subclass.js";import{ensureType as P}from"../core/accessorSupport/ensureType.js";import{c as j}from"../chunks/vec3f64.js";import E from"../geometry/HeightModelInfo.js";import{projectPointToVector as I,projectVectorToVector as H}from"../geometry/projection.js";import{getSphericalPCPF as G}from"../geometry/projectionEllipsoid.js";import{toExtent as U}from"../geometry/support/aaBoundingRect.js";import{B as L,c as A}from"../chunks/boundedPlane.js";import{getResolutionForScale as D}from"../geometry/support/scaleUtils.js";import{canProject as F,project as W}from"../geometry/support/webMercatorUtils.js";import{isTiledLayer as q}from"../layers/support/layerUtils.js";import{BreakpointsOwner as z}from"./BreakpointsOwner.js";import{DOMContainer as k}from"./DOMContainer.js";import N from"./GroundView.js";import{PopupView as B}from"./PopupView.js";import $ from"./View.js";import Q from"./ViewAnimation.js";import{viewingModeFromString as K}from"./ViewingMode.js";import{layerView3DImporter as Z}from"./3d/layerViewModuleImportUtils.js";import J from"./3d/constraints/Constraints.js";import X from"./3d/environment/SceneViewEnvironment.js";import Y from"./3d/environment/SceneViewEnvironmentManager.js";import ee from"./3d/input/SceneInputManager.js";import{GraphicsDeconflictor as te}from"./3d/layers/graphics/GraphicsDeconflictor.js";import{Labeler as ie}from"./3d/layers/graphics/Labeler.js";import{ObjectResourceCache as re}from"./3d/layers/graphics/ObjectResourceCache.js";import se from"./3d/layers/support/FeatureTileTree3D.js";import ne from"./3d/state/ViewState.js";import ae from"./3d/state/ViewStateManager.js";import{SceneIntersectionHelper as oe}from"./3d/state/helpers/SceneIntersectionHelper.js";import{CombinedElevationProvider as le}from"./3d/support/CombinedElevationProvider.js";import pe from"./3d/support/debugFlags.js";import he from"./3d/support/DisplayQualityProfile.js";import{getElevationAtPoint as de}from"./3d/support/ElevationProvider.js";import ce from"./3d/support/HighlightOptions.js";import{MapCoordsHelper as ue}from"./3d/support/MapCoordsHelper.js";import{PropertiesPool as ge}from"./3d/support/PropertiesPool.js";import me from"./3d/support/QualitySettings.js";import{RenderCoordsHelper as fe}from"./3d/support/RenderCoordsHelper.js";import{newResourceController as ye}from"./3d/support/ResourceController.js";import we from"./3d/support/SceneViewPerformanceInfo.js";import{SharedSymbolResources as ve}from"./3d/support/SharedSymbolResources.js";import _e from"./3d/support/pointsOfInterest/PointsOfInterest.js";import be from"./3d/terrain/TerrainSurface.js";import{isSurfaceLayerView as Re,getTiledLayerInfo as xe}from"./3d/terrain/terrainUtils.js";import{Stage as Se}from"./3d/webgl-engine/Stage.js";import{Intersector as Me}from"./3d/webgl-engine/lib/Intersector.js";import{toGraphic as Te,toOwner as Oe}from"./3d/webgl-engine/lib/intersectorUtilsConversions.js";import{TERRAIN_ID as Ce}from"./3d/webgl-engine/lib/verticalOffsetUtils.js";import{hitTestSelectSameDistance as Ve}from"./support/hitTestSelectUtils.js";import{occludeesSupported as Pe}from"./support/layerViewUtils.js";import{toRenderSettings as je,screenshotSuperSampleSettings as Ee}from"./support/screenshotUtils.js";import{isSupportedScreenPointEvent as Ie,createScreenPointFromSupportedEvent as He}from"./support/screenUtils.js";import{isSpatialReferenceSupported as Ge}from"./support/spatialReferenceSupport.js";import{check as Ue}from"./support/WebGLRequirements.js";import Le from"./ui/3d/DefaultUI3D.js";import Ae from"../webscene/Environment.js";import De from"../geometry/Extent.js";import Fe from"../geometry/SpatialReference.js";import We from"../geometry/Point.js";const qe=c.getLogger("esri.views.SceneView");let ze=class extends(z(k(B($)))){constructor(e){super(e),this._clippingArea=null,this._userClippingArea=null,this._initialDefaultSpatialReference=null,this._defaults={},this._externallySet={environment:!1},this._createGraphicsViewController=null,this._resolveWhenReady=[],this.propertiesPool=new ge({slicePlane:L},this),this._resourceController=ye(this),this._defaultToMapOptions={include:new Set},this._defaultHitTestOptions={exclude:new Set},this.deconflictor=new te({view:this}),this.labeler=new ie({view:this,deconflictor:this.deconflictor.labels}),this.sharedSymbolResources=null,this.basemapTerrain=null,this.elevationProvider=null,this.camera=null,this.canvas=null,this.center=null,this.constraints=new J,this.environmentManager=new Y,this.extent=null,this.floors=new n,this.windowDevicePixelRatio=1,this.fullOpacity=1,this.graphicsView=null,this.groundView=null,this.navigating=!1,this.map=null,this.screenSizePerspectiveEnabled=!0,this.state=new ne,this.scale=null,this.spatialReference=null,this.isHeightModelInfoRequired=!0,this.alphaCompositingEnabled=!1,this.supersampleScreenhotsEnabled=!0,this.type="3d",this.ui=new Le,this._numUpdating=0,this._lastUpdateTime=0,this.updatingProgress=.5,this.viewpoint=null,this.zoom=null,this.highlightOptions=new ce,x(),e&&e.environment||(this._defaults.environment=new X,this.environment=this._defaults.environment);const t=e=>{g(e)&&4===e.type||(this.notifyChange("dataExtent"),this.updatingChanged(),this.map&&this.map.allLayers.forEach((async e=>{try{await e.when()}catch{}this.updatingChanged()})))};this.handles.add([v(this,"map.allLayers","after-changes",t,t,t,!0),this.allLayerViews.on("after-changes",(e=>this._updateUpdatingMonitors(e))),this.watch("map",(e=>{e&&e.load&&e.load().catch((()=>{}))}))]),this.inputManager=new ee({view:this});const i=()=>{const e=window.devicePixelRatio;e!==this.windowDevicePixelRatio&&(this.windowDevicePixelRatio=e,this.notifyChange("pixelRatio"))};this.stateManager=new ae({view:this,updateDevicePixelRatio:i})}initialize(){this.groundView=new N({view:this}),this._updateUpdatingMonitors();const e=()=>this._updateDefaultToMapOptions();this.handles.add(v(this,"map.allLayers","after-changes",e,e,e)),this.updatingHandles.add(this.qualitySettings,"memoryLimit",(e=>{this.resourceController&&(this.resourceController.memoryController.maxMemory=e)}),2),this.updatingHandles.add(this.qualitySettings,"additionalCacheMemory",(e=>{this.resourceController&&(this.resourceController.memoryController.additionalCacheMemory=e)}),2),this.updatingHandles.add(this.qualitySettings,"frameRate",(e=>w(e>0?1e3/Math.ceil(e):0)),2),this.updatingHandles.add(pe,"SCENEVIEW_LOCKING_LOG",(e=>this.defaultsFromMap.logDebugInformation=e),2),this.updatingHandles.add(this,"map.ground",e,3),this.updatingHandles.add(this,"map.ground.opacity",(()=>this._updateDefaultHitTestOptions()),3),this.handles.add(this.watch("spatialReference",(()=>this.notifyChange("clippingArea")),!0))}destroy(){this.destroyed||(this.invalidate(),this.activeTool=null,this.layerViewManager.clear(),this._exitSurface(),this._disposeGraphicsView(),this.sharedSymbolResources&&(this.sharedSymbolResources.destroy(),this.sharedSymbolResources=null),this.labeler.destroy(),this._set("labeler",null),this.deconflictor.destroy(),this._set("deconflictor",null),this._resourceController.destroy(),this._resourceController=null,this.stateManager.destroy(),this._set("stateManager",null),this.inputManager.destroy(),this._set("inputManager",null),this.propertiesPool.destroy(),this.handles.remove("updatingMonitors"),this.environmentManager.destroy(),this._set("environmentManager",null),this.groundView.destroy(),this.groundView=null)}get renderSpatialReference(){return this.renderCoordsHelper&&this.renderCoordsHelper.spatialReference}get basemapSpatialReference(){return this.basemapTerrain&&this.basemapTerrain.spatialReference}installContentCameraReset(e={sticky:!1}){return this.stateManager.installContentCameraReset(e)}get clippingArea(){if("global"===this.viewingMode)return null;let e=this._userClippingArea||this.get("map.clippingArea");if(!(!!this._userClippingArea||this.get("map.clippingEnabled"))||!e)return this._clippingArea=null,null;if(!(e instanceof De))return qe.error("#clippingArea","only clippingArea geometries of type Extent are supported"),this._clippingArea;if(this.spatialReference){if(!F(e.spatialReference,this.spatialReference))return qe.error("#clippingArea","setting clippingArea with incompatible SpatialReference"),this._clippingArea;e=W(e,this.spatialReference)}return this._clippingArea&&e&&this._clippingArea.equals(e)?this._clippingArea:(this._clippingArea=e,e)}set clippingArea(e){this.ready&&"global"===this.viewingMode&&e?qe.error("#clippingArea=","Clipping area is only supported in local viewingMode"):(this._userClippingArea=e,this.notifyChange("clippingArea"))}get dataExtent(){const e=this.spatialReference||Fe.WGS84;let t,i=this.clippingArea;i&&(i=W(i,e));const r=r=>{let s=W(r,e);s&&(i&&(s=s.intersection(i),!s)||(g(t)?t.union(s):t=s))},s=this.basemapTerrain;if(s&&s.spatialReference&&r(new De({xmin:s.extent[0],ymin:s.extent[1],zmin:0,xmax:s.extent[2],ymax:s.extent[3],zmax:0,spatialReference:s.spatialReference})),this.map){const e=e=>{!e.fullExtent||"graphics"===e.type&&e.internal||r(e.fullExtent)};this.map.allLayers.forEach((t=>e(t)))}return u(t)?new De({xmin:0,ymin:0,zmin:0,xmax:0,ymax:0,zmax:0,spatialReference:e}):(t.hasZ?(t.zmin=Math.min(0,t.zmin),t.zmax=Math.max(0,t.zmax)):(t.zmin=0,t.zmax=0),t)}set environment(e){e!==this._defaults.environment&&(this._externallySet.environment=!0),this._set("environment",e)}castEnvironment(e){return e?e instanceof X?e:e instanceof Ae?null!=this.environment?this.environment.cloneWithWebsceneEnvironment(e):X.fromWebsceneEnvironment(e):P(X,e):new X}get pixelRatio(){return Math.min(this.windowDevicePixelRatio,this.maximumPixelRatio)}set pixelRatio(e){g(e)?this._override("pixelRatio",e):this._clearOverride("pixelRatio")}get maximumPixelRatio(){let e=1/0;const{maximumPixelRatio:t,maximumRenderResolution:i}=this.qualitySettings;if(null!=t&&(e=Math.min(e,t)),null!=i){const t=i/Math.max(this.width,this.height);e=Math.min(e,t)}return e}set maximumPixelRatio(e){g(e)?this._override("maximumPixelRatio",e):this._clearOverride("maximumPixelRatio")}get groundExtent(){const e=this._get("basemapTerrain");if(e&&e.spatialReference){const t=e.extent;return new De({xmin:t[0],ymin:t[1],xmax:t[2],ymax:t[3],spatialReference:e.spatialReference})}const t=this.spatialReference||Fe.WGS84;return new De({spatialReference:t})}get initialExtentRequired(){return this.stateManager&&!this.stateManager.hasInitialView}get interacting(){return this.navigating||g(this.activeTool)}get stationary(){return!this.animation&&!this.resizing&&(u(this.state)||this.state.stationary)}set qualityProfile(e){he.isValidProfile(e)&&(he.apply(e,this.qualitySettings),this._set("qualityProfile",e))}get qualityProfile(){return this._get("qualityProfile")||he.getDefaultProfile()}set slicePlane(e){if(this._stage.renderView.setRenderParameters({slicePlane:e}),u(e))return void this._set("slicePlane",null);const t=this.propertiesPool.get("slicePlane");A(e,t),this._set("slicePlane",t)}get resolution(){return null!=this.spatialReference?D(this.scale,this.spatialReference):0}get heightModelInfo(){const e=this.getDefaultHeightModelInfo();return null!=e?E.deriveUnitFromSR(e,this.spatialReference):null}get updating(){var e,t,i;let r=0,s=this.layerViewManager.updating,n=s?this.layerViewManager.updatingRemaining:0;this.allLayerViews.forEach((e=>{if(e.isFulfilled()){if(e.updating){if(s=!0,e.suspended||Re(e))return;++n,r+="updatingProgress"in e?e.updatingProgress:.5}}else++n}));for(const a of[this.graphicsView,this.basemapView,this._resourceController,this._stage,this.featureTiles,this.pointsOfInterest,this.environmentManager,this.overlay,this.featureTreeDebugger,this.toolViewManager])if(g(a)&&a.updating){const e=.1;n+=e,r+=.5*e}for(const a of[this.deconflictor,this.labeler,this.basemapTerrain])g(a)&&a.updating&&(++n,r+=a.updatingProgress);if(s=!!(s||n>0||this.updatingHandles.updating||!this.ready||!this.stationary||this._createGraphicsViewController||null!=(e=this.inputManager)&&e.hasPendingInputs||null!=(t=this.map)&&null!=(i=t.allLayers)&&i.some((e=>!e.isFulfilled()))),s?(this._numUpdating=Math.max(n,this._numUpdating),r+=this._numUpdating-n):this._numUpdating=0,this._numUpdating>0?r/=this._numUpdating:r=s?0:1,this._get("updatingProgress")!==r){const e=this._resourceController.scheduler.now;if(r<1){const t=Math.min((e-this._lastUpdateTime)/2e3,1);r=this.updatingProgress*(1-t)+r*t}this._set("updatingProgress",r),this._lastUpdateTime=s&&r<1?e:0}return s}get viewingMode(){const e=this.get("map.initialViewProperties.viewingMode");if(e)return e;const t=this.spatialReference;return!t||Ge(t,"global")?"global":"local"}set viewingMode(e){if(this.ready)qe.error("#viewingMode","viewingMode cannot be set once view is ready");else{["local","global"].indexOf(e)>=0?this._override("viewingMode",e):void 0===e&&this._clearOverride("viewingMode")}}get resourceController(){return this._resourceController}get performanceInfo(){return new we(this)}on(e,t,i,r){const s=this.viewEvents.on(e,t,i,r);return s||super.on(e,t)}hasEventListener(e){return super.hasEventListener(e)||this.viewEvents.hasHandler(e)}toMap(e,t){if(!this.ready)return qe.error("#toMap()","Scene view cannot be used before it is ready"),null;const i=t?this.externalToInternalIntersectOptions(t):this._defaultToMapOptions,r=g(i.graphics)&&(g(i.graphics.include)||g(i.graphics.exclude)),s=Ie(e)?He(this,e):e,n=S(s);i.enableDraped=i.include&&!i.include.has(Ce)||i.exclude&&i.exclude.has(Ce);const a=this.sceneIntersectionHelper,o=new Me(this.state.viewingMode);if(o.options.selectionMode=!0,o.options.store=r?2:0,a.intersectIntersectorScreen(n,o,i),r){for(const e of o.results.all){const t=Te(e,this);if(u(t))return this._intersectResultToMapPoint(e);if(this._testGraphicUidFilter(i.graphics,t))return this._intersectResultToMapPoint(e)}return null}return this._intersectResultToMapPoint(o.results.min)}toScreen(e){if(!this.ready)return qe.error("#toScreen()","Scene view cannot be used before it is ready"),null;const t=m(null==e.z&&de(this.elevationProvider,e),0);return I(e,Be,this.renderSpatialReference,t),this.state.camera.projectToScreen(Be,$e),M($e[0],$e[1])}pixelSizeAt(e){return this.ready?e?(I(e,Be,this.renderSpatialReference),this.state.camera.computeScreenPixelSizeAt(Be)):0:(qe.error("#pixelSizeAt()","Scene view cannot be used before it is ready"),null)}overlayPixelSizeInMapUnits(e){const t=this.basemapTerrain.overlayManager;return t?t.overlayPixelSizeInMapUnits(e):1}hitTest(e,t){if(!this.ready)return qe.error("#hitTest()","Scene view cannot be used before it is ready"),null;const i=Ie(e)?He(this,e):e,r=T(i.x,i.y),s=t?this.externalToInternalIntersectOptions(t):this._defaultHitTestOptions;s.requiresGroundFeedback=!0,s.enableDraped=!0;const n=new Me(this.state.viewingMode);n.options.selectionMode=!0,n.options.store=2,this.sceneIntersectionHelper.intersectIntersectorScreen(r,n,s);const a=this._intersectResultsToHits(n.results.all,s.graphics),o=n.results.ground,l=Oe(o,this),p=g(l)&&"type"in l&&"integrated-mesh"===l.type?l:null,h={screenPoint:i,results:a,ground:{mapPoint:this._intersectResultToMapPoint(o),distance:o.hasIntersectionPoint?o.distanceInRenderSpace:0,layer:p}};return pe.SCENEVIEW_HITTEST_RETURN_INTERSECTOR&&(h.intersector=n),Promise.resolve(h)}popupHitTest(e){return Ve(this,e).then((({results:t,ground:i})=>{let r=null;return!(0===t.length||Math.abs(t[0].distance-i.distance)<1e-5)||i.layer&&"integrated-mesh"===i.layer.type||(r=i.mapPoint),{results:t,screenPoint:e,mapPoint:r}}))}goTo(e,t){return this.updatingHandles.addPromise(this.stateManager.goTo(e,t))}whenLayerView(e){return super.whenLayerView(e)}takeScreenshot(e){return this.whenReady().then((()=>{const t=je(e,this);return t.pixelRatio/=this.pixelRatio,this._stage.renderView.takeScreenshot(Ee(t,this.supersampleScreenhotsEnabled,this.padding))}))}addUpdatingPromise(e){return this.updatingHandles.addPromise(e)}importLayerView(e){return Z.importLayerView(e)}hasLayerViewModule(e){return Z.hasLayerViewModule(e)}forceDOMReadyCycle(){this.forceReadyCycle()}getDefaultSpatialReference(){return this.get("map.initialViewProperties.spatialReference")||this.get("defaultsFromMap.spatialReference")||this.get("defaultsFromMap.isSpatialReferenceDone")&&this._initialDefaultSpatialReference||null}async validate(){let e=Ue();if(d("safari")&&d("safari")<9&&(e=new o("sceneview:browser-not-supported","This browser is not supported by SceneView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:d("safari")})),g(e))throw qe.warn("#validate()",e.message),e}isSpatialReferenceSupported(e,t,i){const r=e.isGeographic,s=e.isWebMercator,n=Ge(e,"global"),a="local"===this.viewingMode,o=!(!this._isOverridden("viewingMode")&&!this.get("map.initialViewProperties.viewingMode"));if(o){if(a&&r)return i?i(`Layer ${t.id} is ignored because it is GCS and viewing mode is local`):qe.warnOnce("Geographic coordinate systems are not supported in local viewing mode."),!1;if(!a&&!n)return i?i(`Layer ${t.id} is ignored because its spatial reference is not supported in global viewing mode`):qe.warnOnce("Spatial reference defined on view not supported in global viewing mode."),!1}else if(r&&!n)return i?i(`Layer ${t.id} is ignored because its spatial reference is geographic but unsupported`):qe.warnOnce("Spatial reference is geographic but not supported."),!1;if(t)if(q(t)){let r;if(o){r=null!=xe(t,e,K(this.viewingMode)).tileInfo}else{let i=xe(t,e,1);null==i.tileInfo&&(i=xe(t,e,2),null!=i.tileInfo&&s&&!this.ready&&(this.viewingMode="local")),r=null!=i.tileInfo}if(!r)return i&&i(`Layer ${t.id} is ignored because it is tiled but\n            its tiling scheme is not supported or compatible with the viewing mode`),!1}else if((e.isWGS84||s)&&!a)return null==this._initialDefaultSpatialReference&&(this._initialDefaultSpatialReference=e),o||this.ready||(this.viewingMode="global",i&&i(`Viewing mode locked to global due to reprojectable layer ${t.id}`)),i&&i(`Layer ${t.id} is ignored because it supports server-side reprojection`),!1;return!0}whenReady(){return new Promise((e=>{this.ready?e(this):this._resolveWhenReady.push(e)}))}computeMapPointFromVec3d(e,t){let i=this.spatialReference||Fe.WGS84;return H(e,this.renderSpatialReference,e,i)||(i=Fe.WGS84,H(e,this.renderSpatialReference,e,i)),t?(t.x=e[0],t.y=e[1],t.z=e[2],t.spatialReference=i):t=new We(e,i),t}trackGraphicState(e){if(!e.graphic)return qe.error("trackGraphicState","GraphicState.graphic must not be null or undefined to start tracking"),null;const t=this.getViewForGraphic(e.graphic);let i=null,r=!1;const s=t=>{!r&&g(t)&&"graphics3d"in t&&t.graphics3d&&t.graphics3d.graphicsCore&&(i=t.graphics3d.graphicsCore.trackGraphicState(e))};return g(t)?s(t):this.whenViewForGraphic(e.graphic,{waitForLayer:!0}).then((e=>s(e)),(()=>{})).catch((()=>{})),{remove:()=>{r=!0,g(i)&&(i.remove(),i=null)}}}highlight(e){if(Array.isArray(e))return p(e.map((e=>this.highlight(e))));if(n.isCollection(e))return p(e.toArray().map((e=>this.highlight(e))));const t=this.getViewForGraphic(e);return t&&"highlight"in t?t.highlight(e):h()}maskOccludee(e){if(!e)return qe.error("maskOccludee","GraphicState.graphic must not be null or undefined to mask an occludee"),null;const t=this.getViewForGraphic(e);let i=null,r=!1;const s=t=>{!r&&g(t)&&"graphics3d"in t&&Pe(t)&&(i=t.maskOccludee(e))};return g(t)?s(t):this.whenViewForGraphic(e,{waitForLayer:!0}).then((e=>s(e)),(()=>{})).catch((()=>{})),{remove:()=>{r=!0,g(i)&&(i.remove(),i=null)}}}getViewForGraphic(e){return e.layer===this.graphics?this.graphicsView:e.layer?this.allLayerViews.find((t=>t.layer===e.layer)):null}graphicChanged(e){g(this.graphicsView)&&this.graphicsView.graphicChanged(e)}async whenViewForGraphic(e,t){if(e.layer===this)return await _(this,"graphicsView"),this.graphicsView;if(!e.layer||!this.map)throw new o("no-view-for-graphic");return t&&t.waitForLayer&&!this.map.allLayers.includes(e.layer)?new Promise(((t,i)=>{const r=this.map.allLayers.on("change",(s=>{-1!==s.added.indexOf(e.layer)&&(r.remove(),this.whenLayerView(e.layer).then(t,i))}))})):this.whenLayerView(e.layer)}externalToInternalIntersectOptions(e){const t=this._externalToInternalRenderItems(e.include,0),i=this._externalToInternalRenderItems(e.exclude,1);return{include:t.layerUids,exclude:i.layerUids,graphics:{include:t.graphicUids,exclude:i.graphicUids}}}_intersectResultToMapPoint(e,t){return e.getIntersectionPoint(Be)?(t=this.computeMapPointFromVec3d(Be,t),"TerrainRenderer"===e.intersector&&this.basemapTerrain&&(t.z=m(de(this.basemapTerrain,t),0)),t):null}_intersectResultsToHits(e,t){const i=new Array;let r=null;for(let s=0;s<e.length;s++){const n=e[s],a=Oe(n,this);if(g(a)&&(a===this.map.ground||"type"in a&&"integrated-mesh"===a.type))break;const o=Te(n,this);if(!g(o))continue;if(u(r)&&s!==e.length-1&&(r=new Set),g(r)){const e=this._getGraphicFilterUid(o);if(r.has(e))continue;r.add(e)}if(!this._testGraphicUidFilter(t,o))continue;const l=this._intersectResultToMapPoint(n),p=n.distanceInRenderSpace;i.push({graphic:o,mapPoint:l,distance:p})}return i}_getGraphicFilterUid(e){if(e.layer&&"objectIdField"in e.layer){const t=e.attributes[e.layer.objectIdField];if(t)return`o-${e.layer.id}-${t}`}return`u-${e.uid}`}_testGraphicUidFilter(e,t){const i=this._getGraphicFilterUid(t);return u(e)||(u(e.include)||e.include.has(i))&&(u(e.exclude)||!e.exclude.has(i))}_externalToInternalRenderItems(e,t,s={layerUids:null,graphicUids:null}){return e?(e instanceof i?(Ne(s,this._getGraphicFilterUid(e)),0===t&&(g(this.graphicsView)&&e.layer===this?ke(s,this.graphicsView.graphics3d.layer.id):e.layer&&ke(s,e.layer.uid))):"forEach"in e?e.forEach((e=>{Array.isArray(e)?this._externalToInternalRenderItems(e,t,s):n.isCollection(e)?e===this.graphics&&g(this.graphicsView)?ke(s,this.graphicsView.graphics3d.layer.id):this._externalToInternalRenderItems(e,t,s):e instanceof r?e===this.map.ground&&ke(s,Ce):this._externalToInternalRenderItems(e,t,s)})):ke(s,e.uid),s):s}_initBasemapTerrain(){this._set("basemapTerrain",new be({view:this})),this._set("elevationProvider",new le({view:this})),this.elevationProvider.register("ground",this.basemapTerrain)}_exitBasemapTerrain(){this.basemapTerrain&&(this.elevationProvider.unregister(this.basemapTerrain),this.elevationProvider.destroy(),this._set("elevationProvider",null),this.basemapTerrain.destroy(),this._set("basemapTerrain",null))}_initGlobe(){this._initCoordinateSystem(),this.state.createInitialCamera(),this._initBasemapTerrain(),this._set("pointsOfInterest",new _e({view:this})),this._set("featureTiles",new se({renderCoordsHelper:this.renderCoordsHelper,cameraOnSurface:this.pointsOfInterest.contentCameraOnSurface,focus:this.pointsOfInterest.focus,tilingSchemeOwner:this.basemapTerrain,viewState:this.state,scheduler:this._resourceController.scheduler,terrain:this.basemapTerrain}));const e=()=>{const e=this.basemapTerrain&&this.basemapTerrain.extent;if(this.clippingArea||e)if(e&&this.basemapTerrain.spatialReference){const e=U(this.basemapTerrain.extent,this.basemapTerrain.spatialReference);this.clippingArea?this.featureTiles.filterExtent=e.intersection(this.clippingArea):this.featureTiles.filterExtent=e}else this.featureTiles.filterExtent=this.clippingArea;else this.featureTiles.filterExtent=null};this.handles.add([this.updatingHandles.add(pe,"FEATURE_TILE_TREE_SHOW_TILES",(e=>{e&&this.featureTiles&&!this.featureTreeDebugger?this.updatingHandles.addPromise(import("./3d/layers/support/FeatureTileTree3DDebugger.js")).then((({FeatureTileTree3DDebugger:e})=>{!this.featureTreeDebugger&&pe.FEATURE_TILE_TREE_SHOW_TILES&&(this.featureTreeDebugger=new e({view:this}))})):e||!this.featureTreeDebugger||pe.FEATURE_TILE_TREE_SHOW_TILES||(this.featureTreeDebugger.destroy(),this.featureTreeDebugger=null)}),3),this.updatingHandles.add(this,"clippingArea",e,3),this.updatingHandles.add(this,"basemapTerrain.extent",e,3)],"feature-tiles"),this.stateManager.init()}_exitGlobe(){this.state&&(this.stateManager.deinit(),this.handles.remove("render-coords-helper"),this.handles.remove("feature-tiles"),this.featureTiles.destroy(),this._set("featureTiles",null),this.pointsOfInterest.destroy(),this._set("pointsOfInterest",null),this._exitBasemapTerrain(),this.state.exit(),this._exitCoordinateSystem())}_initCoordinateSystem(){if(this.spatialReference){const e=this.spatialReference;this.mapCoordsHelper&&this.mapCoordsHelper.spatialReference.equals(e)||this._set("mapCoordsHelper",new ue(this.map,e));const t=this.state.isGlobal,i=t?G(e):e;i!==this.renderSpatialReference&&(this._set("renderCoordsHelper",fe.create(this.state.viewingMode,i)),t||this.handles.add(this.watch("basemapTerrain.extent",(e=>{0===e[0]&&0===e[1]&&0===e[2]&&0===e[3]||(this.renderCoordsHelper.extent=e)}),!0),"render-coords-helper"),this.sceneIntersectionHelper&&this.sceneIntersectionHelper.setTolerance(Me.DEFAULT_TOLERANCE/this.renderCoordsHelper.unitInMeters))}else this._set("mapCoordsHelper",null),this._set("renderCoordsHelper",null)}_exitCoordinateSystem(){this.mapCoordsHelper&&(this.handles.remove("render-coords-helper"),this._set("renderCoordsHelper",null),this._set("mapCoordsHelper",null))}updatingChanged(){this.notifyChange("updating")}_updateUpdatingMonitors(e=null){g(e)&&4===e.type||(this.handles.remove("updatingMonitors"),this.allLayerViews.forEach((e=>{e.destroyed||(this.handles.add([e.watch(["updating","updatingProgress"],(()=>this.updatingChanged()),!0)],"updatingMonitors"),e.when((()=>this.updatingChanged()),(()=>this.updatingChanged())))})),this.updatingChanged())}_renderScreenshotOverlay(e,t){if(!this.overlay||!this.overlay.hasVisibleItems)return t;const i=e.getContext("2d");return i.putImageData(t,0,0),this.overlay.renderCanvas(e),i.getImageData(0,0,t.width,t.height)}_initStage(){const e={renderContext:this.renderContext,deactivatedWebGLExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions,alpha:this.alphaCompositingEnabled,canvas:this.renderCanvas,screenshot:{renderOverlay:(e,t)=>this._renderScreenshotOverlay(e,t)}},t=new oe(this.state.viewingMode,{forEachLayer:e=>this._stage.layers.forAll(e)},this);this._set("sceneIntersectionHelper",t);const i=a(this.surface),{resourceController:r,state:s,renderSpatialReference:n}=this;this._stage=new Se({resourceController:r,container:i,options:e,state:s,sceneIntersectionHelper:t,renderSR:n}),this._lostWebGLContextHandle=l(this._stage.renderView.canvas,"webglcontextlost",(()=>this.fatalError=new o("webgl-context-lost"))),this.handles.add([this.updatingHandles.add(this.qualitySettings,"antialiasingEnabled",(()=>{this._stage.renderView.setRenderParameters({antialiasingEnabled:this.qualitySettings.antialiasingEnabled})}),2),this.updatingHandles.add(this.qualitySettings,"highQualityTransparency",(()=>{this._stage.renderView.setRenderParameters({highQualityTransparency:this.qualitySettings.highQualityTransparency})}),2),b(this,"magnifier",(e=>this._stage.renderView.magnifier=e),!0)],"stage");const p=()=>{this._stage.renderView.setRenderParameters({defaultHighlightOptions:ce.toEngineOptions(this.highlightOptions)})};for(const a of["highlightOptions","highlightOptions.color","highlightOptions.haloColor","highlightOptions.haloOpacity","highlightOptions.fillOpacity","highlightOptions.shadowOpacity","highlightOptions.shadowColor","highlightOptions.shadowDifference"])this.handles.add(this.updatingHandles.add(this,a,p),"stage");p(),this.renderCoordsHelper&&this.sceneIntersectionHelper.setTolerance(Me.DEFAULT_TOLERANCE/this.renderCoordsHelper.unitInMeters),this._set("canvas",this._stage.renderView.canvas)}_exitStage(){this._set("sceneIntersectionHelper",null),this._stage.destroy(),this._stage=null,this._lostWebGLContextHandle.remove(),this._lostWebGLContextHandle=null,this.handles.remove("stage"),this._set("canvas",null)}_initSurface(e){this._exitSurface(),this.state.init(e,this.spatialReference),this._initStage(),this._initGlobe(),this.sharedSymbolResources=new ve({view:this,viewingMode:e,resourceController:this._resourceController,pointsOfInterest:this.pointsOfInterest,viewState:this.state,objectResourceCache:new re})}_exitSurface(){this.sharedSymbolResources&&(this.sharedSymbolResources.objectResourceCache.destroy(),this.sharedSymbolResources.destroy(),this.sharedSymbolResources=null,this._exitGlobe(),this._exitStage())}_createGraphicsViewIfNeeded(){if(this.graphicsView||this._createGraphicsViewController)return;if(0===this.graphics.length)return;this.handles.remove("graphics-view"),this._createGraphicsViewController=f();const e=()=>{this._createGraphicsViewController=null,this.updatingChanged()};this._createGraphicsViewAsync(this._createGraphicsViewController.signal).then(e,e),this.updatingChanged()}async _createGraphicsViewAsync(e){const t=(await import("./3d/layers/GraphicsView3D.js")).default;y(e),await R(this.basemapTerrain,"ready",e),this._set("graphicsView",new t({view:this}))}_disposeGraphicsView(){this._createGraphicsViewController&&(this._createGraphicsViewController.abort(),this._createGraphicsViewController=null),this.handles.remove("graphics-view"),g(this.graphicsView)&&(this.handles.remove(this.graphicsView.graphics3d.layer.id),this.graphicsView.destroy(),this._set("graphicsView",null))}_startup(){const e=K(this.viewingMode);if(1===e&&(this._clippingArea=null),this._set("ready",!0),this._initSurface(e),this.handles.add(v(this,"graphics","after-changes",(()=>this._createGraphicsViewIfNeeded())),"graphics-view"),this._createGraphicsViewIfNeeded(),!this._externallySet.environment){const e=this.get("map.initialViewProperties.environment");e&&(this.environment=e)}this.labeler.setup(),this.environmentManager.connectView(this),this.inputManager.connect();const t=this._resolveWhenReady;this._resolveWhenReady=[],t.forEach((e=>e(this)))}_teardown(){this._initialDefaultSpatialReference=null,this.inputManager.disconnect(),this.environmentManager.disconnectView(),this.labeler.dispose(),this._disposeGraphicsView(),this.handles.remove("graphics-view"),this._exitSurface(),this._set("ready",!1)}_updateDefaultToMapOptions(){if(this._defaultToMapOptions.include.clear(),this.map){this.map.ground&&this._defaultToMapOptions.include.add(Ce);for(const e of this.map.allLayers.items)"integrated-mesh"===e.type&&this._defaultToMapOptions.include.add(e.uid)}}_updateDefaultHitTestOptions(){if(this._defaultHitTestOptions.exclude.clear(),this.map){this.map.ground&&this.map.ground.opacity<1&&this._defaultHitTestOptions.exclude.add(Ce);for(const e of this.map.allLayers.items)"integrated-mesh"===e.type&&e.opacity<1&&this._defaultToMapOptions.exclude.add(e.uid)}}};function ke(e,t){e.layerUids||(e.layerUids=new Set),e.layerUids.add(t)}function Ne(e,t){e.graphicUids||(e.graphicUids=new Set),e.graphicUids.add(t)}e([O()],ze.prototype,"_resourceController",void 0),e([O()],ze.prototype,"_stage",void 0),e([O({readOnly:!0})],ze.prototype,"deconflictor",void 0),e([O({readOnly:!0})],ze.prototype,"labeler",void 0),e([O({type:Q,readOnly:!0,aliasOf:"state.animation"})],ze.prototype,"animation",void 0),e([O({readOnly:!0})],ze.prototype,"basemapTerrain",void 0),e([O({readOnly:!0})],ze.prototype,"elevationProvider",void 0),e([O({type:t,aliasOf:"stateManager.camera"})],ze.prototype,"camera",void 0),e([O({type:t,aliasOf:"stateManager.contentCamera"})],ze.prototype,"contentCamera",void 0),e([O({readOnly:!0})],ze.prototype,"canvas",void 0),e([O({type:We,aliasOf:"stateManager.center"})],ze.prototype,"center",void 0),e([O({type:De,dependsOn:["map.clippingArea?","map.clippingEnabled?","viewingMode"]})],ze.prototype,"clippingArea",null),e([O({type:J})],ze.prototype,"constraints",void 0),e([O({type:De,dependsOn:["basemapTerrain.extent","clippingArea","map"],readOnly:!0})],ze.prototype,"dataExtent",null),e([O({value:null,type:X})],ze.prototype,"environment",null),e([C("environment")],ze.prototype,"castEnvironment",null),e([O({readOnly:!0})],ze.prototype,"environmentManager",void 0),e([O({type:De,aliasOf:"stateManager.extent"})],ze.prototype,"extent",void 0),e([O()],ze.prototype,"floors",void 0),e([O({readOnly:!0,aliasOf:"stateManager.screenCenter"})],ze.prototype,"screenCenter",void 0),e([O({type:Number})],ze.prototype,"pixelRatio",null),e([O({type:Number,dependsOn:["qualitySettings.maximumPixelRatio","qualitySettings.maximumRenderResolution","size"]})],ze.prototype,"maximumPixelRatio",null),e([O({aliasOf:"stateManager.frustum"})],ze.prototype,"frustum",void 0),e([O({type:Number,readOnly:!0})],ze.prototype,"fullOpacity",void 0),e([O({readOnly:!0})],ze.prototype,"graphicsView",void 0),e([O({type:De,dependsOn:["basemapTerrain.extent"],readOnly:!0})],ze.prototype,"groundExtent",null),e([O()],ze.prototype,"groundView",void 0),e([O({type:Boolean})],ze.prototype,"initialExtentRequired",null),e([O({type:Boolean,readOnly:!0})],ze.prototype,"interacting",null),e([O()],ze.prototype,"stationary",null),e([O({aliasOf:"state.navigating"})],ze.prototype,"navigating",void 0),e([O()],ze.prototype,"map",void 0),e([O({readOnly:!0})],ze.prototype,"mapCoordsHelper",void 0),e([O({aliasOf:"stateManager.padding"})],ze.prototype,"padding",void 0),e([O({type:_e,readOnly:!0})],ze.prototype,"pointsOfInterest",void 0),e([O({type:se,readOnly:!0})],ze.prototype,"featureTiles",void 0),e([O()],ze.prototype,"featureTreeDebugger",void 0),e([O({type:Boolean})],ze.prototype,"screenSizePerspectiveEnabled",void 0),e([O({constructOnly:!0})],ze.prototype,"deactivatedWebGLExtensions",void 0),e([O({constructOnly:!0})],ze.prototype,"debugWebGLExtensions",void 0),e([O({constructOnly:!0})],ze.prototype,"renderCanvas",void 0),e([O({constructOnly:!0})],ze.prototype,"state",void 0),e([O({readOnly:!0})],ze.prototype,"inputManager",void 0),e([O({readOnly:!0})],ze.prototype,"stateManager",void 0),e([O({type:["low","medium","high"]})],ze.prototype,"qualityProfile",null),e([O({type:me,get(){let e=this._get("qualitySettings");return e||(e=new me,he.apply(this.qualityProfile,e)),e}})],ze.prototype,"qualitySettings",void 0),e([O()],ze.prototype,"slicePlane",null),e([O({dependsOn:["viewingMode"]})],ze.prototype,"preconditionsReady",void 0),e([O({readOnly:!0})],ze.prototype,"renderCoordsHelper",void 0),e([O({readOnly:!0})],ze.prototype,"sceneIntersectionHelper",void 0),e([O({type:Number,dependsOn:["scale","spatialReference"],readOnly:!0})],ze.prototype,"resolution",null),e([O({type:Number,aliasOf:"stateManager.scale"})],ze.prototype,"scale",void 0),e([O({dependsOn:[]})],ze.prototype,"heightModelInfo",null),e([O({dependsOn:["map.initialViewProperties?.spatialReference","defaultsFromMap.isSpatialReferenceDone"]})],ze.prototype,"spatialReference",void 0),e([O({type:Boolean,constructOnly:!0})],ze.prototype,"alphaCompositingEnabled",void 0),e([O({type:Boolean})],ze.prototype,"supersampleScreenhotsEnabled",void 0),e([O({readOnly:!0})],ze.prototype,"type",void 0),e([O({type:Le})],ze.prototype,"ui",void 0),e([O({type:Boolean,readOnly:!0,dependsOn:["graphicsView.updating","basemapView.updating","basemapTerrain.updating","layerViewManager.updating","layerViewManager.updatingRemaining","_resourceController.updating","_stage.updating","featureTiles.updating","pointsOfInterest.updating","environmentManager.updating","overlay.updating","updatingHandles.updating","featureTreeDebugger.updating","labeler.updating","deconflictor.updating","ready","stationary","inputManager.hasPendingInputs","toolViewManager.updating"]})],ze.prototype,"updating",null),e([O({type:Number,readOnly:!0,dependsOn:["updating"]})],ze.prototype,"updatingProgress",void 0),e([O({type:["global","local"],dependsOn:["map.initialViewProperties?.viewingMode","spatialReference"]})],ze.prototype,"viewingMode",null),e([O({type:s,aliasOf:"stateManager.viewpoint"})],ze.prototype,"viewpoint",void 0),e([O({type:Number,aliasOf:"stateManager.zoom"})],ze.prototype,"zoom",void 0),e([O({type:ce})],ze.prototype,"highlightOptions",void 0),ze=e([V("esri.views.SceneView")],ze);const Be=j(),$e=T();var Qe=ze;export default Qe;
