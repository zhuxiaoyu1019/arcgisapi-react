/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{lerp as t}from"../../../../core/mathUtils.js";import{t as e}from"../../../../chunks/mat3.js";import{c as i}from"../../../../chunks/mat3f64.js";import{l as s,i as a,e as o,g as h,f as r,t as n,a as c,c as p,d as m,b as d,n as w}from"../../../../chunks/vec3.js";import{c as u,a as l,f as y}from"../../../../chunks/vec3f64.js";import{angle as M,slerp as A}from"../../support/mathUtils.js";const f=u(),P=u(),_=u(),g=u(),k=u(),v=u(),x={upward:y(0,0,1),forward:y(0,1,0),sideway:y(1,0,0)},z=i();class T{constructor(t=1){this.viewingMode=t,this.center=u(),this.pitch=0,this.yaw=0,this.distance=0,this.lookAtDirection=l(x.forward)}pixelsPerPanAtZoom(t){return this.size/2/(this._zoomToPanScale*t)}zoomAtPixelsPerPan(t){return this.size/2/(this._zoomToPanScale*t)}pixelsPerRotateAtZoom(){const t=Math.max(Math.cos(Math.abs(this.pitch)),.5);return this.size/2/t}compareTo(t,e){if(e||(e={pan:0,rotate:0,sourceZoom:0,targetZoom:0}),1===this.viewingMode){const i=(s(this.center)+s(t.center))/2;e.pan=M(this.center,t.center)*i}else e.pan=a(this.center,t.center);let i=Math.abs(t.yaw-this.yaw);i>=Math.PI&&(i=2*Math.PI-i);const o=Math.abs(t.pitch-this.pitch);return e.rotate=Math.max(i,o),e.sourceZoom=this.distance,e.targetZoom=t.distance,e}interpolate(e,i,s){1===this.viewingMode?A(e.center,i.center,s.pan,this.center):o(this.center,e.center,i.center,s.pan),this.distance=t(e.distance,i.distance,s.zoom),this.pitch=t(e.pitch,i.pitch,s.rotate);let a=e.yaw;const h=i.yaw;Math.abs(h-a)>=Math.PI&&(a+=2*(a<h?1:-1)*Math.PI),this.yaw=t(a,h,s.rotate)}copyFrom(t){h(this.center,t.center),this.pitch=t.pitch,this.yaw=t.yaw,this.distance=t.distance,h(this.lookAtDirection,t.lookAtDirection),this.size=t.size,this.copyFromCommon(t),this.viewingMode=t.viewingMode}copyFromRenderCamera(t){const e=this._lookAtOrientation(t.center,z);h(this.center,t.center),r(g,t.center,t.eye),n(g,g,e),n(k,t.up,e),this.distance=s(g),g[0]/=this.distance,g[1]/=this.distance,g[2]/=this.distance,this.pitch=this._eyeUpToPitch(g),this.yaw=this._eyeUpToYaw(g,k),this.size=Math.sqrt(t.width*t.width+t.height*t.height),this.copyFromCommon(t)}copyFromCommon(t){this.fov=t.fov,this._zoomToPanScale=Math.atan(.5*this.fov)}copyToRenderCamera(t){const i=this._lookAtOrientation(this.center,z);e(i,i),this._axisAngleVec3(x.sideway,this.pitch-Math.PI/2,x.forward,g),this._axisAngleVec3(x.upward,this.yaw,g),this._axisAngleVec3(x.sideway,this.pitch-Math.PI/2,x.upward,k),this._axisAngleVec3(x.upward,this.yaw,k),c(g,g,this.distance),n(g,g,i),n(k,k,i),t.center=this.center,t.eye=r(g,this.center,g),t.up=k}_axisAngleVec3(t,e,i,s=i){const a=Math.cos(e),o=Math.sin(e);return c(f,i,a),p(P,t,i),c(P,P,o),c(_,t,(1-a)*m(t,i)),d(s,d(s,f,P),_)}_lookAtOrientation(t,e=i()){return this._upAtLookAt(t,_),p(f,this.lookAtDirection,_),w(f,f),0===f[0]&&0===f[1]&&0===f[2]&&h(f,x.sideway),p(P,_,f),w(P,P),e[0]=f[0],e[1]=P[0],e[2]=_[0],e[3]=f[1],e[4]=P[1],e[5]=_[1],e[6]=f[2],e[7]=P[2],e[8]=_[2],e}_upAtLookAt(t,e){return 2===this.viewingMode?h(e,x.upward):w(e,t)}_eyeUpToPitch(t){return Math.PI-M(x.upward,t)}_eyeUpToYaw(t,e){const i=v;return Math.abs(e[2])<.5?(h(i,e),t[2]>0&&c(i,i,-1)):h(i,t),p(P,i,x.upward),w(P,P),M(x.sideway,P,x.upward)}}export default T;
