/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{forEach as t,result as i}from"../../../core/asyncUtils.js";import r from"../../../core/Logger.js";import{isSome as a,isNone as s}from"../../../core/maybe.js";import{isAbortError as n,eachAlways as o,createAbortController as l,onAbort as h,isAborted as m,createAbortError as d,always as c,throwIfAborted as g}from"../../../core/promiseUtils.js";import{whenOnce as u}from"../../../core/watchUtils.js";import{property as p}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as y}from"../../../core/accessorSupport/decorators/subclass.js";import f from"../../../geometry/Extent.js";import{create as x,equals as w,width as _,height as v,set as R,intersection as b}from"../../../geometry/support/aaBoundingRect.js";import{LayerView3D as S}from"./LayerView3D.js";import{computeImageExportSize as E,createGeometryForExtent as j,createOuterImageGeometry as I}from"./support/overlayImageUtils.js";import{toViewIfLocal as L}from"./support/projectExtentUtils.js";import A from"../support/debugFlags.js";import{RenderGeometry as C}from"../webgl-engine/lib/RenderGeometry.js";import{Texture as D}from"../webgl-engine/lib/Texture.js";import{ImageMaterial as M}from"../webgl-engine/materials/ImageMaterial.js";import G from"../../layers/LayerView.js";import{RefreshableLayerView as T}from"../../layers/RefreshableLayerView.js";const H=r.getLogger("esri.views.3d.layers.DynamicLayerView3D");let O=class extends(T(S(G))){constructor(){super(...arguments),this.drapeSourceType=0,this.updatePolicy=1,this.fullExtentInLocalViewSpatialReference=null,this.maximumDataResolution=null,this._images=new Array,this._extents=new Array,this._overlayExtents=new Array,this.updateWhenStationary=!0}initialize(){this.addResolvingPromise(L(this).then((e=>this._set("fullExtentInLocalViewSpatialReference",e)))),this.updatingHandles.add(this,"suspended",(()=>this._suspendedChangeHandler())),this.handles.add(this.view.resourceController.scheduler.registerIdleStateCallbacks((()=>{this._isScaleRangeActive()&&this.notifyChange("suspended")}),(()=>{}))),this._isScaleRangeLayer()&&this.updatingHandles.add(this.layer,"scaleRangeId",(()=>this.notifyChange("suspended"))),"local"===this.view.viewingMode&&this.updatingHandles.add(this.view.basemapTerrain,"extent",(()=>this._overlayExtents.forEach(((e,t)=>this._updateImageExtent(t)))))}destroy(){this.clear()}setDrapingExtent(e,t){this._overlayExtents[e.index]={extent:x(e.extent),spatialReference:t,resolution:e.resolution,renderLocalOrigin:e.renderLocalOrigin,pixelRatio:e.pixelRatio},this._updateImageExtent(e.index)}_updateImageExtent(e){const t=this._overlayExtents[e],i=this._clippedExtent(t.extent,P),r=E(t.extent,i,t.resolution);let a=t.pixelRatio*this.view.pixelRatio;if("imageMaxWidth"in this.layer||"imageMaxHeight"in this.layer){const e=this.layer.imageMaxWidth,t=this.layer.imageMaxHeight;if(r.width>e){const t=e/r.width;r.height=Math.floor(r.height*t),r.width=e,a*=t}if(r.height>t){const e=t/r.height;r.width=Math.floor(r.width*e),r.height=t,a*=e}}const s=this._extents[e];s&&w(s.extent,i)&&!this._imageSizeDiffers(i,s.imageSize,r)||(this._extents[e]={extent:x(i),spatialReference:t.spatialReference,imageSize:r,pixelRatio:a},this.suspended||this._fetch(e).catch((e=>{n(e)||H.error(e)})))}clear(){for(let e=0;e<this._images.length;e++)this._clearImage(e)}async doRefresh(e){if(this.suspended)return;const t=[];for(let i=0;i<this._extents.length;i++)this._extents[i]&&t.push(this._fetch(i,e));await o(t)}canResume(){if(!super.canResume())return!1;if(this._isScaleRangeLayer()){const{minScale:e,maxScale:t}=this.layer;if(e>0||t>0){const i=this.view.scale;if(i<t||e>0&&i>e)return!1}}return!0}isUpdating(){return this._images.some((e=>!!e.loadingPromise))}async processResult(e,t,i){(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement)&&(e.image=t)}findExtentInfoAt(e){for(const t of this._extents){const i=t.extent;if(new f(i[0],i[1],i[2],i[3],t.spatialReference).contains(e))return t}return null}getFetchOptions(){}async redraw(e,i){await t(this._images,(async(t,r)=>{t&&(await e(t,i),await this._createStageObjects(r,t.image))}))}_imageSizeDiffers(e,t,i){if(!this.maximumDataResolution||A.TESTS_DISABLE_UPDATE_THRESHOLDS)return!0;const r=_(e)/this.maximumDataResolution.x,a=v(e)/this.maximumDataResolution.y,s=r/t.width,n=a/t.height,o=r/i.width,l=a/i.height,h=Math.abs(s-o),m=Math.abs(n-l);return h>1.5||m>1.5}async _fetch(e,t){if(this.suspended)return;const i=this._extents[e],r=i.extent;this._images[e]||(this._images[e]={texture:null,material:null,renderGeometry:null,loadingPromise:null,loadingAbortController:null,image:null,pixelData:null,renderExtent:x(r)});const a=this._images[e];a.loadingAbortController&&(a.loadingAbortController.abort(),a.loadingAbortController=null);const s=new f(r[0],r[1],r[2],r[3],i.spatialReference);if(0===s.width||0===s.height)return void this._clearImage(e);const o=l();a.loadingAbortController=o,h(t,(()=>o.abort()));const g=o.signal,u=this._waitFetchReady(g).then((()=>{const t={requestAsImageElement:!0,pixelRatio:this._overlayExtents[e].pixelRatio,...this.getFetchOptions(),signal:g},{height:r,width:a}=i.imageSize;return t.timestamp=this.refreshTimestamp,this.layer.fetchImage(s,a,r,t)})).then((e=>{if(m(g))throw H.warnOnce("A call to fetchImage resolved even though the request was aborted. fetchImage should not resolve if options.signal.aborted is true."),d();return this.processResult(a,e)})).then((()=>R(a.renderExtent,r)));a.loadingPromise=u,c(u,(()=>{u===a.loadingPromise&&(a.loadingPromise=null,a.loadingAbortController=null)}));const p=u.then((async()=>{await this._createStageObjects(e,a.image),this.notifyChange("updating")})).catch((e=>{throw e&&!n(e)&&H.error(e),this.notifyChange("updating"),e}));this.notifyChange("updating"),await p}_clearImage(e){const t=this._images[e];if(t){a(t.renderGeometry)&&(this.view.basemapTerrain.overlayManager.renderer.removeGeometries([t.renderGeometry],this,2),t.renderGeometry=null);const e=this.view._stage;e.remove(t.texture),t.texture=null,e.remove(t.material),t.material=null,t.loadingAbortController&&(t.loadingAbortController.abort(),t.loadingAbortController=null),t.loadingPromise=null,t.image=null,t.pixelData=null}}async _createStageObjects(e,t){const r=this.view._stage,n=this._images[e],o=this.view.basemapTerrain.overlayManager.renderer,l=()=>{r.remove(n.texture),n.texture=null,a(n.renderGeometry)&&(o.removeGeometries([n.renderGeometry],this,2),n.renderGeometry=null)};if(t){const a=new D(t,{width:t.width,height:t.height,preMultiplyAlpha:!0,wrap:{s:33071,t:33071}});let h;if(await i(this._images[0===e?1:0].loadingPromise),0===e)h=j(n.renderExtent);else{const e=this._images[0].renderExtent;if(!e)return void l();h=I(e,n.renderExtent)}l(),r.add(a),n.texture=a,s(n.material)?(n.material=new M({transparent:!0,textureId:a.id}),r.add(n.material)):n.material.setParameterValues({textureId:a.id}),n.renderGeometry=new C(h,n.material),n.renderGeometry.origin=this._overlayExtents[e].renderLocalOrigin,o.addGeometries([n.renderGeometry],this,2)}else l(),r.remove(n.material),n.material=null}_isScaleRangeLayer(){return"minScale"in this.layer&&"maxScale"in this.layer}_isScaleRangeActive(){return!!this._isScaleRangeLayer()&&(this.layer.minScale>0||this.layer.maxScale>0)}_clippedExtent(e,t){if("local"!==this.view.viewingMode)return R(t,e);const i=this.view.basemapTerrain,r=i.extent;return i.ready&&r?b(e,r,t):R(t,e)}_suspendedChangeHandler(){this.suspended?this.clear():this.refresh()}async _waitFetchReady(e){await u(this.view,"stationary",e),g(e)}};e([p()],O.prototype,"layer",void 0),e([p()],O.prototype,"suspended",void 0),e([p({readOnly:!0})],O.prototype,"fullExtentInLocalViewSpatialReference",void 0),e([p()],O.prototype,"updating",void 0),O=e([y("esri.views.3d.layers.DynamicLayerView3D")],O);const P=x();var V=O;export default V;
