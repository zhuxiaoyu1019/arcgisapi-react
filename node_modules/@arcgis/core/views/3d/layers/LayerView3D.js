/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as s}from"../../../chunks/tslib.es6.js";import{whenFalseOnce as o}from"../../../core/watchUtils.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import{mayHaveHeightModelInfo as r,rejectLayerError as i}from"../../../geometry/support/heightModelInfoUtils.js";const p=p=>{let a=class extends p{constructor(){super(...arguments),this.slicePlaneEnabled=!1,this.supportsHeightUnitConversion=!1}postscript(s){super.postscript(s),r(this.layer)&&this.addResolvingPromise(this._validateHeightModelInfo())}async _validateHeightModelInfo(){const s=o(this.view.defaultsFromMap,"isHeightModelInfoSearching");this.handles.add(s),await s;const e=i(this.layer,this.view.heightModelInfo,this.supportsHeightUnitConversion);if(e)throw e}};return s([e()],a.prototype,"view",void 0),s([e()],a.prototype,"slicePlaneEnabled",void 0),a=s([t("esri.views.3d.layers.LayerView3D")],a),a};export{p as LayerView3D};
