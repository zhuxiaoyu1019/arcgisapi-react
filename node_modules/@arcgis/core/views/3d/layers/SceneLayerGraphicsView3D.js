/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../Graphic.js";import r from"../../../core/Logger.js";import{destroyMaybe as i,isSome as s,isNone as o,unwrap as a}from"../../../core/maybe.js";import{init as n}from"../../../core/watchUtils.js";import{property as d}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as h}from"../../../core/accessorSupport/decorators/subclass.js";import{b as l}from"../../../chunks/vec3.js";import{f as u,c}from"../../../chunks/vec3f64.js";import{projectBuffer as p,projectVectorToVector as g,projectBoundingRect as m}from"../../../geometry/projection.js";import{create as y}from"../../../geometry/support/aaBoundingRect.js";import{extentContainsCoords3D as f}from"../../../geometry/support/contains.js";import{estimateSize as _,makeDehydratedPoint as b}from"../../../layers/graphics/dehydratedFeatures.js";import{hydrateGraphic as v}from"../../../layers/graphics/hydratedFeatures.js";import E from"../../../layers/graphics/controllers/I3SOnDemandController.js";import{getRenderingInfo as x,getRenderingInfoAsync as I}from"../../../renderers/support/renderingInfoUtils.js";import{getGeometryZScaler as w}from"../../../rest/query/operations/zscale.js";import S from"../../../rest/support/Query.js";import{I3SPointsWorkerHandle as C}from"./I3SPointsWorkerHandle.js";import{LayerView3D as D}from"./LayerView3D.js";import F from"./graphics/Graphics3DFeatureLikeLayerView.js";import A from"./graphics/QueryEngine.js";import{createInteractiveEditSession as O,processAttributeEdits as N}from"./i3s/attributeEditing.js";import{I3SAttributeOverrides as j}from"./i3s/I3SAttributeOverrides.js";import{checkSpatialReferences as T,containsDraco as G,whenGraphicAttributes as V,getCachedAttributeValue as M}from"./i3s/I3SUtil.js";import{DefinitionExpressionSceneLayerView as R}from"./support/DefinitionExpressionSceneLayerView.js";import{defineFieldProperties as P}from"./support/fieldProperties.js";import{PopupSceneLayerView as L}from"./support/PopupSceneLayerView.js";import{SceneLayerViewRequiredFields as U}from"./support/SceneLayerViewRequiredFields.js";import q from"../support/debugFlags.js";import{GraphicsMap as H}from"../support/GraphicsMap.js";import{compute as Q}from"../support/orientedBoundingBox.js";import{updatingProgress as k}from"../support/updatingProperties.js";import B from"../../layers/SceneLayerView.js";import z from"../../layers/support/FeatureFilter.js";import{TaskPriority as W}from"../../support/Scheduler.js";const K=r.getLogger("esri.views.3d.layers.SceneLayerGraphicsView3D"),Z=P();let J=class extends(R(L(D(B)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._nodesAddedToStage=new Map,this.drapeSourceType=1,this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new H,this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}initialize(){var e;const t=this.layer;this.addResolvingPromise(t.indexInfo),this._attributeOverrides=new j(this.layer,null==(e=this.view.resourceController)?void 0:e.memoryController),T(t,this.view.spatialReference,this.view.viewingMode),this.fieldsHelper=new U({layerView:this}),this.updatingHandles.add(t,"rangeInfos",(e=>this._rangeInfosChanged(e)),2),this.updatingHandles.add(t,"renderer",((e,t)=>this._rendererChange(e,t))),this.updatingHandles.add(this,"parsedDefinitionExpression",(()=>this._filterChange())),this.updatingHandles.add(this,"view.floors",(()=>this.graphics3d.filterVisibility.filterChanged())),this.handles.add(n(q,"I3S_TREE_SHOW_TILES",(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;import("./support/I3STreeDebugger.js").then((({I3STreeDebugger:t})=>{!this._treeDebugger&&q.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t({lv:this,view:this.view,nodeSR:e}))}))}else e||!this._treeDebugger||q.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)}))),this._set("graphics3d",new F({owner:this,layer:t,preferredUpdatePolicy:0,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentVisibilityEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,suspendResumeExtentMode:"data",dataExtent:t.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.graphics3d.elevationAlignment&&this.graphics3d.elevationAlignment.events.on("invalidate-elevation",(e=>this._invalidateElevation(e))),this.supportsHeightUnitConversion&&(this._verticalScale=w("point",t.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.graphics3d.setup()),this._memCache=this.view.resourceController.memoryController.getMemCache(t.uid),this._controller=new E({layerView:this,scaleVisibilityEnabled:!1}),G(this.layer.geometryDefinitions)&&(this._worker=new C((e=>this.view.resourceController.schedule(e)))),this.handles.add(this.layer.on("apply-edits",(e=>this.updatingHandles.addPromise(e.result)))),this.handles.add(this.layer.on("edits",(e=>this._handleEdits(e)))),this.when((()=>{this._queryEngine=new A({layerView:this,priority:W.FEATURE_QUERY_ENGINE}),this.updatingHandles.add(this,"maximumNumberOfFeatures",(e=>this._controller.featureTarget=e),2),this.updatingHandles.add(this,"suspended",(e=>{e&&this._removeAllNodeData()}))}))}destroy(){this._treeDebugger=i(this._treeDebugger),this._attributeOverrides=i(this._attributeOverrides),this._set("graphics3d",i(this.graphics3d)),this._controller=i(this._controller),this._queryEngine=i(this._queryEngine),this._worker=i(this._worker),this._memCache=i(this._memCache),this._nodesAddedToStage.clear(),this.fieldsHelper=i(this.fieldsHelper)}get requiredFields(){var e,t;return null!=(e=null==(t=this.fieldsHelper)?void 0:t.requiredFields)?e:[]}get maximumNumberOfFeatures(){const e=this.graphics3d&&this.graphics3d.graphicsCore&&this.graphics3d.graphicsCore.displayFeatureLimit;return e?e.maximumNumberOfFeatures:0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){return!this.suspended&&(!!this._controller&&!this._controller.leavesReached)}get hasM(){return!1}get hasZ(){return!0}notifyGraphicGeometryChanged(e){this.graphics3d.graphicsCore.notifyGraphicGeometryChanged(e)}notifyGraphicVisibilityChanged(e){this.graphics3d.graphicsCore.notifyGraphicVisibilityChanged(e)}async whenGraphicAttributes(e,t){return V(this.layer,e,this._getObjectIdField(),t,(()=>[...this._nodesAddedToStage.values()]))}getGraphicFromGraphicUid(e){if(!this.loadedGraphics)return null;const t=v(this.loadedGraphics.find((t=>t.uid===e)),this.layer),r=this._getObjectIdField();return t&&t.attributes&&t.attributes[r]?(t.layer=this.layer,t.sourceLayer=this.layer,t):null}whenGraphicBounds(e,t){return this.graphics3d.graphicsCore.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.graphics3d.graphicsCore.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){return!!(this._controller&&this._controller.updating||this.graphics3d&&this.graphics3d.updating)}getRenderingInfo(e,t,r){const i=x(e,{renderer:t,arcade:r});if(s(i)&&i.color){const e=i.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}return i}async getRenderingInfoAsync(e,t,r,i){return I(e,{renderer:t,arcade:r,...i})}get symbolUpdateType(){return this.graphics3d.graphicsCore.symbolUpdateType}highlight(e){return this.graphics3d.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.graphics3d.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return O(this.attributeEditingContext,e)}async extractBinaryPointData(e,t){const r={geometryBuffer:e.geometryBuffer};return o(this._worker)&&(this._worker=new C((e=>this.view.resourceController.schedule(e)))),this._worker.invoke(r,t).then((e=>{if(s(e)){return{positionData:e.positions,featureIds:e.featureIds}}throw new Error("Failed to decompress Draco point data")}))}checkExtent(e,t){e&&!f(e,t)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&K.error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&K.error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++)}async addNode(e,t,r){if(!X(t)&&!$(t))return Promise.reject();if(this._nodesAddedToStage.has(e.index))return void K.error("I3S node "+e.id+" already added");const i=this.layer.fullExtent,s=i&&te(i.clone(),.5),o=this._controller.crsVertex,a=[],n={graphics:null,featureIds:null,attributeInfo:t.attributeDataInfo,node:e};if(X(t)?await this._addNodeBinaryPointData(e,n,t,s,a,r):$(t)&&this._addNodeLegacyPointData(e,n,t,s,a),await this._attributeOverrides.apply(n.featureIds,t.attributeDataInfo,r),e.numFeatures=n.graphics.length,this._updateNodeMemory(e),ee(n),a.length>0&&(this.computeObb(e,a,o),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return this._cacheNodeData(n),Promise.resolve();if(this._verticalScale)for(const d of n.graphics)this._verticalScale(d.geometry);return this._nodesAddedToStage.set(e.index,n),this.loadedGraphics.addMany(n.graphics),this._filterNode(n),this._treeDebugger&&this._treeDebugger.update(),Promise.resolve()}computeObb(e,t,r){const i=this._controller.crsIndex,s=i.isGeographic?this.view.renderSpatialReference:i;p(t,r,0,t,s,0,t.length/3);const o={data:t,size:3};e.serviceObb=Q(o),i.isGeographic&&g(e.serviceObb.center,s,e.serviceObb.center,i)}isNodeLoaded(e){return this._nodesAddedToStage.has(e)}isNodeReloading(){return!1}updateNodeState(){}async _addNodeBinaryPointData(e,r,i,o,n,d){const h=await this.extractBinaryPointData(i,d);if(null==h)return Promise.reject();const c=this._getObjectIdField(),g=this._controller.crsVertex,m=this.view.spatialReference,y=this.graphics3d.graphicsCore,{positionData:f,featureIds:_}=h,v=3,E=f.length/v,x=new Array;for(let I=0;I<E;I++){const r=s(e.serviceObb)?e.serviceObb.center:[0,0,0],i=I*v,d=u(f[i+0],f[i+1],f[i+2]);l(d,d,r),e.serviceObb||n.push(d[0],d[1],d[2]),o&&this.checkExtent(o,d);const h=_[I],E={};null!=h&&(E[c]=h);const w=null==h?t.generateUID():h;p(d,g,0,ie,m,0,1);const S=b(ie[0],ie[1],ie[2],m),C=this.loadedGraphics.get(w);if(s(C))C.level<e.level&&(se.property="geometry",se.graphic=C,se.oldValue=a(C.geometry),se.newValue=S,C.geometry=S,y.graphicUpdateHandler(se)),x.push(C);else{const r=t.generateUID();x.push({objectId:w,uid:r,geometry:S,attributes:E,visible:!0,level:e.level})}}r.graphics=x,r.featureIds=_}_addNodeLegacyPointData(e,r,i,o,a){const n=this._getObjectIdField(),d=this._controller.crsVertex,h=this.view.spatialReference,l=[0,0,0],u=new Array,c=new Array;for(const g of i.pointData){const r=g.featureDataPosition,i=r.length,m=g.geometries&&g.geometries[0]||re[i],y=g.featureIds[0];if("points"!==m.params.type)continue;o&&this.checkExtent(o,r);const f={};null!=y&&(f[n]=y);const _=null==y?t.generateUID():y;let v;"Embedded"===m.type&&(v=m.params.vertexAttributes.position);for(let o=0;o<v.length;o+=i){for(let e=0;e<i;e++)l[e]=r[e]+v[o+e];const n=3===i;e.serviceObb||a.push(l[0],l[1],n?l[2]:0),p(l,d,0,ie,h,0,1);const u=b(ie[0],ie[1],n?ie[2]:void 0,h),g=this.loadedGraphics.get(_);s(g)?c.push(g):c.push({objectId:_,uid:t.generateUID(),geometry:u,attributes:f,visible:!0})}u.push(y)}r.graphics=c,r.featureIds=u}_updateNodeMemory(e){e.memory=4096+(s(e.numFeatures)?e.numFeatures*this.graphics3d.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce(((e,t)=>_(t)+e),512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this._nodesAddedToStage.forEach((e=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e)}})),this._nodesAddedToStage.clear(),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this._nodesAddedToStage.get(e);return t?(this.loadedGraphics.removeMany(t.graphics),this._nodesAddedToStage.delete(e),this._treeDebugger&&this._treeDebugger.update(),t):null}async loadCachedNodeData(e){return this._memCache.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,i){if(!this._nodesAddedToStage.has(e.index))return this.loadedGraphics.addMany(t.graphics),this._nodesAddedToStage.set(e.index,t),this._updateNodeMemory(e),await this.updateAttributes(e.index,r,i),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update(),Promise.resolve();K.error("I3S node "+e.id+" already added")}getLoadedNodeIds(){const e=[];return this._nodesAddedToStage.forEach((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this._nodesAddedToStage.forEach((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this._nodesAddedToStage.forEach(((t,r)=>e.push(r)))}getLoadedAttributes(e){const t=this._nodesAddedToStage.get(e);if(t&&s(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodesAddedToStage.get(e);if(t&&s(t.attributeInfo))return t.attributeInfo.attributeData}setAttributeData(e,t){const r=this._nodesAddedToStage.get(e);r&&!o(r.attributeInfo)&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r))}async updateAttributes(e,t,r){const i=this._nodesAddedToStage.get(e);i&&(await this._attributeOverrides.apply(i.featureIds,t,r),i.attributeInfo=t,this._attributeValuesChanged(i))}_attributeValuesChanged(e){if(ee(e),this._filterNode(e),this.graphics3d.graphicsCore.labelsEnabled){const t=e.graphics.map((e=>e.uid));this.graphics3d.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||"OBJECTID"}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,i=new Set;let s,o;e?(await e.collectRequiredFields(i,r),s=Array.from(i).sort()):s=[],i.clear(),t?(await t.collectRequiredFields(i,r),o=Array.from(i).sort()):o=[],s.length===o.length&&s.every(((e,t)=>s[t]===o[t]))||this._reloadAllNodes()}_rangeInfosChanged(e){null!=e&&e.length>0&&K.warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this._nodesAddedToStage.forEach((e=>this._filterNode(e)))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression;for(const r of e.graphics){const e=r.visible;r.visible=!t||this._evaluateClause(t,r),e!==r.visible&&(se.graphic=r,se.property="visible",se.oldValue=e,se.newValue=r.visible,this.graphics3d.graphicsCore.graphicUpdateHandler(se))}}_invalidateElevation(e){const t=this._controller.crsIndex;m(e.extent,e.spatialReference,oe,t),this._controller.updateElevationChanged(oe,t)}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return s(this.filter)?this.filter.createQuery(e):new S(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),null==t?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),null==t?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),null==t?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),null==t?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(o(e)?this.createQuery():S.from(e))}getUsedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return e?e.usedMemory:0}getUnloadedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return.8*((this._controller?this._controller.unloadedMemoryEstimate:0)+(e?e.unprocessedMemoryEstimate:0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){N(this.attributeEditingContext,e)}get attributeEditingContext(){const e=this._getObjectIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:e=>this._nodesAddedToStage.forEach((t=>e(t.node,t.featureIds))),attributeStorageInfo:this.i3slayer.attributeStorageInfo,attributeOverrides:this._attributeOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r,i)=>{this.setAttributeData(t,r);const o=this._nodesAddedToStage.get(t);if(s(i)){const t=this.loadedGraphics.get(i.attributes[e]);s(t)&&this.graphics3d.graphicsCore.recreateGraphics([t])}else s(o)&&this.graphics3d.graphicsCore.recreateGraphics(o.graphics)},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this._nodesAddedToStage.size,core:this.graphics3d.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return{controller:this._controller,numNodes:this._nodesAddedToStage.size,numFeatures:this.loadedGraphics.length}}};e([d()],J.prototype,"graphics3d",void 0),e([d({type:z})],J.prototype,"filter",void 0),e([d()],J.prototype,"loadedGraphics",void 0),e([d({aliasOf:"layer"})],J.prototype,"i3slayer",void 0),e([d()],J.prototype,"_controller",void 0),e([d()],J.prototype,"updating",void 0),e([d()],J.prototype,"suspended",void 0),e([d()],J.prototype,"holeFilling",void 0),e([d(k)],J.prototype,"updatingProgress",void 0),e([d({aliasOf:"_controller.updatingProgress"})],J.prototype,"updatingProgressValue",void 0),e([d(Z.requiredFields)],J.prototype,"requiredFields",null),e([d(Z.availableFields)],J.prototype,"availableFields",void 0),e([d()],J.prototype,"fieldsHelper",void 0),e([d({type:Number})],J.prototype,"maximumNumberOfFeatures",null),e([d({readOnly:!0})],J.prototype,"maximumNumberOfFeaturesExceeded",null),e([d({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.point.lodFactor"})],J.prototype,"lodFactor",void 0),e([d({readOnly:!0})],J.prototype,"hasM",null),e([d({readOnly:!0})],J.prototype,"hasZ",null),J=e([h("esri.views.3d.layers.SceneLayerGraphicsView3D")],J);var Y=J;function $(e){return"pointData"in e}function X(e){return"geometryBuffer"in e&&null!==e.geometryBuffer}function ee(e){const t=e.attributeInfo;for(let r=0;r<e.graphics.length;r++){const i=e.graphics[r];if(i.attributes||(i.attributes={}),s(t)&&s(t.loadedAttributes))for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(i.attributes[e]=M(t.attributeData[e],r))}}function te(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.hasZ&&(e.zmin-=t,e.zmax+=t),e.hasM&&(e.mmin-=t,e.mmax+=t),e}const re={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},ie=c(),se={graphic:null,property:null,oldValue:null,newValue:null},oe=y();export default Y;
