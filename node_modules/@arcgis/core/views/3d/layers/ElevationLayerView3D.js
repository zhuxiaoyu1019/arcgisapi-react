/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../core/Error.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{LayerView3D as t}from"./LayerView3D.js";import{TiledLayerView3D as i}from"./TiledLayerView3D.js";import a from"../../layers/LayerView.js";let l=class extends(i(t(a))){constructor(){super(...arguments),this.type="elevation-3d"}initialize(){const e=this.get("view.map.allLayers"),o=e&&e.includes(this.layer),s=this.get("view.map.ground.layers"),t=s&&s.includes(this.layer);if(o&&!t){const e=new r("layerview:elevation-layer-only","3D elevation layer '"+this.layer.id+"' can only be added in the map ground");this.addResolvingPromise(Promise.reject(e))}this._addTilingSchemeMatchPromise()}};e([o({readOnly:!0,aliasOf:"layer.fullExtent"})],l.prototype,"fullExtent",void 0),e([o()],l.prototype,"layer",void 0),e([o({readOnly:!0,aliasOf:"layer.tileInfo"})],l.prototype,"tileInfo",void 0),l=e([s("esri.views.3d.layers.ElevationLayerView3D")],l);var p=l;export default p;
