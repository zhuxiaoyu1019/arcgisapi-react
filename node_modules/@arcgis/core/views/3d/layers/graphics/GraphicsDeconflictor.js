/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Handles.js";import{someMap as i}from"../../../../core/MapUtils.js";import{isSome as s}from"../../../../core/maybe.js";import{init as r}from"../../../../core/watchUtils.js";import"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as a}from"../../../../core/accessorSupport/decorators/subclass.js";import{t as o}from"../../../../chunks/boundedPlane.js";import{Deconflictor as c,DeconflictorViewState as n,DeconflictorGraphic as h}from"./Deconflictor.js";import{LabelDeconflictor as l}from"./LabelDeconflictor.js";import{TaskPriority as p}from"../../../support/Scheduler.js";let d=class extends c{constructor(){super(...arguments),this._handles=new t,this._contexts=new Map,this._viewState=new n,this.visibilityGroup=0,this._iconMarginFactor=-.1}get labels(){return this._labels}get viewState(){return this._viewState}initialize(){this._handles.add([this.view.watch("state.camera",(()=>{this.updateViewState(),this.setDirty()})),this.view.watch("map.ground.opacity",((e,t)=>{1!==e&&1!==t||this.setDirty()})),r(this.view,"slicePlane",(()=>{this.updateSlicePlane(),this.slicePlaneChanged()}))]),this._frameTask=this.view.resourceController.scheduler.registerTask(p.GRAPHICS_DECONFLICTOR,this),this._labels=new l({view:this.view,parent:this})}destroy(){this._labels.destroy(),this._labels=null,this._handles.destroy(),this._handles=null,this._frameTask&&(this._frameTask.remove(),this._frameTask=null)}get iconMarginFactor(){return this._iconMarginFactor}set iconMarginFactor(e){this._iconMarginFactor=e,this.setDirty()}setDirty(){this._contexts.size>0&&(super.setDirty(),this._labels.setDirty())}runTask(e){super.runTask(e),this.running||this._labels.setDirty()}setInitialIconVisibilityFlag(e,t){const i=!(this._graphicSupportsDeconfliction(t)&&u(e));t.setVisibilityFlag(3,i,0)}updateViewState(){this.view&&this.view.state&&(this._viewState.camera.copyFrom(this.view.state.camera),this.updateSlicePlane())}updateSlicePlane(){const e=this.view?this.view.slicePlane:null;s(e)&&o(e,this._viewState.camera.viewMatrix,this._viewState.slicePlane),this._viewState.slicePlaneEnabled=s(e)}slicePlaneChanged(){i(this._contexts,((e,t)=>t.symbolCreationContext.slicePlaneEnabled))&&this.setDirty()}addGraphicsOwner(e){let t=this._contexts.get(e);return null==t&&(t=new Map,this._contexts.set(e,t),this.setDirty()),{addGraphic:i=>this.addGraphic(e,t,i),removeGraphic:e=>this.removeGraphic(t,e),labelingInfoChange:()=>this._labels.enabledChanged(e,t),featureReductionChange:()=>this.enabledChanged(e,t),slicePlaneEnabledChange:()=>this._slicePlaneEnabledChanged(e,t),clear:()=>t.forEach((e=>this.removeGraphic(t,e.graphics3DGraphic)))}}removeGraphicsOwner(e){const t=this._contexts.get(e);t&&(t.forEach((e=>this.removeGraphic(t,e.graphics3DGraphic))),this._contexts.delete(e),this.setDirty())}addGraphic(e,t,i){const s=i.graphic.uid,r=new h(i,e.symbolCreationContext.slicePlaneEnabled);t.set(s,r),u(e)&&this.addToActiveGraphics(r),e.labelsEnabled&&this._labels.addToActiveGraphics(r)}removeGraphic(e,t){const i=t.graphic.uid,s=e.get(i);s&&(this.removeFromActiveGraphics(s),this._labels.removeFromActiveGraphics(s),e.delete(i),this.setDirty())}enabledChanged(e,t){const i=u(e);i||m(e),this.modifyGraphics(t,i)}_slicePlaneEnabledChanged(e,t){const i=e.symbolCreationContext.slicePlaneEnabled;t.forEach((e=>e.slicePlaneEnabled=i)),this.setDirty()}getGraphicsLayers(e){return e._graphics}_graphicSupportsDeconfliction(e){if(e.isDraped)return!1;const t=e._graphics;if(!t||!t.length)return!1;for(const i of t)if(this.layerSupportsDeconfliction(i))return!0;return!1}};function u(e){const t=e.layer;return!(!t||!t.featureReduction||"selection"!==t.featureReduction.type)}function m(e){const t=e.graphics3DGraphics;t&&t.forEach((e=>e.clearVisibilityFlag(3)))}d=e([a("esri.views.3d.layers.graphics.GraphicsDeconflictor")],d);export{d as GraphicsDeconflictor};
