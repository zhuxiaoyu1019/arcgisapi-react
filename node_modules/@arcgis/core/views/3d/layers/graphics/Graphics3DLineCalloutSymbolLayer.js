/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../Color.js";import{isSome as t,isNone as r}from"../../../../core/maybe.js";import{pt2px as a}from"../../../../core/screenUtils.js";import{perObjectElevationAligner as i}from"./ElevationAligners.js";import{elevationModeChangeUpdateType as n,SymbolUpdateType as s,needsElevationUpdates2D as o}from"./elevationAlignmentUtils.js";import{ElevationContext as l}from"./ElevationContext.js";import{Graphics3DObject3DGraphicLayer as c}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DSymbolLayer as m}from"./Graphics3DSymbolLayer.js";import{computeCentroid as d}from"./graphicUtils.js";import{createStageObjectForHUD as u,extendPointGraphicElevationContext as h}from"./pointUtils.js";import{emptySymbolComplexity as p}from"./symbolComplexity.js";import{Geometry as f}from"../../webgl-engine/lib/Geometry.js";import{materialParametersDefaults as v}from"../../webgl-engine/lib/Material.js";import{LineCalloutMaterial as g}from"../../webgl-engine/materials/LineCalloutMaterial.js";class y extends m{constructor(e,t){super(e,null,t,b),this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1},this.ensureDrapedStatus(!1)}async doLoad(){this._material=new g(this.materialParameters),this._context.stage.add(this._material)}destroy(){super.destroy(),this._context.stage.remove(this._material),this._material=null}perInstanceMaterialParameters(e){const t=this.materialParameters;return t.screenOffset=e.screenOffset||[0,0],t.centerOffsetUnits=e.centerOffsetUnits||"world",t}get materialParameters(){const r=this.symbol,i=r.callout,n=t(i.color)?e.toUnitRGBA(i.color):[0,0,0,0];n[3]*=this._getLayerOpacity();const s=a(i.size||0);let o=null;if(r.verticalOffset){const{screenLength:e,minWorldLength:t,maxWorldLength:i}=r.verticalOffset;o={screenLength:a(e),minWorldLength:t||0,maxWorldLength:null!=i?i:1/0}}const l=t(i.border)&&t(i.border.color)?e.toUnitRGBA(i.border.color):null,c="object"===r.symbolLayers.getItemAt(0).type,m=!c,d=c?0:void 0,u="label-3d"===r.type;return{color:n,size:s,verticalOffset:o,screenSizePerspective:this._context.screenSizePerspectiveEnabled?this._context.sharedResources.screenSizePerspectiveSettings:null,screenOffset:[0,0],centerOffsetUnits:"world",borderColor:l,occlusionTest:m,shaderPolygonOffset:d,depthHUDAlignStart:u,slicePlaneEnabled:this._context.slicePlaneEnabled,renderOccluded:v.renderOccluded}}_defaultElevationInfoNoZ(){return _}createGraphics3DGraphic(e){const t=e.renderingInfo,a=e.graphic,i=this.setGraphicElevationContext(a,new l,t.elevationOffset||0),n=t.symbol,s="on-the-ground"===this._elevationContext.mode&&("cim"===n.type||!n.symbolLayers.some((e=>"object"===e.type||"text"===e.type)));if("label-3d"!==n.type&&s)return null;const o=d(a.geometry);return r(o)?null:this._createAs3DShape(o,i,t,a.uid)}layerOpacityChanged(){return r(this._material)||this._material.setParameterValues(this.materialParameters),!0}layerElevationInfoChanged(e,r,a){const i=this._elevationContext.mode,o=n(y.elevationModeChangeTypes,a,i);return o!==s.UPDATE||e.forEach((e=>{const a=r(e);t(a)&&this.updateGraphicElevationContext(e.graphic,a)})),o}slicePlaneEnabledChanged(){return r(this._material)||this._material.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled}),!0}physicalBasedRenderingChanged(){return!0}pixelRatioChanged(){return!0}setGraphicElevationContext(e,t,r=0){const a=super.setGraphicElevationContext(e,t);return a.addOffsetRenderUnits(r),a}updateGraphicElevationContext(e,t){this.setGraphicElevationContext(e,t.elevationContext,t.metadata.elevationOffset),t.needsElevationUpdates=o(t.elevationContext.mode)}updateGeometry(e,t){return!1}computeComplexity(){return{primitivesPerFeature:2,primitivesPerCoordinate:0,drawCallsPerFeature:0,estimated:!1,memory:p.memory}}createVertexData(e){const{translation:t,centerOffset:r}=e;return[["position",t?{size:3,data:[t[0],t[1],t[2]],exclusive:!0}:{size:3,data:[0,0,0],exclusive:!0}],["normal",{size:3,data:[0,0,1],exclusive:!0}],["auxpos1",r?{size:4,data:[r[0],r[1],r[2],r[3]],exclusive:!0}:{size:4,data:[0,0,0,1],exclusive:!0}]]}_getOrCreateMaterial(e){const a=this.perInstanceMaterialParameters(e),i=g.uniqueMaterialIdentifier(a);if(t(this._material)&&i===this._material.uniqueMaterialIdentifier)return{material:this._material,isUnique:!1};if(e.materialCollection){let t=e.materialCollection.get(i);return r(t)&&(t=new g(a),e.materialCollection.add(i,t)),{material:t,isUnique:!1}}return{material:new g(a),isUnique:!0}}_createAs3DShape(e,t,r,a){const n=[new f(this.createVertexData(r),C,1)],s=this._getOrCreateMaterial(r),l=u(this._context,e,n,[s.material],null,null,t,this._context.layer.uid,a);if(null===l)return null;const m=i,d=new c(this,l.object,n,s.isUnique?[s.material]:null,null,m,t);return d.metadata={elevationOffset:r.elevationOffset||0},d.alignedSampledElevation=l.sampledElevation,d.needsElevationUpdates=o(t.mode),h(d,e,this._context.elevationProvider),d}}y.elevationModeChangeTypes={definedChanged:s.UPDATE,staysOnTheGround:s.UPDATE,onTheGroundChanged:s.RECREATE};const x=new Uint16Array([0]),C=[["position",x],["normal",x],["auxpos1",x]],_={mode:"relative-to-ground",offset:0},b={ignoreDrivers:!0,renderPriority:0,renderPriorityStep:1};export default y;export{y as Graphics3DLineCalloutSymbolLayer};
