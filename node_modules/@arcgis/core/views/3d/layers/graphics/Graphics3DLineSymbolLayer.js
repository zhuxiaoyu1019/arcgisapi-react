/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../Color.js";import"../../../../geometry.js";import t from"../../../../core/Error.js";import{get as i,isNone as r,isSome as a}from"../../../../core/maybe.js";import{px2pt as s,pt2px as n}from"../../../../core/screenUtils.js";import{I as o}from"../../../../chunks/mat4f64.js";import{s as l}from"../../../../chunks/vec4.js";import{f as p}from"../../../../chunks/vec4f64.js";import{create as h,empty as c,expandWithBuffer as m,intersectsClippingArea as d,expandWithAABB as y}from"../../../../geometry/support/aaBoundingBox.js";import{getDriverAxisSizeValueAny as u}from"../../../../renderers/support/renderingInfoUtils.js";import{perVertexElevationAligner as g}from"./ElevationAligners.js";import{elevationModeChangeUpdateType as f,SymbolUpdateType as _,needsElevationUpdates2D as b}from"./elevationAlignmentUtils.js";import{ElevationContext as v}from"./ElevationContext.js";import M from"./Graphics3DDrapedGraphicLayer.js";import{Graphics3DObject3DGraphicLayer as P}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DSymbolLayer as x,getAttributeValue as U}from"./Graphics3DSymbolLayer.js";import{geometryToRenderInfo as C,createGeometry as E,geometryToRenderInfoDraped as D}from"./lineUtils.js";import{initFastSymbolUpdatesState as j,updateFastSymbolUpdatesState as z}from"../support/FastSymbolUpdates.js";import{Object3D as L}from"../../webgl-engine/lib/Object3D.js";import{RenderGeometry as A}from"../../webgl-engine/lib/RenderGeometry.js";import{createStipplePattern as O}from"../../webgl-engine/materials/lineStippleUtils.js";import{RibbonLineMaterial as S}from"../../webgl-engine/materials/RibbonLineMaterial.js";import w from"../../../../geometry/Extent.js";import G from"../../../../geometry/Polygon.js";const V=["polyline","polygon","extent"];class R extends x{constructor(e,t,i,r){super(e,t,i,r),this._uniformSize=1}async doLoad(){if(this._vvConvertOptions={modelSize:[1,1,1],symbolSize:[1,1,1],unitInMeters:1,transformation:{anchor:[0,0,0],scale:[1,1,1],rotation:[0,0,0]},supportedTypes:{size:!0,color:!0,opacity:!0,rotation:!1}},this._context.renderer&&this._context.renderer.visualVariables&&this._context.renderer.visualVariables.length>0?this._fastUpdates=j(this._context.renderer,this._vvConvertOptions):this._fastUpdates={enabled:!1},!this._drivenProperties.size){const e=null!=this.symbolLayer.size?this.symbolLayer.size:s(1);if(e<0)throw new t("graphics3dlinesymbollayer:invalid-size","Symbol sizes may not be negative values");this._uniformSize=e}}getMaterialParameters(t){const r=i(this.symbolLayer,"material","color"),a=this._getCombinedOpacityAndColor(r),o=a[3],l={width:1,color:a,polygonOffset:!0,join:this.symbolLayer.join||"miter",cap:this.symbolLayer.cap||"butt",transparent:o<1||this.needsDrivenTransparentPass,slicePlaneEnabled:this._context.slicePlaneEnabled,isClosed:t,stipplePattern:this.symbolLayer.stipplePattern?O(this.symbolLayer.stipplePattern.map(n)):null,stippleOffColor:this.symbolLayer.stippleOffColor?e.toUnitRGBA(this.symbolLayer.stippleOffColor):null,stippleIntegerRepeats:!0};if(this._drivenProperties.size)this._fastUpdates.enabled&&this._fastUpdates.visualVariables.size&&(l.width=n(1));else{const e=null!=this.symbolLayer.size?this.symbolLayer.size:s(1);l.width=n(e)}return this._fastUpdates&&this._fastUpdates.visualVariables?{...l,...this._fastUpdates.materialParameters}:l}get lineMaterial(){return r(this._lineMaterial)&&(this._lineMaterial=new S(this.getMaterialParameters(!1)),this._context.stage.add(this._lineMaterial)),this._lineMaterial}get ringMaterial(){return r(this._ringMaterial)&&(this._ringMaterial=new S(this.getMaterialParameters(!0)),this._context.stage.add(this._ringMaterial)),this._ringMaterial}destroy(){super.destroy(),this._context.stage.remove(this._lineMaterial),this._lineMaterial=null,this._context.stage.remove(this._ringMaterial),this._ringMaterial=null}getDrivenSize(e){return this._drivenProperties.size&&e.size?n(u(e.size)):1}getSizeFeatureAttributeData(e){return this._fastUpdates.enabled&&this._fastUpdates.visualVariables.size?U(this._fastUpdates.visualVariables.size.field,e):null}getDrivenColor(e){const t=p(1,1,1,1);return this._drivenProperties.color&&e.color&&(t[0]=e.color[0],t[1]=e.color[1],t[2]=e.color[2],e.color.length>0&&(t[3]=e.color[3])),this._drivenProperties.opacity&&e.opacity&&(t[3]=e.opacity),t}getColorFeatureAttributeData(e){return this._fastUpdates.enabled&&this._fastUpdates.visualVariables.color?U(this._fastUpdates.visualVariables.color.field,e):null}getOpacityFeatureAttributeData(e){return this._fastUpdates.enabled&&this._fastUpdates.visualVariables.opacity?U(this._fastUpdates.visualVariables.opacity.field,e):null}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,V,this.symbolLayer.type))return null;const i=this.setGraphicElevationContext(t,new v);return this.ensureDrapedStatus("on-the-ground"===i.mode),this.draped?this._createAsOverlay(e,this._context.layer.uid):this._createAs3DShape(e,i,t.uid)}applyRendererDiff(e,t){for(const i in e.diff)switch(i){case"visualVariables":if(!z(this._fastUpdates,t,this._vvConvertOptions))return!1;a(this._lineMaterial)&&this._lineMaterial.setParameterValues(this._fastUpdates.materialParameters),a(this._ringMaterial)&&this._ringMaterial.setParameterValues(this._fastUpdates.materialParameters);break;default:return!1}return!0}layerOpacityChanged(){return a(this._lineMaterial)&&this.updateMaterialLayerOpacity(this._lineMaterial),a(this._ringMaterial)&&this.updateMaterialLayerOpacity(this._ringMaterial),!0}updateMaterialLayerOpacity(e){const t=e.params.color,r=i(this.symbolLayer,"material","color"),a=this._getCombinedOpacity(r),s=a<1||this.needsDrivenTransparentPass,n=[t[0],t[1],t[2],a];e.setParameterValues({color:n,transparent:s})}layerElevationInfoChanged(e,t,i){const r=this._elevationContext.mode,a=f(R.elevationModeChangeTypes,i,r);if(a!==_.UPDATE)return a;const s=b(r);return this.updateGraphics3DGraphicElevationInfo(e,t,(()=>s))}slicePlaneEnabledChanged(){return a(this._lineMaterial)&&this._lineMaterial.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled}),a(this._ringMaterial)&&this._ringMaterial.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled}),!0}physicalBasedRenderingChanged(){return!0}pixelRatioChanged(){return!0}_getGeometryAsPolygonOrPolyline(e){switch(e.type){case"extent":if(e instanceof w)return G.fromExtent(e);break;case"polygon":case"polyline":return e}return null}_createAs3DShape(e,t,i){const r=e.graphic,s=this._getGeometryAsPolygonOrPolyline(r.geometry),n="polygon"===s.type?s.rings:s.paths,l=new Array,p=new Array,y=new Array,u=h(),f=C(s,this._context.elevationProvider,this._context.renderCoordsHelper,t),_="polygon"===s.type?"rings":"paths";this._logGeometryCreationWarnings(f,n,_,"LineSymbol3DLayer");for(let h=0;h<f.lines.length;h++){const{position:t,mapPosition:i}=f.lines[h];if(a(this._context.clippingExtent)&&(c(u),m(u,i),!d(u,this._context.clippingExtent)))continue;const r=this._createGeometry(e,t,i,s.type);l.push(r),p.push("polygon"===s.type?this.ringMaterial:this.lineMaterial),y.push(o)}if(0===l.length)return null;const v=new L({geometries:l,materials:p,transformations:y,castShadow:!1,metadata:{layerUid:this._context.layer.uid,graphicUid:i}}),M=new P(this,v,l,null,null,g,t);return M.alignedSampledElevation=f.sampledElevation,M.needsElevationUpdates=b(t.mode),M}_createGeometry(e,t,i,r){const a="polygon"===r?1:0,s=this._fastUpdates.enabled&&this._fastUpdates.visualVariables.color,n=this._fastUpdates.enabled&&this._fastUpdates.visualVariables.size;return E({removeDuplicateStartEnd:a,uniformSize:this._uniformSize,attributeData:{position:t,mapPosition:i,size:n?null:this.getDrivenSize(e.renderingInfo),color:s?null:this.getDrivenColor(e.renderingInfo),sizeFeature:this.getSizeFeatureAttributeData(e.graphic),colorFeature:this.getColorFeatureAttributeData(e.graphic),opacityFeature:this.getOpacityFeatureAttributeData(e.graphic)}})}_createAsOverlay(e,t){const i=e.graphic,r=this._getGeometryAsPolygonOrPolyline(i.geometry),a="polygon"===r.type?r.rings:r.paths,s="polygon"===r.type?this.ringMaterial:this.lineMaterial;s.renderPriority=this._renderPriority;const n=new Array,o=h(),p=c(),u=D(r,this._context.overlaySR),g="polygon"===r.type?"rings":"paths";this._logGeometryCreationWarnings(u,a,g,"LineSymbol3DLayer");for(const h of u.lines){if(c(o),m(o,h.position),!d(o,this._context.clippingExtent))continue;y(p,o);const a=this._createGeometry(e,h.position,null,r.type),u=new A(a,s,t,i.uid);l(u.boundingSphere,.5*(o[0]+o[3]),.5*(o[1]+o[4]),0,.5*Math.sqrt((o[3]-o[0])*(o[3]-o[0])+(o[4]-o[1])*(o[4]-o[1]))),n.push(u)}return new M(this,n,p)}}R.elevationModeChangeTypes={definedChanged:_.RECREATE,staysOnTheGround:_.NONE,onTheGroundChanged:_.RECREATE};export default R;export{R as Graphics3DLineSymbolLayer};
