/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import"../../../../geometry.js";import{isSome as t}from"../../../../core/maybe.js";import{projectBuffer as i}from"../../../../geometry/projection.js";import{pathsToTriangulationInfo as o}from"../../../../geometry/support/triangulationUtils.js";import{applyPerVertexElevationAlignment as n}from"./elevationAlignmentUtils.js";import{DRAPED_Z as e}from"../../terrain/OverlayRenderer.js";import{Geometry as s}from"../../webgl-engine/lib/Geometry.js";import a from"../../../../geometry/Extent.js";import r from"../../../../geometry/Polygon.js";function p(i){const o=[["position",i.indices]],n=[["position",{size:3,data:i.attributeData.position,exclusive:!0}]];return t(i.attributeData.color)&&(n.push(["color",{size:4,data:i.attributeData.color,exclusive:!0}]),o.push(["color",new Uint32Array(i.indices.length)])),t(i.attributeData.uvMapSpace)&&(n.push(["uvMapSpace",{size:4,data:i.attributeData.uvMapSpace,exclusive:!0}]),o.push(["uvMapSpace",i.indices])),t(i.attributeData.boundingRect)&&(n.push(["boundingRect",{size:9,data:i.attributeData.boundingRect,exclusive:!0}]),o.push(["boundingRect",i.indices])),t(i.attributeData.mapPosition)&&(n.push(["mapPos",{size:3,data:i.attributeData.mapPosition,exclusive:!0}]),o.push(["mapPos",i.indices])),new s(n,o)}function u(i){const o=[["position",i.indices],["uv0",i.indices]],n=[["position",{size:3,data:i.attributeData.position,exclusive:!0}],["uv0",{size:2,data:i.attributeData.uv0,exclusive:!0}]];return t(i.attributeData.mapPosition)&&(n.push(["mapPos",{size:3,data:i.attributeData.mapPosition,exclusive:!0}]),o.push(["mapPos",i.indices])),new s(n,o)}function c(t){switch(t.type){case"extent":if(t instanceof a)return r.fromExtent(t);break;case"polygon":return t}return null}function l(t,i,e,s){const a=o(t.rings,t.hasZ,1),r=new Float64Array(a.position.length),p=n(a.position,t.spatialReference,0,r,0,a.position,0,a.position.length/3,i,e,s),u=null!=p;return{position:a.position,mapPosition:r,polygons:g(a.polygons,a.position,r),outlines:d(a.outlines,a.position,r),projectionSuccess:u,sampledElevation:p}}function m(t,n){const s=o(t.rings,!1,1),a=i(s.position,t.spatialReference,0,s.position,n,0,s.position.length/3);for(let i=2;i<s.position.length;i+=3)s.position[i]=e;return{position:s.position,polygons:g(s.polygons,s.position),outlines:d(s.outlines,s.position),projectionSuccess:a}}function d(t,i,o){const n=new Array;for(const{index:e,count:s}of t){if(s<=1)continue;const t=3*e,a=t+3*s;n.push({index:e,count:s,position:i.subarray(t,a),mapPosition:o?o.subarray(t,a):void 0})}return n}function g(t,i,o){const n=new Array;for(const{index:e,count:s,holeIndices:a,pathLengths:r}of t){if(s<=1)continue;const t=3*e,p=t+3*s,u=a.map((t=>t-e));n.push({index:e,count:s,holeIndices:u,pathLengths:r,position:i.subarray(t,p),mapPosition:o?o.subarray(t,p):void 0})}return n}export{p as createColorGeometry,u as createWaterGeometry,c as geometryAsPolygon,l as geometryToRenderInfo,m as geometryToRenderInfoDraped};
