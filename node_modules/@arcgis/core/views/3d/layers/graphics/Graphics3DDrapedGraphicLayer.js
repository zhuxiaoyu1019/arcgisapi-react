/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/maybe.js";import{s as t}from"../../../../chunks/vec3.js";import{c as i}from"../../../../chunks/vec3f64.js";import{create as r,empty as s,expandWithRect as o,center as a,set as n,toRect as d}from"../../../../geometry/support/aaBoundingBox.js";import{create as h}from"../../../../geometry/support/aaBoundingRect.js";import{demResolutionForBoundingBox as c}from"./graphicUtils.js";class l{constructor(e,t,i){this.graphics3DSymbolLayer=e,this.renderGeometries=t,this.boundingBox=i,this.type="draped",this.stage=null,this._visible=!1,this._addedToStage=!1,this._layerView=null,this.isElevationSource=!1}initialize(e,t,i){this.stage=e,this._layerView=i,this._overlayRenderer=this._layerView.view.basemapTerrain.overlayManager.renderer}setVisibility(e){if(null!=this.stage&&this._visible!==e){if(this._visible=e,e&&!this._addedToStage)return this._addedToStage=!0,void this._overlayRenderer.addGeometries(this.renderGeometries,this._layerView,1);if(e||this._addedToStage){for(const e of this.renderGeometries)e.instanceParameters.visible=this._visible;this._overlayRenderer.updateGeometries(this.renderGeometries,this._layerView,1)}}}destroy(){this.stage&&this._addedToStage&&this._overlayRenderer.removeGeometries(this.renderGeometries,this._layerView,4),this._addedToStage=!1,this._visible=!1,this.stage=null}getCenterObjectSpace(e=i()){return t(e,0,0,0)}getBoundingBoxObjectSpace(e=r()){return s(e)}addObjectState(e,t){0===e&&(this.renderGeometries.forEach((e=>{const i=e.addHighlight();t.addRenderGeometry(e,i,this)})),this._addedToStage&&this._overlayRenderer.updateHighlights(this.renderGeometries,this._layerView))}removeObjectState(e){this.renderGeometries.forEach((t=>{e.removeRenderGeometry(t)}))}removeRenderGeometryObjectState(e,t){e.removeHighlight(t),this._addedToStage&&this._overlayRenderer.updateHighlights(this.renderGeometries,this._layerView)}computeAttachmentOrigin(e){for(const t of this.renderGeometries)t.computeAttachmentOrigin(u)&&(e.draped.origin[0]+=u[0],e.draped.origin[1]+=u[1],e.draped.num++)}async getProjectedBoundingBox(t,i,r,n,d){s(d);for(let e=0;e<this.renderGeometries.length;e++){const i=this.renderGeometries[e];this._getRenderGeometryProjectedBoundingRect(i,t,m,r),o(d,m)}if(i){let t;a(d,u);const r=c(d,i);try{t=await i.service.queryElevation(u[0],u[1],n,r,"ground")}catch(h){}e(t)&&(d[2]=Math.min(d[2],t),d[5]=Math.max(d[5],t))}return d}_getRenderGeometryProjectedBoundingRect(e,t,i,r){if(this.boundingBox)n(g,this.boundingBox);else{const t=e.boundingSphere,i=t[3];g[0]=t[0]-i,g[1]=t[1]-i,g[2]=t[2]-i,g[3]=t[0]+i,g[4]=t[1]+i,g[5]=t[2]+i}return t(g,0,2),this.calculateRelativeScreenBounds&&r.push({location:a(g),screenSpaceBoundingRect:this.calculateRelativeScreenBounds()}),d(g,i)}}const m=h(),g=r(),u=i();export default l;
