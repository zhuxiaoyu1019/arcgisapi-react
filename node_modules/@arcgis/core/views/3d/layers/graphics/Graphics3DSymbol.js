/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{forEach as t}from"../../../../core/asyncUtils.js";import{isNone as e,isSome as s,get as r}from"../../../../core/maybe.js";import{onAbortOrThrow as o,throwIfAborted as a}from"../../../../core/promiseUtils.js";import i from"./Graphics3DGraphic.js";import{Graphics3DObject3DGraphicLayer as n}from"./Graphics3DObject3DGraphicLayer.js";import{make as y}from"./Graphics3DSymbolLayerFactory.js";import{Loadable as l}from"./Loadable.js";import{totalSymbolComplexities as h}from"./symbolComplexity.js";class c extends l{constructor(t,e,s){super(e.schedule),this._symbol=t,this._context=e,this._backgroundLayers=s,this._destroyed=!1,this.symbolLayers=[],this.referenced=0,this._extentPadding=0}set symbol(t){if(this._symbol=t,this.symbolLayers)for(let s=0;s<t.symbolLayers.length;s++){const r=this.symbolLayers[s];e(r)||(r.symbol=t,r.symbolLayer=t.symbolLayers.items[s])}}get symbol(){return this._symbol}async doLoad(e){let r=this._symbol.symbolLayers;this._extentPadding=0,this._backgroundLayers&&(r=this._backgroundLayers.concat(r));const i=r.length;for(;this.symbolLayers.length<r.length;)this.symbolLayers.push(null);this.symbolLayers.length=r.length;const n=[];for(let t=0;t<i;t++){const s=r.getItemAt(t);if(!1===s.enabled)continue;m.renderPriority=1-(1+t)/i,m.renderPriorityStep=1/i,m.ignoreDrivers=s._ignoreDrivers;const a=y(this.symbol,s,this._context,m);n.push(o(e,(()=>{this.symbolLayers[t]=null,a.destroy()}))),this.symbolLayers[t]=a}await t(this.symbolLayers,(async(t,e)=>{if(s(t))try{await t.load(),this._extentPadding+=Math.max(this._extentPadding,t.extentPadding)}catch{this.symbolLayers[e]=null}}));for(const t of n)null==t||t.remove();if(n.length=0,a(e),this.symbolLayers.length&&!this.symbolLayers.some((t=>!!t)))throw new Error}getSymbolLayerSize(t){const e=this.symbolLayers[t];return s(e)?e.getCachedSize():null}get extentPadding(){return this._extentPadding}createGraphics3DGraphic(t,e){const r=t.graphic,o=new Array(this.symbolLayers.length);for(let i=0;i<this.symbolLayers.length;i++){const e=this.symbolLayers[i];o[i]=s(e)?e.createGraphics3DGraphic(t):null}const a=this._context.arcade||this._context.featureExpressionInfoContext&&this._context.featureExpressionInfoContext.arcade&&this._context.featureExpressionInfoContext.arcade.modules||null;return new i(r,e||this,o,t.layer,a)}get complexity(){return h(this.symbolLayers.map((t=>r(t,"complexity"))))}globalPropertyChanged(t,e){const r=this.symbolLayers.length;for(let o=0;o<r;o++){const r=this.symbolLayers[o],a=t=>{const e=t._graphics[o];return e instanceof n?e:null};if(s(r)&&!r.globalPropertyChanged(t,e,a))return!1}return!0}applyRendererDiff(t,s){return 1===this.loadStatus&&this.symbolLayers.reduce(((r,o)=>r&&(e(o)||o.applyRendererDiff(t,s))),!0)}prepareSymbolPatch(t){if(2===this.loadStatus)return;if("partial"!==t.diff.type)return;const r=t.diff.diff;if(!r.symbolLayers||"partial"!==r.symbolLayers.type)return;const o=r.symbolLayers.diff;this.symbolLayers.forEach(((r,a)=>{if(e(r))return;const i=o[a];if(i){const e={diff:i,graphics3DGraphicPatches:[],symbolLayerStatePatches:[]};r.prepareSymbolLayerPatch(e),t.symbolStatePatches.push(...e.symbolLayerStatePatches),e.graphics3DGraphicPatches.length&&t.graphics3DGraphicPatches.push(((t,r)=>{const o=t._graphics[a];s(o)&&e.graphics3DGraphicPatches.forEach((t=>t(o,r)))}))}}))}updateGeometry(t,s){for(let r=0;r<this.symbolLayers.length;r++){const o=this.symbolLayers[r];if(e(o))continue;const a=t._graphics[r];if(e(a)||!o.updateGeometry(a,s))return!1}return!0}onRemoveGraphic(t){for(let r=0;r<this.symbolLayers.length;r++){const o=this.symbolLayers[r];if(e(o))continue;const a=t._graphics[r];s(a)&&o.onRemoveGraphic(a)}}getFastUpdateStatus(){let t=0,s=0,r=0;return this.symbolLayers.forEach((o=>{e(o)||(0===o.loadStatus?t++:o.isFastUpdatesEnabled()?r++:s++)})),{loading:t,slow:s,fast:r}}destroy(){if(this.destroyed)console.error("Graphics3DSymbol.destroy called when already destroyed!");else{this.abortLoad();for(const t of this.symbolLayers)s(t)&&t.destroy();this.symbolLayers.length=0,this._destroyed=!0}}get destroyed(){return this._destroyed}}const m={renderPriority:0,renderPriorityStep:1,ignoreDrivers:!1};export default c;
