/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../core/has.js";import{clamp as a,isPowerOfTwo as r}from"../../../../core/mathUtils.js";import{isSome as o,isNone as t}from"../../../../core/maybe.js";import{RenderTexture as s}from"../../webgl-engine/core/material/RenderTexture.js";import{PBRSchematicMRRValues as n}from"../../webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{defaultMaskAlphaCutoff as l}from"../../webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js";import{getEllipsoidMode as i}from"../../webgl-engine/core/shaderLibrary/util/EllipsoidMode.js";import{Texture as c}from"../../webgl-engine/lib/Texture.js";function u(e,a){const r=new Map,s=(e,a)=>{if(t(e))return-1;if(r.has(e.id)){const o=r.get(e.id);return o.usage|=a,o.id}const o=r.size;return r.set(e.id,{id:o,usage:a}),o},l=a.pbrMetallicRoughness,i=l&&l.baseColorFactor,c=a.emissiveFactor,u=null==a.normalTexture&&null==a.emissiveTexture&&null==a.occlusionTexture&&(!l||null==l.metallicRoughnessTexture&&1===l.roughnessFactor&&(1===l.metallicFactor||0===l.metallicFactor)),g=u?n[0]:l?l.metallicFactor:1,p=u?n[1]:l?l.roughnessFactor:1,h="mask"===a.alphaMode?33:1,f={baseColorFactor:i?[i[0],i[1],i[2],i[3]]:[1,1,1,1],baseColorTextureId:s(l&&l.baseColorTexture,h),metallicRoughnessTextureId:s(l&&l.metallicRoughnessTexture,2),metallicFactor:g,roughnessFactor:p},b={alphaMode:a.alphaMode,alphaCutoff:a.alphaCutoff,doubleSided:a.doubleSided,cullFace:"none"===a.cullFace?0:"back"===a.cullFace?2:"front"===a.cullFace?1:void 0,normalTextureId:s(a.normalTexture,4),emissiveTextureId:s(a.emissiveTexture,16),occlusionTextureId:s(a.occlusionTexture,8),emissiveFactor:c?[c[0],c[1],c[2]]:[0,0,0],metallicRoughness:f,wrapTextures:!1,hasParametersFromSource:u},x=[];return r.forEach((({usage:a},r)=>{const t=o(e)&&e[r]&&e[r].formats,s=t?m(t.map((({name:e,format:a})=>({name:e,encoding:d[a]})))):[];x.push({id:r,usage:a,encodings:s})})),{material:b,textures:x}}function m(e){return e.sort(((e,a)=>e.encoding-a.encoding))}const d={ktx2:1,basis:2,dds:4,png:8,jpg:16,"ktx-etc2":32},g={[c.KTX2_ENCODING]:2,[c.BASIS_ENCODING]:2,[c.DDS_ENCODING]:4,"image/png":8,"image/jpg":16,"image/jpeg":16,"image/ktx":32};function p(e){const r=e&&e.materialDefinitions?Object.keys(e.materialDefinitions)[0]:null,o=e&&e.textureDefinitions?Object.keys(e.textureDefinitions)[0]:null,t=r&&e.materialDefinitions[r],s=o&&e.textureDefinitions[o],n=h();if(null!=t){const e=t.params;e.diffuse&&(n.metallicRoughness.baseColorFactor=[e.diffuse[0],e.diffuse[1],e.diffuse[2],1]),null!=e.doubleSided&&(n.doubleSided=e.doubleSided,n.cullFace=e.doubleSided?0:2),"none"!==e.cullFace&&"front"!==e.cullFace&&"back"!==e.cullFace||(n.cullFace="none"===e.cullFace?0:"back"===e.cullFace?2:1),e.transparency&&(n.metallicRoughness.baseColorFactor[3]=a(1-e.transparency,0,1)),(e.useVertexColorAlpha||n.metallicRoughness.baseColorFactor[3]<1)&&(n.alphaMode="blend")}const l=[];if(null!=s){const e=0;!s.wrap||"repeat"!==s.wrap[0]&&"repeat"!==s.wrap[1]||(n.wrapTextures=!0);let a=1;"rgba"===s.channels&&(n.alphaMode="blend",a|=32);const r=s.images.length-1,o=s.images[r],t=e=>e&&e.split("/").pop(),i=Array.isArray(s.encoding)?m(s.encoding.map(((e,a)=>({name:t(o.href[a]),encoding:g[e]||0})))):[{name:t(o.href),encoding:g[s.encoding]||0}];l.push({id:e,usage:a,encodings:i}),n.metallicRoughness.baseColorTextureId=e}return{material:n,textures:l}}const h=()=>({alphaMode:"opaque",alphaCutoff:l,doubleSided:!0,cullFace:0,normalTextureId:-1,emissiveTextureId:-1,occlusionTextureId:-1,emissiveFactor:[0,0,0],metallicRoughness:{baseColorFactor:[.8,.8,.8,1],baseColorTextureId:-1,metallicRoughnessTextureId:-1,metallicFactor:0,roughnessFactor:.6},wrapTextures:!1,hasParametersFromSource:!0});function f(e,a,o,s){if(t(e)||null==e.data)return null;const n=e.data,l=!(n instanceof HTMLImageElement)||r(n.width)&&r(n.height),i=s.renderingContext.parameters.maxMaxAnisotropy,u=o&&!s.has(2)?1:i,m=l&&!e.downsampled&&u>1,d=o||!a.wrapTextures?b:x,g=I(e.encoding),p=1&e.usage?"opaque"===a.alphaMode?3:4:3;return new c(n,{mipmap:m,maxAnisotropy:u,encoding:g,wrap:d,components:p,noUnpackFlip:!0})}const b={s:33071,t:33071},x={s:10497,t:10497};function F(e,r,o,t,n,c){const u=c.rendererTextureUsage,m=e=>w(t,o,e&u),d=r.metallicRoughness.baseColorFactor,g=a(r.metallicRoughness.baseColorFactor[3],0,1);e.baseColor=[d[0],d[1],d[2],g],e.hasParametersFromSource=!!r.hasParametersFromSource,e.usePBR=c.usePBR,e.mrrFactors=[r.metallicRoughness.metallicFactor,r.metallicRoughness.roughnessFactor,r.hasParametersFromSource?.2:.5],e.emissiveFactor=r.emissiveFactor,e.isIntegratedMesh=c.isIntegratedMesh,e.alphaCutoff="mask"===r.alphaMode?r.alphaCutoff:l,e.alphaDiscardMode="opaque"===r.alphaMode?1:"mask"===r.alphaMode?2:3;const p=m(33);p&&(e.baseColorTexture=new s(n,p));const h=m(2);h&&(e.metallicRoughnessTexture=new s(n,h));const f=m(16);f&&(e.emissionTexture=new s(n,f));const b=m(8);b&&(e.occlusionTexture=new s(n,b));const x=m(4);x&&(e.normalTexture=new s(n,x)),e.commonMaterialParameters.slicePlaneEnabled=c.slicePlaneEnabled,e.commonMaterialParameters.doubleSided=r.doubleSided,e.commonMaterialParameters.cullFace=r.cullFace,e.ellipsoidMode=i(c.viewSpatialReference)}function T(a){const r=a.has(1),o=a.has(0),t=e("disable-feature:i3s-basis")?0:3;return 24|(r?4|t:0)|(o?t:0)}function C(e,a){return e.find((e=>0!=(e.encoding&a)))}function w(e,a,r){if(t(e)||0===r)return null;for(let t=0;t<e.length;t++){const s=e[t];if(o(s)&&0!=(s.usage&r))return a[t].id}return null}function I(e){switch(e){case 1:return c.KTX2_ENCODING;case 2:return c.BASIS_ENCODING;case 4:return c.DDS_ENCODING;case 8:return"image/png";case 16:return"image/jpeg";case 32:return"image/ktx";default:return""}}export{F as configureMaterial,f as createTexture,u as getMaterialAndTextures,p as getMaterialAndTexturesFromShared,T as getSupportedEncodings,C as selectEncoding};
