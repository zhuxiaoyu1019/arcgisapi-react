/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import r from"../../../../core/Evented.js";import s from"../../../../core/Logger.js";import{isSome as i}from"../../../../core/maybe.js";import{property as o}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as n}from"../../../../core/accessorSupport/decorators/subclass.js";import{w as a}from"../../../../chunks/mat4.js";import{c}from"../../../../chunks/mat4f64.js";import{m as l,g as p}from"../../../../chunks/vec3.js";import{c as h}from"../../../../chunks/vec3f64.js";import{empty as d,expand as m}from"../../../../geometry/support/aaBoundingRect.js";import{Intersector as f}from"../../webgl-engine/lib/Intersector.js";const u=d(),v=c(),y=h(),x=h(),E=h(),g=s.getLogger("esri.views.3d.layers.i3s.I3SElevationProvider");let j=class extends(r.EventedMixin(t)){constructor(e){super(e),this.tmpEvent={spatialReference:null,extent:u,context:"scene"}}initialize(){this.view=this.layerView.view,this.renderCoordsHelper=this.view.renderCoordsHelper,this.intersector=new f(this.view.state.viewingMode),this.intersector.options.store=0;const e=this.layerView.i3slayer.fullExtent;this.zmin=e.zmin,this.zmax=e.zmax,this.tmpEvent.context=this.intersectionHandler.isGround?"ground":"scene"}getElevation(e,t,r,s){if(y[0]=e,y[1]=t,y[2]=r,!this.renderCoordsHelper.toRenderCoords(y,s,y))return g.error("could not project point to compute elevation"),null;const i=this.layerView.elevationOffset,o=this.zmin+i,n=this.zmax+i;return this.renderCoordsHelper.setAltitude(x,n,y),this.renderCoordsHelper.setAltitude(E,o,y),this.intersector.reset(x,E),this.intersectionHandler.intersect(this.intersector,null,x,E),this.intersector.results.min.getIntersectionPoint(y)?this.renderCoordsHelper.getAltitude(y):null}layerChanged(){this.spatialReference&&(this.tmpEvent.extent=this.computeLayerExtent(),this.tmpEvent.spatialReference=this.spatialReference,this.emit("elevation-change",this.tmpEvent))}objectChanged(e){this.spatialReference&&(this.tmpEvent.extent=this.computeObjectExtent(e),this.tmpEvent.spatialReference=this.spatialReference,this.emit("elevation-change",this.tmpEvent))}computeObjectExtent(e){return d(u),this._expandExtent(e,u),u}computeLayerExtent(){d(u);for(const e of this.layerView.getVisibleNodes())this._expandExtent(e,u);return u}_expandExtent(e,t){const r=e.visibilityObb||e.serviceObbInRenderSR;if(i(r)){a(v,r.quaternion),v[12]=r.center[0],v[13]=r.center[1],v[14]=r.center[2];for(let e=0;e<8;++e)y[0]=1&e?r.halfSize[0]:-r.halfSize[0],y[1]=2&e?r.halfSize[1]:-r.halfSize[1],y[2]=4&e?r.halfSize[2]:-r.halfSize[2],l(y,y,v),this.renderCoordsHelper.fromRenderCoords(y,y,this.spatialReference),m(t,y)}else{const r=e.renderMbs[3],s=p(x,e.renderMbs);s[0]-=r,s[1]-=r,s[2]-=r;const i=p(E,e.renderMbs);i[0]+=r,i[1]+=r,i[2]+=r;for(let e=0;e<8;++e)y[0]=1&e?s[0]:i[0],y[1]=2&e?s[1]:i[1],y[2]=4&e?s[2]:i[2],this.renderCoordsHelper.fromRenderCoords(y,y,this.spatialReference),m(t,y)}}};e([o({constructOnly:!0})],j.prototype,"layerView",void 0),e([o({constructOnly:!0})],j.prototype,"intersectionHandler",void 0),e([o()],j.prototype,"view",void 0),e([o({readOnly:!0,aliasOf:"view.elevationProvider.spatialReference"})],j.prototype,"spatialReference",void 0),j=e([n("esri.views.3d.layers.i3s.I3SElevationProvider")],j);var b=j;export default b;
