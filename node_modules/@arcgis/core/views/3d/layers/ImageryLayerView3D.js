/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{debounce as t}from"../../../core/promiseUtils.js";import{whenOnce as a}from"../../../core/watchUtils.js";import"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import r from"./DynamicLayerView3D.js";import{ImageryLayerView as s}from"../../layers/ImageryLayerView.js";let o=class extends(s(r)){constructor(){super(...arguments),this.type="imagery-3d",this.redrawDebounced=t((async e=>{this.redraw(((e,t)=>this._redrawImage(e,t)),e)}),2e3)}initialize(){this.handles.add([a(this.view.basemapTerrain,"ready",(()=>this.initializeMaximumDataResolution())),this.layer.on("redraw",(()=>this.redrawDebounced()))]),this.updatingHandles.add(this.layer,"exportImageServiceParameters.version",(()=>{this.updatingHandles.addPromise(this.refreshDebounced())})),this.updatingHandles.add(this,"timeExtent",(()=>this.updatingHandles.addPromise(this.refreshDebounced())))}initializeMaximumDataResolution(){const e=this.view.basemapTerrain.spatialReference,t=this.layer.fullExtent;t&&e.equals(t.spatialReference)&&(this.maximumDataResolution={x:this.layer.pixelSizeX,y:this.layer.pixelSizeY})}getFetchOptions(){return{timeExtent:this.timeExtent}}async processResult(e,t,a){t.imageElement?e.image=t.imageElement:(e.image=document.createElement("canvas"),e.pixelData=t.pixelData,await this._redrawImage(e,a))}async _redrawImage(e,t){if(!(e.image instanceof HTMLCanvasElement&&e.pixelData))return Promise.reject();const a=e.image,i=a.getContext("2d"),r=await this.layer.applyRenderer(e.pixelData,{signal:t}),s=this.layer.applyFilter(r),o=s.pixelBlock;a.width=o.width,a.height=o.height;const n=i.createImageData(o.width,o.height);n.data.set(s.pixelBlock.getAsRGBA()),i.putImageData(n,0,0)}};o=e([i("esri.views.3d.layers.ImageryLayerView3D")],o);var n=o;export default n;
