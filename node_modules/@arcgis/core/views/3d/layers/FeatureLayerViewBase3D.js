/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Error.js";import{isSome as r}from"../../../core/maybe.js";import{init as s,whenFalse as i}from"../../../core/watchUtils.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{hydrateGeometry as l}from"../../../layers/graphics/hydratedFeatures.js";import{FeatureTileController3D as u}from"../../../layers/graphics/controllers/FeatureTileController3D.js";import{FeatureLikeLayerView3D as n}from"./FeatureLikeLayerView3D.js";import{LayerView3D as c}from"./LayerView3D.js";import{FeatureTileFetcher3DLayerViewContext as p}from"./support/FeatureTileFetcher3DLayerViewContext.js";import{EventedSet as h}from"../support/EventedSet.js";import{updatingProgress as m}from"../support/updatingProperties.js";import{FeatureLayerView as d}from"../../layers/FeatureLayerView.js";import y from"../../layers/LayerView.js";import{RefreshableLayerView as g}from"../../layers/RefreshableLayerView.js";let f=class extends(g(n(d(c(y))))){constructor(e){super(e),this._controllerTotal=0,this._graphicsCoreTotal=0,this.suspendResumeExtentMode="data"}initialize(){this.updatingHandles.add(this,"view.floors",(()=>this.graphics3d.filterVisibility.filterChanged()))}destroy(){this.fetcherContext&&(this.fetcherContext.destroy(),this.fetcherContext=null)}get maximumNumberOfFeatures(){var e,t;return null!=(e=null==(t=this.controller)?void 0:t.maximumNumberOfFeatures)?e:this._get("maximumNumberOfFeatures")}set maximumNumberOfFeatures(e){this._set("maximumNumberOfFeatures",e),this.controller&&(this.controller.maximumNumberOfFeatures=e)}get maximumNumberOfFeaturesExceeded(){return!!this.controller&&!(this.suspended||!this.controller.maximumNumberOfFeaturesExceeded)}get updatingProgressValue(){var e,t,r;let s=0;if(null!=(e=this.controller)&&e.updating){const e=this.controller.updatingRemaining,t=Math.max(this.controller.updatingTotal,this._controllerTotal);t>0&&(s=(t-e)/t,this._controllerTotal=t)}let i=0;if(null!=(t=this.graphics3d)&&null!=(r=t.graphicsCore)&&r.updating){const e=this.graphics3d.graphicsCore.updatingRemaining,t=Math.max(e,this._graphicsCoreTotal);t>0&&(i=(t-e)/t,this._graphicsCoreTotal=t)}return.5*(s+i)}get updatePolicy(){if(!this.controller)return 0;switch(this.controller.mode){case"snapshot":{const e=F[this.layer.geometryType];return null==e||this.controller.serviceDataCount>e?0:1}case"tiles":return 0}}get hasZ(){const e=this.layer,t=e.capabilities&&e.capabilities.data;return!(!t||!t.supportsZ)&&("returnZ"in e&&null!=e.returnZ?e.returnZ:t.supportsZ)}get hasM(){const e=this.layer,t=e.capabilities&&e.capabilities.data;return!(!t||!t.supportsM)&&("returnM"in e&&null!=e.returnM&&e.returnM)}async fetchPopupFeatures(e,t){const r=this.validateFetchPopupFeatures(t);return r?Promise.reject(r):this.fetchClientPopupFeatures(t)}setVisibility(e,t){this.graphics3d&&this.graphics3d.graphicsCore.setObjectIdVisibility(e,t)}createQuery(){return super.createQuery()}queryFeatures(e,t){const r=()=>super.queryFeatures(e,t);return"mesh"===this.layer.geometryType?this._queryFeaturesMesh(this._ensureQuery(e),r):r()}beforeSetController(e){e.maximumNumberOfFeatures=this.maximumNumberOfFeatures}createController(){this.fetcherContext=new p({layerView:this,returnZ:this.hasZ,returnM:this.hasM});const e=new u({layerView:this,context:this.fetcherContext,graphics:new h,extent:this.clippingExtent});return this.updatingHandles.add(e,"serviceDataExtent",(e=>{this.graphics3d&&(this.graphics3d.dataExtent=e)}),2),this.handles.add(s(this,"suspended",(t=>{t?e.suspend():e.resume()}),!0)),this.updatingHandles.add(this.graphics3d.graphicsCore,"displayFeatureLimit",(()=>this.updateDisplayFeatureLimit(e)),2),this.handles.add([this.view.resourceController.memoryController.events.on("quality-changed",(()=>this.updateDisplayFeatureLimit())),i(this,"updating",(()=>{this._controllerTotal=0,this._graphicsCoreTotal=0,this.notifyChange("updatingProgressValue")}))]),e}async doRefresh(){!this.suspended&&this.controller&&this.controller.refetch()}getUsedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return(e?e.usedMemory:0)+(this.controller?this.controller.memoryForUnusedFeatures:0)}getUnloadedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return(e?e.unprocessedMemoryEstimate:0)+(this.controller?this.controller.expectedFeatureDiff*e.usedMemoryPerGraphic:0)}ignoresMemoryFactor(){return this.controller&&this.controller.hasMaximumNumberOfFeaturesOverride}updateDisplayFeatureLimit(e=this.controller){if(!e||!this.graphics3d||!this.graphics3d.graphicsCore)return;const t=this.graphics3d.graphicsCore.displayFeatureLimit,r=this.view.resourceController.memoryController.memoryFactor;if(1===r)e.displayFeatureLimit=t;else{const s=Math.ceil(t.maximumNumberOfFeatures*r),i=Math.ceil(t.maximumTotalNumberOfFeatures*r),o=Math.ceil(t.minimumTotalNumberOfFeatures*r);e.displayFeatureLimit={...t,maximumNumberOfFeatures:s,maximumTotalNumberOfFeatures:i,minimumTotalNumberOfFeatures:o}}}async _queryFeaturesMesh(e,t){await this._validateQueryFeaturesMesh(e);const r=await t();if(e&&e.outStatistics)return r;const s=this.layer.objectIdField,i=this.graphics3d.graphicsCore.graphics3DGraphicsByObjectID,o=[];for(const a of r.features)if(a.geometry){const e=i.get(a.attributes[s]);e&&(a.geometry=l(e.graphic.geometry),o.push(a))}else o.push(a);return r.features=o,r}async _validateQueryFeaturesMesh(e){if(!e)return;const s=e=>{throw new t("feature-layer-view:unsupported-query",`Queries on Mesh feature collection layers do not support '${e}'`)},i=["quantizationParameters","geometryPrecision","maxAllowableOffset"];for(const t of i)null!=e[t]&&s(t);"returnM"in e&&e.returnM&&s("returnM"),"returnCentroid"in e&&e.returnCentroid&&s("returnCentroid"),r(e.outSpatialReference)&&!e.outSpatialReference.equals(this.view.spatialReference)&&s("outSpatialReference")}get performanceInfo(){const e=this.controller&&this.controller.displayFeatureLimit,t=r(e)&&e.averageSymbolComplexity,s=r(t)?`f:${t.primitivesPerFeature},v:${t.primitivesPerCoordinate}`:"n/a",i={...this._getResourceInfo(),storedFeatures:0,totalVertices:0,partial:this.maximumNumberOfFeaturesExceeded,mode:this.controller?this.controller.mode:"n/a",symbolComplexity:s,nodes:this.controller?this.controller.tileDescriptors.length:0};if(this.controller&&i.displayedNumberOfFeatures){const e=this.controller.debug;i.storedFeatures=e.storedFeatures,i.totalVertices=e.totalVertices}return i}get test(){return{updatePolicy:this.updatePolicy,controller:this.controller}}};e([o()],f.prototype,"layer",void 0),e([o()],f.prototype,"controller",void 0),e([o()],f.prototype,"maximumNumberOfFeatures",null),e([o()],f.prototype,"maximumNumberOfFeaturesExceeded",null),e([o(m)],f.prototype,"updatingProgress",void 0),e([o({readOnly:!0,dependsOn:["controller.updatingRemaining","controller.updatingTotal","graphics3d.graphicsCore.updatingRemaining"]})],f.prototype,"updatingProgressValue",null),e([o({readOnly:!0})],f.prototype,"updatePolicy",null),e([o({readOnly:!0})],f.prototype,"hasZ",null),e([o({readOnly:!0})],f.prototype,"hasM",null),e([o()],f.prototype,"suspendResumeExtentMode",void 0),f=e([a("esri.views.3d.layers.FeatureLayerViewBase3D")],f);const F={point:5e3,polygon:500,polyline:1e3};var x=f;export default x;
