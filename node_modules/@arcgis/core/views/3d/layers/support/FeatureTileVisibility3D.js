/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{acosClamped as e}from"../../../../core/mathUtils.js";import t from"../../../../core/ObjectPool.js";import{f as i,a as s,b as r,o as n,d as o}from"../../../../chunks/vec3.js";import{c as a}from"../../../../chunks/vec3f64.js";import{getReferenceEllipsoid as u}from"../../../../geometry/projectionEllipsoid.js";import{projectVector as l,fromPoints as d,normal as c,create as h}from"../../../../geometry/support/plane.js";import{wrap as m}from"../../../../geometry/support/ray.js";import{FeatureTileDescriptor3D as p}from"./FeatureTileDescriptor3D.js";import{Frustum as f}from"../../state/Frustum.js";import{FrustumExtentIntersection as g}from"../../support/FrustumExtentIntersection.js";class F{constructor(e){this.renderCoordsHelper=e,this.surfaceElevation=0,this.cache=new Map,this.frustum=new f(e),this.extendedFrustum=new f(e),this.intersector=new g({renderCoordsHelper:e}),this.renderCoordsHelper=e}begin(e,t){this.surfaceElevation=t,this.aboveGround=this.renderCoordsHelper.getAltitude(e.eye)>t,this.frustum.update(e),this.shortenFrustumFarPlane(this.frustum),this.updateExtendedFrustum(e)}end(){this.cache.clear()}calculate(e){if(this.allTilesInvisible)return 0;const t=1===this.renderCoordsHelper.viewingMode&&e.lij[0]>=b&&e.lij[0]<v,i=this.getOrCalculateSingleTileVisibility(e,!t);return 0!==i&&t?this.calculateAggregatedChildrenVisibility(e):i}shortenFrustumFarPlane(e){const t=f.nearFarLineIndices,n=e.mutablePoints;for(const o of t){const[e,t]=o,a=n[e],u=n[t];i(w,u,a),s(w,w,P),r(n[t],a,w)}e.updatePoints(n)}calculateAggregatedChildrenVisibility(e){let t=0;const i=this.cache.get(e.id);if(null!=i)return i;const s=A.acquire();e.getChildren(s);for(const r of s){const e=this.calculate(r);if(0!==e&&(t=e,2===e))break}return A.release(s),this.cache.set(e.id,t),t}getOrCalculateSingleTileVisibility(e,t){const i=this.cache.get(e.id);if(null!=i)return i;const s=this.calculateSingleTileVisibility(e);return t&&this.cache.set(e.id,s),s}calculateSingleTileVisibility(e){if(!this.aboveGround&&1===this.renderCoordsHelper.viewingMode&&e.lij[0]<x){return 0===this.calculateSingleTileVisibilitySided(e,!1)?this.calculateSingleTileVisibilitySided(e,!0):void 0}return this.calculateSingleTileVisibilitySided(e,this.aboveGround)}calculateSingleTileVisibilitySided(e,t){this.intersector.update(e.extent,e.tilingScheme.spatialReference,this.surfaceElevation,t);const i=u(e.tilingScheme.spatialReference).radius;return this.intersector.isVisibleInFrustum(this.extendedFrustum,i)?this.intersector.isVisibleInFrustum(this.frustum,i,!0)?2:1:0}updateExtendedFrustum(t){this.extendedFrustum.update(t),this.shortenFrustumFarPlane(this.extendedFrustum);const i=this.renderCoordsHelper.worldUpAtPosition(t.eye,w);this.aboveGround||n(i,i);const r=e(-o(i,t.viewForward));if(this.allTilesInvisible=r>(Math.PI+t.fovY)/2,this.allTilesInvisible)return;if(this.hasExtendedFrustum=r>t.fovY/2,!this.hasExtendedFrustum)return;const a=this.extendedFrustumParameters(),u=this.extendedFrustum.mutablePoints;for(let e=0;e<4;e++){const t=a.pointIndices[e],i=u[t],r=this.renderCoordsHelper.getAltitude(i);if(a.needsAltitudeAdjustment(r)){switch(this.renderCoordsHelper.worldUpAtPosition(i,w),t){case 4:case 7:case 0:case 3:l(this.extendedFrustum.planes[0],w,w);break;case 5:case 6:case 1:case 2:l(this.extendedFrustum.planes[1],w,w)}s(w,w,a.direction),this.renderCoordsHelper.intersectInfiniteManifold(m(i,w),a.zWithMargin,i)}}if(this.extendedFrustum.updatePoints(u),d(u[0],u[1],u[2],S),d(u[1],u[2],u[3],y),o(c(S),c(y))<0){const e=this.extendedFrustum.mutablePoints;this.aboveGround?[e[0],e[1]]=[e[1],e[0]]:[e[3],e[2]]=[e[2],e[3]],this.extendedFrustum.updatePoints(e)}}extendedFrustumParameters(){return this.aboveGround?this.extendedFrustumParametersAboveSurface():this.extendedFrustumParametersBelowSurface()}extendedFrustumParametersAboveSurface(){const e=this.surfaceElevation-j;return{zWithMargin:e,pointIndices:f.planePointIndices.bottom,direction:-1,needsAltitudeAdjustment:t=>t>e}}extendedFrustumParametersBelowSurface(){const e=this.surfaceElevation+j;return{zWithMargin:e,pointIndices:f.planePointIndices.top,direction:1,needsAltitudeAdjustment:t=>t<e}}}const b=2,v=6,x=12,P=.95,j=1,w=a(),S=h(),y=h(),A=new t(Array,(e=>{4!==e.length&&(e[0]=new p,e[1]=new p,e[2]=new p,e[3]=new p)}),(e=>{e[0].release(),e[1].release(),e[2].release(),e[3].release()}));export{F as FeatureTileVisibility3D};
