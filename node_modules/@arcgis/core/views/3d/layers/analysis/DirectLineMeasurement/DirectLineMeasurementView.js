/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import"../../../../../intl.js";import t from"../../../../../core/Accessor.js";import i from"../../../../../core/Handles.js";import{nextHighestPowerOfTen as s,sign as n,deg2rad as r}from"../../../../../core/mathUtils.js";import{isSome as a,isNone as o,destroyMaybe as l}from"../../../../../core/maybe.js";import{formatDecimal as h,formatDMS as c,formatImperialLength as d,formatImperialVerticalLength as u,formatMetricLength as m,formatMetricVerticalLength as g}from"../../../../../core/quantityFormatUtils.js";import{createRenderScreenPointArray3 as p,createRenderScreenPointArray as _}from"../../../../../core/screenUtils.js";import{preferredImperialLengthUnit as v,convertUnit as b}from"../../../../../core/unitUtils.js";import{whenOnce as L}from"../../../../../core/watchUtils.js";import{property as w}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as y}from"../../../../../core/accessorSupport/decorators/subclass.js";import{autorun as S}from"../../../../../core/accessorSupport/trackingUtils.js";import{h as f}from"../../../../../chunks/vec2.js";import{a as z,b as V}from"../../../../../chunks/vec3.js";import{c as E}from"../../../../../chunks/vec3f64.js";import{f as j}from"../../../../../chunks/vec4f32.js";import{getReferenceEllipsoid as P}from"../../../../../geometry/projectionEllipsoid.js";import{LabelVisualElement as D,mirrorPosition as A}from"../../../interactive/visualElements/LabelVisualElement.js";import{LineVisualElement as M}from"../../../interactive/visualElements/LineVisualElement.js";import{MeasurementArrowVisualElement as O}from"../../../interactive/visualElements/MeasurementArrowVisualElement.js";import{RightAngleQuadVisualElement as C}from"../../../interactive/visualElements/RightAngleQuadVisualElement.js";import{GeodesicSegment as x,EuclideanSegment as G}from"../../../interactive/visualElements/support/Segment.js";import{screenSpaceTangent as H}from"../support/viewUtils.js";import{createStipplePatternSimple as k}from"../../../webgl-engine/materials/lineStippleUtils.js";import{onLocaleChange as R}from"../../../../../intl/locale.js";import{fetchMessageBundle as T}from"../../../../../intl/messages.js";let U=class extends t{constructor(e){super(e),this._params={...Q},this._handles=new i,this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=E(),this._endPosition=E(),this._cornerPosition=E(),this._startPositionAtSeaLevel=E(),this._endPositionAtSeaLevel=E(),this._state=0,this._segmentLabelDisplayedMeasurement=1,this._triangleOrientationOverride=null,this.messages=null,this.viewMode=0,this.visualizedMeasurement=0,this.actualVisualizedMeasurement=1,this.visualElementOrientation=0,this.triangleCollapseRatioThreshold=.03}get _geodesicDistanceExceeded(){var e;const t=this.layerView.result;return a(t)&&(null==(e=t.horizontalDistance)?void 0:e.value)>this.layer.geodesicDistanceThreshold}get ready(){return 1===this._state}get visible(){return this.layerView.visible&&!this.layerView.suspended}get allowVisualElementsOrientationChange(){return o(this._triangleOrientationOverride)}set allowVisualElementsOrientationChange(e){o(this._triangleOrientationOverride)!==e&&(o(this._triangleOrientationOverride)?this._triangleOrientationOverride=this._getActualVisualElementsOrientation():this._triangleOrientationOverride=null)}get labels(){return 2===this.actualVisualizedMeasurement?{direct:this._horizontalLabel,horizontal:this._segmentLabel,vertical:this._verticalLabel}:{direct:this._segmentLabel,horizontal:this._horizontalLabel,vertical:this._verticalLabel}}get testData(){return{labels:this.labels,stripeLength:this._segmentVisualElement.stripeLength}}initialize(){this._handles.add(L(this.view,"ready",(()=>this._initialize()),!0))}_initialize(){switch(this._state){case 1:throw new Error("invalid state");case 2:return}const e=this._params,t={attached:!0,view:this.view};this._segmentVisualElement=new O({...t,geometry:null,renderOccluded:4}),this._triangleVisualElement=new M({...t,width:e.triangleLineWidth,color:e.triangleColor,renderOccluded:4}),this._rightAngleQuad=new C({...t,color:W,renderOccluded:4});const i={...t,polygonOffset:!0,stippleIntegerRepeats:!1,renderOccluded:4};this._projectedGeodesicLine=new M({...i,width:e.geodesicProjectionLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:k(e.guideStippleLengthPixels)}),this._geodesicStartHint=new M({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:k(e.guideStippleLengthPixels)}),this._geodesicEndHint=new M({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:k(e.guideStippleLengthPixels)}),this._segmentLabel=new D({...t,fontSize:e.direcLabelFontSize}),this._verticalLabel=new D({...t,fontSize:e.verticalLabelFontSize}),this._horizontalLabel=new D({...t,fontSize:e.horizontalLabelFontSize}),this._handles.add([S((()=>this._updateGeometryAndViewMode())),S((()=>this._updateVisualElementVisibility())),S((()=>this._updateLabelText())),S((()=>this._updateLabelVisibility())),S((()=>this._updateSegmentStripeLength())),R((async()=>this._updateMessageBundle()))]),this._state=1,this._updateMessageBundle()}destroy(){2!==this._state&&(this._handles=l(this._handles),this._segmentVisualElement=l(this._segmentVisualElement),this._triangleVisualElement=l(this._triangleVisualElement),this._rightAngleQuad=l(this._rightAngleQuad),this._projectedGeodesicLine=l(this._projectedGeodesicLine),this._geodesicStartHint=l(this._geodesicStartHint),this._geodesicEndHint=l(this._geodesicEndHint),this._segmentLabel=l(this._segmentLabel),this._verticalLabel=l(this._verticalLabel),this._horizontalLabel=l(this._horizontalLabel),this.set("view",null),this._state=2)}async whenReady(){await L(this,"ready")}async whenMessages(){await this.whenReady(),await L(this,"messages")}_updateVisualElementVisibility(){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,this.visible)switch(this.viewMode){case 0:break;case 1:this._segmentVisualElement.visible=!0;break;case 2:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case 3:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode(){const e=this.view.renderCoordsHelper,{startPoint:t,endPoint:i}=this.layer;if(o(t)||o(i)||t.equals(i)){this.viewMode=0;const e=this.visualizedMeasurement,t=0===e;return void(this.actualVisualizedMeasurement=t?1:e)}e.toRenderCoords(t,this._startPosition),e.toRenderCoords(i,this._endPosition);const s=this._getActualVisualElementsOrientation(),n=this._updateActualVisualizedMeasurement();this.viewMode=this._computeViewMode(n);let r=this._startPosition,a=this._endPosition;const l=1===s?1:-1,h=l*(e.getAltitude(a)-e.getAltitude(r));h<0&&(r=this._endPosition,a=this._startPosition);const c=2===n?new x(this._startPosition,this._endPosition,e.spatialReference):new G(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=c,this._updateSegmentStripeLength(),this._segmentLabelDisplayedMeasurement=n,this.viewMode){case 1:this._updateSegment(c,s);break;case 2:this._updateSegmentAndTriangle(c,s,r,a,l,h);break;case 3:this._updateSegmentAndProjection(s)}}_updateSegment(e,t){this._segmentLabel.anchor=1===t?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle(e,t,i,s,n,r){const a=this.view,o=a.renderCoordsHelper,l=a.state.camera,h=this._cornerPosition;o.worldUpAtPosition(i,h),z(h,h,n*Math.abs(r)),V(h,h,i),this._triangleVisualElement.geometry=[[[i[0],i[1],i[2]],[h[0],h[1],h[2]],[s[0],s[1],s[2]]]],this._rightAngleQuad.geometry={previous:i,center:h,next:s};const c=new G(i,h),d=new G(h,s),u=F(i,s,h,t,l);this._segmentLabel.anchor=u.segment,this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:c,sampleLocation:"center"},this._verticalLabel.anchor=u.vertical,this._horizontalLabel.geometry={type:"segment",segment:d,sampleLocation:"center"},this._horizontalLabel.anchor=u.horizontal}_updateSegmentAndProjection(e){const t=this.view.renderCoordsHelper;t.setAltitude(this._startPositionAtSeaLevel,0,this._startPosition),t.setAltitude(this._endPositionAtSeaLevel,0,this._endPosition);const i=new x(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,t.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(i),this._geodesicStartHint.setGeometryFromSegment(new G(this._startPositionAtSeaLevel,this._startPosition)),this._geodesicEndHint.setGeometryFromSegment(new G(this._endPositionAtSeaLevel,this._endPosition)),this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._segmentLabel.anchor=1===e?"top":"bottom"}_updateLabelText(){if(1!==this._state)return;const e=this._segmentLabel,t=this._horizontalLabel,i=this._verticalLabel,s=this.messages,n=this.layerView.result;if(o(n)||o(s))return e.text=null,t.text=null,void(i.text=null);const r=this._getLabelsText(s,n),a=1===this._segmentLabelDisplayedMeasurement;e.text=a?r.euclideanDistance:r.geodesicDistance,t.text=r.horizontalDistance,i.text=r.verticalDistance,this.notifyChange("labels")}_updateLabelVisibility(){if(1!==this._state)return;const e=this._segmentLabel,t=this._horizontalLabel,i=this._verticalLabel;if(e.visible=!1,t.visible=!1,i.visible=!1,this.visible)switch(this.viewMode){case 1:e.visible=!0;break;case 2:e.visible=!0,t.visible=!0,i.visible=!0;break;case 3:e.visible=!0}}_getLabelsText(e,{directDistance:t,horizontalDistance:i,verticalDistance:s,geodesicDistance:n,geodesicAngle:r}){const a=this.layerView.unit,o=e=>({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:"",...e});switch(a){case"metric":return o({euclideanDistance:t&&m(e,t),geodesicDistance:n&&m(e,n),horizontalDistance:i&&m(e,i),verticalDistance:s&&g(e,s)});case"imperial":return o({euclideanDistance:t&&d(e,t),geodesicDistance:n&&d(e,n),horizontalDistance:i&&d(e,i),verticalDistance:s&&u(e,s)});case"degrees":{const t=r&&h(e,r,"degrees");return o({euclideanDistance:t,geodesicDistance:t,horizontalDistance:t})}case"degrees-minutes-seconds":return o({horizontalDistance:r&&c(r)});default:return o({euclideanDistance:t&&h(e,t,a),geodesicDistance:n&&h(e,n,a),horizontalDistance:i&&h(e,i,a),verticalDistance:s&&h(e,s,a)})}}_updateSegmentStripeLength(){const e=this._measurementArrowStripeLength,t=this._segmentVisualElement;a(e)?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}_computeViewMode(e){if(2===e){if(!this._geodesicDistanceExceeded)return 1;if(this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition))return 3}const t=this.layerView.result;if(o(t))return 1;const{verticalDistance:i,horizontalDistance:s}=t,n=i.value,r=s.value;return Math.min(n/r,r/n)<this.triangleCollapseRatioThreshold?1:2}_getActualVisualElementsOrientation(){if(a(this._triangleOrientationOverride))return this._triangleOrientationOverride;const e=this.visualElementOrientation;return 0===e?this.view.state.camera.aboveGround?1:2:e}_updateActualVisualizedMeasurement(){if(0===this.visualizedMeasurement){this.actualVisualizedMeasurement=1;const e=this.layerView.unit;"degrees"!==e&&"degrees-minutes-seconds"!==e||(this.actualVisualizedMeasurement=2),this._geodesicDistanceExceeded&&(this.actualVisualizedMeasurement=2)}else this.actualVisualizedMeasurement=this.visualizedMeasurement;return this.actualVisualizedMeasurement}_requiresGeodesicGuideAt(e){const t=this.view;if(!t.state)return!1;const i=t.state.camera,s=t.renderCoordsHelper,n=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/n>=10}get _measurementArrowStripeLength(){const e=this.view,{result:t,unit:i}=this.layerView;let n=null;if(a(t)){const e=t.directDistance;switch(i){case"metric":n=e&&e.toUnit("meters");break;case"imperial":n=e&&e.toUnit(v(e.value,e.unit));break;case"degrees":case"degrees-minutes-seconds":{const e=t.geodesicAngle;n=e&&e.toUnit("degrees");break}default:n=e&&e.toUnit(i)}}if(n){let t=1;return t=s(n.value/30),t*="degrees"===n.unit?P(e.spatialReference).metersPerDegree:b(1,n.unit,"meters"),t}return null}_updateMessageBundle(){T("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._updateLabelText()}))}};function F(e,t,i,s,r){const a=B,o=I;r.projectToRenderScreen(i,a),r.projectToRenderScreen(t,o);const l={segment:"bottom",horizontal:"top",vertical:a[0]<o[0]?"left":"right"};{const s=J,a=K;if(H(e,i,s,r),H(e,t,a,r),f(s,a)>=q){const e=n(s[1])===n(a[1]);l.segment=e?A(l.vertical):l.vertical}else{const e=N;H(i,t,e,r),f(e,a)>=q&&(l.segment=n(e[0])===n(a[0])?A(l.horizontal):l.horizontal)}}if(2===s){const e=e=>"top"===e?"bottom":"top";l.segment=e(l.segment),l.horizontal=e(l.horizontal),l.vertical=e(l.vertical)}return l}e([w()],U.prototype,"_state",void 0),e([w()],U.prototype,"_segmentLabelDisplayedMeasurement",void 0),e([w()],U.prototype,"_triangleOrientationOverride",void 0),e([w()],U.prototype,"_geodesicDistanceExceeded",null),e([w()],U.prototype,"messages",void 0),e([w()],U.prototype,"view",void 0),e([w()],U.prototype,"layer",void 0),e([w()],U.prototype,"layerView",void 0),e([w({readOnly:!0})],U.prototype,"ready",null),e([w({readOnly:!0})],U.prototype,"visible",null),e([w()],U.prototype,"viewMode",void 0),e([w()],U.prototype,"visualizedMeasurement",void 0),e([w()],U.prototype,"actualVisualizedMeasurement",void 0),e([w()],U.prototype,"visualElementOrientation",void 0),e([w()],U.prototype,"triangleCollapseRatioThreshold",void 0),e([w()],U.prototype,"allowVisualElementsOrientationChange",null),e([w()],U.prototype,"labels",null),e([w()],U.prototype,"testData",null),e([w()],U.prototype,"_measurementArrowStripeLength",null),U=e([y("esri.views.3d.layers.DirectLineMeasurement.DirectLineMeasurementView")],U);const W=j(1,.5,0,.75),Q={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:W,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:W,guideLineWidth:2,guideLineColor:W,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12},q=Math.cos(r(12)),B=p(),I=p(),J=_(),K=_(),N=_();export{U as DirectLineMeasurementView};
