/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import"../../../../../geometry.js";import t from"../../../../../core/Evented.js";import i from"../../../../../core/Handles.js";import{isSome as r}from"../../../../../core/maybe.js";import{init as o}from"../../../../../core/watchUtils.js";import{property as s}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as n}from"../../../../../core/accessorSupport/decorators/subclass.js";import{createCoordinateHelper as m}from"../../../../interactive/coordinateHelper.js";import{EditGeometry as a,Component as h}from"../../../../interactive/editGeometry/EditGeometry.js";export{Component,Edge,EditGeometry,Vertex}from"../../../../interactive/editGeometry/EditGeometry.js";import{AppendVertex as l}from"../../../../interactive/editGeometry/operations/AppendVertex.js";import{SetVertexPosition as c}from"../../../../interactive/editGeometry/operations/SetVertexPosition.js";import{CloseComponent as d}from"../../../../interactive/editGeometry/operations/CloseComponent.js";import p from"../../../../../geometry/Point.js";let y=class extends t.EventedAccessor{constructor(e={}){super(e),this._handles=new i,this._version=0,this._internalGeometryChange=!1}set areaMeasurement(e){this._set("areaMeasurement",e),r(e)&&r(this.view)&&this._initialize(e,this.view)}set view(e){this._set("view",e),r(e)&&r(this.areaMeasurement)&&this._initialize(this.areaMeasurement,e)}get initialized(){return r(this.areaMeasurement)&&r(this.view)}get version(){return this._version}get isValidPolygon(){return this.initialized&&this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}_initialize(e,t){this._handles.removeAll(),this._handles.add(o(e,"geometry",(()=>this._updateEditGeometryFromModelGeometry(e,t)),!0)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,t){this._version++,this._internalGeometryChange||(this._handles.remove("EditGeometry"),this._editGeometry=r(e.geometry)?a.fromGeometry(e.geometry,t.viewingMode):new a(m(!0,!1,t.spatialReference,t.viewingMode)),this._makeDirty(!0),this.emit("change",{type:"change"}),this._handles.add(this._editGeometry.on("change",(t=>{this._makeDirty(null!=t.addedVertices||null!=t.removedVertices),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.toPolygon():null,this._internalGeometryChange=!1})),"EditGeometry"))}get vertices(){const e=[];return this.forEachVertex((t=>{e.push(t)})),e}get numVertices(){return this.initialized&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.initialized&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(r(e))return this._editGeometry.coordinateHelper.createPoint(e.pos)}return null}getVertex(e){if(!this.initialized||0===this._editGeometry.components.length||0===this._editGeometry.components[0].vertices.length)return null;const t=this._editGeometry.components[0].vertices[0];let i=t;do{if(i.index===e)return i;i=i.right.right}while(i!==t&&null!=i);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.createPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.createPoint(this.getVertex(e).pos)}forEachVertex(e){this.initialized&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const t=this._editGeometry.coordinateHelper;this.forEachVertex(((i,r)=>{t.toPoint(i.pos,u),e(u,r)}))}clear(){r(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(e){if(!this.initialized)return null;0===this._editGeometry.components.length&&this._editGeometry.components.push(new h(this._editGeometry));const t=new l(this._editGeometry,this._editGeometry.components[0],this._editGeometry.coordinateHelper.fromPoint(e));return this._editGeometry.apply(t),this.emit("change",{type:"change"}),t}close(){if(!this.initialized)return null;if(0===this._editGeometry.components.length)return null;const e=this._editGeometry.components[0],t=new d(this._editGeometry,e);return this._editGeometry.apply(t),this.emit("change",{type:"change"}),t}ensureContains(e,t=""){let i=!1;if(this._editGeometry.components.forEach((t=>{t.iterateVertices((t=>{t===e&&(i=!0)}))})),!i)throw new Error(`vertex doesnt exist ${t}`);return i}setVertexPosition(e,t){if(!this.initialized)return null;const i=new c(this._editGeometry,e,this._editGeometry.coordinateHelper.fromPoint(t));return this._editGeometry.apply(i),this.emit("change",{type:"change"}),i}equals(e){if(this.numVertices!==e.numVertices)return!1;let t=!0;return this.forEachVertexPosition(((i,r)=>{const o=e.getVertexPositionAsPointFromIndex(r);i.equals(o)||(t=!1)})),!!t}};e([s({value:null})],y.prototype,"areaMeasurement",null),e([s({value:null})],y.prototype,"view",null),e([s()],y.prototype,"isValidPolygon",null),e([s()],y.prototype,"numVertices",null),y=e([n("esri.views.3d.interactive.graphics.AreaMeasurement3D.AreaMeasurement3DPathHelper")],y);const u=new p;export{y as AreaMeasurement3DPathHelper};
