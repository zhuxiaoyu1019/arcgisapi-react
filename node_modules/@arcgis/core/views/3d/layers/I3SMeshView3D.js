/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../Color.js";import i from"../../../Graphic.js";import s from"../../../core/Collection.js";import r from"../../../core/has.js";import o from"../../../core/Logger.js";import{someMap as a}from"../../../core/MapUtils.js";import{unwrapOr as n,isSome as l,destroyMaybe as d,isNone as h,applySome as c,unwrap as u}from"../../../core/maybe.js";import _ from"../../../core/PooledArray.js";import{throwIfAborted as m,createResolver as g}from"../../../core/promiseUtils.js";import{schedule as p}from"../../../core/scheduling.js";import{isArrayBuffer as f}from"../../../core/typedArrayUtil.js";import{getMetersPerVerticalUnitForSR as b}from"../../../core/unitUtils.js";import{init as y}from"../../../core/watchUtils.js";import{property as v}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as I}from"../../../core/accessorSupport/decorators/subclass.js";import{f as M}from"../../../chunks/mat3.js";import{c as C}from"../../../chunks/mat3f32.js";import{m as x,u as O}from"../../../chunks/mat4.js";import{b as j,c as w}from"../../../chunks/mat4f64.js";import{m as S,g as E}from"../../../chunks/vec3.js";import{c as F}from"../../../chunks/vec3f64.js";import{s as D}from"../../../chunks/vec4.js";import{projectBuffer as R,getProjectorName as N,localLinearScaleFactors as T,projectVectorToVector as V,projectBoundingSphere as A}from"../../../geometry/projection.js";import{create as P,empty as H,expandWithBuffer as U,intersects as G}from"../../../geometry/support/aaBoundingBox.js";import L from"../../../layers/graphics/controllers/I3SOnDemandController.js";import{fixFields as B}from"../../../layers/support/fieldUtils.js";import{areLabelsVisible as k}from"../../../layers/support/layerUtils.js";import q from"../../../layers/support/SceneModification.js";import{getColor as z,getOpacity as W}from"../../../renderers/visualVariables/support/visualVariableUtils.js";import{loadArcade as $}from"../../../support/arcadeOnDemand.js";import K from"../../../symbols/Symbol3D.js";import{getMetersPerUnit as J}from"../../../symbols/support/unitConversionUtils.js";import Q from"./I3SMeshViewLabeler.js";import{I3SMeshWorkerHandle as X,toWasmModification as Y}from"./I3SMeshWorkerHandle.js";import{initialize as Z,setModificationsSync as ee,filterObbsForModificationsSync as te,interpretObbModificationResults as ie}from"./SceneLayerWorker.js";import{overrideColor as se}from"./graphics/graphicUtils.js";import re from"./i3s/Highlights.js";import{I3SAttributeOverrides as oe}from"./i3s/I3SAttributeOverrides.js";import{I3SCrossfadeHelper as ae,NodeCrossfadeMetaData as ne}from"./i3s/I3SCrossfadeHelper.js";import le from"./i3s/I3SElevationProvider.js";import{boundingBoxCornerPoints as de}from"./i3s/I3SGeometryUtil.js";import{I3SIntersectionHandler as he}from"./i3s/I3SIntersectionHandler.js";import{getSupportedEncodings as ce,selectEncoding as ue,createTexture as _e,configureMaterial as me}from"./i3s/I3SMaterialUtil.js";import{computeGlobalTransformation as ge,getLocalOrigin as pe}from"./i3s/I3SProjectionUtil.js";import{rendererNeedsTextures as fe,checkSceneLayerValid as be,checkSceneLayerCompatibleWithView as ye,getCacheKeySuffix as ve,whenGraphicAttributes as Ie,computeVisibilityObb as Me,filterInPlace as Ce,getCachedAttributeValue as xe,intersectBoundingBoxWithMbs as Oe,addWraparound as je,getSymbolInfo as we,transparentEdgeMaterial as Se,getClipAABB as Ee}from"./i3s/I3SUtil.js";import{IDBCache as Fe}from"./i3s/IDBCache.js";import{attributeLookup as De}from"./support/attributeUtils.js";import Re from"../support/debugFlags.js";import{projectToBoundingBox as Ne}from"../support/extentUtils.js";import{create as Te,clone as Ve}from"../support/orientedBoundingBox.js";import{updatingProgress as Ae}from"../support/updatingProperties.js";import{glLayout as Pe}from"../support/buffer/glUtil.js";import{createVertexBufferLayout as He}from"../webgl-engine/collections/Component/SourceGeometry.js";import{loadBasis as Ue}from"../webgl-engine/lib/BasisUtil.js";const Ge=o.getLogger("esri.views.3d.layers.SceneLayerView3D"),Le=[1,1,1,1];class Be extends ne{constructor(e,t,i,s,r,o,a){super(),this.node=e,this.featureIds=t,this.objectHandle=i,this.cachedRendererVersion=s,this.attributeInfo=r,this.material=o,this.textures=a,this.cachedEdgeMaterials=new Array,this.cachedSymbology=null}}const ke=18,qe=104857600,ze=t=>{var o;let f=o=class extends t{constructor(...e){super(e),this._elevationProvider=null,this._intersectionHandler=null,this._nodeId2Meta=new Map,this._nodeId2MetaReloading=new Map,this._i3sWasmLoaded=!1,this._hasLoadedPBRTextures=!1,this._asyncModuleLoading=0,this._addTasks=new Map,this._rendererVersion=0,this._colorVariable=null,this._opacityVariable=null,this._rendererFields=null,this._symbologyFields=null,this._symbologyOverride=null,this._symbologyOverrideFields=null,this._symbolInfos=new Map,this._idbCache=new Fe("esri-scenelayer-cache","geometries"),this.holeFilling="auto",this._hasColors=!1,this._hasTextures=!1,this._hasData=!1,this.slicePlaneEnabled=!1,this._modifications=new Array,this._layerUrl="",this._cacheKeySuffix=null,this._arcade=null,this._tmpAttributeOnlyGraphic=new i(null,null,{}),this._crossfadeHelper=new ae(this),this.index=o.lastIndex++}get lodCrossfadeoutDuration(){return 0}get lodCrossfadeinDuration(){return 0}get lodCrossfadeUncoveredDuration(){return 0}get layerUid(){return this.i3slayer&&this.i3slayer.uid}get sublayerUid(){return null}get hasTexturesOrVertexColors(){return this._hasData?this._hasTextures||this._hasColors?"yes":"probably-not":"unknown"}get rendererTextureUsage(){return fe(this._currentRenderer)?this._usePBR()||this._hasLoadedPBRTextures?63:37:this._usePBR()||this._hasLoadedPBRTextures?44:36}get elevationOffset(){const e=null!=this.i3slayer?this.i3slayer.elevationInfo:null;if(null!=e&&"absolute-height"===e.mode){const t=b(this.i3slayer.spatialReference),i=J(e.unit);return n(e.offset,0)*i/t}return 0}get supportedTextureEncodings(){return ce(this.view._stage.renderView)}get uncompressedTextureDownsamplingEnabled(){var e;const t=null==(e=this.view)?void 0:e.qualitySettings.sceneService.uncompressedTextureDownsamplingEnabled,i=0==(4&this.supportedTextureEncodings);return t&&i}initialize(){this.preLoadBasis(),this.addResolvingPromise(this.i3slayer.indexInfo);const e=this.view.resourceController;if(this.attributeOverrides=new oe(this.i3slayer,e.memoryController),this._worker=new X((t=>e.schedule(t))),this.addResolvingPromise(this._worker.promise),this._worker.setLegacySchema(this.layerUid,this.i3slayer.store.defaultGeometrySchema),be(this.i3slayer),ye(this.i3slayer,this.view),this._layerUrl=this.i3slayer.parsedUrl.path,this._controller=new L({layerView:this}),this.gpuMemoryEstimate=0,this.texMemoryEstimate=0,this.geoMemoryEstimate=0,this._stage=this.view._stage,this._collection=this._stage.renderView.componentObjectCollection,this._highlights=new re({collection:this._collection,forAllFeatures:e=>this._forAllFeatures(e,null,1),forAllFeaturesOfNode:(e,t)=>this._forAllFeaturesOfNode(e,t)}),this._isIntegratedMesh||!this.i3slayer.store.defaultGeometrySchema)this._hasSymbolColors=!1;else{const e=this.i3slayer.store.defaultGeometrySchema.featureAttributes;this._hasSymbolColors=!!(e&&e.faceRange&&e.id)}this._hasVertexColors=null!=this.i3slayer.store.defaultGeometrySchema.vertexAttributes.color&&(null==this.i3slayer.cachedDrawingInfo||!this.i3slayer.cachedDrawingInfo.color),this._isIntegratedMesh||(this._edgeView=this._stage.renderView.ensureEdgeView()),this._memCache=this.view.resourceController.memoryController.getMemCache(this.i3slayer.uid,(e=>this._deleteComponentObject(e))),this._intersectionHandler=new he({layerUid:this.layerUid,sublayerUid:this.sublayerUid,collection:this._collection,slicePlaneEnabled:this.slicePlaneEnabled,isGround:this._isIntegratedMesh,forEach:e=>{this._nodeId2Meta.forEach((t=>l(t)&&e(t.node,t.objectHandle))),this._nodeId2MetaReloading.forEach((t=>l(t)&&e(t.node,t.objectHandle)))}}),this._elevationProvider=new le({layerView:this,intersectionHandler:this._intersectionHandler}),this._hasLoadedPBRTextures=this._usePBR(),this.updatingHandles.add(this,"view.clippingArea",(()=>this._clippingAreaChanged()),2),this.updatingHandles.add(this,"fullOpacity",(e=>this._opacityChange(e))),this.updatingHandles.add(this,"slicePlaneEnabled",(e=>this._slicePlaneEnabledChange(e))),this.updatingHandles.add(this,"elevationOffset",((e,t)=>{this._reloadAll(t),this._controller.invalidateVisibilityObbs()})),this.updatingHandles.add(this,"filter",(()=>this._filterChange()),2),this.updatingHandles.add(this,"view.qualitySettings.physicallyBasedRenderingEnabled",(()=>this._updatePBR()));const t=()=>{this._reloadAll(),this.clearMemCache()};this.updatingHandles.add(this,"rendererTextureUsage",t),this.updatingHandles.add(this,"uncompressedTextureDownsamplingEnabled",t),this.updatingHandles.add(this,"suspended",(e=>this._suspendedChange(e)),2),this.updatingHandles.add(this.i3slayer,"labelsVisible",(()=>this._labelingChanged()),2),this.updatingHandles.add(this.i3slayer,"labelingInfo",(()=>this._labelingChanged()),2),this.updatingHandles.add(this,"_modifications",(()=>this._modificationsChanged()),2),this.handles.add([y(Re,"I3S_TREE_SHOW_TILES",(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;import("./support/I3STreeDebugger.js").then((({I3STreeDebugger:t})=>{!this._treeDebugger&&Re.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t({lv:this,view:this.view,nodeSR:e}))}))}else e||Re.I3S_TREE_SHOW_TILES||(this._treeDebugger=d(this._treeDebugger))})),y(Re,"I3S_SHOW_MODIFICATIONS",(()=>this._showModifications()))]),this._cacheKeySuffix=ve(this.i3slayer.spatialReference,this.view.renderSpatialReference),this._idbCache.init().catch((e=>Ge.warn(`Failed to initialize IndexedDB cache: ${e}`)))}destroy(){this._clearAddTasks(),this.attributeOverrides=d(this.attributeOverrides),this._elevationProvider&&(this._elevationProvider.layerChanged(),this.view.elevationProvider.unregister(this._elevationProvider),this._elevationProvider=null),this._intersectionHandler&&(this._stage.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler),this._intersectionHandler=null);const e=this._worker;e&&(e.destroyContext(this.i3slayer.uid).then((()=>e.destroy())),this._worker=null),this._removeAllNodeDataFromStage(),this._memCache=d(this._memCache),this._collection=null,this._stage=null,this._edgeView=null,this._labeler=d(this._labeler),this._treeDebugger=d(this._treeDebugger),this._controller=d(this._controller),this._highlights.destroy(),this._nodeId2Meta.clear(),this._nodeId2MetaReloading.clear(),this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle.remove(),this._visibleGeometryChangedSchedulerHandle=null)}memEstimateTextureAdded(e){const t=e.estimatedTexMemRequired;return this.gpuMemoryEstimate+=t,this.texMemoryEstimate+=t,t}memEstimateTextureRemoved(e){const t=e.estimatedTexMemRequired;this.gpuMemoryEstimate-=t,this.texMemoryEstimate-=t}memEstimateGeometryAdded(e){const t=this._collection.getObjectGPUMemoryUsage(e);return this.gpuMemoryEstimate+=t,this.geoMemoryEstimate+=t,t}memEstimateGeometryRemoved(e){const t=this._collection.getObjectGPUMemoryUsage(e);this.gpuMemoryEstimate-=t,this.geoMemoryEstimate-=t}isNodeLoaded(e){return this._nodeId2Meta.has(e)}isNodeReloading(e){return this._nodeId2MetaReloading.has(e)}getUsedMemory(){let e=l(this._labeler)?this._labeler.usedMemory:0;return this._nodeId2Meta.forEach((t=>e+=l(t)?t.node.memory:0)),this._nodeId2MetaReloading.forEach((t=>e+=l(t)?t.node.memory:0)),e}getUnloadedMemory(){return(l(this._controller)?this._controller.unloadedMemoryEstimate:0)+(l(this._labeler)?this._labeler.unloadedMemoryEstimate:0)}ignoresMemoryFactor(){return!1}_labelingChanged(){if(!(k(this.i3slayer)&&this._supportsLabeling))return void(l(this._labeler)&&(this._labeler.destroy(),this._labeler=null));if(l(this._labeler))return;const e=new Q({view:this.view,layer:this.i3slayer,collection:this._collection});this._nodeId2Meta.forEach((t=>l(t)&&this._addMetaToLabeler(e,t))),this._labeler=e}_loadAsyncModule(e){return++this._asyncModuleLoading,e.then((e=>(--this._asyncModuleLoading,e)),(e=>{throw--this._asyncModuleLoading,e}))}_modificationsChanged(){if(!this._i3sWasmLoaded&&this._hasModifications)return this._i3sWasmLoaded=Z().then((()=>{this._i3sWasmLoaded=!0,this._modificationsChanged(),this.notifyUpdate()})),void this.notifyUpdate();if(!0!==this._i3sWasmLoaded)return;const e=this.i3slayer.uid,t=this.i3slayer.spatialReference;this._worker.setModifications(e,this._modifications,t);const i=Y(this._modifications,t);ee({context:e,modifications:i,isGeodetic:t.isGeographic}),this._controller.modificationsChanged();const s=this._hasModifications?new _:null;this._nodeId2Meta.forEach(((e,t)=>{h(e)?this._nodeId2Meta.delete(t):e.node.hasModifications?(this._nodeId2Meta.delete(t),this._nodeId2MetaReloading.set(t,e)):l(s)&&s.push(e.node)})),l(s)&&this._nodeId2MetaReloading.forEach((e=>s.push(e.node))),l(s)&&s.length>0&&(this.updateNodeModificationStatus(s),s.forAll((e=>{if(2!==e.imModificationImpact){const t=this._nodeId2Meta.get(e.index);this._controller.invalidateGeometryVisibility(e.index),this._nodeId2Meta.delete(e.index),l(t)&&this._nodeId2MetaReloading.set(e.index,t)}}))),this.clearMemCache(),this._controller.restartNodeLoading(),this._showModifications()}_showModifications(){if(l(this._modificationGraphics)&&(this.view.graphics.removeMany(this._modificationGraphics),this._modificationGraphics=null),!Re.I3S_SHOW_MODIFICATIONS||0===this._modifications.length)return;const e={clip:[227,227,79,.8],mask:[227,139,79,.8],replace:[139,227,79,.8]},t={type:"simple-fill",outline:{color:[255,255,255],width:1}};this._modificationGraphics=new Array;for(const s of this._modifications){s.geometry.spatialReference=this.i3slayer.spatialReference;const r={...t,color:e[s.type]};this._modificationGraphics.push(new i({geometry:s.geometry,symbol:r}))}this.view.graphics.addMany(this._modificationGraphics)}_addMetaToLabeler(e,t){e.addNodeMeta(t,((e,t)=>this._createAttributes(e,t)))}_suspendedChange(e){e?(this._removeAllNodeDataFromStage(),this.view.elevationProvider&&this.view.elevationProvider.unregister(this._elevationProvider),this._stage.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler)):(this.view.elevationProvider.register(this._elevationContext,this._elevationProvider),this._stage.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler))}getLoadedAttributes(e){const t=this._nodeId2Meta.get(e);if(l(t)&&l(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodeId2Meta.get(e);if(l(t)&&l(t.attributeInfo))return t.attributeInfo.attributeData}setAttributeData(e,t){const i=this._nodeId2Meta.get(e);l(i)&&l(i.attributeInfo)&&(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const s=this._nodeId2Meta.get(e);l(s)&&(await this.attributeOverrides.apply(s.featureIds,t,i),s.attributeInfo=t,this._attributeValuesChanged(s))}_attributeValuesChanged(e){e.cachedRendererVersion=this._getInvalidRendererVersion(),e.filteredIds=null,l(this._labeler)&&this._labeler.setNodeMetaAttributes(e,((e,t)=>this._createAttributes(e,t))),this._updateEngineObject(e)}clearMemCache(){l(this._memCache)&&this._memCache.clear()}getVisibleNodes(){const e=new Array;return this._nodeId2Meta.forEach((t=>l(t)&&e.push(t.node))),e}getLoadedNodeIndices(e){this._nodeId2Meta.forEach(((t,i)=>e.push(i))),this._nodeId2MetaReloading.forEach(((t,i)=>e.push(i)))}preLoadBasis(){!r("disable-feature:i3s-basis")&&0!=(2&this.supportedTextureEncodings)&&c(this.i3slayer.textureSetDefinitions,(e=>e.some((e=>e.formats.some((e=>"basis"===e.format||"ktx2"===e.format))))))&&Ue()}_getVertexBufferLayout(e,t){const i={hasTexture:Ye(e.params.material),hasNormals:t.normal,hasRegions:t.uvRegion};return Pe(He(this._getGeometryParameters(i)))}_getObjectIdField(){return this.i3slayer.objectIdField||"OBJECTID"}_findGraphicNodeAndIndex(e){const t=De(this.i3slayer.fieldsIndex,e.attributes,this._getObjectIdField());let i=null;return a(this._nodeId2Meta,(e=>{if(h(e))return!1;const s=e.featureIds.indexOf(t);return-1!==s&&(i={node:e.node,index:s},!0)})),i}_getGraphicIndices(e,t){const i=this._nodeId2Meta.get(e.index);if(h(i))return[];const s=[],r=this._getObjectIdField(),o=this.i3slayer.fieldsIndex;for(const a of t){const e=De(o,a.attributes,r),t=i.featureIds.indexOf(e);-1!==t&&s.push(t)}return s}whenGraphicBounds(e){const t=this._findGraphicNodeAndIndex(e);if(!t)return Promise.reject();const i=this._nodeId2Meta.get(t.node.index);if(h(i))return Promise.reject();const s=i.objectHandle,r=de(t.index,this._collection,s,new Float64Array(24)),o=this.view.renderSpatialReference,a=this.view.spatialReference;if(R(r,o,0,r,a,0,8)){const e=H();return U(e,r,0,8),Promise.resolve({boundingBox:e,screenSpaceObjects:[]})}}whenGraphicAttributes(e,t){return Ie(this.i3slayer,e,this._getObjectIdField(),t,(()=>[...this._nodeId2Meta.values()].filter(l)))}getGraphicFromIntersectorMetadata(e){if(null==e.nodeIndex||null==e.componentIndex)return null;const t=this._nodeId2Meta.get(e.nodeIndex);return h(t)||null==t.featureIds||e.componentIndex>=t.featureIds.length?null:this._createGraphic(e.componentIndex,t)}_getCacheKey(e){return`${this._layerUrl}/v${ke}/${e.id}${this._cacheKeySuffix}`}_getMemCacheKey(e,t=this.elevationOffset){return e+"#"+t}get _idbCacheEnabled(){return!this._controller.disableIDBCache&&0===this._modifications.length&&0===this.elevationOffset&&null!=this._cacheKeySuffix}loadCachedGPUData(e){return l(this._memCache)?this._memCache.pop(this._getMemCacheKey(e.index)):null}deleteCachedGPUData(e){l(e)&&this._deleteComponentObject(e)}_cacheGPUData(e,t=this.elevationOffset){if(h(this._memCache))return void this._deleteComponentObject(e);const i=this._controller.indexDepth-e.node.level;this._memCache.put(this._getMemCacheKey(e.node.index,t),e,e.node.memory,i)}loadMissingTextures(e,t,i,s){const r=e.filter(((e,i)=>{if(0==(e.usage&this.rendererTextureUsage))return!1;if(h(t))return!0;const s=ue(e.encodings,this.supportedTextureEncodings),r=t[i];return!!(h(r)||null==r.data||s&&r.encoding!==s.encoding)}));return 0===r.length?Promise.resolve(!1):i(r,s).then((i=>{let s=0;for(let r=0;r<e.length;r++)s<i.length&&i[s].id===e[r].id&&(t[r]=i[s],s++);return!0}))}loadCachedNodeData(e,t,i){return this._idbCacheEnabled?this._idbCache.get(this._getCacheKey(e),t).then((s=>null==s?null:s.nodeVersion!==e.version?(this._idbCache.remove(this._getCacheKey(e)),null):(e.geometryObb=s.geometryObb,this.loadMissingTextures(s.requiredTextures,s.textureData,i,t).then((i=>(i&&this._idbCache.initialized&&l(s.textureData)&&(s.byteSize=tt(s.transformedGeometry,s.textureData),s.textureData.every(et)&&it(e,s)&&this._idbCache.put(this._getCacheKey(e),s).catch((t=>Ge.warn(`Failed to update node with textures in IndexedDB cache: ${e.id}: ${t}`)))),m(t),s)))))):Promise.resolve(null)}addNode(e,t,i){return Ze(t)?this._addData(e,t.attributeDataInfo,(()=>this._transformNode(e,t,i).then((s=>this._safeReschedule((()=>{if(h(s))return e.hasModifications=!1,this._addCachedNodeData(e,null,i);e.hasModifications=s.transformedGeometry.hasModifications;const{obb:r,componentOffsets:o,featureIds:a,transformedGeometry:n}=s,d=this._controller.crsIndex,c=this.view.renderSpatialReference,u=ge(e.mbs,this.elevationOffset,d,c);e.geometryObb=Te([r.center.x,r.center.y,r.center.z],[r.extents.x,r.extents.y,r.extents.z],[r.orientation.x,r.orientation.y,r.orientation.z,r.orientation.w]),S(e.geometryObb.center,e.geometryObb.center,u),t.geometryData.componentOffsets=o,a&&(t.geometryData.featureIds=Array.prototype.slice.call(a));const _={nodeVersion:e.version,geometryData:t.geometryData,requiredTextures:t.requiredTextures,textureData:t.textureData,transformedGeometry:n,globalTrafo:u,geometryObb:e.geometryObb,byteSize:tt(n,t.textureData)};if(this._idbCacheEnabled&&this._idbCache.initialized&&it(e,_)){const t=l(_.textureData)?_.textureData.map((e=>et(e)?e:null)):null;this._idbCache.put(this._getCacheKey(e),{..._,textureData:t}).catch((t=>Ge.warn(`Failed to store node in IndexedDB cache: ${e.id}: ${t}`)))}return this._addCachedNodeData(e,_,i)}),i))))):Promise.reject()}computeVisibilityObb(e){return Me(e,this.view.renderSpatialReference,this._controller.crsIndex,this.i3slayer.spatialReference,this.elevationOffset,this._modifications)}_transformNode(e,t,i){const s=t.geometryData.geometries,r=new Array(s.length);for(let h=0;h<s.length;++h)r[h]=this._getVertexBufferLayout(s[h],t.geometryDescriptor);const o=e.mbs,a=this.elevationOffset,n=this._controller.crsIndex,l=this._controller.crsVertex,d=this.view.renderSpatialReference,c=pe(o,a,n),u=ge(o,a,n,d),_=N(n,l),m=N(l,d);if(h(_)||h(m))return Promise.resolve(null);const g={context:this.i3slayer.uid,geometryBuffer:t.geometryBuffer,geometryData:t.geometryData,geometryDescriptor:t.geometryDescriptor,layouts:r,localOrigin:c,globalTrafo:u,mbs:o,obb:e.serviceObb,elevationOffset:a,needNormals:!this._isIntegratedMesh&&this._controller.isMeshPyramid,normalReferenceFrame:this.i3slayer.normalReferenceFrame||"none",indexToVertexProjector:_,vertexToRenderProjector:m};return this._worker.invoke(g,i)}get supportsNodeCrossFading(){var e,t;return!(null!=(e=this.view)&&null!=(t=e._stage)&&t.renderView.has(3))}get nodeCrossfadingEnabled(){return this.supportsNodeCrossFading&&(this.lodCrossfadeinDuration>0||this.lodCrossfadeoutDuration>0||this.lodCrossfadeUncoveredDuration>0)}get nodeFadeoutEnabled(){return this.supportsNodeCrossFading&&this.lodCrossfadeoutDuration>0}_setNewNodeOpacity(e){const t=this.nodeCrossfadingEnabled?0:this.fullOpacity;this._setNodeOpacity(e,t)}addCachedGPUData(e,t,i){if(e.geometryObb=Ve(this._collection.getComponentObb(t.objectHandle)),!this._controller.isGeometryVisible(e))return void this._cacheGPUData(t);l(this._labeler)&&this._addMetaToLabeler(this._labeler,t);const s=e.index;this._addNodeMeta(s,t),this.updateNodeState(s,i),this._collection.setObjectVisibility(t.objectHandle,!0),this._updateMaterial(t),this._setNewNodeOpacity(t),this._updateEngineObject(t),this._highlights.objectCreated(t),l(this._treeDebugger)&&this._treeDebugger.update()}addCachedNodeData(e,t,i,s){return this._addData(e,i,(()=>this._addCachedNodeData(e,t,s)))}async _addCachedNodeData(e,t,i){if(this.suspended||!this._controller.isGeometryVisible(e))return void this._removeNodeStageData(e.index,this.elevationOffset,this._nodeId2MetaReloading);if(h(t))return void this._addNodeMeta(e.index,null);const s=this._addTasks.get(e.index),{geometryData:o,transformedGeometry:a,globalTrafo:n}=t;await this.attributeOverrides.apply(o.featureIds,s.attributeInfo,i);const d=l(t.textureData)?t.textureData.filter((e=>l(e)&&0!=(e.usage&this.rendererTextureUsage))):[];!r("disable-feature:i3s-basis")&&d.some((e=>l(e)&&(2===e.encoding||1===e.encoding)))&&await Ue(),e.memory=0;const{componentOffsets:c,geometries:_,featureIds:m}=o,g=this._collection,p=_[0],{layout:f,indices:b,interleavedVertexData:y,positionData:v,hasColors:I}=a,S=this._materialParameters(p,f),E=c||new Uint32Array([0,b?b.length:y.byteLength/f[0].stride]),D={vertices:{data:y,count:y.byteLength/f[0].stride,layoutParameters:S.geometryParams},positionData:{positions:v.data,indices:v.indices},indices:b,componentOffsets:E},R=p.transformation?j(p.transformation):w();x(R,n,R);const N=O(F(),R),A=M(C(),R),P=this.view.renderSpatialReference,H=this.view.basemapTerrain.spatialReference,U=F(),G=[1,1,1];T(N,P,G,H),V(N,P,U,H);const L=g.createObject({toMapSpace:[U[0],U[1],G[0],G[1]],geometry:D,obb:u(e.geometryObb),transform:{position:N,rotationScale:A},visible:!1}),B=2===S.geometryParams.textureCoordinates,k=this._initMaterialAndTextures(L,S.material,d,B);e.memory+=this.memEstimateGeometryAdded(L),e.memory+=k.reduce(((e,t)=>e+(l(t)?this.memEstimateTextureAdded(t):0)),0);const q=!!S.material.hasParametersFromSource,z="blend"!==S.material.alphaMode&&S.material.metallicRoughness.baseColorFactor[3]>=1,W=new Be(e,m,L,this._getInvalidRendererVersion(),s.attributeInfo,{hasParametersFromSource:q,isOpaque:z},k);s.meta=W,!this._hasTextures&&t.requiredTextures.some((({usage:e})=>0!=(19&e)))&&(this._hasTextures=!0),this._hasData=!0,this._hasColors=this._hasColors||I,this._hasTextures=this._hasTextures||!!e.resources.texture,this.notifyChange("hasTexturesOrVertexColors");const $=this.slicePlaneEnabled;return this._addOrUpdateEdgeRendering(W).then((t=>(l(t)&&t.updateObjectVisibility(W.objectHandle,!1),this._safeReschedule((()=>{const i=this._addTasks.get(e.index);if(!i)return;if(l(this._labeler)&&this._addMetaToLabeler(this._labeler,W),this._addNodeMeta(e.index,W),i.meta=null,this.suspended)return void this._removeNodeStageData(e.index,this.elevationOffset);g.setObjectVisibility(L,!0),l(t)&&t.updateObjectVisibility(W.objectHandle,!0),W.attributeInfo=i.attributeInfo;const s=W.cachedRendererVersion!==this._rendererVersion,r=$!==this.slicePlaneEnabled;this._setObjectSymbolColors(W);const o=this._applyFiltersToNode(W);(s||l(t)&&(r||o))&&this._addOrUpdateEdgeRendering(W),this._visibleGeometryChanged(W),this._highlights.objectCreated(W),this._updateMaterial(W),this._setNewNodeOpacity(W),l(this._treeDebugger)&&this._treeDebugger.update()}),i)))).catch((e=>{throw l(s.meta)&&(this._deleteComponentObject(s.meta),s.meta=null),e}))}_addNodeMeta(e,t){if(this._removeNodeStageData(e,this.elevationOffset,this._nodeId2MetaReloading),this._nodeId2Meta.has(e)){Ge.error("Removing duplicated node");const t=this._nodeId2Meta.get(e);l(t)&&this._deleteComponentObject(t)}l(t)&&(t.lodCrossfadeProgress=null,this.nodeCrossfadingEnabled&&ot(t.cachedEdgeMaterials,0)),this._nodeId2Meta.set(e,t)}_safeReschedule(e,t){return m(t),this._controller.reschedule(e,t)}_materialParameters(e,t){const i=e.params.material,s=t.some((e=>"uvRegion"===e.name)),r=t.some((e=>"normalCompressed"===e.name)),o=Ye(i);return{geometryParams:this._getGeometryParameters({hasTexture:o,hasNormals:r,hasRegions:s}),material:i}}_initMaterialAndTextures(e,t,i,s){const r=this._stage.renderView,o=i.map((e=>_e(e,t,s,r)));for(const a of o)l(a)&&this._stage.add(a);return this._collection.updateMaterial(e,(e=>{me(e,t,o,i,this.view._stage.renderView.textureRepository,{rendererTextureUsage:this.rendererTextureUsage,usePBR:this._usePBR(),isIntegratedMesh:this._isIntegratedMesh,slicePlaneEnabled:this.slicePlaneEnabled,viewSpatialReference:this.view.spatialReference}),this._updateMaterialOverlay(e)})),o}_getGeometryParameters(e){return{textureCoordinates:e.hasTexture?e.hasRegions?2:1:0,colors:this._hasVertexColors,normals:e.hasNormals&&!this._isIntegratedMesh}}_addData(e,t,i){let s=this._addTasks.get(e.index);return s?s.attributeInfo=t:(s={...g(),attributeInfo:t,meta:null},this._addTasks.set(e.index,s),i().then(s.resolve,s.reject).then((()=>this._addTasks.delete(e.index))).catch((t=>{throw this._addTasks.delete(e.index),t}))),s.promise}_clearAddTasks(){this._addTasks.forEach((e=>{l(e.meta)&&(this._deleteComponentObject(e.meta),e.meta=null)})),this._addTasks.clear()}_clippingAreaChanged(){const e=P();Ne(this.view.clippingArea,e,this.view.renderSpatialReference)?this._clippingArea=e:this._clippingArea=null,this._filterChange(),this._controller&&this._controller.updateClippingArea(this.view.clippingArea)}_geometryFilterChange(){this._controller.geometryFilterChanged(this.hasGeometryFilter)}get hasGeometryFilter(){return!1}_filterChange(){this._applyFilters(!1)}_applyFilters(e){this._filters=this.getFilters(),e?this._controller&&this._controller.requestUpdate():this._nodeId2Meta.forEach((e=>{l(e)&&this._applyFiltersToNode(e)&&(this._addOrUpdateEdgeRendering(e),this._visibleGeometryChanged(e))}))}getFilters(){const e=[];return this._clippingArea&&e.push(((e,t)=>this._boundingboxFilter(e,t,this._clippingArea))),e}addSqlFilter(e,t,i){if(l(t)){const s=t.fieldNames;e.push(((e,r)=>this._sqlFilter(e,r,t,s,i)))}}_sqlFilter(e,t,i,s,r){const o={},a=this._createLayerGraphic(o),n=this.i3slayer.objectIdField,d=t.featureIds,h=l(t.attributeInfo)&&t.attributeInfo.attributeData;s.every((e=>null!=h[e]||e===n))&&Ce(e,d,(e=>{o[n]=d[e];for(const i of s)i!==n&&(o[i]=xe(h[i],e));try{return i.testFeature(a)}catch(t){return r(t),!1}}))}_boundingboxNodeTest(e,t){return A(e.node.mbs,this._controller.crsIndex,Xe,this.view.renderSpatialReference),Oe(t,Xe)}_boundingboxFeatureTest(e,t,i){return G(i,this._collection.getComponentAabb(e.objectHandle,t,We))}_boundingboxFilter(e,t,i){const s=this._collection,r=this._boundingboxNodeTest(t,i);if(3===r)return;if(0===r)return void(e.length=0);const o=s.getComponentCount(t.objectHandle);if(o.invisible+o.visible!==t.featureIds.length)return;const a=this._transformAABB($e,i,t.objectHandle);Ce(e,t.featureIds,(e=>this._boundingboxFeatureTest(t,e,a)))}_transformAABB(e,t,i){const s=this._collection.getObjectTransform(i),r=s.position,o=s.rotationScale;return e[0]=(t[0]-r[0])/o[0],e[1]=(t[1]-r[1])/o[4],e[2]=(t[2]-r[2])/o[8],e[3]=(t[3]-r[0])/o[0],e[4]=(t[4]-r[1])/o[4],e[5]=(t[5]-r[2])/o[8],e}_addOrUpdateEdgeRendering(e,t=!0){if(h(this._edgeView))return Promise.resolve(null);const i=e.objectHandle,s=this._edgeView.hasObject(i),{hasEdges:r,perFeatureEdgeMaterials:o}=this._getFilteredEdgeMaterials(e),a={slicePlaneEnabled:this.slicePlaneEnabled};if(r){if(s){if(this.nodeCrossfadingEnabled){ot(o,this.getNodeOpacity(e))}return this._edgeView.updateAllComponentMaterials(i,o,a,t),this._edgeView.updateObjectVisibility(i,!0),Promise.resolve(this._edgeView)}return this._collection.addEdges(i,this._edgeView,o,a).then((()=>this._edgeView))}return s&&this._edgeView.removeObject(i),Promise.resolve(null)}_removeEdgeRendering(e){l(this._edgeView)&&this._edgeView.hasObject(e.objectHandle)&&this._edgeView.removeObject(e.objectHandle)}_applyFiltersToNode(e){return!!this._applyFiltersToNodeComponents(e)&&(l(this._labeler)&&this._labeler.applyFilterChange(e),!0)}_applyFiltersToNodeComponents(e){const t=this._collection,i=0===t.getComponentCount(e.objectHandle).invisible;if(t.setAllComponentVisibilities(e.objectHandle,"all"),0===this._filters.length)return e.filteredIds=null,!i;if(this._updateCachedFilteredIds(e),e.filteredIds===e.featureIds)return!i;const s=this._computeFilteredComponentIndices(e);return t.setAllComponentVisibilities(e.objectHandle,s),!0}_updateCachedFilteredIds(e){null!=e.filteredIds&&e.appliedFilters===this._filters||(e.filteredIds=this._computeFilteredIds(e),e.appliedFilters=this._filters)}_computeFilteredIds(e){const t=e.featureIds.slice();for(const i of this._filters)if(i(t,e),0===t.length)break;return t.length===e.featureIds.length?e.featureIds:t}_computeFilteredComponentIndices(e){const t=new Array;return e.featureIds.forEach(((i,s)=>{e.filteredIds[t.length]===i&&t.push(s)})),t}_removeAllNodeDataFromStage(e=this.elevationOffset){this._nodeId2Meta.forEach(((t,i)=>this._removeNodeStageData(i,e))),this._nodeId2MetaReloading.forEach(((t,i)=>this._removeNodeStageData(i,e,this._nodeId2MetaReloading)))}removeNode(e){const t=this.elevationOffset;this._removeNodeStageData(e,t),this._removeNodeStageData(e,t,this._nodeId2MetaReloading)}_removeNodeStageData(e,t,i=this._nodeId2Meta){const s=i.get(e);h(s)?i.delete(e):(this._collection.setObjectVisibility(s.objectHandle,!1),this._visibleGeometryChanged(s),this._removeEdgeRendering(s),l(this._labeler)&&this._labeler.removeNodeMeta(s),i.delete(e),this._highlights.objectDeleted(s),i===this._nodeId2Meta?(this._cacheGPUData(s,t),this.nodeCrossfadingEnabled&&this._crossfadeHelper.stopNodeFading(s)):this._deleteComponentObject(s),l(this._treeDebugger)&&this._treeDebugger.update())}_deleteComponentObject(e){if(l(this._edgeView)&&this._edgeView.removeObject(e.objectHandle),this.memEstimateGeometryRemoved(e.objectHandle),this._collection.destroyObject(e.objectHandle),e.textures)for(const t of e.textures)this.memEstimateTextureRemoved(t),this._stage.remove(t)}updateNodeState(e,t){const i=this._nodeId2Meta.get(e);l(i)&&this._collection.updateMaterial(i.objectHandle,(e=>e.polygonOffsetEnabled=0===t))}_invalidateAllSymbols(){this._rendererVersion=je(this._rendererVersion,1),this._controller&&this._controller.requestUpdate()}_getInvalidRendererVersion(){return je(this._rendererVersion,-1)}async _rendererChange(e){if(this._currentRenderer=e,this.notifyChange("rendererTextureUsage"),this._rendererVersion=je(this._rendererVersion,1),this._rendererFields=null,this._colorVariable=null,this._opacityVariable=null,this._invalidateAllSymbols(),e&&(this._rendererFields=await e.getRequiredFields(this.i3slayer.fieldsIndex)),this._updateSymbologyFields(),!this._arcade&&e&&"arcadeRequired"in e&&e.arcadeRequired&&(this._arcade=await $()),e&&"visualVariables"in e&&e.visualVariables)for(const t of e.visualVariables)"color"===t.type?this._colorVariable=t:"opacity"===t.type?this._opacityVariable=t:Ge.warn(`Unsupported visual variable type for 3D Object Scene Services: ${t.type}`);if(e)for(const t of e.getSymbols())"mesh-3d"!==t.type&&Ge.error(`Symbols of type '${t.type}' are not supported for 3D Object Scene Services.`);this._controller&&this._controller.requestUpdate()}_getCachedEdgeMaterials(e){return this._hasSymbolColors&&e.cachedRendererVersion!==this._rendererVersion&&this._updateCachedRendererData(e),e.cachedEdgeMaterials}_getSymbolColors(e){this._hasSymbolColors&&e.cachedRendererVersion!==this._rendererVersion&&this._updateCachedRendererData(e);const t=e.cachedSymbology;return(e,i)=>{const s=5*e;D(i.externalColor,t[s+0]/255,t[s+1]/255,t[s+2]/255,t[s+3]/255),i.externalColorMixMode=15&t[s+4],i.castShadows=0!=(16&t[s+4]),i.pickable=0!=(32&t[s+4])}}_getSymbolInfo(e,t){const i=e&&e.getSymbol(t,{arcade:this._arcade});if(!(i instanceof K))return null;const s=i.id;if(this._symbolInfos.has(s))return this._symbolInfos.get(s);const r=we(i);return this._symbolInfos.set(s,r),r}_setSymbologyOverride(e,t){this._symbologyOverride!==e&&(this._symbologyOverride=e,this._symbologyOverrideFields=t,this._invalidateAllSymbols(),this._updateSymbologyFields())}_updateSymbologyFields(){this._symbologyFields=l(this._symbologyOverrideFields)&&this._symbologyOverrideFields.length>0?l(this._rendererFields)&&this._rendererFields.length>0?B(this.i3slayer.fieldsIndex,[...this._rendererFields,...this._symbologyOverrideFields]):this._symbologyOverrideFields:this._rendererFields}_updateCachedRendererData(e){if(e.cachedRendererVersion=this._rendererVersion,!this._hasSymbolColors)return;const t=this._tmpAttributeOnlyGraphic,i={};t.attributes=i;const s=this._currentRenderer,r=l(e.attributeInfo)&&e.attributeInfo.attributeData,o=null!=e.featureIds?this.i3slayer.objectIdField:null,a=null!=r&&l(this._symbologyFields)&&this._symbologyFields.length>0,n=a?[]:null,d=a?[]:null;if(a&&l(this._symbologyFields))for(const l of this._symbologyFields){const e=r[l];e&&(n.push(l),d.push(e))}e.cachedSymbology||(e.cachedSymbology=new Uint8Array(5*e.featureIds.length));const c={color:Je,castShadows:!0,pickable:!0,colorMixMode:1,edgeMaterial:null},u=this.fullOpacity,_=this.nodeCrossfadingEnabled?this.getNodeOpacity(e):u;let m=null,g=2,p=Se,f=0;for(let b=0;b<e.featureIds.length;b++){if(null!=o&&(i[o]=e.featureIds[b]),a)for(let e=0;e<n.length;e++)i[n[e]]=xe(d[e],b);const r=this._getSymbolInfo(s,t);let u=null,y=null;if(s&&"visualVariables"in s){if(this._colorVariable){const e=z(this._colorVariable,t,{color:Qe,arcade:this._arcade});e&&(u=Je,u[0]=e.r/255,u[1]=e.g/255,u[2]=e.b/255,this._opacityVariable||null===e.a||(y=e.a))}this._opacityVariable&&(y=W(this._opacityVariable,t,{arcade:this._arcade}))}if(r&&r.material){const e=r.material;u=h(u)||h(y)?se(u,y,e.color,e.alpha,Le,Je):se(u,y,null,null,Le,Je)}if(h(u)&&(u=Je,u[0]=1,u[1]=1,u[2]=1,u[3]=1),c.pickable=!0,c.castShadows=!r||r.castShadows,c.colorMixMode=r&&r.material?r.material.colorMixMode:1,c.edgeMaterial=r?r.edgeMaterial:null,l(this._symbologyOverride)&&(c.color=u,this._symbologyOverride(t,c),u=c.color),l(c.edgeMaterial)){const t=u[3]<=0?0:u[3]>=1&&(e.material.isOpaque||3===c.colorMixMode)?2:1;c.edgeMaterial===m&&t===g||(p={...c.edgeMaterial,opacity:_,objectTransparency:t},m=c.edgeMaterial,g=t),e.cachedEdgeMaterials[b]=p}else e.cachedEdgeMaterials[b]=Se;e.cachedSymbology[f+0]=Math.round(255*u[0]),e.cachedSymbology[f+1]=Math.round(255*u[1]),e.cachedSymbology[f+2]=Math.round(255*u[2]),e.cachedSymbology[f+3]=Math.round(255*u[3]),e.cachedSymbology[f+4]=c.colorMixMode|+c.castShadows<<4|+c.pickable<<5,f+=5}}_getFilteredEdgeMaterials(e){const t=this._getCachedEdgeMaterials(e);if(this.nodeCrossfadingEnabled||ot(t,this.fullOpacity),h(e.filteredIds)){return{hasEdges:t.some((e=>e!==Se)),perFeatureEdgeMaterials:t}}let i=0,s=!1;const r=t.map(((t,r)=>e.featureIds[r]!==e.filteredIds[i]?Se:(s=s||t!==Se,i++,t)));return{hasEdges:s,perFeatureEdgeMaterials:r}}_setObjectSymbolColors(e){if(!this._hasSymbolColors)return;const t=e.objectHandle,i=this._getSymbolColors(e);this._collection.setComponentData(t,i),this._stage.renderView.setNeedsRender()}_reloadAll(e=this.elevationOffset){this._removeAllNodeDataFromStage(e),null!=this._controller&&this._controller.restartNodeLoading()}_opacityChange(e){this.nodeCrossfadingEnabled&&this._crossfadeHelper.stopAllNodeFading(),this._nodeId2Meta.forEach((t=>{h(t)||(this._collection.updateMaterial(t.objectHandle,(t=>t.objectOpacity=e)),ot(t.cachedEdgeMaterials,e),this._updateEdgeRendering(t))}))}_updateMaterial(e){this._collection.updateMaterial(e.objectHandle,(e=>{e.commonMaterialParameters.slicePlaneEnabled=this.slicePlaneEnabled,e.usePBR=this._usePBR(),this._updateMaterialOverlay(e)}))}_updateMaterialOverlay(e){}_updateEngineObject(e){this._setObjectSymbolColors(e),this._applyFiltersToNode(e),this._addOrUpdateEdgeRendering(e),this._visibleGeometryChanged(e)}_slicePlaneEnabledChange(e){this._intersectionHandler&&(this._intersectionHandler.slicePlane=e),l(this._labeler)&&(this._labeler.slicePlaneEnabled=e),this._nodeId2Meta.forEach((t=>{h(t)||(this._collection.updateMaterial(t.objectHandle,(t=>{t.commonMaterialParameters.slicePlaneEnabled=e})),this._updateEdgeRendering(t,!1))}))}_updatePBR(){this._nodeId2Meta.forEach((e=>{h(e)||this._collection.updateMaterial(e.objectHandle,(e=>{e.usePBR=this._usePBR()}))})),this._hasLoadedPBRTextures=!0}_usePBR(){return!this._isIntegratedMesh&&this.view.qualitySettings.physicallyBasedRenderingEnabled}_updateEdgeRendering(e,t=!0){l(this._edgeView)&&this._edgeView.hasObject(e.objectHandle)&&this._addOrUpdateEdgeRendering(e,t)}_forAllNodes(e){this._nodeId2Meta.forEach(e)}_forAllFeatures(e,t,i=0){a(this._nodeId2Meta,(s=>{if(h(s))return!1;if(l(t)){switch(t(s)){case 0:return!0;case 2:return!1}}let r=1;switch(i){case 1:r=this._forAllFeaturesOfNode(s,e);break;case 0:r=this._forVisibleFeaturesOfNode(s,e);break;case 2:r=this._forAllFeaturesOfNodeInClippingArea(s,e)}return 0===r}))}_forAllFeaturesOfNode(e,t){let i=1;const s=e.featureIds;for(let r=0;r<s.length;r++)if(i=t(s[r],r,e),0===i)return i;return i}_forVisibleFeaturesOfNode(e,t){let i=1;const s=e.featureIds;return this._collection.forEachVisibleComponent(e.objectHandle,(r=>(i=t(s[r],r,e),1===i))),i}_forAllFeaturesOfNodeInClippingArea(e,t){if(null==this._clippingArea)return this._forAllFeaturesOfNode(e,t);const i=this._boundingboxNodeTest(e,this._clippingArea);if(0===i)return 1;if(3===i)return this._forAllFeaturesOfNode(e,t);const s=1,r=e.featureIds,o=e.objectHandle,a=Ee(this._clippingArea,this._collection.getObjectTransform(o));for(let n=0;n<r.length;n++){if(!this._boundingboxFeatureTest(e,n,a))continue;const i=t(r[n],n,e);if(0===i)return i}return s}_createAttributes(e,t){const i={};null!=t.featureIds&&(i[this._getObjectIdField()]=t.featureIds[e]);const s=l(t.attributeInfo)&&t.attributeInfo.attributeData;if(l(s))for(const r of Object.keys(s))i[r]=xe(s[r],e);return i}_createGraphic(e,t){return this._createLayerGraphic(this._createAttributes(e,t))}highlight(e){const t=this._highlights;if("number"==typeof e||e instanceof i?e=[e]:e instanceof s&&(e=e.toArray()),Array.isArray(e)&&e.length>0){if(e[0]instanceof i){const i=e,s=this.i3slayer.fieldsIndex,r=this._getObjectIdField(),o=i.map((e=>De(s,e.attributes,r))),{set:a,handle:n}=t.acquireSet();return t.setFeatureIds(a,o),n}if("number"==typeof e[0]){const i=e,{set:s,handle:r}=t.acquireSet();return t.setFeatureIds(s,i),r}}return rt}_visibleGeometryChanged(e){this._elevationProvider&&(this._elevationProvider.objectChanged(e.node),null==this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle=p((()=>{this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle=null}))))}get performanceInfo(){const e={displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null,index:0,nodes:this._nodeId2Meta.size,"Total GPU Memory Estimate":(this.gpuMemoryEstimate/1048576).toFixed(1)+"MB","Geometry Memory Estimate":(this.geoMemoryEstimate/1048576).toFixed(1)+"MB","Texture Memory Estimate":(this.texMemoryEstimate/1048576).toFixed(1)+"MB","Unloaded Memory Estimate":(this.getUnloadedMemory()/1048576).toFixed(1)+"MB",...this._collection?this._collection.performanceInfo:{shown:0,hidden:0}};return l(this._memCache)&&(e.MemCache=Math.round(100*this._memCache.hitRate)+"% hit"),this._controller&&(this._idbCacheEnabled&&(e.IDBCache=Math.round(100*this._idbCache.getHitRate())+"% hit"),this._controller.updateStats(e)),e}get test(){const e=this;return{controller:this._controller,labeler:this._labeler,get visibleObjectIds(){const t=[];return e._forAllFeatures((e=>(t.push(e),1)),null,0),t.sort(((e,t)=>e-t)),t},get numNodes(){return e._nodeId2Meta.size}}}getNodeOpacityByIndex(e){const t=this._nodeId2Meta.get(e);return this.getNodeOpacity(t)}getNodeOpacity(e){return l(e)?this._collection.getMaterial(e.objectHandle).objectOpacity:0}isNodeFullyFadedIn(e){return this._crossfadeHelper.isNodeFullyFadedIn(e)}getNodeCrossfadeMetaData(e){return this._nodeId2Meta.get(e)}markNodeToRemove(e){this._controller&&this._controller.markNodeToRemove(e)}removeMarkedNodes(){this._controller&&this._controller.removeMarkedNodes()}foreachCrossfadeNode(e){this._nodeId2Meta.forEach(((t,i)=>e(i,t)))}fadeNode(e,t,i){if(!this.nodeCrossfadingEnabled)return;const s=this._nodeId2Meta.get(e);l(s)&&this._crossfadeHelper.fadeNode(e,s,t,i)}setNodeOpacityByIndex(e,t){const i=this._nodeId2Meta.get(e);l(i)&&this._setNodeOpacity(i,t)}_setNodeOpacity(e,t){this._collection.updateMaterial(e.objectHandle,(e=>e.objectOpacity=t)),this._setNodeEdgeOpacity(e,t)}_setNodeEdgeOpacity(e,t){if(!l(this._edgeView)||!e.cachedEdgeMaterials)return;ot(e.cachedEdgeMaterials,t);const i=e.objectHandle;this._edgeView.hasObject(i)&&this._edgeView.updateAllComponentOpacities(i,t)}get _hasModifications(){return this._modifications&&this._modifications.length>0}updateNodeModificationStatus(e){const t=e.length;if(!this._hasModifications||t<=0||!0!==this._i3sWasmLoaded)return;const i=this.i3slayer.uid,s=st(e);if(l(s)){const t={context:i,buffer:s.buffer};te(t);const r=new Float64Array(s.buffer);e.forAll(((e,t)=>{const i=r[t],s=ie(i);e.imModificationImpact=s,0!==s&&this._controller.invalidateGeometryVisibility(e.index)}))}}notifyUpdate(){this.notifyChange("updating")}notifyLODUpdate(){this._controller.notifyLODUpdate()}isUpdating(){return!(!this._controller||!this._controller.updating)||!!this._visibleGeometryChangedSchedulerHandle||l(this._labeler)&&this._labeler.updating||this._crossfadeHelper.updating||this._i3sWasmLoaded instanceof Promise||this._asyncModuleLoading>0}};return f.lastIndex=0,e([v()],f.prototype,"_hasLoadedPBRTextures",void 0),e([v()],f.prototype,"_asyncModuleLoading",void 0),e([v()],f.prototype,"_visibleGeometryChangedSchedulerHandle",void 0),e([v()],f.prototype,"view",void 0),e([v()],f.prototype,"i3slayer",void 0),e([v()],f.prototype,"_controller",void 0),e([v()],f.prototype,"_labeler",void 0),e([v()],f.prototype,"updating",void 0),e([v()],f.prototype,"suspended",void 0),e([v()],f.prototype,"holeFilling",void 0),e([v(Ae)],f.prototype,"updatingProgress",void 0),e([v({readOnly:!0,aliasOf:"_controller.updatingProgress"})],f.prototype,"updatingProgressValue",void 0),e([v({readOnly:!0})],f.prototype,"hasTexturesOrVertexColors",null),e([v({readOnly:!0})],f.prototype,"rendererTextureUsage",null),e([v({readOnly:!0})],f.prototype,"elevationOffset",null),e([v({type:Boolean})],f.prototype,"slicePlaneEnabled",void 0),e([v()],f.prototype,"supportedTextureEncodings",null),e([v()],f.prototype,"uncompressedTextureDownsamplingEnabled",null),e([v({type:[q]})],f.prototype,"_modifications",void 0),f=o=e([I("esri.views.3d.layers.I3SMeshView3D")],f),f},We=P(),$e=P(),Ke=Te(),Je=[0,0,0,0],Qe=new t([0,0,0,0]),Xe=[0,0,0,0];function Ye(e){const t=e.metallicRoughness;return t&&t.baseColorTextureId>=0||t&&t.metallicRoughnessTextureId>=0||e.normalTextureId>=0||e.emissiveTextureId>=0||e.occlusionTextureId>=0}function Ze(e){return"geometryData"in e}function et(e){return l(e)&&f(e.data)}function tt(e,t){let i=1024+e.interleavedVertexData.byteLength+(e.indices?e.indices.byteLength:0)+e.positionData.data.byteLength+e.positionData.indices.byteLength;if(l(t))for(const s of t)l(s)&&f(s.data)&&(i+=s.data.byteLength);return i}function it(e,t){return t.byteSize>qe?(Ge.warn(`Node is too big to store in IndexedDB cache: ${e.id} (${t.byteSize} bytes)`),!1):t.byteSize>0}function st(e){if(0===e.length)return null;const t=10*e.length,i=new Float64Array(t);return e.forAll(((e,t)=>{let s=e.serviceObb;h(s)&&(s=Ke,E(s.center,e.mbs),s.halfSize[0]=s.halfSize[1]=s.halfSize[2]=e.mbs[3]);const r=10*t;i[r+0]=s.center[0],i[r+1]=s.center[1],i[r+2]=s.center[2],i[r+3]=s.halfSize[0],i[r+4]=s.halfSize[1],i[r+5]=s.halfSize[2],i[r+6]=s.quaternion[0],i[r+7]=s.quaternion[1],i[r+8]=s.quaternion[2],i[r+9]=s.quaternion[3]})),i}const rt={remove(){},pause(){},resume(){}};function ot(e,t){e.forEach((e=>e.opacity=t))}export{ze as I3SMeshView3D};
