/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{disposeMaybe as t,destroyMaybe as i}from"../../../core/maybe.js";import{createAbortController as r,isAborted as l}from"../../../core/promiseUtils.js";import{whenTrueOnce as s}from"../../../core/watchUtils.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import n from"../../2d/engine/vectorTiles/SchemaHelper.js";import h from"../../2d/engine/vectorTiles/TileHandler3D.js";import p from"../../2d/engine/vectorTiles/VTLPainter3D.js";import c from"../../2d/engine/vectorTiles/style/StyleRepository.js";import{LayerView3D as m}from"./LayerView3D.js";import{TiledLayerView3D as d}from"./TiledLayerView3D.js";import{test as y}from"../terrain/terrainUtils.js";import f from"../../layers/LayerView.js";let g=class extends(d(m(f))){constructor(e){super(e),this.type="vector-tile-3d"}initialize(){const e=y.force512VTL?this.layer.tileInfo:this.layer.compatibleTileInfo256,t=this._getTileInfoSupportError(e,this.layer.fullExtent);if(t)return void this.addResolvingPromise(Promise.reject(t));const{basemapTerrain:i,spatialReference:o,pixelRatio:a}=this.view,m=s(this.view,"basemapTerrain.tilingSchemeLocked").then((()=>{const e=i.tilingScheme,t=e.pixelSize;let r;this.schemaHelper=new n(t,o.isGeographic),r=256===t?this.layer.compatibleTileInfo256:this.view.spatialReference.isGeographic?this.layer.compatibleTileInfo512:this.layer.tileInfo;const l=this._getTileInfoCompatibilityError(r,e);if(l)throw l;this._set("tileInfo",r)}));this._tileHandlerController=r();const d=this.view.resourceController;this._memCache=d.memoryController.getMemCache(this.layer.uid,(e=>e.release()));const{style:f,spriteUrl:g,glyphsUrl:u}=this.layer.currentStyleInfo,_=new c(f,{spriteUrl:g,glyphsUrl:u}),H=i.mapTileRequester;this._tileHandler=new h(this.layer,_,a,this._memCache,H);const v=this._tileHandlerController.signal,C=e=>d.schedule(e),T=this._tileHandler.start({signal:v,schedule:C}),w=this._tileHandler.spriteMosaic;w.then((e=>{!l(v)&&this._tileHandler&&(this.painter=new p(e,this._tileHandler.glyphMosaic))})),T.then((()=>this._tileHandlerController=null));const j=()=>{this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=r(),this._memCache.clear();const{style:e,spriteUrl:t,glyphsUrl:i}=this.layer.currentStyleInfo,l=new c(e,{spriteUrl:t,glyphsUrl:i}),s=new h(this.layer,l,a,this._memCache,H),o=s.start({signal:this._tileHandlerController.signal,schedule:C}),n=s.spriteMosaic;o.then((()=>this._tileHandlerController=null)),this.updatingHandles.addPromise(Promise.all([o,n]).then((([,e])=>{const t=this._tileHandler,i=this.painter;this.painter=new p(e,s.glyphMosaic),this._tileHandler=s,this.emit("data-changed"),t.destroy(),i&&i.dispose()})))};this.updatingHandles.add(this,"layer.currentStyleInfo",j),this.updatingHandles.add(this,"view.pixelRatio",j);const I=Promise.all([m,T,w]);this.addResolvingPromise(I)}destroy(){this.painter=t(this.painter),this._tileHandlerController&&(this._tileHandlerController.abort(),this._tileHandlerController=null),i(this._tileHandler),this._memCache=i(this._memCache),this._tileHandler=null}get dataLevelRange(){const e=this.tileInfo.lods,t=e[0].scale,i=e[e.length-1].scale,r=this.levelRangeFromScaleRange(t,i);return 1===r.minLevel&&256===this.tileInfo.size[0]&&(r.minLevel=0),r}async fetchTile(e,t,i,r){return this._tileHandler.getVectorTile(e,t,i,r)}};e([o({aliasOf:"layer.fullExtent"})],g.prototype,"fullExtent",void 0),e([o()],g.prototype,"layer",void 0),e([o()],g.prototype,"tileInfo",void 0),e([o()],g.prototype,"dataLevelRange",null),e([o()],g.prototype,"updatingProgressValue",void 0),g=e([a("esri.views.3d.layers.VectorTileLayerView3D")],g);var u=g;export default u;
