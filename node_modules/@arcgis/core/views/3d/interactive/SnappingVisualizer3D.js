/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../Color.js";import"../../../core/has.js";import{destroyHandle as n}from"../../../core/handleUtils.js";import{e as t}from"../../../chunks/vec3.js";import{c as i}from"../../../chunks/vec3f64.js";import{ExtendedLineVisualElement as o}from"./visualElements/ExtendedLineVisualElement.js";import{ParallelLineVisualElement as r}from"./visualElements/ParallelLineVisualElement.js";import{PointVisualElement as a}from"./visualElements/PointVisualElement.js";import{RightAngleQuadVisualElement as l}from"./visualElements/RightAngleQuadVisualElement.js";import{defaults as s}from"../../interactive/snapping/Settings.js";import{anyMapPointToRender as c,anyMapPointsToRenderWithEqualZ as d}from"../../interactive/snapping/snappingUtils.js";import{SnappingVisualizer as p}from"../../interactive/snapping/SnappingVisualizer.js";class m extends p{visualizeIntersectionPoint(t,i){const{coordinateHelper:o,elevationInfo:r,view:l}=i;return n(new a({view:l,primitive:"circle",geometry:o.createPoint(t.intersectionPoint),elevationInfo:r,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:e.toUnitRGBA(s.orange),pixelSnappingEnabled:!1}))}visualizePoint(t,i){const{coordinateHelper:o,elevationInfo:r,view:l}=i;return n(new a({view:l,primitive:"circle",geometry:o.createPoint(t.point),elevationInfo:r,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:e.toUnitRGBA(s.orange),pixelSnappingEnabled:!1}))}visualizeLine(e,t){const{coordinateHelper:i,elevationInfo:o,view:r}=t;return n(this.createLineSegmentHintFromMap(e.type,e.lineStart,e.lineEnd,i,o,r,e.fadeLeft,e.fadeRight))}visualizeParallelSign(i,o){const{coordinateHelper:a,elevationInfo:l,view:d}=o,p=c(i.lineStart,a,l,o.view),m=c(i.lineEnd,a,l,o.view),u=t(m,p,m,.5),v=new r({view:d,attached:!1,offset:s.parallelLineHintOffset,length:s.parallelLineHintLength,width:s.parallelLineHintWidth,color:e.toUnitRGBA(s.orange),location:u,renderOccluded:16});return v.setDirectionFromPoints(p,u),v.attached=!0,n(v)}visualizeRightAngleQuad(t,i){const{coordinateHelper:o,elevationInfo:r,view:a}=i;return n(new l({view:a,attached:!0,color:e.toUnitRGBA(s.orange),renderOccluded:2,outlineRenderOccluded:16,outlineColor:e.toUnitRGBA(s.orange),outlineSize:s.rightAngleHintOutlineSize,size:s.rightAngleHintSize,geometry:{previous:c(t.previousVertex,o,r,a),center:c(t.centerVertex,o,r,a),next:c(t.nextVertex,o,r,a)}}))}createLineSegmentHintFromMap(e,n,t,o,r,a,l=!0,s=!0){const c=i(),p=i();return d(n,t,o,r,a,c,p),this.createLineSegmentHint(e,a,c,p,l,s)}createLineSegmentHint(n,t,i,r,a=!0,l=!0){const c=new o({view:t,extensionType:3,start:i,end:r,color:e.toUnitRGBA(s.orange),renderOccluded:16});switch(n){case 0:c.width=s.lineHintWidthTarget,c.fadedExtensions={start:0,end:s.lineHintFadedExtensions};break;case 2:c.width=s.lineHintWidthReference,c.fadedExtensions={start:0,end:0};break;case 1:c.width=s.lineHintWidthReference,c.fadedExtensions={start:a?s.lineHintFadedExtensions:0,end:l?s.lineHintFadedExtensions:0}}return c.attached=!0,c}}export{m as SnappingVisualizer3D};
