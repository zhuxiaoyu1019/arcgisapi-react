/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import t from"../../../../../core/Accessor.js";import i from"../../../../../core/Handles.js";import{destroyMaybe as s,isSome as r,unwrapOr as n,unwrap as a,applySome as o,isNone as l}from"../../../../../core/maybe.js";import{screenPointObjectToArray as d}from"../../../../../core/screenUtils.js";import{property as h}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as u}from"../../../../../core/accessorSupport/decorators/subclass.js";import{reactionInit as c,autorun as p}from"../../../../../core/accessorSupport/trackingUtils.js";import{c as _}from"../../../../../chunks/vec3f64.js";import{fromPoints as m,create as g}from"../../../../../geometry/support/lineSegment.js";import{defaultUnitPropertyMetadata as w}from"../../../../../properties/defaultUnit.js";import{createSphereManipulator as y}from"../../manipulatorUtils.js";import{PickResult as v}from"./PickResult.js";import{copyParameter as b,pointToPointScreenDistance as L}from"../support/viewUtils.js";import{LaserlineVisualElement as P}from"../../visualElements/LaserlineVisualElement.js";import{getElevationAtPoint as f}from"../../../support/ElevationProvider.js";import{Intersector as V}from"../../../webgl-engine/lib/Intersector.js";const M={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5};var D;!function(e){e.Manipulators="manipulators",e.AnalysisViewDestroyed="analysis-view-destroyed",e.AnalysisView="analysis-view"}(D||(D={}));let C=class extends t{constructor(e){super(e),this._state="pending",this._visible=!1,this._laserLine=null,this._handles=new i,this._cursorPosition=_(),this._startPosition=_(),this._endPosition=_(),this._lastDraggedHandle=null,this.analysisView=null,this._view=e.model.sceneView,this._intersector=new V(this._view.state.viewingMode),this._intersector.options.store=0}normalizeCtorArgs(e){return{...e,params:e.params?b(M,e.params):b(M,{})}}initialize(){this._promise=this._initialize()}async _initialize(){switch(this._state){case"pending":break;case"destroyed":return Promise.reject("DirectLineMeasurement3DView already destroyed")}const e=this.model.layer,t=await this._view.whenLayerView(e);return await t.whenReady(),this._set("analysisView",t),this._laserLine=new P({view:this._view,attached:!0}),this._visible&&this._updateVisibility(this._visible),this._connectToAnalysisView(),this._state="ready",t}destroy(){switch(this._state){case"pending":return void(this._state="destroyed");case"ready":break;case"destroyed":default:return}this.hide(),this._handles=s(this._handles),this._laserLine=s(this._laserLine),this._state="destroyed"}when(){return this._promise.then((()=>{}))}async whenMessages(){return this._promise.then((e=>e.whenMessages()))}get requiresCursorPoint(){return"initial"===this.model.state&&this.model.active}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get viewMode(){const e=this.analysisView;return r(e)&&!e.destroyed?e.viewMode:0}get measurementMode(){const e=this.analysisView;return r(e)&&!e.destroyed?e.actualVisualizedMeasurement:1}get unit(){return n(this._cachedUnit,this._defaultUnit)}set unit(e){this._cachedUnit=e}get testData(){const e=this._laserLine.testData,t=a(this.analysisView).testData;return{labels:null==t?void 0:t.labels,stripeLength:null==t?void 0:t.stripeLength,laserLineRenderer:{heightManifoldEnabled:!!r(e)&&e.heightManifoldEnabled,heightManifoldTarget:r(e)?e.heightManifoldTarget:null,pointDistanceEnabled:!!r(e)&&e.pointDistanceEnabled,pointDistanceOrigin:r(e)?e.pointDistanceOrigin:null,pointDistanceTarget:r(e)?e.pointDistanceTarget:null,lineVerticalPlaneEnabled:!!r(e)&&e.lineVerticalPlaneEnabled}}}get directLabelText(){const e=this.analysisView;return r(e)&&!e.destroyed?e.directLabelText:null}get horizontalLabelText(){const e=this.analysisView;return r(e)&&!e.destroyed?e.horizontalLabelText:null}get verticalLabelText(){const e=this.analysisView;return r(e)&&!e.destroyed?e.verticalLabelText:null}createManipulators(){const e=()=>{const e=y(this._view,this.params.handleColor,this.params.handleOpacity);return e.available=!1,e.radius=this.params.handleRadius,e},t=e(),i=e();this.model.startPoint&&(t.location=a(this.model.startPoint),t.available=!0),this.model.endPoint&&(i.location=a(this.model.endPoint),i.available=!0);const s=()=>{let e=this._lastDraggedHandle;t.grabbing&&!i.grabbing&&(e="start"),i.grabbing&&!t.grabbing&&(e="end"),t.grabbing||i.grabbing||(e=null);const s=e!==this._lastDraggedHandle;this._lastDraggedHandle=e,s&&this.visible&&this._updateLaserLine()},r=t.events.on("grab-changed",s),n=i.events.on("grab-changed",s);return this._handles.add([r,n],D.Manipulators),{start:t,end:i}}show(){switch(this._state){case"ready":this._visible||this._updateVisibility(!0);break;case"pending":this._visible=!0;break;case"destroyed":default:return}}hide(){switch(this._state){case"ready":this._visible&&this._updateVisibility(!1);break;case"pending":this._visible=!1;break;case"destroyed":default:return}}finishMeasurement(){this.model.finishMeasurement()}_connectToAnalysisView(){this._handles.remove(D.AnalysisView),this._handles.add([c((()=>o(this.analysisView,(e=>e.destroyed))),(e=>{e&&this._handles.remove(D.AnalysisView)})),c((()=>["measured"===this.model.state,this.analysisView]),(([e,t])=>{o(t,(t=>t.allowVisualElementsOrientationChange=!e))})),p((()=>this._updateLaserLine())),p((()=>this._updateCursorPosition())),p((()=>this._updateStartPosition())),p((()=>this._updateEndPosition())),c((()=>({unit:this.unit,layerView:this.analysisView})),(({unit:e,layerView:t})=>o(t,(t=>t.unit=e))))],D.AnalysisView)}_updateVisibility(e){this._visible=e,e?(this.model.layer.visible=!0,this._laserLine.style={innerColor:this.params.laserLineInnerColor,innerWidth:this.params.laserLineInnerWidth,glowColor:this.params.laserLineGlowColor,glowWidth:this.params.laserLineGlowWidth,glowFalloff:this.params.laserLineGlowFalloff,globalAlpha:this.params.laserLineGlobalAlpha},this._laserLine.visible=!0,this._updateCursorPosition(),this._updateStartPosition(),this._updateEndPosition(),this._updateLaserLine()):(this.model.layer.visible=!1,this._laserLine.visible=!1,this._view.cursor=null)}pick(e){const t=this._view.spatialReference,i=d(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const s=this._intersector.results.min,r=_();if(!s.getIntersectionPoint(r))return new v;const n=this._view.renderCoordsHelper.fromRenderCoords(r,t);if(l(n))return new v;const a="TerrainRenderer"===s.intersector?"ground":"feature";return new v(a,r,n)}getElevation(e){return this._view.basemapTerrain.ready?n(f(this._view.elevationProvider,e),0):0}overlappingHandles(e,t){return L(e,t,this._view)<=this.params.handleRadius}_updateCursorPosition(){this.model.cursorPoint&&this._view.renderCoordsHelper.toRenderCoords(this.model.cursorPoint,this._cursorPosition)}_updateStartPosition(){r(this.model.startPoint)&&this._view.renderCoordsHelper.toRenderCoords(this.model.startPoint,this._startPosition)}_updateEndPosition(){r(this.model.endPoint)&&this._view.renderCoordsHelper.toRenderCoords(this.model.endPoint,this._endPosition)}_getFocusPosition(){const e=this.model,t=this.analysisView,i=r(t)&&!t.destroyed&&1===t.visualizedMeasurement,s=1===this.viewMode&&i;switch(e.state){case"drawing":return s?this._startPosition:e.endPoint?this._endPosition:this._startPosition;case"editing":return s?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return e.cursorPoint?this._cursorPosition:null}}_getFocusSpherePosition(){return"drawing"===this.model.state||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition}_updateLaserLine(){if(!this.visible)return;const{state:e,active:t,startPoint:i}=this.model,s=this._getFocusPosition(),n=this.viewMode,a=this.analysisView,o=this.params.laserLineEnabled&&!!s&&"measured"!==e&&t;if(o&&r(a)&&!a.destroyed){const e=1===a.actualVisualizedMeasurement;this._laserLine.heightManifoldTarget=e?s:null;const t=o&&!!i&&2===a.actualVisualizedMeasurement;this._laserLine.pointDistanceLine=t?{origin:this._getFocusSpherePosition(),target:s}:null;const r=o&&2===n;this._laserLine.lineVerticalPlaneSegment=r?m(this._startPosition,this._endPosition,T):null}else this._laserLine.heightManifoldTarget=null,this._laserLine.pointDistanceLine=null,this._laserLine.lineVerticalPlaneSegment=null}};e([h()],C.prototype,"_view",void 0),e([h()],C.prototype,"_visible",void 0),e([h()],C.prototype,"_laserLine",void 0),e([h()],C.prototype,"params",void 0),e([h()],C.prototype,"model",void 0),e([h({readOnly:!0})],C.prototype,"analysisView",void 0),e([h()],C.prototype,"requiresCursorPoint",null),e([h()],C.prototype,"visible",null),e([h()],C.prototype,"viewMode",null),e([h()],C.prototype,"measurementMode",null),e([h()],C.prototype,"unit",null),e([h()],C.prototype,"_cachedUnit",void 0),e([h(w)],C.prototype,"_defaultUnit",void 0),e([h()],C.prototype,"testData",null),e([h()],C.prototype,"directLabelText",null),e([h()],C.prototype,"horizontalLabelText",null),e([h()],C.prototype,"verticalLabelText",null),C=e([u("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],C);const T=g();export{C as DirectLineMeasurement3DView};
