/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as i}from"../../../../../chunks/tslib.es6.js";import e from"../../../../../Color.js";import t from"../../../../../core/Accessor.js";import n from"../../../../../core/Handles.js";import{makeHandle as o,handlesGroup as s}from"../../../../../core/handleUtils.js";import{removeMaybe as r,destroyMaybe as l}from"../../../../../core/maybe.js";import{property as a}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as c}from"../../../../../core/accessorSupport/decorators/subclass.js";import{reactionInit as u}from"../../../../../core/accessorSupport/trackingUtils.js";import{c as d}from"../../../../../chunks/mat4f64.js";import{f as h}from"../../../../../chunks/vec3.js";import{d as m,c as f}from"../../../../../chunks/vec3f64.js";import{LineVisualElement as p}from"../../visualElements/LineVisualElement.js";let g=class extends t{constructor(i){super(i),this._handle=null,this._analysisHandles=new n,this._lineOfSightVisualizations=[]}initialize(){this._handle=this._connectAnalyses()}destroy(){this._handle=r(this._handle),this._analysisHandles=l(this._analysisHandles)}get _viewData(){return this.model.viewData}get _analyses(){return this._viewData.analyses}get _configuration(){return this._viewData.configuration.lineOfSight}createLineOfSightVisualization(){const i=this._configuration,t=this.view,n={visibleLineVisualElement:new p({view:t,attached:!0,width:i.outerWidth,color:e.toUnitRGBA(i.visibleOuterColor),innerWidth:i.innerWidth,innerColor:e.toUnitRGBA(i.visibleInnerColor)}),occludedLineVisualElement:new p({view:t,attached:!0,width:i.outerWidth,color:e.toUnitRGBA(i.occludedOuterColor),innerWidth:i.innerWidth,innerColor:e.toUnitRGBA(i.occludedInnerColor)}),undefinedLineVisualElement:new p({view:t,attached:!0,width:i.outerWidth,color:e.toUnitRGBA(i.undefinedOuterColor),innerWidth:i.innerWidth,innerColor:e.toUnitRGBA(i.undefinedInnerColor)})};return this._lineOfSightVisualizations.push(n),n}destroyLineOfSightVisualization(i){i.visibleLineVisualElement=l(i.visibleLineVisualElement),i.occludedLineVisualElement=l(i.occludedLineVisualElement),i.undefinedLineVisualElement=l(i.undefinedLineVisualElement),this._lineOfSightVisualizations.splice(this._lineOfSightVisualizations.indexOf(i),1)}updateLineOfSightVisualization(i,t){const n=this.model.visible,o=this._configuration,{computationResult:s,inputPoints:r}=i,{start:l,end:a,intersection:c,isValid:u,isTargetVisible:d}=s,{observer:f}=r,p=V;p[12]=f[0],p[13]=f[1],p[14]=f[2];const g=h(v,l,f),O=h(y,a,f),L=h(_,c,f),{visibleLineVisualElement:C,occludedLineVisualElement:b,undefinedLineVisualElement:S}=t;C.geometry=null,b.geometry=null,S.geometry=null,u?d?(C.geometry=[[m(g),m(O)]],C.transform=p,C.color=e.toUnitRGBA(o.visibleOuterColor)):(C.geometry=[[m(g),m(L)]],C.transform=p,C.color=e.toUnitRGBA(o.occludedOuterColor),b.geometry=[[m(L),m(O)]],b.transform=p):(S.geometry=[[m(g),m(O)]],S.transform=p),C.visible=n,b.visible=n,S.visible=n}getLineOfSightVisualizationDependencies(i){const{computationResult:e}=i,{occludedOuterColor:t,visibleOuterColor:n}=this._configuration;return{computationResult:e,occludedOuterColor:t,visibleOuterColor:n,visible:this.model.visible}}testData(){return{visualizations:this._lineOfSightVisualizations}}_connectAnalysis(i){const e=this._analysisHandles;if(e.has(i))return;const t=this.createLineOfSightVisualization();e.add([u((()=>this.getLineOfSightVisualizationDependencies(i)),(()=>this.updateLineOfSightVisualization(i,t))),o((()=>this.destroyLineOfSightVisualization(t)))])}_disconnectAnalysis(i){this._analysisHandles.remove(i)}_connectAnalyses(){let i=null;return s([u((()=>this._analyses),(e=>{i=r(i),i=e.on("change",(i=>this._onAnalysesCollectionChange(i))),this._onAnalysesCollectionChange({target:e,added:e.items,removed:[],moved:[]})})),o((()=>i=r(i)))])}_onAnalysesCollectionChange(i){i.added.forEach((i=>this._connectAnalysis(i))),i.removed.forEach((i=>this._disconnectAnalysis(i)))}};i([a({constructOnly:!0})],g.prototype,"model",void 0),i([a({constructOnly:!0})],g.prototype,"view",void 0),i([a()],g.prototype,"_viewData",null),i([a()],g.prototype,"_analyses",null),i([a()],g.prototype,"_configuration",null),g=i([c("esri.views.3d.interactive.graphics.LineOfSight.LineOfSightView")],g);const v=f(),y=f(),_=f(),V=d();export{g as LineOfSightView};
