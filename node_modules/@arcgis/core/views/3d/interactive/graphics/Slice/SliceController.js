/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import i from"../../../../../core/Accessor.js";import t from"../../../../../core/Handles.js";import a from"../../../../../core/Logger.js";import{isNone as r,isSome as l}from"../../../../../core/maybe.js";import{whenOnce as s}from"../../../../../core/watchUtils.js";import{property as n}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as o}from"../../../../../core/accessorSupport/decorators/subclass.js";import{a as c}from"../../../../../chunks/boundedPlane.js";import d from"../../../../../layers/Layer.js";import h from"../../../../../layers/buildingSublayers/BuildingComponentSublayer.js";import{isAlwaysDrapedLayer as y,shapeToPlane as u,forceHorizontalOrVertical as p,planeToShape as w}from"../../analysisTools/slice/sliceToolUtils.js";import v from"../../../../../widgets/Slice/SlicePlane.js";const V=a.getLogger("esri.views.3d.interactive.graphics.Slice.SliceController");let f=class extends i{constructor(e){super(e),this._handles=new t,this._internalChange=!1,this._currentSlicePlane=null,this.state="pending"}get ready(){return"ready"===this.state}initialize(){this._handles.add(this.layerView.layerViewData.excludedLayers.on("before-add",(e=>{const i=e.item;null!=i&&(i instanceof d||i instanceof h)?i instanceof d&&y(i)?(V.error("excludedLayers",`Layer '${i.title}, id:${i.id}' of type '${i.type}' can not be individually excluded from slicing. Use 'excludeGroundSurface' instead.`),e.preventDefault()):this.layerView.layerViewData.excludedLayers.includes(i)&&e.preventDefault():(V.error("excludedLayers","Invalid layer type, layer must derive from Layer or BuildingComponentSublayer"),e.preventDefault())}))),this._handles.add(s(this.view,"ready",(()=>this._initialize()),!0))}_initialize(){switch(this.state){case"pending":break;case"destroyed":return;case"ready":throw new Error("state error")}C(this.view,this),this._handles.add([this.layerView.layerViewData.watch("plane",(()=>{this._internalChange||this._updateSlicePlaneFromBoundedPlane(),this._updateLayerViews()}),!0),this.layerView.layerViewData.watch("excludeGroundSurface",(()=>this._updateLayerViews()),!0),this.layerView.layerViewData.excludedLayers.on("change",(()=>this._updateLayerViews())),this.layerView.watch(["active","visible"],(()=>{this._updateActiveController(),this._updateViewSlicePlane()}),!0),this.view.allLayerViews.on("change",(()=>this._updateLayerViews()))]),this._handles.add([this.analysis.watch("plane",(()=>{this._internalChange||(this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane())}),!0)],"analysis"),this._set("state","ready"),this._updateActiveController(),this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane()}destroy(){switch(this.state){case"destroyed":case"pending":return}this.layerView.active=!1,P(this.view,this),this._handles.destroy(),this.view.slicePlane=null,this.set("view",null),this._set("state","destroyed")}async whenReady(){return await s(this,"ready"),this}_updateBoundedPlaneFromSlicePlane(){const e=this.analysis.plane,i=this._currentSlicePlane;if(r(i)&&r(e)||l(i)&&l(e)&&e.equals(i))return;let t=null,a=null;l(e)&&(t=u(e,this.view.renderCoordsHelper,c()),l(t)?a={heading:e.heading,tilt:e.tilt,position:e.position,width:e.width,height:e.height}:console.warn("Failed slice plane conversion.")),this._currentSlicePlane=a,l(t)&&!this.analysis.tiltEnabled&&p(t,this.view.renderCoordsHelper,t),this._internalChange=!0,this.layerView.layerViewData.plane=t,this._internalChange=!1}_updateSlicePlaneFromBoundedPlane(){const e=this.layerView.layerViewData.plane,i=w(e,this.view.renderCoordsHelper,this.view.spatialReference,new v);let t=null;l(i)&&(t={heading:i.heading,tilt:i.tilt,position:i.position,width:i.width,height:i.height}),this._currentSlicePlane=t,l(e)&&(this.analysis.tiltEnabled||p(e,this.view.renderCoordsHelper,e)),this._internalChange=!0,this.analysis.plane=i,this._internalChange=!1,this._updateViewSlicePlane()}_updateActiveController(){if(_)return;const e=S(this.view);if(this.layerView.active)l(e.activeController)&&e.activeController!==this?(_=!0,e.activeController.layerView.active=!1,_=!1):l(e.activeController)&&e.activeController,this._updateLayerViews(),e.activeController=this;else{if(l(e.activeController)&&e.activeController!==this)return;l(e.activeController)&&e.activeController===this&&(e.activeController=null,this._updateLayerViews())}}_updateViewSlicePlane(){"ready"===this.state&&g(this.view)}_updateLayerViews(){const e=l(this.layerView.layerViewData.plane)&&this.layerView.visible&&this.layerView.active,i=[],t=e=>{"layers"in e?e.layers.forEach(t):i.push(e)};this.layerView.layerViewData.excludedLayers.forEach(t),this.view.allLayerViews.forEach((t=>{"slicePlaneEnabled"in t&&(t.slicePlaneEnabled=e&&i.indexOf(t.layer)<0),"sublayerViews"in t&&t.sublayerViews.forEach((t=>{t.slicePlaneEnabled=e&&i.indexOf(t.sublayer)<0}))})),null!=this.view.basemapTerrain&&(this.view.basemapTerrain.slicePlaneEnabled=e&&!this.layerView.layerViewData.excludeGroundSurface)}};e([n({readOnly:!0})],f.prototype,"state",void 0),e([n()],f.prototype,"view",void 0),e([n()],f.prototype,"analysis",void 0),e([n()],f.prototype,"layerView",void 0),e([n()],f.prototype,"ready",null),f=e([o("esri.views.3d.interactive.graphics.Slice.SliceController")],f);const m=new Map;let _=!1;function g(e){const i=S(e).activeController;l(i)&&l(i.layerView.layerViewData.plane)&&i.layerView.visible?e.slicePlane=i.layerView.layerViewData.plane:e.slicePlane=null}function C(e,i){m.has(e)||m.set(e,{all:[],activeController:null}),m.get(e).all.push(i)}function S(e){return m.get(e)}function P(e,i){if(!m.has(e))throw new Error("view expected in global slice register");const t=m.get(e),a=t.all.lastIndexOf(i);if(-1===a)throw new Error("controller expected in global slice register");t.all.splice(a,1),0===t.all.length&&m.delete(e)}export{f as SliceController};
