/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../core/Evented.js";import{isSome as t,unwrap as r,isNone as s}from"../../../../core/maybe.js";import{s as i,b as a,a as o}from"../../../../chunks/vec3.js";import{c as n}from"../../../../chunks/vec3f64.js";import{g as l,c as h,s as c}from"../../../../chunks/vec4.js";import{f as d,a as u}from"../../../../chunks/vec4f32.js";import{projectBuffer as p}from"../../../../geometry/projection.js";import{empty as m,expandWithBuffer as f,create as g}from"../../../../geometry/support/aaBoundingBox.js";import{makeDehydratedPoint as _}from"../../../../layers/graphics/dehydratedFeatures.js";import{getGeometryEffectiveElevationMode as y}from"../../../../support/elevationInfoUtils.js";import v from"../../../../symbols/support/ElevationInfo.js";import{DrapedVisualElementResources as w}from"./DrapedVisualElementResources.js";import{LaserlineVisualElement as O}from"./LaserlineVisualElement.js";import{VisualElementResources as C}from"./VisualElementResources.js";import{ElevationContext as R}from"../../layers/graphics/ElevationContext.js";import{geometryToRenderInfoDraped as b,createGeometry as D,geometryToRenderInfo as j}from"../../layers/graphics/lineUtils.js";import{computeAttachmentOriginLines as P}from"../../webgl-engine/lib/geometryDataUtils.js";import{RenderGeometry as E}from"../../webgl-engine/lib/RenderGeometry.js";import{RibbonLineMaterial as G}from"../../webgl-engine/materials/RibbonLineMaterial.js";class A{constructor(t){this.view=null,this._attachmentOrigin=_(0,0,0,null),this._attachmentOriginDirty=!0,this.events=new e,this._isDraped=!1,this._geometry=null,this._width=1,this._color=d(1,0,1,1),this._innerWidth=0,this._innerColor=d(1,1,1,1),this._stipplePattern=null,this._stippleOffColor=null,this._falloff=0,this._elevationInfo=null,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=8,this.resources=new C({view:t.view,createResources:e=>this.createResources(e),recreateGeometry:(e,t)=>(e.geometries.length=0,this.recreateGeometry(t,e.material,e.geometries),e.geometries)}),this._attachmentOrigin.spatialReference=t.view.spatialReference,this.drapedResources=new w({view:t.view,createResources:()=>this.createDrapedResources(),recreateGeometry:e=>{e.geometries=this.createRenderGeometriesDraped(e.material),this.attachmentOriginChanged()}});let r=!0;this._laserline=new O({view:t.view});for(const e in t)e in this?"attached"===e?r=t[e]:this[e]=t[e]:console.error("Cannot set unknown property",e);this.attached=r}destroy(){this.resources.destroy(),this.drapedResources.destroy(),this._laserline.destroy()}get isDraped(){return this._isDraped}set isDraped(e){e!==this._isDraped&&(this._isDraped=e,this.updateAttached(this.attached),this._laserline.attached=this.laserlineAttached)}get laserlineAttached(){return this.attached&&this.visible&&t(this._laserlineStyle)&&!this.isDraped&&this.laserlineEnabled}get visible(){return this.resources.visible}set visible(e){this.resources.visible=e,this.drapedResources.visible=e,this._laserline.attached=this.laserlineAttached}get attached(){return this.resources.attached||this.drapedResources.attached}set attached(e){this.updateAttached(e)}updateAttached(e){this.resources.attached=!this.isDraped&&e,this.drapedResources.attached=this.isDraped&&e,this._laserline.attached=this.laserlineAttached,this.attached&&this.attachmentOriginChanged()}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.resources.recreateGeometry(),this.drapedResources.recreateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this.updateMaterial())}get color(){return this._color}set color(e){l(e,this._color)||(h(this._color,e),this.updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this.updateMaterial())}get innerColor(){return this._innerColor}set innerColor(e){l(e,this._innerColor)||(h(this._innerColor,e),this.updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(e){const r=t(e)!==t(this._stipplePattern);this._stipplePattern=e,r?this.resources.recreate():this.updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(e){e&&this._stippleOffColor&&l(e,this._stippleOffColor)||(this._stippleOffColor=e?u(e):null,this.updateMaterial())}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this.updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.resources.recreateGeometry()}get laserlineStyle(){return this._laserlineStyle}set laserlineStyle(e){this._laserlineStyle=e,this._laserline.attached=this.laserlineAttached,t(e)&&(this._laserline.style=e)}get laserlineEnabled(){return this._laserlineEnabled}set laserlineEnabled(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,this._laserline.attached=this.laserlineAttached)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}get attachmentOrigin(){if(!this._attachmentOriginDirty)return this._attachmentOrigin;const e=t(this.resources.resources)?this.resources.resources.geometries:null;if(!e||0===e.length)return null;i(S,0,0,0);let s=0;for(const t of e){const e=t.vertexAttributes.get("position"),i=t.indices.get("position"),o=r(this.resources.resources).material.isClosed(e.data,i);P(e,i,o,I)&&(a(S,S,I),s++)}return 0===s?null:(o(S,S,1/s),this.view.renderCoordsHelper.fromRenderCoords(S,this._attachmentOrigin),this._attachmentOriginDirty=!1,this._attachmentOrigin)}updateMaterial(){t(this.resources.resources)&&this.resources.resources.material.setParameterValues(this.materialParameters),t(this.drapedResources.resources)&&this.drapedResources.resources.material.setParameterValues(this.materialParameters)}get isClosed(){return t(this.geometry)&&"polygon"===this.geometry.type}get materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,isClosed:this.isClosed,falloff:this._falloff,innerColor:this._innerColor,innerWidth:this._innerWidth,join:"round",stippleIntegerRepeats:!0,polygonOffset:!0,renderOccluded:this.normalizedRenderOccluded}}get normalizedRenderOccluded(){return this.isDraped&&8===this._renderOccluded?4:this._renderOccluded}recreateGeometry(e,t,r){const s=this.createRenderGeometries();for(const i of s)e.addGeometry(i,t),r.push(i);this.attachmentOriginChanged()}attachmentOriginChanged(){this._attachmentOriginDirty=!0,this.events.emit("attachment-origin-changed")}createResources(e){const t=new G(this.materialParameters),r=[];return this.recreateGeometry(e,t,r),{material:t,geometries:r,forEach:e=>{e(t),r.forEach(e)}}}createDrapedResources(){const e=new G(this.materialParameters);return{material:e,geometries:this.createRenderGeometriesDraped(e)}}createRenderGeometriesDraped(e){const t=this.geometry;if(s(t))return[];const r=b(t,this.view.basemapTerrain.spatialReference),i=[];for(const{position:s}of r.lines){const t={attributeData:{position:s},removeDuplicateStartEnd:this.isClosed?1:0},r=new E(D(t),e),a=m(M);f(a,s),c(r.boundingSphere,.5*(a[0]+a[3]),.5*(a[1]+a[4]),0,.5*Math.sqrt((a[3]-a[0])*(a[3]-a[0])+(a[4]-a[1])*(a[4]-a[1]))),i.push(r)}return i}calculateMapBounds(e){if(s(this.resources.resources))return!1;const t=this.view.renderCoordsHelper;for(const r of this.resources.resources.geometries){const s=r.vertexAttributes.get("position"),i=new Float64Array(s.data.length);p(s.data,t.spatialReference,0,i,this.view.spatialReference,0,s.data.length/3),f(e,i)}return!0}createRenderGeometries(){var e;const t=this.geometry;if(s(t))return[];const r=j(t,this.view.elevationProvider,this.view.renderCoordsHelper,R.fromElevationInfo(null!=(e=this.elevationInfo)?e:new v({mode:y(t,null)}))),i=[],a=[];for(const{position:s,mapPosition:o}of r.lines){const e={attributeData:{position:s,mapPosition:o},removeDuplicateStartEnd:this.isClosed?1:0};i.push(D(e)),a.push(s)}return this._laserline.pathVerticalPlane=a,i}}const M=g(),I=n(),S=n();export{A as OutlineVisualElement};
