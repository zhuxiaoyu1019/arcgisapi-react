/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import t from"../../../../../Graphic.js";import"../../../../../core/has.js";import i from"../../../../../core/Evented.js";import{HandleOwnerMixin as r}from"../../../../../core/HandleOwner.js";import{unwrapOr as a,isSome as s,destroyMaybe as o,isNone as n}from"../../../../../core/maybe.js";import{init as l}from"../../../../../core/watchUtils.js";import{property as c}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as p}from"../../../../../core/accessorSupport/decorators/subclass.js";import h from"../../../../../layers/GraphicsLayer.js";import{getEffectiveElevationMode as u}from"../../../../../support/elevationInfoUtils.js";import{settings as d}from"../settings.js";import{DrawOperation as m}from"./DrawOperation.js";import{SceneDrawSurface as v,ElevationDrawSurface as y}from"./drawSurfaces.js";import{OutlineVisualElement as _}from"../../visualElements/OutlineVisualElement.js";import{VerticesVisualElement as w}from"../../visualElements/VerticesVisualElement.js";import{GraphicState as f}from"../../../layers/graphics/GraphicState.js";import{createSquare as V,createRectangle as g,createCircle as G,createEllipse as O,createPolygon as E,createPolyline as x}from"../../../../draw/support/createUtils.js";import{createViewAlignedCoordinateSystem as S}from"../../../../draw/support/surfaceCoordinateSystems.js";import{InteractiveToolBase as C}from"../../../../interactive/InteractiveToolBase.js";let b=class extends(r(i.EventedMixin(C))){constructor(e){super(e),this.drawOperation=null,this._createGraphic=null,this._createGraphicState=null,this._outlineVisualElement=null,this._verticesVisualElement=null,this._activeVertexVisualElement=null,this.hasZ=!0,this.defaultZ=0,this.elevationInfo=null,this.snapToScene=!1,this.snappingManager=null,this.mode=null,this.geometryType=null,this.type="draw-3d"}get updating(){var e,t;return null!=(e=null==(t=this.drawOperation)?void 0:t.updating)&&e}initialize(){const e=a(this.elevationInfo,{mode:this.hasZ?"absolute-height":"on-the-ground",offset:0});this._internalGraphicsLayer=new h({elevationInfo:e,listMode:"hide",internal:!0}),this.view.map.layers.add(this._internalGraphicsLayer),this.drawOperation=new m({view:this.view,manipulators:this.manipulators,geometryType:j(this.geometryType),drawingMode:this.mode,hasZ:this.hasZ,defaultZ:this.defaultZ,snapToSceneEnabled:this.snapToScene,sceneDrawSurface:new v(this.view,e,[this._internalGraphicsLayer]),elevationDrawSurface:new y(e,this.defaultZ,this.view,this._internalGraphicsLayer),hasM:!1,elevationInfo:e,snappingManager:this.snappingManager}),this.drawOperation.on("vertex-add",(e=>this.onVertexAdd(e))),this.drawOperation.on("vertex-remove",(e=>this.onVertexRemove(e))),this.drawOperation.on("vertex-update",(e=>this.onVertexUpdate(e))),this.drawOperation.on("cursor-update",(e=>this.onCursorUpdate(e))),this.drawOperation.on("complete",(e=>this.onComplete(e))),this.complete()}destroy(){this.drawOperation.destroy(),this.drawOperation=null,this._destroyAllVisualisations(),this.view.map.remove(this._internalGraphicsLayer),this._set("view",null)}onInputEvent(e){this.drawOperation.onInputEvent(e)}_getCreateGeometry(e={operationComplete:!1}){if(null==this.drawOperation||0===this.drawOperation.numVertices)return null;const t=this.drawOperation.stagedVertex,i=this.drawOperation.committedVertices,r=i.slice();s(t)&&r.push(this.drawOperation.coordinateHelper.pointToArray(t));const a=s(t)?this.drawOperation.coordinateHelper.pointToArray(t):i.splice(-1)[0],o={regularVertices:null,activeVertex:null,full:null,outline:null},n=r.length,l=this.drawOperation.spatialReference,c="3d"===this.view.type&&"global"===this.view.viewingMode;switch(this.geometryType){case"point":o.regularVertices=i,o.activeVertex=a,o.full=this.drawOperation.coordinateHelper.createPointFromArray(r[0]);break;case"polyline":o.regularVertices=i,o.activeVertex=a,n>0&&(o.full=x([r],l,c));break;case"polygon":o.regularVertices=i,o.activeVertex=a,n>0&&(o.full=E([r],l,c,!0));break;case"circle":if(n>0){const t=S(this.view,r[0]);if(1===n&&e.operationComplete){const e=r[0],i=t.makeMapPoint(e[0]+T*this.view.resolution,e[1]);o.full=G([e,i],t,!0)}else 2===n&&(o.full=this.forceUniformSize?G(r,t,this.centered):O(r,t,this.centered))}break;case"rectangle":if(n>0){const t=S(this.view,r[0]);if(1===n&&e.operationComplete){const e=r[0],i=t.makeMapPoint(e[0]+T*this.view.resolution,e[1]);o.full=V([e,i],t,!0)}else 2===n&&(o.full=this.forceUniformSize?V(r,t,this.centered):g(r,t,this.centered))}break;default:return null}switch(this.geometryType){case"point":break;case"polyline":case"polygon":n>1&&(o.outline=x([r],l,c));break;case"circle":case"rectangle":s(o.full)&&"polygon"===o.full.type&&(o.outline=E(o.full.rings,l,c))}return o}_destroyAllVisualisations(){this._destroyCreateGraphic(),this._destroyOutlineVisualElement(),this._destroyVerticesVisualElement(),this._destroyStagedVerticesVisualElement()}_destroyCreateGraphic(){s(this._createGraphic)&&(this._internalGraphicsLayer.remove(this._createGraphic),this._createGraphic=o(this._createGraphic)),this._createGraphicState=null,this.handles.remove(L)}_destroyOutlineVisualElement(){this._outlineVisualElement=o(this._outlineVisualElement)}_destroyVerticesVisualElement(){this._verticesVisualElement=o(this._verticesVisualElement)}_destroyStagedVerticesVisualElement(){this._activeVertexVisualElement=o(this._activeVertexVisualElement)}_updateCreateGraphic(){const e=this._getCreateGeometry();if(n(e))return void this._destroyAllVisualisations();const i=this._internalGraphicsLayer.elevationInfo;s(e.outline)?n(this._outlineVisualElement)?(this._outlineVisualElement=new _({view:this.view,geometry:e.outline,elevationInfo:i,isDraped:s(this._createGraphicState)?this._createGraphicState.isDraped:"on-the-ground"===u(this.hasZ,i),attached:!1}),d.visualElements.lineGraphics.outline.apply(this._outlineVisualElement),d.visualElements.lineGraphics.shadowStyle.apply(this._outlineVisualElement),this._outlineVisualElement.attached=!0,this._outlineVisualElement.laserlineEnabled=!0):this._outlineVisualElement.geometry=e.outline:this._destroyOutlineVisualElement(),s(e.regularVertices)?n(this._verticesVisualElement)?(this._verticesVisualElement=new w({view:this.view,spatialReference:this.view.spatialReference,vertices:e.regularVertices,elevationInfo:i,renderOccluded:d.reshapeManipulators.vertex.renderOccluded,attached:!1}),this._verticesVisualElement.attached=!0):this._verticesVisualElement.vertices=e.regularVertices:this._destroyVerticesVisualElement(),s(e.activeVertex)?n(this._activeVertexVisualElement)?(this._activeVertexVisualElement=new w({view:this.view,spatialReference:this.view.spatialReference,vertices:[e.activeVertex],elevationInfo:i,renderOccluded:d.reshapeManipulators.vertex.renderOccluded,attached:!1}),this._activeVertexVisualElement.color=d.colorToVec4(d.reshapeManipulators.selected.color),this._activeVertexVisualElement.attached=!0):this._activeVertexVisualElement.vertices=[e.activeVertex]:this._destroyStagedVerticesVisualElement(),s(e.full)?n(this._createGraphic)?(this._createGraphic=new t({geometry:e.full,symbol:this.createGraphicSymbol,sourceLayer:this._internalGraphicsLayer,...this.graphicProperties}),this._internalGraphicsLayer.add(this._createGraphic),this.view.maskOccludee(this._createGraphic),this._createGraphicState=new f({graphic:this._createGraphic}),this.handles.add([this.view.trackGraphicState(this._createGraphicState),l(this._createGraphicState,"isDraped",(e=>{s(this._outlineVisualElement)&&(this._outlineVisualElement.isDraped=e)}))],L),this.notifyChange("createGraphic")):this._createGraphic.geometry=e.full:this._destroyCreateGraphic()}get createGraphic(){return this._createGraphic}set enabled(e){this.drawOperation.interactive=e,this._set("enabled",e)}set centered(e){this._set("centered",e),this._updateCreateGraphic()}set forceUniformSize(e){this._set("forceUniformSize",e),this._updateCreateGraphic()}reset(){}get canRedo(){return this.drawOperation.canRedo}redo(){this.drawOperation.redo()}get canUndo(){return this.drawOperation.canUndo}undo(){this.drawOperation.undo()}completeCreateOperation(){this.drawOperation.complete()}activate(){}deactivate(){this.drawOperation.isCompleted||this.drawOperation.cancel()}getVertexCoords(){return this.drawOperation.vertices}onVertexAdd(e){this._updateCreateGraphic(),this.emit("vertex-add",e)}onVertexRemove(e){this._updateCreateGraphic(),this.emit("vertex-remove",e)}onVertexUpdate(e){this._updateCreateGraphic(),this.emit("vertex-update",e)}onCursorUpdate(e){this._updateCreateGraphic(),this.emit("cursor-update",e)}onComplete(e){this._updateCreateGraphic();let i=null;if(this.drawOperation.isCompleted){const e=this._getCreateGeometry({operationComplete:!0});s(e)&&(i=new t({geometry:e.full,symbol:this.createGraphicSymbol,sourceLayer:this._internalGraphicsLayer,...this.graphicProperties}))}this.emit("complete",{graphic:i,...e})}};function j(e){switch(e){case"point":case"polyline":case"polygon":return e;case"circle":case"rectangle":return"segment";default:return null}}e([c()],b.prototype,"drawOperation",void 0),e([c({readOnly:!0})],b.prototype,"updating",null),e([c({constructOnly:!0,nonNullable:!0})],b.prototype,"view",void 0),e([c()],b.prototype,"createGraphicSymbol",void 0),e([c()],b.prototype,"createGraphic",null),e([c({value:!0})],b.prototype,"enabled",null),e([c({value:!0})],b.prototype,"centered",null),e([c({value:!0})],b.prototype,"forceUniformSize",null),e([c({constructOnly:!0})],b.prototype,"graphicProperties",void 0),e([c({constructOnly:!0})],b.prototype,"hasZ",void 0),e([c({nonNullable:!0})],b.prototype,"defaultZ",void 0),e([c({constructOnly:!0})],b.prototype,"elevationInfo",void 0),e([c()],b.prototype,"snapToScene",void 0),e([c()],b.prototype,"snappingManager",void 0),e([c({constructOnly:!0})],b.prototype,"mode",void 0),e([c({constructOnly:!0})],b.prototype,"geometryType",void 0),e([c({readOnly:!0})],b.prototype,"type",void 0),b=e([p("esri.views.3d.interactive.editingTools.draw3D.DrawTool")],b);const T=48,L="create-graphic";export{b as DrawGraphicTool};
