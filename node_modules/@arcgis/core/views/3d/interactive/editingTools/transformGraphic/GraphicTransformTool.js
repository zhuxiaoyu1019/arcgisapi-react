/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import e from"../../../../../core/Evented.js";import{HandleOwnerMixin as a}from"../../../../../core/HandleOwner.js";import{makeHandle as i}from"../../../../../core/handleUtils.js";import{isSome as o,isNone as n,destroyMaybe as s}from"../../../../../core/maybe.js";import{property as r}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as l}from"../../../../../core/accessorSupport/decorators/subclass.js";import p from"../../../../../geometry/Point.js";import{getGraphicEffectiveElevationInfo as h}from"../../../../../support/elevationInfoUtils.js";import{Manipulator3D as c}from"../../Manipulator3D.js";import{placeAtGraphic as m}from"../../manipulatorUtils.js";import{SnappingPipeline as d}from"../../SnappingDragPipelineStep.js";import{SnappingVisualizer3D as g}from"../../SnappingVisualizer3D.js";import{canMoveZ as u}from"../manipulatorUtils.js";import{createVisualElements as v}from"../visualElementUtils.js";import{ALIGN_ARROWS_SCALE_THRESHOLD as M}from"../manipulations/config.js";import{MoveManipulation as y}from"../manipulations/MoveManipulation.js";import{GraphicScaleRotateTransform as f}from"./GraphicScaleRotateTransform.js";import{ScaleRotateMeshAdapter as S}from"./ScaleRotateMeshAdapter.js";import{ScaleRotateObjectSymbol3DAdapter as R}from"./ScaleRotateObjectSymbol3DAdapter.js";import{createGraphicGeometryUndoRecord as w}from"./undoRecords.js";import{GraphicState as b}from"../../../layers/graphics/GraphicState.js";import{InteractiveToolBase as j}from"../../../../interactive/InteractiveToolBase.js";import{EditGeometryHelper as A}from"../../../../interactive/editGeometry/EditGeometryHelper.js";import{SnappingContext as x}from"../../../../interactive/snapping/SnappingContext.js";let G=class extends(a(e.EventedMixin(j))){constructor(t){super(t),this.enableZ=!0,this.enableRotation=!0,this.enableScaling=!0,this.type="transform-3d",this.scaleRotate=null,this.snappingPipeline=new d}initialize(){this.graphicState=new b({graphic:this.graphic}),this.moveManipulation=new y({tool:this,view:this.view,snapToScene:this.snapToScene,xyAvailable:!0,xyAxisAvailable:!0,zAvailable:this.enableZ&&u(this.graphic),radius:y.radiusForSymbol(this.graphic.symbol)}),this.moveManipulation.forEachManipulator((t=>this.handles.add(t.events.on("immediate-click",(t=>{this.emit("immediate-click",{...t,graphic:this.graphicState.graphic}),t.stopPropagation()}))))),this.moveManipulation.elevationInfo=h(this.graphic);const t=this.graphic.geometry;if(this.moveManipulation.createGraphicDragPipeline(((e,a,i,n,s)=>(o(t)&&0===e&&(i=i.next(this.snappingPipeline.createSnapDragEventPipelineStep({snappingContext:new x({elevationInfo:h(this.graphic),pointer:s,geometry:A.fromGeometry(new p({spatialReference:t.spatialReference}),this.view.viewingMode),visualizer:new g,excludeFeature:this.graphic}),snappingManager:this.snappingManager,updatingHandles:this.updatingHandles,cancel:n}),this.snappingPipeline.next)),i)),this.graphicState,(t=>{const{action:e,graphic:a,dxScreen:i,dyScreen:o}=t,n={graphic:a,dxScreen:i,dyScreen:o};switch(e){case"start":this.emit("graphic-translate-start",n),this.emit("record-undo",{record:this.createGeometryUndoRecord()});break;case"update":this.emit("graphic-translate",n);break;case"end":this.emit("graphic-translate-stop",n)}})),this.moveManipulation.angle=o(this.scaleRotate)?this.scaleRotate.angle:0,this.scaleRotateAdapter=this.createScaleRotateAdapter(),this.handles.add(this.scaleRotateAdapter.watch("angle",(()=>this.updateMoveAngle()))),this.enableScaling||this.enableRotation){const t=this.enableScaling&&this.enableRotation?null:this.enableScaling?"scale":"rotate";this.scaleRotate=new f({tool:this,mode:t,adapter:this.scaleRotateAdapter}),this.handles.add(this.scaleRotate.events.on("scale-changed",(()=>this.onScaleChanged())))}this.handles.add([v({view:this.view,graphic:this.graphic,forEachManipulator:t=>this.forEachManipulator(t),onManipulatorsChanged:()=>i()}),this.graphicState.on("changed",(()=>this.onGeometryChanged())),this.hideManipulatorsForGraphicState(),this.view.watch("scale",(()=>this.updateMoveAngle()))]),this.handles.add(this.view.trackGraphicState(this.graphicState)),this.onGeometryChanged(),this.updateMoveAngle(),this.forEachManipulator((t=>{t instanceof c&&this.handles.add(t.events.on("grab-changed",(()=>this.updateManipulatorsInteractive())))})),this.complete()}updateManipulatorsInteractive(){n(this.scaleRotate)||(this.scaleRotate.interactive=!this.moveManipulation.grabbing,this.moveManipulation.interactive=!this.scaleRotate.grabbing)}createScaleRotateAdapter(){return o(this.graphic.geometry)&&"mesh"===this.graphic.geometry.type?new S({graphic:this.graphic,geometry:this.graphic.geometry,viewingMode:this.view.state.viewingMode}):new R({graphic:this.graphic,sizeFilter:t=>this.enforceNonZeroSize(t),findLayerView:()=>this.view.allLayerViews.find((t=>t.layer===this.graphic.layer))})}forEachManipulator(t){this.moveManipulation.forEachManipulator(t),o(this.scaleRotate)&&this.scaleRotate.forEachManipulator(t)}hideManipulatorsForGraphicState(){return this.graphicState.watch("displaying",(t=>{this.forEachManipulator((e=>e.available=t)),this.moveManipulation.zManipulation.available=t&&this.enableZ&&u(this.graphic)}))}createGeometryUndoRecord(){return w(this.graphic)}destroy(){this.moveManipulation.destroy(),this.scaleRotate=s(this.scaleRotate),this.scaleRotateAdapter=s(this.scaleRotateAdapter),this._set("view",null),this._set("graphic",null)}set snapToScene(t){this.moveManipulation&&(this.moveManipulation.snapToScene=t),this._set("snapToScene",t)}get updating(){return this.updatingHandles.updating}set location(t){this.moveManipulation.location=t,o(this.scaleRotate)&&(this.scaleRotate.location=t)}set elevationAlignedLocation(t){this.moveManipulation.elevationAlignedLocation=t,o(this.scaleRotate)&&(this.scaleRotate.elevationAlignedLocation=t)}reset(){}onDetach(){o(this.scaleRotate)&&this.scaleRotate.cancelActiveAnimation()}onHide(){o(this.scaleRotate)&&this.scaleRotate.cancelActiveAnimation()}onScaleChanged(){if(n(this.scaleRotate))return;const t=this.scaleRotate.getScale();this.moveManipulation.displayScale=t}updateMoveAngle(){"local"===this.view.viewingMode||this.view.scale<M?this.moveManipulation.angle=this.scaleRotateAdapter.angle:this.moveManipulation.angle=0}onGeometryChanged(){m(this.view,this,this.graphic)}enforceNonZeroSize(t){return t||this.view.state.camera.computeRenderPixelSizeAt(this.moveManipulation.renderLocation)}get test(){return{discManipulator:this.moveManipulation.xyManipulation.test.discManipulator,zManipulator:this.moveManipulation.zManipulation.test.manipulator,ringManipulator:o(this.scaleRotate)?this.scaleRotate.test.ringManipulator:null,arrowManipulators:this.moveManipulation.xyAxisManipulation.test.arrowManipulators}}};t([r({constructOnly:!0,nonNullable:!0})],G.prototype,"view",void 0),t([r({constructOnly:!0,nonNullable:!0})],G.prototype,"graphic",void 0),t([r({constructOnly:!0,nonNullable:!0})],G.prototype,"enableZ",void 0),t([r()],G.prototype,"enableRotation",void 0),t([r()],G.prototype,"enableScaling",void 0),t([r({value:!1})],G.prototype,"snapToScene",null),t([r({constructOnly:!0})],G.prototype,"snappingManager",void 0),t([r({readOnly:!0})],G.prototype,"type",void 0),t([r({readOnly:!0})],G.prototype,"updating",null),G=t([l("esri.views.3d.interactive.editingTools.graphicTransform3D.GraphicTransformTool")],G);export{G as GraphicTransformTool};
