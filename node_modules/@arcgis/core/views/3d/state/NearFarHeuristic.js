/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{lerp as t,clamp as e}from"../../../core/mathUtils.js";import{getMetersPerUnitForSR as i}from"../../../core/unitUtils.js";import{f as r,n as s,d as n,l as a}from"../../../chunks/vec3.js";import{c as o}from"../../../chunks/vec3f64.js";import{getReferenceEllipsoid as m}from"../../../geometry/projectionEllipsoid.js";function h(t,e,i){return 1===t?new l(i):new c(e,i)}class c{constructor(t,e){this.elevationProvider=t,this._referenceEllipsoid=m(e),this.unitInMeters=i(e,this._referenceEllipsoid.metersPerDegree)}compute(i,a,o,m,h){h||(h={near:0,far:0});let c=i[2]*this.unitInMeters;const l=c,M=c-m,v=this.elevationProvider?this.elevationProvider.elevationBounds:null;v&&(c=M>=0?l-this.unitInMeters*v.min:this.unitInMeters*v.max-l);const I={x:o.xmax-o.xmin,y:o.ymax-o.ymin,z:4*Math.max(o.xmax-o.xmin,o.ymax-o.ymin)},E=Math.max(I.x,I.y,I.z);r(y,a,i),d[0]=y[0]>0?o.xmax:o.xmin,d[1]=y[1]>0?o.ymax:o.ymin,d[2]=y[2]>0?E/2:-E/2,r(d,d,i),s(y,y);const j=1.1*n(d,y)*this.unitInMeters,_=Math.sqrt(c*(c+2*this._referenceEllipsoid.radius)),g=Math.max(o.xmax-o.xmin,o.ymax-o.ymin),P=g*f*this.unitInMeters,b=g*p*this.unitInMeters;let k=e((c-b)/(P-b),0,1);k*=k*k;let q=t(_,j,k);return q*=Math.max(Math.log(Math.abs(M)),1),q=Math.min(q,Math.max(34064e4,E)),q/=this.unitInMeters,u(q,x,this.unitInMeters,h)}}class l{constructor(t){this._referenceEllipsoid=m(t)}compute(t,i,r,s,n){n||(n={near:0,far:0});const o=a(t)-this._referenceEllipsoid.radius,m=this._referenceEllipsoid.radius+Math.min(0,s),h=Math.abs(o-s),c=Math.max(h,Math.abs(o));return u(1.2*Math.sqrt(c*(c+2*m)),e(2e4-(Math.log(c)-7.983)/9.011*19e3,1e3,2e4),1,n)}}function u(t,e,i,r){const s=M/i;return t/e>s?(r.far=t,r.near=r.far/e):(r.near=s,r.far=r.near*e),r}const x=2e4,M=2,f=.001,p=1e-4,d=o(),y=o();export{h as createNearFarHeuristic};
