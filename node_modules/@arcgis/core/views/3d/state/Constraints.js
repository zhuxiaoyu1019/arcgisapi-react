/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/Accessor.js";import i from"../../../core/Logger.js";import{clamp as o,deg2rad as s}from"../../../core/mathUtils.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{earth as n}from"../../../geometry/support/Ellipsoid.js";import{makePiecewiseLinearFunction as l}from"../support/mathUtils.js";const m=i.getLogger("esri.views.3d.state.Constraints");let c=class extends e{constructor(t){super(t),this.collision=new x,this.distance=1/0,this.minimumPoiDistance=4}get altitude(){return 2===this.mode?null:this._get("altitude")||null}set altitude(t){2!==this.mode?this._set("altitude",t):m.warn("Altitude constraint is ignored in local scenes")}clampAltitude(t){return this.altitude?o(t,this.altitude.min,this.altitude.max):t}clampTilt(t,e){if(!this.tilt)return e;const i=this.tilt(t);return o(e,i.min,i.max)}clampDistance(t){return Math.min(t,this.distance)}createDefaultTilt(){return 2===this.mode?this.createDefaultTiltLocal():this.createDefaultTiltGlobal()}createConstantMaxTilt(t){return(e,i=h)=>(i.min=d.min,i.max=t,i)}createDefaultTiltLocal(){const t=this.collision.enabled?l([[4e3,d.max],[1e4,s(88)],[6e6,s(88)]]):()=>d.max;return(e,i=h)=>(i.min=d.min,i.max=t(e),i)}createDefaultTiltGlobal(){const t=this.collision.enabled?l([[4e3,d.max],[5e4,s(88)],[6e6,s(88)],[2e7,d.min]]):l([[3e5,d.max],[3e6,s(88)],[6e6,s(88)],[2e7,d.min]]);return(e,i=h)=>(i.min=d.min,i.max=t(e),i)}};function p(t){return{min:-2e5,max:4*t.radius}}t([r()],c.prototype,"altitude",null),t([r({readOnly:!0})],c.prototype,"collision",void 0),t([r()],c.prototype,"distance",void 0),t([r({readOnly:!0})],c.prototype,"minimumPoiDistance",void 0),t([r()],c.prototype,"tilt",void 0),t([r({constructOnly:!0})],c.prototype,"mode",void 0),c=t([a("esri.views.3d.state.Constraints")],c);const u=p(n),d={min:s(.5),max:s(179.5)},h={min:0,max:0};let x=class extends e{constructor(){super(...arguments),this.enabled=!0,this.elevationMargin=5}};t([r({type:Boolean})],x.prototype,"enabled",void 0),t([r({type:Number})],x.prototype,"elevationMargin",void 0),x=t([a("esri.views.3d.state.Constraints.CollisionConstraint")],x);var f=c;export default f;export{c as Constraints,d as TiltDefault,u as earthAltitudeConstraint};
