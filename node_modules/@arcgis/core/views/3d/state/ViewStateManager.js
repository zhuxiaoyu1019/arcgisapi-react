/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../Camera.js";import i from"../../../Viewpoint.js";import r from"../../../core/Accessor.js";import a from"../../../core/Handles.js";import s from"../../../core/Logger.js";import{isNone as n,isSome as o}from"../../../core/maybe.js";import{addFrameTask as p}from"../../../core/scheduling.js";import{createScreenPoint as h}from"../../../core/screenUtils.js";import{on as c,once as l,whenOnce as m}from"../../../core/watchUtils.js";import{property as d}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as v}from"../../../core/accessorSupport/decorators/subclass.js";import{h as u}from"../../../chunks/vec3.js";import{d as w}from"../../../chunks/vec3f64.js";import{s as y}from"../../../chunks/vec4.js";import{c as f}from"../../../chunks/vec4f64.js";import C from"../../../geometry/Extent.js";import g from"../../../geometry/Point.js";import{canProject as O}from"../../../geometry/support/webMercatorUtils.js";import{applyAll as R}from"../camera/constraintUtils.js";import{cameraOnContentAlongViewDirection as x,surfaceElevationBelowRenderLocation as b}from"../camera/intersectionUtils.js";import T from"./ConstraintsManager.js";import{Frustum as S}from"./Frustum.js";import{GoToOperation as j}from"./GoToOperation.js";import{SurfaceCollisionCorrectionController as P}from"./controllers/SurfaceCollisionCorrectionController.js";import{internalToExternal as I,externalToInternal as _,toExtent as M,distanceToScale as B,scaleToZoom as k,fromExtent as z,getObserverForPointAtDistance as U,scaleToDistance as V,zoomToScale as E}from"../support/cameraUtils.js";import{PropertiesPool as N}from"../support/PropertiesPool.js";import{fromCamera as A,toCamera as H}from"../support/viewpointUtils.js";import F from"../webgl-engine/lib/Camera.js";const G=s.getLogger("esri.views.3d.state.ViewStateManager");let D=class extends r{constructor(e){super(e),this.propertiesPool=new N({frustum:S},this),this.handles=new a,this.cameraSetByUser=!1,this.gotoOperation=null,this.ready=!1,this.updateDevicePixelRatio=null,this.test={contentCameraResetState:new Map}}get camera(){const e=this._get("camera");if(!this.ready)return e;const t=I(this.view,this.view.state.camera);return t&&e&&t.equals(e)?e:t}set camera(e){this.updatePropertyBeforeReady("camera",e)||this.setStateCamera(_(this.view,e),{applyConstraints:!1})||G.error("#camera=","Invalid camera",e)}get contentCamera(){const e=this._get("contentCamera");if(!this.ready)return e;const t=I(this.view,this.view.state.contentCamera);return t&&e&&t.equals(e)?e:t}set contentCamera(e){if(this.updatePropertyBeforeReady("contentCamera",e))return;const t=_(this.view,e);n(t)?this.view.state.contentCamera=null:(this.updateElevation(t),this.view.state.contentCamera=t)}installContentCameraReset(e){if(this.handles.remove("contentCameraReset"),this.test.contentCameraResetState.clear(),!this.view.state.fixedContentCamera)return!1;const t=this.zoom,i=this.view.state.camera.distance**2,r=w(this.view.state.camera.center),a=e.sticky?this.contentCamera.clone():null;return this.handles.add([this.watch("contentCamera",(()=>{e.sticky||(this.handles.remove("contentCameraReset"),this.test.contentCameraResetState.clear())})),this.watch("zoom",(e=>{this.test.contentCameraResetState.set("view.zoom",Math.abs(e-t)/2),Math.abs(e-t)>2?this.contentCamera=null:this.view.state.fixedContentCamera||(this.contentCamera=a)})),this.view.state.watch("camera",(e=>{const t=u(r,e.center);this.test.contentCameraResetState.set("camera.center",t/i),t>i?this.contentCamera=null:this.view.state.fixedContentCamera||(this.contentCamera=a)}))],"contentCameraReset"),!0}get center(){return this.ready?this.view.pointsOfInterest.centerOnContent.location:this._get("center")}set center(e){this.updatePropertyBeforeReady("center",e)||(e?this.isCompatible(e)?this.setStateCamera(this.centerToCamera(e),{applyConstraints:!0})?this.view.pointsOfInterest.centerOnContent.runTask():G.error("#center=","Invalid center",e):G.error("#center=","Center has an incompatible spatial reference (center: "+(e.spatialReference?e.spatialReference.wkid:"none")+", view: "+this.view.spatialReference.wkid+")",e):G.error("#center=","Center may not be null or undefined"))}get extent(){if(!this.ready)return this._get("extent");const e=this.view,t=M(e,e.state.camera,e.pointsOfInterest.centerOnContent.renderLocation);return o(t)?t:this._get("extent")}set extent(e){this.updatePropertyBeforeReady("extent",e)||(e?this.isCompatible(e)?this.setStateCamera(this.extentToCamera(e),{applyConstraints:!0})||G.error("#extent=","Invalid extent",e):G.error("#extent=","Extent has an incompatible spatial reference (extent: "+(e.spatialReference?e.spatialReference.wkid:"none")+", view: "+this.view.spatialReference.wkid+")",e):G.error("#extent=","Extent may not be null or undefined"))}get frustum(){const e=this.propertiesPool.get("frustum");return e.renderCoordsHelper=this.view.renderCoordsHelper,e.update(this.view.state.camera),e}get hasInitialView(){return!!this.view.get("map.initialViewProperties.viewpoint")}get scale(){if(this.ready){const e=this.view.pointsOfInterest.centerOnContent;return B(this.view,e.distance,e.location.latitude)}return this._get("scale")}set scale(e){this.updatePropertyBeforeReady("scale",e)||this.setStateCamera(this.scaleToCamera(e),{applyConstraints:!0})||G.error("#scale=","Invalid scale",e)}get padding(){if(!this.ready)return this._get("padding");const e=this.view.state.camera,t=e.padding,i=e.pixelRatio,r=this._get("padding"),a=Math.round(t[0]/i),s=Math.round(t[1]/i),n=Math.round(t[2]/i),o=Math.round(t[3]/i);return null!=r&&r.top===a&&r.right===s&&r.bottom===n&&r.left===o?r:{top:a,right:s,bottom:n,left:o}}set padding(e){this.updatePropertyBeforeReady("padding",e)||(this.paddingToArray(e,this.view.state.camera.pixelRatio,X),this.view.state.updateCamera((e=>e.padding=X)))}paddingToArray(e,t,i){e?y(i,e.top||0,e.right||0,e.bottom||0,e.left||0):y(i,0,0,0,0);for(let r=0;r<4;r++)i[r]=Math.round(i[r]*t)}get screenCenter(){const e=this.padding;return h((this.view.width-(e.left+e.right))/2+e.left,(this.view.height-(e.top+e.bottom))/2+e.top)}get viewpoint(){return this.ready?A(this.view,this.camera):this._get("viewpoint")}set viewpoint(e){if(!this.updatePropertyBeforeReady("viewpoint",e))if(e)if(this.isCompatible(e))this.setStateCamera(this.viewpointToCamera(e),{applyConstraints:!e.camera})||G.error("#viewpoint=","Invalid viewpoint",e);else{const t=o(e.camera)?e.camera.position:e.targetGeometry,i=o(t)&&t.spatialReference;G.error("#viewpoint=","Viewpoint has an incompatible spatial reference (viewpoint: "+(i?i.wkid:"none")+", view: "+this.view.spatialReference.wkid+")",e)}else G.error("#viewpoint=","Viewpoint may not be null or undefined")}get zoom(){return this.ready?k(this.view,this.scale):this._get("zoom")}set zoom(e){this.updatePropertyBeforeReady("zoom",e)||this.setStateCamera(this.zoomToCamera(e),{applyConstraints:!0})||G.error("#zoom=","Invalid zoom",e)}initialize(){this.handles.add([c(this.view,"state.events","before-camera-change",(e=>this.updateElevation(e.camera)))]),l(this.view.state,"camera",(e=>this.updateElevation(e)),!0),this.handles.add(p({prepare:()=>this.prepareFrame()})),this.handles.add(this.view.state.watch("cameraController",(()=>{this.cameraSetByUser=!0,this.handles.remove(Y)}))),this.handles.add(c(this.view,"state.events","camera-projection-changed",(()=>this.notifyChange("scale"))))}destroy(){this.deinit(),this.handles&&(this.handles.destroy(),this.handles=null),this.propertiesPool&&(this.propertiesPool.destroy(),this.propertiesPool=null)}init(){this.constraintsManager=new T({view:this.view}),this.prepareFrame();const e=this.getInitialProperties();this.cameraSetByUser=!1,this._set("ready",!0);for(const t of e)this.set(t.name,t.value);if(!this.cameraSetByUser){const e=this.view.get("map.initialViewProperties.viewpoint")||this.view.initialExtent;e&&this.isCompatible(e)?this.setInitialView(e):2===this.view.state.viewingMode&&this.handles.add(m(this.view.basemapTerrain,"ready",(()=>{this.handles.remove(Y),this.setInitialView(this.view.groundExtent)})),Y)}}deinit(){this.cancelGoToOperation(),this.ready&&(this._override("padding",this.padding),this._set("ready",!1),this._clearOverride("hasInitialView"),this.cameraSetByUser=!1,this.handles.remove(Y),this.constraintsManager&&(this.constraintsManager.destroy(),this.constraintsManager=null))}async goTo(e,t){const i={animate:!0,...t};return o(this.gotoOperation)&&this.gotoOperation.abort(i.animate),this.gotoOperation=new j(e,i,this.view),this.view.resourceController.scheduler.stopFrame(),this.gotoOperation}debugSetCameraOnContent(){this.setStateCamera(x(this.view),{applyConstraints:!1})}step(e){const t=this.view.state,i=t&&this.view.state.cameraController;i&&(t.updateCamera((t=>{i.stepController(e,t)})),i.steppingFinished&&i.finishController())}cancelGoToOperation(){o(this.gotoOperation)&&(this.gotoOperation.abort(),this.gotoOperation=null)}getInitialProperties(){const e=new Set,t=[];for(const{propertyName:i,overrides:r}of q){const a=e.has(i),s=this._isOverridden(i);!a&&s&&t.push({name:i,value:this._get(i)}),this._clearOverride(i),(a||s)&&r.forEach((t=>e.add(t)))}return t}setInitialView(e){if(!e||this.cameraSetByUser)return;if(e instanceof t)return void this.setStateCamera(_(this.view,e),{applyConstraints:!1});if(e instanceof i){if(e.targetGeometry instanceof C){const t=z(this.view,e.targetGeometry,0,.5,0);return void(o(t)&&this.setStateCamera(_(this.view,t),{applyConstraints:!0}))}const t={applyConstraints:!e.camera},i=this.viewpointToCamera(e);return void this.setStateCamera(i,t)}const r=z(this.view,e,0,.5,0);o(r)&&this.setStateCamera(_(this.view,r),{applyConstraints:!0})}updatePropertyBeforeReady(e,t){return!this.ready&&(this._override(e,t),t&&-1!==W.indexOf(e)&&this._override("hasInitialView",!0),!0)}isCompatible(e){return!n(e)&&(e instanceof i?e.camera?this.isCompatible(e.camera):this.isCompatible(e.targetGeometry):e instanceof t?this.isCompatible(e.position):e.spatialReference&&O(e.spatialReference,this.view.spatialReference))}getPreservingHeadingTilt(e=J){return this.cameraSetByUser?(e.heading=this.camera.heading,e.tilt=this.camera.tilt):(e.heading=0,e.tilt=.5),e}centerPointAtDistanceToCamera(e,t,i=Q){const{heading:r,tilt:a}=this.getPreservingHeadingTilt(),s=U(this.view,r,a,e,t,1);return n(s)?null:(i.copyFrom(this.view.state.camera),i.eye=s.eye,i.center=s.center,i.up=s.up,i)}centerToCamera(e){const t=this.view.pointsOfInterest.centerOnContent;t.runTask();const i=t.distance;return this.centerPointAtDistanceToCamera(e,i)}extentToCamera(e){const{heading:t,tilt:i}=this.getPreservingHeadingTilt(),r=z(this.view,e,t,i,1,K);return o(r)?_(this.view,r):null}scaleToCamera(e){if(null==e)return null;const t=this.view.pointsOfInterest.centerOnContent;t.runTask();const i=t.renderLocation,r=t.location.latitude,a=V(this.view,e,r);return this.centerPointAtDistanceToCamera(i,a)}zoomToCamera(e){return this.scaleToCamera(E(this.view,e))}viewpointToCamera(e){return _(this.view,H(this.view,e))}setStateCamera(e,t){return!(n(e)||!this.view.state.stopActiveCameraController())&&(this.cameraSetByUser=!0,t.doNotCancelGoToOperation||this.cancelGoToOperation(),this.view.state.updateCamera((i=>{t.positionAndOrientationOnly?(i.eye=e.eye,i.center=e.center,i.up=e.up):i.copyFrom(e),t.applyConstraints&&R(this.view,i)})),t.applyConstraints||(this.view.state.cameraController=new P({view:this.view,desiredCamera:e})),!0)}prepareFrame(){const{container:e,canvas:t}=this.view;if(!e||!t)return;o(this.updateDevicePixelRatio)&&this.updateDevicePixelRatio();const i=this.view.pixelRatio,r=Math.round(e.clientWidth*i),a=Math.round(e.clientHeight*i);if(0!==r&&0!==a&&(t.width===r&&t.height===a||(t.width=r,t.height=a),this.view.state)){const e=this.view.state.camera;e.fullWidth===r&&e.fullHeight===a&&e.pixelRatio===i||(Q.copyFrom(e),Q.pixelRatio!==i&&(this.paddingToArray(this.padding,i,X),Q.padding=X),Q.fullWidth=r,Q.fullHeight=a,Q.pixelRatio=i,this.view.state.camera=Q)}}updateElevation(e){const t=this.view.basemapTerrain&&this.view.basemapTerrain.spatialReference,i=this.view.renderCoordsHelper.getAltitude(e.eye),r=t?b(this.view,e.eye):0;e.relativeElevation=i-r}};e([d({type:t,dependsOn:["view.state.camera","ready"]})],D.prototype,"camera",null),e([d({type:t,dependsOn:["view.state.contentCamera","ready"]})],D.prototype,"contentCamera",null),e([d({type:g})],D.prototype,"center",null),e([d({type:C})],D.prototype,"extent",null),e([d({readOnly:!0})],D.prototype,"frustum",null),e([d({readOnly:!0})],D.prototype,"hasInitialView",null),e([d({readOnly:!0,type:Boolean})],D.prototype,"ready",void 0),e([d({type:Number})],D.prototype,"scale",null),e([d()],D.prototype,"padding",null),e([d({readOnly:!0})],D.prototype,"screenCenter",null),e([d({constructOnly:!0})],D.prototype,"view",void 0),e([d({type:i})],D.prototype,"viewpoint",null),e([d({type:Number})],D.prototype,"zoom",null),e([d({constructOnly:!0})],D.prototype,"updateDevicePixelRatio",void 0),D=e([v("esri.views.3d.state.ViewStateManager")],D);var L=D;const W=["camera","viewpoint","extent","scale","center","zoom"],q=[{propertyName:"camera",overrides:["viewpoint"]},{propertyName:"viewpoint",overrides:["extent"]},{propertyName:"extent",overrides:["center","scale"]},{propertyName:"center",overrides:[]},{propertyName:"scale",overrides:["zoom"]},{propertyName:"zoom",overrides:[]},{propertyName:"padding",overrides:[]}],J={heading:0,tilt:0},K=new t,Q=new F,X=f(),Y="pending-initial-view";export default L;
