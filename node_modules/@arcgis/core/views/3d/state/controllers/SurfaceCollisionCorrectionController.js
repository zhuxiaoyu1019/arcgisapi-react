/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Handles.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as o}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/mathUtils.js";import"../../../../geometry/support/ray.js";import"../../../../chunks/sphere.js";import"../../../../geometry/support/vectorStacks.js";import{applySurfaceCollisionConstraint as s}from"../../camera/constraintUtils/surfaceCollision.js";import"../../../../geometry/projectionEllipsoid.js";import{eyeWithinExtent as i}from"../../camera/intersectionUtils.js";import{CameraController as a,State as n}from"./CameraController.js";let p=class extends a{constructor(e){super(e),this.handles=new t}set desiredCamera(e){this._set("desiredCamera",e.clone())}get canStop(){return!0}get constraintEnabled(){return this.view.state.constraints.collision.enabled}onControllerStart(){this.state=n.Running,this.handles.add(this.view.basemapTerrain.on("elevation-change",(e=>this.handleElevationChangeEvent(e)))),this.applyCorrection()}onControllerEnd(){this.handles.removeAll()}stepController(){}handleElevationChangeEvent(e){i(this.view,this.desiredCamera,e.extent,e.spatialReference)&&this.applyCorrection()}applyCorrection(){this.view.state.updateCamera((e=>{e.copyViewFrom(this.desiredCamera),s(this.view,e,1)||this.constraintEnabled||(this.state=n.Stopped)}))}};e([r({constructOnly:!0})],p.prototype,"view",void 0),e([r({constructOnly:!0})],p.prototype,"desiredCamera",null),p=e([o("esri.views.3d.state.controllers.SurfaceCollisionCorrectionController")],p);export{p as SurfaceCollisionCorrectionController};
