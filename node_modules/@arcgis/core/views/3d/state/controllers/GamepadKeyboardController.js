/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import{neverReached as e}from"../../../../core/compilerUtils.js";import{acosClamped as i,clamp as a,deg2rad as r}from"../../../../core/mathUtils.js";import{isSome as o}from"../../../../core/maybe.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as n}from"../../../../core/accessorSupport/decorators/subclass.js";import{t as c,c as m,i as l}from"../../../../chunks/mat4.js";import{c as p}from"../../../../chunks/mat4f64.js";import{f as h,m as d,b as u,a as f,g as v,o as C,l as g,s as y,n as w,c as b,d as S,i as O,r as x}from"../../../../chunks/vec3.js";import{c as j}from"../../../../chunks/vec3f64.js";import{getReferenceEllipsoid as M}from"../../../../geometry/projectionEllipsoid.js";import{wrap as z}from"../../../../geometry/support/ray.js";import{b as T,e as k}from"../../../../chunks/sphere.js";import{sv3d as A}from"../../../../geometry/support/vectorStacks.js";import{applyAll as D}from"../../camera/constraintUtils.js";import{TiltDefault as H}from"../Constraints.js";import{InteractiveController as R}from"./InteractiveController.js";import{panMotionToRotationMatrix as E,onSurfaceTiltToEyeTiltGlobal as F,offSurfaceTiltToEyeTiltGlobal as G}from"../utils/navigationUtils.js";import{viewAngle as U}from"../utils/viewUtils.js";import{headingTiltToDirectionUp as P}from"../../support/cameraUtils.js";import{createDirectionUp as V}from"../../support/cameraUtilsInternal.js";import I from"../../webgl-engine/lib/Camera.js";import{extractTransformation as B,isZeroTransformation as L,extractTransformationKeyboard as q}from"../../../navigation/gamepadAndKeyboardUtils.js";let K=class extends R{constructor(t){super(t),this.transformation={translation:[0,0,0],heading:0,tilt:0,zoom:0},this.keysButtonState=[0,0,0,0,0,0,0,0,0,0,0,0],this.tmpCamera=new I,this.constraintOptions={selection:15,interactionType:0,interactionStartCamera:new I,interactionFactor:0,interactionDirection:null,tiltMode:1}}handleEventGamepad(t){const e=B(t,this.view.navigation.gamepad,this.transformation);("end"===t.action||L(e))&&this.finishController()}activateDirection(t){this.keysButtonState[t]=1,q(this.keysButtonState,this.transformation)}deactivateDirection(t){this.keysButtonState[t]=0;const e=q(this.keysButtonState,this.transformation);L(e)&&this.finishController()}onControllerStart(t){this.filteredSurfaceElevation=this.view.pointsOfInterest.cameraOnSurface.location.z,this.headingStart=this.view.camera.heading,super.onControllerStart(t)}updateFilteredSurfaceElevation(t){const e=this.view.pointsOfInterest.cameraOnSurface.location.z,i=1;this.filteredSurfaceElevation+=i*(e-this.filteredSurfaceElevation)*t}stepController(t,e){this.updateStartHeading(),this.updateFilteredSurfaceElevation(t),this.currentCamera.copyViewFrom(e),this.updateCameraCenter(),this.constraintOptions.interactionStartCamera.copyFrom(this.currentCamera),this.calculateControlTransformation(t,this.currentCamera,Y),this.applyDisabledMovementTypes(Y),this.applyPan(Y.pan),this.applyRotate(Y.rotate),this.applyZoom(Y.zoom),this.applyAscend(Y.ascend),this.constraintOptions.interactionType=0,this.constraintOptions.selection=8,D(this.view,this.currentCamera,this.constraintOptions),super.stepController(t,e)}updateStartHeading(){0!==this.transformation.heading&&(this.headingStart=this.view.camera.heading)}applyRotate(t){if(!t.enabled)return;const e=this.currentCamera;h($,e.center,e.eye),d($,$,t.matrix),e.center=u($,$,e.eye),e.up=d($,e.up,t.matrix),this.constraintOptions.interactionType=3,this.constraintOptions.selection=7,D(this.view,e,this.constraintOptions)}applyPan(t,e=this.currentCamera){if(!t.enabled)return;e.eye=d($,e.eye,t.matrix),e.center=d($,e.center,t.matrix);this.view.state.isGlobal&&(e.up=d($,e.up,t.matrix)),this.constraintOptions.interactionType=4,this.constraintOptions.selection=15,D(this.view,e,this.constraintOptions)}applyZoom(t){if(!t)return;const e=this.currentCamera.viewForward;this.currentCamera.eye=u($,this.currentCamera.eye,f(A.get(),e,t)),v(tt,e),C(tt,tt),this.constraintOptions.interactionDirection=tt,this.constraintOptions.interactionType=1,this.constraintOptions.selection=7,D(this.view,this.currentCamera,this.constraintOptions),this.constraintOptions.interactionDirection=null}applyAscend(t){if(!t)return;const e=this.view.renderCoordsHelper.worldUpAtPosition(this.currentCamera.eye,A.get());this.constraintOptions.interactionDirection=v(tt,e);if(this.view.state.isGlobal){const e=g(this.currentCamera.eye),i=(e+t)/e;this.currentCamera.eye=f($,this.currentCamera.eye,i),this.currentCamera.center=f($,this.currentCamera.center,i)}else{const i=f(A.get(),e,t);this.currentCamera.eye=u($,this.currentCamera.eye,i),this.currentCamera.center=u($,this.currentCamera.center,i)}this.updateCameraCenter(),this.constraintOptions.interactionType=5,this.constraintOptions.selection=8,D(this.view,this.currentCamera,this.constraintOptions)&&this.updateCameraCenter(),this.constraintOptions.selection=7,D(this.view,this.currentCamera,this.constraintOptions),this.constraintOptions.interactionDirection=null}calculateControlTransformation(t,e,i){it(i);const a=this.computeVelocities(t);this.view.state.isLocal?this.calculateControlTransformationLocal(a,e,i):this.calculateControlTransformationGlobal(a,e,i)}updateCameraCenter(){const t=this.view.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude,e=this.view.renderCoordsHelper,i=this.currentCamera.ray;this.currentCamera.center=e.intersectManifoldClosestSilhouette(i,t,$)}calculateControlTransformationLocal(t,i,r){const{viewRight:o,viewForward:s}=i,n=this.transformation,l=this.view.navigation.gamepad,p=y(A.get(),s[0],s[1],0);w(p,p);const h=n.translation[0]*t.pan;if(0!==h){const t=f(A.get(),o,h);c(r.pan.matrix,r.pan.matrix,t),r.pan.enabled=!0}switch(l.mode){case"pan":{const e=-n.translation[1]*t.pan;if(0!==e){const t=f(A.get(),p,e);c(r.pan.matrix,r.pan.matrix,t),r.pan.enabled=!0}r.zoom=n.zoom*t.zoom;break}case"zoom":r.zoom=(-n.translation[1]+n.zoom)*t.zoom;break;default:e(l.mode)}const d=n.translation[2]*t.ascend;r.ascend=d;const u=-n.heading*t.rotate;0!==u&&(m(r.rotate.matrix,r.rotate.matrix,u,this.view.renderCoordsHelper.worldUpAtPosition(i.eye,A.get())),r.rotate.enabled=!0);const v=n.tilt*t.rotate,C=U(this.view.renderCoordsHelper,i.center,i.eye),g=a(C+v,H.min,H.max)-C;g&&(m(r.rotate.matrix,r.rotate.matrix,g,o),r.rotate.enabled=!0)}calculateControlTransformationGlobal(t,e,i){const{eye:a,viewRight:r}=e,o=this.transformation,s=this.view.navigation.gamepad,n=b(A.get(),r,a);w(n,n),C(n,n),E(this.startCamera,e,o,t,this.view.camera.heading,this.headingStart,this.view.camera.tilt,i,s),this.tmpCamera.copyFrom(this.currentCamera),this.applyPan(Y.pan,this.tmpCamera);const c=this.view.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude,l=o.translation[2]*t.ascend;i.ascend=l;const p=-o.heading*t.rotate;0!==p&&(m(i.rotate.matrix,i.rotate.matrix,p,this.tmpCamera.eye),i.rotate.enabled=!0);const h=o.tilt*t.rotate,d=this.clampTiltDeltaGlobalToValidRange(h,e.ray,c);0!==d&&(m(i.rotate.matrix,i.rotate.matrix,d,this.tmpCamera.viewRight),i.rotate.enabled=!0),i.zoom+=o.zoom*t.zoom}clampTiltDeltaGlobalToValidRange(t,e,r){const o=M(this.view.spatialReference),s=F(H.min,e.origin,r,o);let n=0,c=0;const m=A.get();if(this.view.renderCoordsHelper.intersectManifold(e,r,m)){const t=U(this.view.renderCoordsHelper,m,e.origin);n=F(t,e.origin,r,o),c=F(H.max,e.origin,r,o)}else{T(k(r+o.radius),e,m);const t=i(-S(e.direction,w(m,m)));n=G(t,e.origin,r,o),c=G(H.max,e.origin,r,o)}return a(n+t,s,c)-n}getPointAbsoluteSurfaceElevation(t,e,i){const{renderCoordsHelper:a}=this.view,r=a.getAltitude(t),o=e+Math.abs(r-e);return a.setAltitude(i,o,t),o}clampedDistanceToSurface(t,e){const{renderCoordsHelper:i}=this.view,{camera:a}=this.view.state,{direction:r}=P(this.view,e,0,X,et),o=i.intersectManifoldClosestSilhouette(z(e,r),t,A.get()),s=O(e,o),n=i.intersectManifoldClosestSilhouette(z(e,x(A.get(),e,a.center)),t,A.get()),c=O(e,n);return Math.min(s,c)}computeHeadingRotateRadius(t){const{renderCoordsHelper:e,state:a}=this.view,{camera:r,isGlobal:o}=a,s=e.intersectManifoldClosestSilhouette(r.ray,this.filteredSurfaceElevation,A.get());if(o){const e=h(A.get(),t,s),a=g(e);f(e,e,1/a);const r=w(A.get(),t),o=i(S(r,e));return a*Math.sin(Math.min(_,o))}{const i=v(A.get(),t);return e.setAltitude(i,this.filteredSurfaceElevation),O(s,i)}}minimumAscendVelocity(){return this.view.state.constraints.collision.enabled?0:N}computeVelocities(t){const e=this.filteredSurfaceElevation,i=e+M(this.view.spatialReference).radius,{camera:r,isGlobal:o}=this.view.state,s=A.get(),n=this.getPointAbsoluteSurfaceElevation(r.eye,e,s),c=this.clampedDistanceToSurface(e,s),m=r.width/2,l=J*r.width,p=J*r.width,h=c*Math.tan(.5*r.fovX)/m,d=h/i,u=h/this.computeHeadingRotateRadius(s),f=n-e;return{pan:(o?d:h)*l*t,ascend:Math.max(this.minimumAscendVelocity()*t,2**(l*t/m)*f-f),zoom:2**(l*t/m)*c-c,rotate:a(u*p,Q,W)*t}}applyDisabledMovementTypes(t){!o(this.disableMovements)||void 0!==this.disableMovements.mode&&this.view.state.viewingMode!==this.disableMovements.mode||(t.zoom=this.disableMovements.zoom?0:t.zoom,t.ascend=this.disableMovements.ascend?0:t.ascend,t.pan.enabled=!this.disableMovements.pan,this.disableMovements.pan&&l(t.pan.matrix),t.rotate.enabled=!this.disableMovements.rotate,this.disableMovements.rotate&&l(t.rotate.matrix))}static activatesFor(t,e){const i=B(e,t.navigation.gamepad,Z);return!("end"===e.action||L(i))}};t([s({constructOnly:!0})],K.prototype,"view",void 0),t([s({constructOnly:!0})],K.prototype,"gamepadDevice",void 0),t([s({constructOnly:!0})],K.prototype,"disableMovements",void 0),K=t([n("esri.views.3d.state.controllers.GamepadKeyboardController")],K);const Z={translation:[0,0,0],heading:0,tilt:0,zoom:0},X=80,_=r(X),J=.75,N=5,Q=r(30),W=r(80),Y={zoom:0,ascend:0,pan:{enabled:!1,matrix:p()},rotate:{enabled:!1,matrix:p()}},$=j(),tt=j(),et=V();function it(t){t.zoom=0,t.ascend=0,t.pan.enabled=!1,l(t.pan.matrix),t.rotate.enabled=!1,l(t.rotate.matrix)}export{K as GamepadKeyboardController};
