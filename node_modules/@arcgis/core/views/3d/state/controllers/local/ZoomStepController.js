/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import{Milliseconds as e}from"../../../../../core/time.js";import"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as i}from"../../../../../core/accessorSupport/decorators/subclass.js";import{g as o,f as r,l as s,n as a,b as n,a as m,e as c}from"../../../../../chunks/vec3.js";import{c as p}from"../../../../../chunks/vec3f64.js";import{disableContextNavigation as h}from"../../../../../support/featureFlags.js";import{applyAll as l}from"../../../camera/constraintUtils.js";import{PointToPointAnimationController as C}from"../PointToPointAnimationController.js";import u from"../../../webgl-engine/lib/Camera.js";import{Intersector as y}from"../../../webgl-engine/lib/Intersector.js";import{outExpo as f}from"../../../../animation/easing.js";const g=.6,j=4,w=60,b=14,d=20;let v=class extends C{constructor(){super(...arguments),this.zoomLocation=p(),this.tmpCamera=new u,this.tmpRayDir=p(),this.tmpCenter=p(),this.constraintOptions={selection:15,interactionType:1,interactionFactor:null,interactionStartCamera:new u,interactionDirection:null,tiltMode:0}}zoomStep(t,e){if(!this.active)return;const i=this.view.state,{interactionStartCamera:c}=this.constraintOptions;this.animation.finished?c.copyFrom(i.camera):this.animation.cameraAt(1,c),this.tmpCamera.copyFrom(i.camera);const l=new y(this.view.state.viewingMode);t>0?(this.intersectionHelper.intersectScreenFreePointFallback(e,this.zoomLocation),this.intersectionHelper.intersectRay(this.tmpCamera.ray,l,this.tmpCenter)&&(this.tmpCamera.center=this.tmpCenter)):this.intersectionHelper.intersectRay(this.tmpCamera.ray,l,this.zoomLocation)?this.tmpCamera.center=this.zoomLocation:o(this.zoomLocation,this.tmpCamera.center);const C=g**t;if(!h()){let t=this.view._stage.renderView.getMinimalDepthForArea(e[0],e[1],this.view.state.camera,w);const i=Math.max(b*Math.abs(this.view.camera.position.z),d);if(t=t?Math.min(t,i):i,t){const e=p();r(e,this.zoomLocation,this.tmpCamera.eye),t<s(e)&&(a(e,e),n(this.zoomLocation,this.tmpCamera.eye,m(e,e,t)))}}this.updateCamera(this.tmpCamera,C,this.zoomLocation),this.begin(this.tmpCamera)}animationSettings(){return{apex:null,duration:e(600),easing:f}}updateCamera(t,e,i){r(this.tmpRayDir,i,t.eye);const o=s(this.tmpRayDir);let a=o*e;e<=1&&a<j&&(a=j,e=a/o),Math.abs(o-a)<1e-6||(m(this.tmpRayDir,this.tmpRayDir,e),t.eye=r(z,i,this.tmpRayDir),t.center=c(z,t.center,i,1-e),l(this.view,t,this.constraintOptions))}};v=t([i("esri.views.3d.state.controllers.local.ZoomStepController")],v);const z=p();export{v as ZoomStepController};
