/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import{sign as i}from"../../../../../core/mathUtils.js";import{createScreenPointArray as r}from"../../../../../core/screenUtils.js";import{property as s}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as e}from"../../../../../core/accessorSupport/decorators/subclass.js";import{c as a}from"../../../../../chunks/vec2.js";import{a as o}from"../../../../../chunks/vec2f64.js";import{f as n,n as h,a as m,b as c,o as p,g as l,l as u,e as P}from"../../../../../chunks/vec3.js";import{c as C}from"../../../../../chunks/vec3f64.js";import{create as v,fromPositionAndNormal as D}from"../../../../../geometry/support/plane.js";import{pixelDistanceToInteractionFactor as f,applyAll as y}from"../../../camera/constraintUtils.js";import{InteractiveController as d}from"../InteractiveController.js";import{normalizeCoordinate as g,intersectPlaneFromScreenPoint as j}from"../../utils/navigationUtils.js";const w=30,N=70;let O=class extends d{constructor(t){super(t),this.view=null,this.tmpP=C(),this.tmpDir=C(),this.tmpN=C(),this.tmpP0=o(),this.tmpPoi=C(),this.tmpRayDir=C(),this.dragBeginPoint=r(),this.normalizedAnchorPoint=o(),this.constraintOptions={selection:15,interactionType:1,interactionFactor:0,interactionStartCamera:null,interactionDirection:C(),tiltMode:0},this.plane=v()}get intersectionHelper(){return this.view.sceneIntersectionHelper}begin(t){if(!this.active)return;let i;a(this.dragBeginPoint,t),g(this.startCamera,t,this.normalizedAnchorPoint),this.intersectionHelper.intersectScreenFreePointFallback(t,this.tmpP),n(this.tmpDir,this.tmpP,this.startCamera.eye),h(this.tmpDir,this.tmpDir),this.view.camera.position.hasZ&&(i=Math.abs(this.view.camera.position.z));let r=w*i;const s=this.view._stage.renderView.getMinimalDepthForArea(t[0],t[1],this.view.state.camera,N);r=r>s?s:r,m(this.tmpDir,this.tmpDir,r),c(this.tmpP,this.startCamera.eye,this.tmpDir),n(this.tmpN,this.startCamera.eye,this.startCamera.center),h(this.tmpN,this.tmpN),this.tmpN[1]<0&&p(this.tmpN,this.tmpN),D(this.tmpP,this.tmpN,this.plane),this.constraintOptions.interactionStartCamera=this.startCamera}update(t){if(!this.active)return;j(this.plane,this.currentCamera,this.dragBeginPoint,this.tmpPoi)||l(this.tmpPoi,this.currentCamera.center),g(this.currentCamera,t,this.tmpP0);let r=4*(this.tmpP0[1]-this.normalizedAnchorPoint[1]);a(this.normalizedAnchorPoint,this.tmpP0),n(this.tmpRayDir,this.tmpPoi,this.currentCamera.eye);const s=u(this.tmpRayDir);let e=s*(1-r);l(this.constraintOptions.interactionDirection,this.tmpRayDir),m(this.constraintOptions.interactionDirection,this.constraintOptions.interactionDirection,i(r)/s);const o=this.view.state.constraints.minimumPoiDistance;r>=0&&e<o&&(e=o,r=-(e-s)/s),Math.abs(s-e)<1e-6||(m(this.tmpRayDir,this.tmpRayDir,r),this.currentCamera.eye=c(b,this.currentCamera.eye,this.tmpRayDir),P(b,this.currentCamera.center,this.tmpPoi,r),this.tmpPoi[2]>this.startCamera.center[2]?b[2]=Math.max(this.startCamera.center[2],b[2]):b[2]=Math.min(this.startCamera.center[2],b[2]),this.currentCamera.center=b,this.constraintOptions.interactionFactor=f(this.dragBeginPoint,t),y(this.view,this.currentCamera,this.constraintOptions))}end(){this.active&&this.finishController()}};t([s({constructOnly:!0})],O.prototype,"view",void 0),O=t([e("esri.views.3d.state.controllers.local.ZoomController")],O);const b=C();export{O as ZoomController};
