/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import r from"../../../../core/Handles.js";import{unwrap as s,isNone as n}from"../../../../core/maybe.js";import{whenFalse as i,init as o}from"../../../../core/watchUtils.js";import{property as a}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as c}from"../../../../core/accessorSupport/decorators/subclass.js";import{b as u,k as h,g as d}from"../../../../chunks/vec3.js";import{c as f}from"../../../../chunks/vec3f64.js";import{create as p}from"../../../../geometry/support/ray.js";import m from"../debugFlags.js";import{GraphicsHandle as _}from"../debugUtils.js";import{PropertiesPool as l}from"../PropertiesPool.js";import{fromRenderAtEye as y}from"../geometryUtils/ray.js";import C from"./CameraOnSurface.js";import O from"./CenterOnSurface.js";import{ContentGeometryUpdates as A}from"./ContentGeometryUpdates.js";import w from"./Focus.js";import{StableSurfaceCenter as g}from"./StableSurfaceCenter.js";import S from"./SurfaceGeometryUpdates.js";import{Intersector as v}from"../../webgl-engine/lib/Intersector.js";import{TERRAIN_ID as I}from"../../webgl-engine/lib/verticalOffsetUtils.js";import{TaskPriority as b}from"../../../support/Scheduler.js";let T=class extends t{constructor(e){super(e),this._handles=new r,this._tmpRay=p(),this._centerRayDirty=!0,this._surfaceAltitudeAtCenter=0,this._surfaceAltitudeAtCenterDirty=!0,this._contentAltitudeAtCenter=0,this._contentAltitudeAtCenterDirty=!0,this._propertiesPool=new l({renderPointOfView:R},this),this.renderPointOfView=f(),this._pois=new Array,this._debugCenters=new Map}initialize(){var e;const{state:t,basemapTerrain:r,renderCoordsHelper:n,map:a}=this.view;this._surfaceIntersector=new v(t.viewingMode),t.isGlobal?this._surfaceIntersector.options.backfacesTerrain=!1:this._surfaceIntersector.options.backfacesTerrain=!0,this._surfaceIntersector.options.invisibleTerrain=!1,this._surfaceIntersector.options.store=0,this._contentIntersector=new v(t.viewingMode);const c=()=>this._estimateSurfaceAltitudeAtCenter(),u=this.view.resourceController.scheduler,h=s(null==(e=this.view.basemapTerrain)?void 0:e.elevationQueryCache),d={state:t,scheduler:u,surface:r,renderCoordsHelper:n};this._set("centerOnSurfaceInfrequent",new O({...d,task:b.POINT_OF_INTEREST_INFREQUENT,estimateSurfaceAltitudeAtCenter:c})),this._set("centerOnSurfaceFrequent",new O({...d,task:b.POINT_OF_INTEREST_FREQUENT,estimateSurfaceAltitudeAtCenter:c})),this._set("centerOnContent",new O({...d,task:b.POINT_OF_INTEREST_FREQUENT,estimateSurfaceAltitudeAtCenter:()=>this._estimateContentAltitudeAtCenter()})),this._set("cameraOnSurface",new C({...d,cache:h,task:b.POINT_OF_INTEREST_INFREQUENT,map:a})),this._set("contentCameraOnSurface",new C({...d,cache:h,task:b.POINT_OF_INTEREST_INFREQUENT,map:a,cameraName:"contentCamera"})),this._set("surfaceGeometryUpdates",new S({...d,centerOnSurfaces:[this.centerOnSurfaceFrequent,this.centerOnContent,this.centerOnSurfaceInfrequent]})),this._set("contentGeometryUpdates",new A({contentLayerViews:this.view.allLayerViews,renderCoordsHelper:n})),this._set("surfaceOrigin",new g({cache:h,view:this.view})),this._set("focus",new w({state:t,scheduler:u,surface:r,renderCoordsHelper:n,centerOnSurface:this.centerOnSurfaceFrequent,estimateSurfaceIntersectionAtRenderPoint:(e,t)=>this._estimateSurfaceIntersectionAtRenderPoint(e,t)})),this._pois.push(this.centerOnContent,this.centerOnSurfaceFrequent,this.centerOnSurfaceInfrequent,this.cameraOnSurface,this.contentCameraOnSurface,this.focus);const f=this.view.graphics;this._debugCenters.set(this.centerOnContent,new _(f,"red","CenterOnContent")),this._debugCenters.set(this.centerOnSurfaceFrequent,new _(f,"red","CenterOnSurface")),this._debugCenters.set(this.cameraOnSurface,new _(f,"blue","CameraOnSurface")),this._debugCenters.set(this.contentCameraOnSurface,new _(f,"blue","CameraOfInterestOnSurface")),this._debugCenters.set(this.focus,new _(f,"green","Focus")),this._handles.add([t.watch("camera",(e=>this._cameraChanged(e)),!0),r.watch("extent",(()=>this._updateCenterPointsOfInterest())),i(r,"updating",(()=>this._updateCenterPointsOfInterest()),!0),this.surfaceGeometryUpdates.events.on("request-update",(()=>this._updateCenterPointsOfInterest())),this.contentGeometryUpdates.events.on("request-update",(()=>this._updateCenterOnContent())),o(m,"SHOW_POI",(e=>this._setDebug(e)))]),this._cameraChanged(this.view.state.camera);for(const s of this._pois)s.runTask()}destroy(){this._setDebug(!1),this._handles.destroy(),this._propertiesPool.destroy();for(const e of this._pois)e.destroy();this.surfaceOrigin.destroy()}get updating(){var e;return!!(null!=(e=this.surfaceGeometryUpdates)&&e.updating||this._pois.some((e=>e.updating)))}get centerRay(){return this._centerRayDirty&&(this._centerRay=this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(this.view.state.camera,this._tmpRay),this._centerRayDirty=!1),this._centerRay}_estimateContentAltitudeAtCenter(){if(!this._contentAltitudeAtCenterDirty)return this._contentAltitudeAtCenter;this._contentAltitudeAtCenterDirty=!1;const e=this.centerRay;return n(e)||(this.view.sceneIntersectionHelper.intersectRay(e,this._contentIntersector,P,E)?this._contentAltitudeAtCenter=this.view.renderCoordsHelper.getAltitude(P):this._contentAltitudeAtCenter=this._estimateSurfaceAltitudeAtCenter()),this._contentAltitudeAtCenter}_estimateSurfaceAltitudeAtCenter(){if(!this.view.basemapTerrain)return 0;if(!this._surfaceAltitudeAtCenterDirty)return this._surfaceAltitudeAtCenter;this._surfaceAltitudeAtCenterDirty=!1;const e=this.centerRay;if(n(e))return this._surfaceAltitudeAtCenter;const t=e.origin,r=u(P,e.origin,e.direction);return this._surfaceIntersector.resetWithRay(e),this._surfaceIntersector.camera=this.view.state.camera,this.view.basemapTerrain.intersect(this._surfaceIntersector,null,t,r),this._surfaceIntersector.results.min.getIntersectionPoint(P)&&(this._surfaceAltitudeAtCenter=this.view.renderCoordsHelper.getAltitude(P)),this._surfaceAltitudeAtCenter}_estimateSurfaceIntersectionAtRenderPoint(e,t){const r=y(this.view.state.camera,e,j);if(n(r))return null;const s=r.origin,i=u(P,r.origin,r.direction);return this._surfaceIntersector.resetWithRay(r),this._surfaceIntersector.camera=this.view.state.camera,this.view.basemapTerrain.intersect(this._surfaceIntersector,null,s,i),this._surfaceIntersector.results.min.getIntersectionPoint(t)?t:null}_cameraChanged(e){this._updateCenterPointsOfInterest();const t=e.eye;h(this.renderPointOfView,t)||this._set("renderPointOfView",d(this._propertiesPool.get("renderPointOfView"),t))}_updateCenterPointsOfInterest(){this._centerRayDirty=!0,this._surfaceAltitudeAtCenterDirty=!0,this._contentAltitudeAtCenterDirty=!0;for(const e of this._pois)e.updateRenderLocation()}_updateCenterOnContent(){this._contentAltitudeAtCenterDirty=!0,this.centerOnContent.updateRenderLocation()}_setDebug(e){if(!e)return this._debugCenters.forEach((e=>e.remove())),void this._handles.remove("debug");for(const t of this._pois)this._handles.add(o(t,"renderLocation",(e=>this._debugCenters.get(t).showPoint(e,t.renderCoordsHelper.spatialReference))),"debug")}get test(){return{update:()=>{this.surfaceGeometryUpdates.runTask();for(const e of this._pois)e.runTask()},surfaceGeometryUpdates:this.surfaceGeometryUpdates}}};e([a({readOnly:!0})],T.prototype,"centerOnContent",void 0),e([a({readOnly:!0})],T.prototype,"centerOnSurfaceFrequent",void 0),e([a({readOnly:!0})],T.prototype,"centerOnSurfaceInfrequent",void 0),e([a({readOnly:!0})],T.prototype,"cameraOnSurface",void 0),e([a({readOnly:!0})],T.prototype,"contentCameraOnSurface",void 0),e([a({readOnly:!0})],T.prototype,"focus",void 0),e([a({readOnly:!0})],T.prototype,"renderPointOfView",void 0),e([a({readOnly:!0})],T.prototype,"surfaceOrigin",void 0),e([a({readOnly:!0})],T.prototype,"contentGeometryUpdates",void 0),e([a({readOnly:!0})],T.prototype,"surfaceGeometryUpdates",void 0),e([a({constructOnly:!0})],T.prototype,"view",void 0),e([a({readOnly:!0})],T.prototype,"updating",null),T=e([c("esri.views.3d.support.PointsOfInterest")],T);const R=Array,P=f(),j=p(),E={exclude:new Set([I])};var U=T;export default U;export{T as PointsOfInterest};
