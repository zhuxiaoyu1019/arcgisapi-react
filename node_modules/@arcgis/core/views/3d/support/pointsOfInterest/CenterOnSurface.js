/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import{clamp as e}from"../../../../core/mathUtils.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import{g as i,i as o,a,b as n,k as c,p as u}from"../../../../chunks/vec3.js";import{c as l}from"../../../../chunks/vec3f64.js";import d from"../../../../geometry/Point.js";import{getReferenceEllipsoid as p}from"../../../../geometry/projectionEllipsoid.js";import h from"../debugFlags.js";import{PropertiesPool as f}from"../PropertiesPool.js";import{PointOfInterest as m}from"./PointOfInterest.js";const S=Array;let _=class extends m{constructor(t){super(t),this._propertiesPool=new f({location:d,renderLocation:S},this),this._currentSurfaceAltitude=0,this._latestSurfaceAltitude=0,this.distance=0,this.renderLocation=l(),this.updating=!1}initialize(){this._frameWorker=this.scheduler.registerTask(this.task,this),this.runTask()}destroy(){this._frameWorker&&(this._frameWorker.remove(),this._frameWorker=null),this._propertiesPool.destroy(),this._propertiesPool=null}get location(){const t=this._propertiesPool.get("location");return this.renderCoordsHelper.fromRenderCoords(this.renderLocation,t,this.state.spatialReference),t}updateRenderLocation(){this.updating=!0,this._updateRenderLocation()}get estimatedSurfaceAltitude(){return this._latestSurfaceAltitude}get running(){return this.updating}runTask(){this._latestSurfaceAltitude=this.estimateSurfaceAltitudeAtCenter(),this._updateRenderLocation(),this.updating=!1}_updateRenderLocation(){const t=g;let e=this.calculateSurfaceIntersection(this._currentSurfaceAltitude,t);const r=this._currentSurfaceAltitude!==this._latestSurfaceAltitude;!e&&r&&(e=this.calculateSurfaceIntersection(this._latestSurfaceAltitude,t),e&&(this._currentSurfaceAltitude=this._latestSurfaceAltitude));const s=A;if(e&&this.latestSurfaceAltitudeChangesDistanceSignificantly(t,s)&&(i(t,s),this._currentSurfaceAltitude=this._latestSurfaceAltitude),e)this.distance=o(this.state.camera.eye,t);else{const e=this.state.camera;a(t,e.viewForward,this._get("distance")),n(t,t,e.eye)}c(this._get("renderLocation"),t)||this._set("renderLocation",i(this._propertiesPool.get("renderLocation"),t))}calculateSurfaceIntersection(t,r){const s=this.state.camera;if(!this.renderCoordsHelper.intersectManifold(s.ray,t,r))return!1;if(this.state.isGlobal){const e=p(this.renderCoordsHelper.spatialReference).radius,i=e+t,c=u(s.eye),l=c<i*i,d=o(s.eye,r);if(l&&d>e/4){const t=i-Math.sqrt(c);return a(r,s.viewForward,t),n(r,r,s.eye),!0}}else{const t=this.surface.ready&&this.surface.extent;t&&(r[0]=e(r[0],t[0],t[2]),r[1]=e(r[1],t[1],t[3]))}return!0}latestSurfaceAltitudeChangesDistanceSignificantly(t,e){if(this._latestSurfaceAltitude===this._currentSurfaceAltitude||null==t)return!1;if(this.calculateSurfaceIntersection(this._latestSurfaceAltitude,e)){if(h.TESTS_DISABLE_UPDATE_THRESHOLDS)return!0;const r=this.state.camera.eye,s=o(r,t),i=o(r,e);if(Math.abs(i-s)/s>y)return!0}return!1}};t([r({constructOnly:!0})],_.prototype,"scheduler",void 0),t([r({constructOnly:!0})],_.prototype,"task",void 0),t([r()],_.prototype,"distance",void 0),t([r({constructOnly:!0})],_.prototype,"estimateSurfaceAltitudeAtCenter",void 0),t([r({readOnly:!0})],_.prototype,"location",null),t([r({readOnly:!0})],_.prototype,"renderLocation",void 0),t([r()],_.prototype,"updating",void 0),_=t([s("esri.views.3d.support.CenterOnSurface")],_);const y=.05,g=l(),A=l();var j=_;export default j;export{_ as CenterOnSurface};
