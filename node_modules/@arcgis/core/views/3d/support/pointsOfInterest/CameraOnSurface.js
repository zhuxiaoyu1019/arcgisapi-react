/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import{createAbortController as e,isAbortError as r}from"../../../../core/promiseUtils.js";import{on as o}from"../../../../core/watchUtils.js";import{property as i}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import{i as n,k as a,g as c}from"../../../../chunks/vec3.js";import{c as d}from"../../../../chunks/vec3f64.js";import l from"../../../../geometry/Point.js";import{distanceToScale as p}from"../cameraUtils.js";import{PropertiesPool as h}from"../PropertiesPool.js";import{PointOfInterest as u}from"./PointOfInterest.js";const m=Array;let y=class extends u{constructor(t){super(t),this._dirty=!1,this._propertiesPool=new h({location:l,renderLocation:m},this),this._estimatedSurfaceAltitude=0,this._pendingElevationQueryController=null,this.cameraName="camera",this.renderLocation=d(),this.tmpPoint=new l}initialize(){if(this.scheduler&&this.handles.add(this.scheduler.registerTask(this.task,this)),this.runTask(),this.map){const t=()=>this._setDirty();this.handles.add(o(this.map,"ground.layers","change",t,t,t))}this._updateRenderLocation()}destroy(){this._cancelPendingRequest(),this._propertiesPool.destroy(),this._propertiesPool=null}get _camera(){return this.state[this.cameraName]}get location(){const t=this._propertiesPool.get("location");return this.renderCoordsHelper.fromRenderCoords(this.renderLocation,t,this.state.spatialReference),t}get scale(){const t=this._camera,e=n(t.eye,this.renderLocation),r={renderCoordsHelper:this.renderCoordsHelper,state:{camera:t}};return p(r,e,0)}get updating(){return this._dirty||null!=this._pendingElevationQueryController}updateRenderLocation(){this._setDirty(),this._updateRenderLocation()}_setDirty(){this._dirty||(this._dirty=!0,this.notifyChange("updating"))}_cancelPendingRequest(){const t=this._pendingElevationQueryController;t&&(this._pendingElevationQueryController=null,t.abort(),this.notifyChange("updating"))}get running(){return!this._pendingElevationQueryController&&this._dirty}runTask(){if(this._cancelPendingRequest(),this._dirty=!1,this.notifyChange("updating"),!this.map||!this.map.ground)return void this._updateSurfaceAltitude(0);this.renderCoordsHelper.fromRenderCoords(this._camera.eye,this.tmpPoint,this.state.spatialReference);let t=e();this.map.ground.queryElevation(this.tmpPoint,{signal:t.signal,cache:this.cache}).then((t=>this._updateSurfaceAltitude(t.geometry.z))).catch((t=>{r(t)||this._updateSurfaceAltitude(0)})).catch((()=>{})).then((()=>{this._pendingElevationQueryController===t&&(this._pendingElevationQueryController=null,this.notifyChange("updating")),t=null})),this._pendingElevationQueryController=t}_updateSurfaceAltitude(t){this._estimatedSurfaceAltitude!==t&&(this._estimatedSurfaceAltitude=t,this._updateRenderLocation())}_updateRenderLocation(){this.renderCoordsHelper.setAltitude(_,this._estimatedSurfaceAltitude,this._camera.eye),a(this._get("renderLocation"),_)||this._set("renderLocation",c(this._propertiesPool.get("renderLocation"),_))}};t([i({constructOnly:!0})],y.prototype,"scheduler",void 0),t([i({constructOnly:!0})],y.prototype,"cache",void 0),t([i({constructOnly:!0})],y.prototype,"task",void 0),t([i({constructOnly:!0})],y.prototype,"cameraName",void 0),t([i({readOnly:!0})],y.prototype,"location",null),t([i({constructOnly:!0})],y.prototype,"map",void 0),t([i({readOnly:!0})],y.prototype,"renderLocation",void 0),t([i({readOnly:!0})],y.prototype,"scale",null),t([i({readOnly:!0})],y.prototype,"updating",null),y=t([s("esri.views.3d.support.CameraOnSurface")],y);const _=d();var g=y;export default g;export{y as CameraOnSurface};
