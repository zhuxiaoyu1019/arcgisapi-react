/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{isSome as t}from"../../../core/maybe.js";import{getMetersPerUnitForSR as e}from"../../../core/unitUtils.js";import{h as s}from"../../../chunks/mat4.js";import{g as i}from"../../../chunks/vec3.js";import{projectPointToVector as r,projectVectorToVector as o,projectVectorToDehydratedPoint as n,projectVectorToPoint as a}from"../../../geometry/projection.js";import c from"../../../geometry/SpatialReference.js";import{create as m,setExtent as d,altitudeAt as h,setAltitudeAt as l,setAltitudeOfTransformation as u,normalAt as p,axisAt as f,elevate as y,intersectRayClosestSilhouette as S,intersectRay as g,createGlobal as j,createLocal as R}from"../../../geometry/support/coordinateSystem.js";import{intersectRay as w}from"../../../geometry/support/plane.js";import{sv3d as A}from"../../../geometry/support/vectorStacks.js";import{isDehydratedPoint as M}from"../../../layers/graphics/dehydratedFeatureUtils.js";class _{constructor(t,e,s,i){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=s,this.coordinateSystem=i,this._coordinateSystem=m(i)}set extent(t){t&&d(this.coordinateSystem,t,this.coordinateSystem)}getAltitude(t){return h(this.coordinateSystem,t)}setAltitude(t,e,s=t){return l(this.coordinateSystem,s,e,t)}setAltitudeOfTransformation(t,e){u(this.coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return p(this.coordinateSystem,t,e)}worldBasisAtPosition(t,e,s){return f(this.coordinateSystem,t,e,s)}basisMatrixAtPosition(t,e){const i=this.worldBasisAtPosition(t,0,A.get()),r=this.worldBasisAtPosition(t,1,A.get()),o=this.worldBasisAtPosition(t,2,A.get());return s(e,i[0],i[1],i[2],0,r[0],r[1],r[2],0,o[0],o[1],o[2],0,0,0,0,1),e}intersectManifoldClosestSilhouette(t,e,s){return y(this.coordinateSystem,e,this._coordinateSystem),S(this._coordinateSystem,t,s),s}intersectManifold(t,e,s){y(this.coordinateSystem,e,this._coordinateSystem);const r=A.get();return g(this._coordinateSystem,t,r)?i(s,r):null}intersectInfiniteManifold(t,e,s){if(1===this.viewingMode)return this.intersectManifold(t,e,s);y(this.coordinateSystem,e,this._coordinateSystem);const r=this._coordinateSystem.value,o=A.get();return w(r.plane,t,o)?i(s,o):null}toRenderCoords(t,e,s){return M(t)?r(t,e,this.spatialReference):o(t,e,s,this.spatialReference)}fromRenderCoords(e,s,i=null){return M(s)?(t(i)&&(s.spatialReference=i),n(e,this.spatialReference,s)):s instanceof c?a(e,this.spatialReference,s):o(e,this.spatialReference,s,i)?s:null}static create(t,s){switch(t){case 2:return new _(2,s,e(s),R());case 1:return new _(1,s,1,j(s))}}}export{_ as RenderCoordsHelper};
