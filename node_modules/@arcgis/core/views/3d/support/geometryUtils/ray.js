/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{isNone as r}from"../../../../core/maybe.js";import{castRenderScreenPointArray3 as e}from"../../../../core/screenUtils.js";import{c as n}from"../../../../chunks/vec2.js";import{f as o,g as t,s as c}from"../../../../chunks/vec3.js";import{create as i}from"../../../../geometry/support/ray.js";import{sv3d as s}from"../../../../geometry/support/vectorStacks.js";function u(r,n,o=i()){return m(r,r.screenToRender(n,e(s.get())),o)}function m(t,c,u=i()){const m=e(n(s.get(),c));if(m[2]=0,!t.unprojectFromRenderScreen(m,u.origin))return null;const g=e(n(s.get(),c));g[2]=1;const p=t.unprojectFromRenderScreen(g,s.get());return r(p)?null:(o(u.direction,p,u.origin),u)}function g(r,n,o=i()){return p(r,r.screenToRender(n,e(s.get())),o)}function p(e,n,u=i()){t(u.origin,e.eye);const m=c(s.get(),n[0],n[1],1),g=e.unprojectFromRenderScreen(m,s.get());return r(g)?null:(o(u.direction,g,u.origin),u)}export{m as fromRender,p as fromRenderAtEye,u as fromScreen,g as fromScreenAtEye};
