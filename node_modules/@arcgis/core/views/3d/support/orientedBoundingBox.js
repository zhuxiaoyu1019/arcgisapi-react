/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{h as t,d as e}from"../../../chunks/mat3.js";import{c as a}from"../../../chunks/mat3f64.js";import{a as n,c as r}from"../../../chunks/quat.js";import{c as s,a as f}from"../../../chunks/quatf32.js";import{a as o}from"../../../chunks/quatf64.js";import{g as i,f as h,q as c,w as u,s as l,t as m,b as z}from"../../../chunks/vec3.js";import{b as S,a as b}from"../../../chunks/vec3f32.js";import{b as M,a as p,c as q}from"../../../chunks/vec3f64.js";import{t as j}from"../../../chunks/vec4.js";import{c as k}from"../../../chunks/vec4f64.js";import{create as g}from"../../../geometry/support/aaBoundingBox.js";import{signedDistance as v,normal as x}from"../../../geometry/support/plane.js";import{computeOBB as y}from"./dito.js";const w=o(),d=q(),A=q(),B=k(),I=a();class C{constructor(t){const e=56,a=0,n=24,r=36,f=t*e;this.buffer=new ArrayBuffer(f),this.obbs=new Array(t);for(let o=0;o<t;o++)this.obbs[o]={center:M(this.buffer,e*o+a),halfSize:S(this.buffer,e*o+n),quaternion:s(this.buffer,e*o+r)}}}function D(t=[0,0,0],e=[-1,-1,-1],a=[0,0,0,1]){return{center:p(t),halfSize:b(e),quaternion:f(a)}}function E(t){return D(t.center,t.halfSize,t.quaternion)}function F(t,e){i(e.center,t.center),i(e.halfSize,t.halfSize),n(e.quaternion,t.quaternion)}function G(t,e){return e=e||D(),y(t,e),e}function H(t,e){const a=v(e,t.center),n=T(t,x(e));return a>n?1:a<-n?-1:0}function J(e,a){a||(a=g());const n=t(I,e.quaternion),r=e.halfSize[0]*Math.abs(n[0])+e.halfSize[1]*Math.abs(n[3])+e.halfSize[2]*Math.abs(n[6]),s=e.halfSize[0]*Math.abs(n[1])+e.halfSize[1]*Math.abs(n[4])+e.halfSize[2]*Math.abs(n[7]),f=e.halfSize[0]*Math.abs(n[2])+e.halfSize[1]*Math.abs(n[5])+e.halfSize[2]*Math.abs(n[8]);return a[0]=e.center[0]-r,a[1]=e.center[1]-s,a[2]=e.center[2]-f,a[3]=e.center[0]+r,a[4]=e.center[1]+s,a[5]=e.center[2]+f,a}function K(t,e){return v(e,t.center)-T(t,x(e))}function L(t,e){return v(e,t.center)+T(t,x(e))}function N(t,e){return H(t,e[0])<=0&&H(t,e[1])<=0&&H(t,e[2])<=0&&H(t,e[3])<=0&&H(t,e[4])<=0&&H(t,e[5])<=0}function O(t,e,a,n=0){r(w,t.quaternion),h(d,e,t.center);const s=c(d,d,w),f=c(A,a,w);let o=-1/0,i=1/0;for(let r=0;r<3;r++)if(Math.abs(f[r])>1e-6){const e=(n+t.halfSize[r]-s[r])/f[r],a=(-n-t.halfSize[r]-s[r])/f[r];o=Math.max(o,Math.min(e,a)),i=Math.min(i,Math.max(e,a))}else if(s[r]>t.halfSize[r]+n||s[r]<-t.halfSize[r]-n)return!1;return o<=i}function P(a,n,s,f,o){r(w,a.quaternion),u(d,n,a.center),c(d,d,w);const i=d[0]<-a.halfSize[0]?-1:d[0]>a.halfSize[0]?1:0,h=d[1]<-a.halfSize[1]?-1:d[1]>a.halfSize[1]?1:0,S=d[2]<-a.halfSize[2]?-1:d[2]>a.halfSize[2]?1:0,b=Math.abs(i)+Math.abs(h)+Math.abs(S);if(0===b)return 1/0;const M=1===b?4:6,p=6*(i+3*h+9*S+13);t(I,a.quaternion),e(I,I,a.halfSize);for(let t=0;t<M;t++){const e=R[p+t];l(d,((1&e)<<1)-1,(2&e)-1,((4&e)>>1)-1),m(d,d,I),z(B,a.center,d),B[3]=1,j(B,B,s);const n=1/Math.max(1e-6,B[3]);Q[2*t]=B[0]*n,Q[2*t+1]=B[1]*n}const q=2*M-2;let k=Q[0]*(Q[3]-Q[q+1])+Q[q]*(Q[1]-Q[q-1]);for(let t=2;t<q;t+=2)k+=Q[t]*(Q[t+3]-Q[t-1]);return Math.abs(k)*f*o*.125}const Q=[.1,.2,.3,.4,.5,.6,.7,.8,.9,1,1.1,1.2],R=(()=>{const t=new Int8Array(162);let e=0;const a=a=>{for(let n=0;n<a.length;n++)t[e+n]=a[n];e+=6};return a([6,2,3,1,5,4]),a([0,2,3,1,5,4]),a([0,2,3,7,5,4]),a([0,1,3,2,6,4]),a([0,1,3,2,0,0]),a([0,1,5,7,3,2]),a([0,1,3,7,6,4]),a([0,1,3,7,6,2]),a([0,1,5,7,6,2]),a([0,1,5,4,6,2]),a([0,1,5,4,0,0]),a([0,1,3,7,5,4]),a([0,2,6,4,0,0]),a([0,0,0,0,0,0]),a([1,3,7,5,0,0]),a([2,3,7,6,4,0]),a([2,3,7,6,0,0]),a([2,3,1,5,7,6]),a([0,1,5,7,6,2]),a([0,1,5,7,6,4]),a([0,1,3,7,6,4]),a([4,5,7,6,2,0]),a([4,5,7,6,0,0]),a([4,5,1,3,7,6]),a([0,2,3,7,5,4]),a([6,2,3,7,5,4]),a([6,2,3,1,5,4]),t})();function T(t,e){r(w,t.quaternion),c(d,e,w);const a=t.halfSize;return Math.abs(d[0]*a[0])+Math.abs(d[1]*a[1])+Math.abs(d[2]*a[2])}function U(t,e){for(let a=0;a<8;++a){const n=e[a];n[0]=1&a?-t.halfSize[0]:t.halfSize[0],n[1]=2&a?-t.halfSize[1]:t.halfSize[1],n[2]=4&a?-t.halfSize[2]:t.halfSize[2],c(n,n,t.quaternion),z(n,n,t.center)}}export{C as ObbArray,E as clone,G as compute,U as corners,D as create,O as intersectLine,H as intersectPlane,N as isVisible,L as maximumDistancePlane,K as minimumDistancePlane,P as projectedArea,T as projectedRadius,F as set,J as toAaBoundingBox};
