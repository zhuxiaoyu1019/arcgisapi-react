/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import{isSome as r}from"../../../core/maybe.js";import{R as i}from"../../../chunks/RasterColorizer.glsl.js";import{ReloadableShaderModule as e}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as n,parameter as s}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as a}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{Program as c}from"../webgl-engine/lib/Program.js";import{getUniformLocationInfos as l,setUniforms as m}from"../../webgl/rasterUtils.js";import{simpleBlendingParams as h,makePipelineState as p,defaultColorWriteParams as u}from"../../webgl/renderState.js";class f extends t{get uniformLocationInfos(){return this._uniformLocationInfos||(this._uniformLocationInfos=l(this._context,this.program)),this._uniformLocationInfos}initializeProgram(o){const r=f.shader.get(),i=this.configuration,e=r.build({output:i.colorizerType,applyColormap:i.applyColormap});return this._context=o.rctx,new c(o.rctx,e,a)}initializePipeline(){const o=2===this.configuration.mode?h(1,771):1===this.configuration.mode?h(0,770):null;return p({blending:o,colorWrite:u})}bindPass(o){m(this.program,this.uniformLocationInfos,o.basic),m(this.program,this.uniformLocationInfos,o.common),r(o.colormap)&&m(this.program,this.uniformLocationInfos,o.colormap),0===this.configuration.colorizerType&&r(o.stretch)?m(this.program,this.uniformLocationInfos,o.stretch):2===this.configuration.colorizerType&&r(o.hillshade)&&m(this.program,this.uniformLocationInfos,o.hillshade)}}f.shader=new e(i,(()=>import("../webgl-engine/core/shaderLibrary/raster/RasterColorizer.glsl.js")));class g extends n{constructor(){super(...arguments),this.mode=2,this.colorizerType=0,this.applyColormap=!0}}o([s({count:3})],g.prototype,"mode",void 0),o([s({count:3})],g.prototype,"colorizerType",void 0),o([s()],g.prototype,"applyColormap",void 0);export{f as RasterColorizerTechnique,g as RasterColorizerTechniqueConfiguration};
