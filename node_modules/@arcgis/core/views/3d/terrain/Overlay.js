/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{nextHighestPowerOfTwo as e}from"../../../core/mathUtils.js";import{s as t}from"../../../chunks/vec4.js";import{create as s,offset as r,set as i}from"../../../geometry/support/aaBoundingRect.js";import{fromValues as a}from"../webgl-engine/lib/localOrigin.js";class n{constructor(e,t){this.index=e,this.renderTargets=t,this.extent=s(),this.resolution=0,this.viewport=s(),this.renderLocalOrigin=a(0,0,0,"O"),this.pixelRatio=1,this.canvasGeometries={extents:[s(),s(),s()],numViews:0},this.validTargets=null,this.hasDrapedFeatureSource=!1,this.hasDrapedRasterSource=!1,this.hasTargetWithoutRasterImage=!1,this.index=e,this.validTargets=new Array(t.renderTargets.length).fill(!1)}getValidTarget(e){return this.validTargets[e]?this.renderTargets.getTarget(e):null}get needsColorWithoutRasterImage(){return this.hasDrapedRasterSource&&this.hasDrapedFeatureSource&&this.hasTargetWithoutRasterImage}getColorTexture(e){const t=1===e?this.renderTargets.getTarget(0):2===e?this.renderTargets.getTarget(2):this.renderTargets.getTarget(4);return t?t.getTexture():null}getNormalTexture(e){const t=1===e?this.renderTargets.getTarget(3):null;return t?t.getTexture():null}draw(e,t){const s=this.computeRenderTargetValidityBitfield(),r=this.needsColorWithoutRasterImage;for(const i of this.renderTargets.renderTargets)1===i.type&&!1===r?this.validTargets[i.type]=!1:this.validTargets[i.type]=e.drawTarget(this,i,t);return s^this.computeRenderTargetValidityBitfield()?0:1}computeRenderTargetValidityBitfield(){const e=this.validTargets;return+e[0]|+e[1]<<1|+e[2]<<2|+e[3]<<3|+e[4]<<4}setupGeometryViewsCyclical(e){this.setupGeometryViewsDirect();const t=.001*e.range;if(this.extent[0]-t<=e.min){const t=this.canvasGeometries.extents[this.canvasGeometries.numViews++];r(this.extent,e.range,0,t)}if(this.extent[2]+t>=e.max){const t=this.canvasGeometries.extents[this.canvasGeometries.numViews++];r(this.extent,-e.range,0,t)}}setupGeometryViewsDirect(){this.canvasGeometries.numViews=1,i(this.canvasGeometries.extents[0],this.extent),t(this.viewport,0,0,this.resolution,this.resolution)}hasSomeSizedView(){for(let e=0;e<this.canvasGeometries.numViews;e++){const t=this.canvasGeometries.extents[e];if(t[0]!==t[2]&&t[1]!==t[3])return!0}return!1}applyViewport(e){const t=this.viewport;0===this.index?e.setViewport(t[0],t[1],t[2],t[3]):e.setViewport(t[0]+this.resolution,t[1],t[2],t[3])}}function o(t,s,r){return Math.min(e(Math.max(t,s)+256),r)}export{n as Overlay,o as computeOverlayResolution};
