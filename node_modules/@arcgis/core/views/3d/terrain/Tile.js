/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{log2 as e}from"../../../core/mathUtils.js";import{isSome as t,abortMaybe as i,isNone as s}from"../../../core/maybe.js";import n from"../../../core/ObjectPool.js";import{createAbortController as r}from"../../../core/promiseUtils.js";import{c as a,s as o}from"../../../chunks/vec2.js";import{a as h}from"../../../chunks/vec2f64.js";import{g as l,f as d,p as u,d as c,a as p,b as g,l as f}from"../../../chunks/vec3.js";import{c as m,u as _}from"../../../chunks/vec3f64.js";import{t as y}from"../../../chunks/vec4.js";import{c as v}from"../../../chunks/vec4f64.js";import{getReferenceEllipsoid as A}from"../../../geometry/projectionEllipsoid.js";import{create as M,equals as L}from"../../../geometry/support/aaBoundingRect.js";import{c as j}from"../../../chunks/sphere.js";import{VectorTile as D}from"../../2d/engine/vectorTiles/VectorTile.js";import{ImageWithType as I}from"../support/StreamDataLoader.js";import{ElevationBounds as U}from"./ElevationBounds.js";import B from"./ElevationTileAgent.js";import C from"./MapTileAgent.js";import T from"./RasterTile.js";import{LayerClasses as x,MAX_PATCH_TESSELATION as S,ELEVATION_DESIRED_RESOLUTION_LEVEL as b}from"./TerrainConst.js";import{weakAssert as q,getLayerWithExtentRange as R}from"./terrainUtils.js";import{TILE_AGENT_DONE as P}from"./TileAgent.js";import{TilePerLayerInfo as w}from"./TilePerLayerInfo.js";import E from"./TileTexture.js";import{tile2str as V,fallsWithinLayer as W}from"./tileUtils.js";import{getGpuMemoryUsage as N}from"../../webgl/Util.js";const O=m(),k=m(),z=m(),H=v(),G=.1;class F{constructor(){this.fovX=0,this.fovY=0,this.relativeWidthLimit=0,this.relativeHeightLimit=0,this.maxLod=0,this.angledSplitBias=0,this.aboveGround=!0}}class X{constructor(e){this._numSubdivisionAtLevel=e,this.lij=[0,0,0],this._children=[null,null,null,null],this._dirty=!0,this._previouslyRendered=!1,this.extent=M(),this._elevationBounds=h(),this.layerInfo=[[],[]],this.extentInRadians=M(),this.centerAtSeaLevel=m(),this._center=[m(),j(),m()],this.up=_(),this._isWithinClippingArea=!0,this._intersectsClippingArea=!0,this._maxTesselation=0,this._usedMemory=Z,this._mapTileMemory=0,this._mapDataRefCount=0,this._screenDepth=0,this.renderOrder=0,this._edgeLen=0,this._edgeLen2=0,this._curvatureHeight=0}static prune(){Q.prune(0),J.prune(0),w.prune()}get usedMemory(){return this._usedMemory===Z&&this._updateMemoryUsed(),this._usedMemory+(this.isCached?0:this.mapTileMemory)}get cachedMemory(){return this.isCached?this.mapTileMemory:0}get mapTileMemory(){this._usedMemory===Z&&this._updateMemoryUsed();let e=this._mapTileMemory;for(const{data:t}of this.layerInfo[1])t instanceof D&&(e+=t.memoryUsage);return e}get isCached(){return!this.shouldLoad&&this._mapDataRefCount<=0}get maxTesselation(){return this._maxTesselation}get numSubdivisionsAtLevel(){return this._numSubdivisionAtLevel}get isWithinClippingArea(){return this._isWithinClippingArea}get intersectsClippingArea(){return this._intersectsClippingArea}get clippingArea(){return this._clippingArea}get parent(){return this._parent}get children(){return this._children}get surface(){return this._surface}get elevationBounds(){return this._elevationBounds}get level(){return this.lij[0]}get edgeLen(){return this._edgeLen}get radius(){return this._center[1][3]}get screenDepth(){return this._screenDepth}get visible(){if(this._dirty){this._dirty=!1;const e=this._isVisible(this.surface.frustum);e!==this._visible&&(this._visible=e,this._surface.emit("tiles-visibility-changed"),this._surface.renderer.setNeedsRender()),this.updateAgentSuspension()}return this._visible}get loadable(){return this.visible||this._surface.view.state.fixedContentCamera}get rendered(){const e=!!this.renderData;return e!==this._previouslyRendered&&(this._surface.emit("tiles-visibility-changed"),this._previouslyRendered=e,this._surface.renderer.setNeedsRender()),e}get shouldLoad(){if(!this.loadable)return!1;if(1===this._surface.lodSnapping){const e=this.level-this._surface.snapLevel;if(0===e)return!0;if(1===e)return!1}return this.isLeaf}init(e,t,i){this.lij[0]=e[0],this.lij[1]=e[1],this.lij[2]=e[2],this.ellipsoid=A(i.tilingScheme.spatialReference),i.tilingScheme.getExtent(e[0],e[1],e[2],this.extent),i.tilingScheme.convertExtentToRadians(this.extent,this.extentInRadians),this._isWithinClippingArea=!0,this._intersectsClippingArea=!0,this._clippingArea=null,this._mapDataRefCount=0,i.upsampleMapCache.pop(V(this)),this._edgeLen=0,this._edgeLen2=0,this._center[1][3]=0,this.vlevel=e?e[0]:0,t&&t.elevationBounds?a(this._elevationBounds,t.elevationBounds):o(this._elevationBounds,0,0),this._pendingUpdates=0,this.renderData=null,this._screenDepth=0,this._visible=!1,this._previouslyRendered=!1,this._parent=t,this.unsetChildren(),this._surface=i,this.updateVisibility();for(const s of x){const e=i.numLayers(s),t=this.layerInfo[s];for(const i of t)i.release();t.length=e;for(let i=0;i<e;i++)t[i]=w.acquire(this._surface.upsampleInfoPool),0===s&&this.findElevationBoundsForLayer(i,-1)}this.computeElevationBounds(),this._maxTesselation=Math.min(i.tilingScheme.pixelSize,S)}release(){q(!this.renderData,"tile.renderData was not unloaded"),this._surface.upsampleMapCache.pop(V(this));for(const e of x){for(const t of this.layerInfo[e])t.release();this.layerInfo[e].length=0}this._parent=null,this._surface=null,this._usedMemory=Z}refMapData(){++this._mapDataRefCount,this.isCached||this._surface.upsampleMapCache.pop(V(this))}unrefMapData(){if(--this._mapDataRefCount,this.isCached){const e=this.cachedMemory;e>0&&(this._surface.upsampleMapCache.put(V(this),this,e),this.setMemoryDirty())}}setMemoryDirty(){this._usedMemory=Z}get cpuImageMemorySize(){const e=4,t=this._surface.tilingScheme.pixelSize;return t*t*e}_updateMemoryUsed(){this._usedMemory=0,this._mapTileMemory=0;const e=this.cpuImageMemorySize;for(const{data:t}of this.layerInfo[1])t instanceof E?this._mapTileMemory+=N(t.texture):t instanceof HTMLImageElement||t instanceof I?this._mapTileMemory+=e:t instanceof T&&(this._mapTileMemory+=t.memoryUsage);for(const t of this.layerInfo[0])this._usedMemory+=t.data?e:0;this.renderData&&(this._usedMemory+=this.renderData.estimatedGeometryMemoryUsage,this._mapTileMemory+=N(this.renderData.textureDescriptor)),this.isCached&&this._surface.upsampleMapCache.updateSize(V(this),this,this.cachedMemory)}getUsedMemoryForLayer(e,t){const i=this.layerInfo[e][t];if(!i||!i.data)return 0;if(1!==e||this.isCached){if(0===e)return this.cpuImageMemorySize}else{const e=i.data;if(e instanceof E)return N(e.texture);if(e instanceof HTMLImageElement||e instanceof I)return this.cpuImageMemorySize;if(e instanceof D||e instanceof T)return e.memoryUsage}return 0}updateScreenDepth(e){l(H,this._center[1]),H[3]=1,y(H,H,e),this._screenDepth=H[2]<0?0:H[2]/H[3]}shouldSplit(i,s,n){if(t(i.frustum)&&!this._isVisible(i.frustum))return 0;const r=this.level;d(O,this._center[1],s);let a=u(O),o=1;d(k,this._center[0],s);const h=u(k);h<a&&(a=h,o=0),d(k,this._center[2],s);const l=u(k);if(l<a&&(a=l,o=2),this._edgeLen2>a&&r<i.maxLod)return 2;const m=Math.sqrt(a),_=i.fovX*m*2,y=this._edgeLen/_,v=()=>{const t=r+Math.ceil(-e(i.relativeWidthLimit/y));return t!==this.vlevel?(this.vlevel=t,4):1};if(1===n){if(1===this._surface.snapLevel-r)return r>=i.maxLod?v():2}const A=c(this.up,O),M=this._elevationBounds[1]-this._elevationBounds[0],L=M/this.edgeLen;if(i.aboveGround&&A>0&&L<.001){if(A/m-Math.sin(this._curvatureHeight/(this.edgeLen*Math.SQRT1_2)*Math.PI)-L>0)return 0}if(y<i.relativeWidthLimit)return this.vlevel!==this.level?(this.vlevel=this.level,4):0;if(r>=i.maxLod)return v();if(r>6){d(k,this._center[o],s),p(z,this.up,A),d(z,z,k);const e=u(z);if(e>this.radius*this.radius){p(z,z,this.radius/Math.sqrt(e)),g(z,z,this._center[o]),d(z,s,z);const t=Math.min(1,(Math.abs(c(z,this.up))+.5*M+this._curvatureHeight)/f(z)),n=G/i.angledSplitBias,r=i.fovY*m*2;if(t*(this._edgeLen/r)<n*i.relativeHeightLimit)return 0}}return 2}setChildren(e,t,i,s){q(!!(e&&t&&i&&s),"Null child passed"),this._children[0]=e,this._children[1]=t,this._children[2]=i,this._children[3]=s}unsetChildren(){this._children[0]=null,this._children[1]=null,this._children[2]=null,this._children[3]=null}load(e){this.refMapData();for(const t of x)this._createOrUpdateAgents(0,t);e.loadTile(this)}unload(e){e.unloadTile(this);for(const t of x){const e=this.layerInfo[t];for(const t of e)t.loadingAgent&&t.loadingAgent!==P&&(Y(t.loadingAgent),t.loadingAgent=null),t.pendingUpdates=0}this.resetPendingUpdate(32),this.resetPendingUpdate(64),this.unrefMapData()}unloadMapData(){const e=this.layerInfo[1];for(const t of e)t.loadingAgent&&t.loadingAgent!==P&&(Y(t.loadingAgent),t.loadingAgent=null),t.pendingUpdates=0;this.renderData&&this.renderData.releaseTexture(),this.setMemoryDirty()}updateClippingStatus(e){if(L(e,this._clippingArea))return!1;const i=this._intersectsClippingArea,s=this._isWithinClippingArea;t(e)?(this._intersectsClippingArea=this.intersectsExtent(e),this._isWithinClippingArea=this._isWithinExtent(e)):(this._intersectsClippingArea=!0,this._isWithinClippingArea=!0),this._clippingArea=e,this.updateVisibility();const n=s&&this._isWithinClippingArea,r=!(s||i||this._isWithinClippingArea||this._intersectsClippingArea);return!this.renderData||n||r||this.setPendingUpdate(32),!0}updateVisibility(){this._dirty=!0,this._surface.setTileTreeDirty()}getLayerInfo(e,t){return this.layerInfo[t][e]}hasLayerData(e,t){const i=this.layerInfo[t][e];return!(!i||!i.data||i.dataInvalidated)}get updating(){if(this.hasPendingUpdates)return!0;for(const e of x){const t=this.layerInfo[e];for(const e of t)if(e.loadingAgent&&e.loadingAgent!==P&&e.loadingAgent.updating)return!0}return!1}isSuspended(e){return!!this.hasPendingUpdate(2)||0!==e&&!this.loadable}get hasPendingUpdates(){return 0!==this._pendingUpdates}hasPendingUpdate(e){return(this._pendingUpdates&e)===e}setPendingUpdate(e){this._pendingUpdates|=e,2===e||8===e?this._surface.setTileTreeDirty():this._surface.requestUpdate()}resetPendingUpdate(e){return!!this.hasPendingUpdate(e)&&(this._pendingUpdates&=~e,!0)}requestLayerData(e,t,s){const n=this.layerInfo[t][e];if(n.waitingAgents.has(s))return console.warn("agent already requested this piece of map data (tile %s, agent tile %s, layer: %d/%d)",this.lij.toString(),s.tile.lij.toString(),t,e),!0;if(n.waitingAgents.push(s),n.data&&!n.dataInvalidated)return console.warn("agent requested existing data (tile %s, agent tile %s, layer: %d/%d)",this.lij.toString(),s.tile.lij.toString(),t,e),s.dataArrived(this),!0;if(n.requestPromise)return!0;i(n.requestAbort),n.requestAbort=r();const a=this._surface.requestTileData(this,e,t,n.requestAbort);if(!a)return n.requestAbort=null,!1;const o=()=>{n.requestPromise===a&&(n.requestPromise=null,n.requestAbort=null)};return n.requestPromise=a,a.then(o,o),!0}get isLeaf(){return null==this._children[0]}hasLij(e){return this.lij[0]===e[0]&&this.lij[1]===e[1]&&this.lij[2]===e[2]}findByLij(e){if(this.hasLij(e))return this;if(this.isLeaf)return null;const t=this._children[0].findByLij(e)||this._children[1].findByLij(e)||this._children[2].findByLij(e)||this._children[3].findByLij(e);return t||null}distanceToSquared(e){return u(d(z,this._center[1],e))}containsPoint(e){const t=this.extent;return e[0]>=t[0]&&e[1]>=t[1]&&e[0]<=t[2]&&e[1]<=t[3]}unrequestLayerData(e,t,i){const s=this.layerInfo[t][e],n=s.waitingAgents,r=null!=n.removeUnordered(i);q(r,"agent has not requested this piece of map data"),n.length<1&&(s.abortRequest(),this._updateMemoryUsed())}dataArrived(e,t,i){const s=this.layerInfo[t][e];s.data=i,s.dataInvalidated=!1,s.waitingAgents.forAll((e=>e.dataArrived(this))),s.waitingAgents.clear(),this._updateMemoryUsed()}dataMissing(e,t,i){i.notInTilemap||console.error(`Tile ${this.lij.toString()} layer ${t}/${e} error ${i}`);const s=this.layerInfo[t][e];s.dataMissing=!0,s.waitingAgents.forAll((e=>e.dataMissing())),s.waitingAgents.clear(),this._updateMemoryUsed()}updateRenderData(e){switch(e){case 1:return this.updateTexture();case 0:return this.updateGeometry()}}updateTexture(){this.renderData&&this.setPendingUpdate(64)}updateGeometry(){this.setPendingUpdate(32);for(const e of this.layerInfo[0])e.pendingUpdates|=32}invalidateLayerData(e,t){this.layerInfo[t][e].invalidateSourceData(),this.restartAgents(t)}computeElevationBounds(){o(this._elevationBounds,Number.MAX_VALUE,-Number.MAX_VALUE);const e=this.layerInfo[0];let i=!0;for(const s of e)t(s.elevationBounds)&&(this._elevationBounds[0]=Math.min(this._elevationBounds[0],s.elevationBounds.min),this._elevationBounds[1]=Math.max(this._elevationBounds[1],s.elevationBounds.max),s.elevationBounds.hasNoDataValues||(i=!1));i&&(this._elevationBounds[0]=Math.min(this._elevationBounds[0],0),this._elevationBounds[1]=Math.max(this._elevationBounds[1],0)),this.updateRadiusAndCenter(),this._surface.setTileTreeDirty()}_updateCenter(){const e=.5*(this._elevationBounds[0]+this._elevationBounds[1]);p(z,this.up,e),g(this._center[1],this.centerAtSeaLevel,z),p(z,this.up,this._elevationBounds[0]),g(this._center[0],this.centerAtSeaLevel,z),p(z,this.up,this._elevationBounds[1]),g(this._center[2],this.centerAtSeaLevel,z)}findElevationBoundsForLayer(e,i){const n=this.layerInfo[0][e];if(t(n.elevationBounds)&&n.elevationBounds.level>=i)return;const r=this._surface.layerViewByIndex(e,0),a=R(r);if(!W(this,a,!1))return;const o=K;let h=!1;if(n.data){const e=n.data;o.min=e.bounds[0],o.max=e.bounds[1],o.hasNoDataValues=e.hasNoDataValues,o.level=this.lij[0],h=!0}else{let t,i,s=0;for(let n=this._parent;n&&(!i||s<b)&&(s=this.vlevel-n.level,t=i||t,i=n.layerInfo[0][e].data,!(!i&&t&&s>=b));n=n.parent);i=i||t,i&&(i.computeMinMaxValue(this.lij[0],this.lij[1],this.lij[2],o),o.min!==1/0&&(o.level=i.level,h=!0))}h&&(s(n.elevationBounds)&&(n.elevationBounds=new U),n.elevationBounds.copyFrom(o))}modifyLayers(e,t,i){const s=this.layerInfo[i];for(const a of s)a.loadingAgent&&a.loadingAgent!==P&&(Y(a.loadingAgent),a.loadingAgent=null),a.waitingAgents.clear();for(let a=0;a<s.length;++a)void 0===e[a]&&s[a].release();const n=new Array(...s),r=t.length;s.length=r;for(let a=0;a<r;a++){const e=t[a];s[a]=e>-1?n[e]:w.acquire(this._surface.upsampleInfoPool)}this._updateMemoryUsed()}restartAgents(e){this.renderData&&(this._createOrUpdateAgents(0,e),this.updateRenderData(e))}updateAgents(e){if(this.renderData){const t=this.layerInfo[e];for(const e of t)e.loadingAgent===P&&(e.loadingAgent=null);this._createOrUpdateAgents(0,e)}}updateAgentSuspension(){for(const e of x){const t=this.isSuspended(e);for(const i of this.layerInfo[e])i.loadingAgent&&i.loadingAgent!==P&&(i.loadingAgent.setSuspension(t),i.loadingAgent===P&&this.updateRenderData(e))}}removeLayerAgent(e,t){const i=this.layerInfo[t][e];i.loadingAgent&&i.loadingAgent!==P&&i.loadingAgent.dispose(),i.loadingAgent=null}agentDone(e,t){const i=this.layerInfo[t][e];i.loadingAgent=P,i.data||i.upsampleInfo||this._createOrUpdateAgents(e+1,t)}_createOrUpdateAgents(e,t){const i=this.isSuspended(t),s=this.layerInfo[t];for(let n=e;n<s.length;++n){const e=s[n];let r=!1;const a=this._surface.layerViewByIndex(n,t),o=R(a);if(e.loadingAgent?W(this,o,!1)?(e.loadingAgent!==P&&e.loadingAgent.setSuspension(i),e.loadingAgent!==P&&(r=e.loadingAgent.update())):e.dispose():W(this,o,!1)&&(e.loadingAgent=$(this,n,t,i),r=e.loadingAgent.startLoading(),r?e.loadingAgent===P&&this.setPendingUpdate(32):(Y(e.loadingAgent),e.loadingAgent=P)),e.loadingAgent===P&&this.updateRenderData(t),r&&a.isOpaque)return}}_isWithinExtent(e){const t=this.extent;return t[0]>=e[0]&&e[2]>=t[2]&&t[1]>=e[1]&&e[3]>=t[3]}intersectsExtent(e){const t=this.extent;return t[2]>=e[0]&&e[2]>=t[0]&&t[3]>=e[1]&&e[3]>=t[1]}get test(){return{cachedMemory:this.cachedMemory}}}function $(e,t,i,s){const n=0===i?J.acquire():Q.acquire();return n.init(e,t,i,s),n}function Y(e){e.dispose(),e instanceof B?J.release(e):e instanceof C&&Q.release(e)}const Q=new n(C),J=new n(B),K=new U,Z=-1;export default X;export{F as SplitLimits};
