/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import r from"../../../core/Handles.js";import s from"../../../core/has.js";import{clamp as i,deg2rad as a}from"../../../core/mathUtils.js";import{isSome as n,isNone as o}from"../../../core/maybe.js";import{addFrameTask as h}from"../../../core/scheduling.js";import{Milliseconds as l}from"../../../core/time.js";import{getMetersPerUnitForSR as c}from"../../../core/unitUtils.js";import{property as d}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as p}from"../../../core/accessorSupport/decorators/subclass.js";import{a as u}from"../../../chunks/vec2.js";import{b as y,f as _,y as g,g as m,i as f}from"../../../chunks/vec3.js";import{c as v}from"../../../chunks/vec3f64.js";import{t as O,b as w,a as T}from"../../../chunks/vec4.js";import{c as D,f as R}from"../../../chunks/vec4f64.js";import{projectVectorToVector as S}from"../../../geometry/projection.js";import{getReferenceEllipsoid as x}from"../../../geometry/projectionEllipsoid.js";import{width as M,set as C,center as j,intersection as I,contains as b,intersects as E,offset as A,create as U}from"../../../geometry/support/aaBoundingRect.js";import{wrap as P,create as V}from"../../../geometry/support/ray.js";import{b as L,e as H}from"../../../chunks/sphere.js";import{angleAroundAxis as k}from"../../../geometry/support/vector.js";import{y2lat as q}from"../../../geometry/support/webMercatorUtils.js";import{viewAngle as F}from"../state/utils/viewUtils.js";import{DESIRED_DRAPED_ANIMATION_MS as G}from"../support/animationUtils.js";import B from"../support/debugFlags.js";import{GraphicsHandle as W}from"../support/debugUtils.js";import{Cyclical as z,cyclicalPI as Y}from"../support/mathUtils.js";import{computeOverlayResolution as N}from"./Overlay.js";import{OverlayRenderer as X}from"./OverlayRenderer.js";import{Intersector as J}from"../webgl-engine/lib/Intersector.js";import{fromValues as K}from"../webgl-engine/lib/localOrigin.js";import{removeLoadedShaderModules as Q}from"../webgl-engine/parts/requireUtils.js";import{TaskPriority as Z}from"../../support/Scheduler.js";const $=3.5,ee=10,te=[[-.1,-2,3.9,2],[-.1,-3.9,3.9,.1],[-2,-3.9,2,.1],[-3.9,-3.9,.1,.1],[-3.9,-2,.1,2],[-3.9,-.1,.1,3.9],[-2,-.1,2,3.9],[-.1,-.1,3.9,3.9]];let re,se=class extends t{constructor(e){super(e),this._handles=new r,this._spatialReference=null,this._renderSR=null,this._overlaySREqualsRenderSR=!0,this._drapeSources=new Map,this._drapeTargets=new Set,this._renderedAltitude=0,this._displayOpacity=0,this._displayOpacityTime=-1,this._placementDirty=!1,this._drawTexturesDirty=!1,this._drawTexturesAnimateDirty=!1,this._layerViewsDirty=!0,this._hasUnusedRenderTargets=!1,this._longitudeCyclical=null,this._latestOriginId=0,this._maxResolution=s("esri-mobile")?2048:4096,this._animationTimeLast=0}get running(){return(this._placementDirty||this._layerViewsDirty)&&(this._drapeSources.size>0||this.view.graphics.length>0||B.OVERLAY_DRAW_DEBUG_TEXTURE)&&!!this._spatialReference&&!this.suspended&&this.surface.ready}get _isSpherical(){return this.view.state.isGlobal}get view(){return this.surface.view}get updating(){return this.running||this.renderer.updating}get hasHighlights(){return this.renderer.hasHighlights}get rendersOccluded(){return this.renderer.rendersOccluded}initialize(){const e=this.view,t=e.state.isGlobal&&n(this._spatialReference)?c(this._spatialReference):1;this.renderer=new X({view:e,globalUnitScale:t,spatialReference:this._spatialReference}),this.renderer.onHasHighlightsChanged=()=>{this._setDrawTexturesDirty(),this.notifyChange("hasHighlights")},this.renderer.onRendersOccludedChanged=()=>{this._setDrawTexturesDirty(),this.notifyChange("rendersOccluded")},this.renderer.onContentChanged=()=>this._setDrawTexturesDirty(),this.renderer.onHasWaterChanged=t=>{var r;return null==(r=e._stage)?void 0:r.renderView.setRenderParameters({hasOverlayWater:t})},this.groundIntersector=new J(this.view.state.viewingMode),this.groundIntersector.options.backfacesTerrain=!0,this.groundIntersector.options.invisibleTerrain=!0,this.groundIntersector.options.hud=!1,this._handles.add([e.watch(["pointsOfInterest.renderPointOfView","pointsOfInterest.centerOnSurfaceFrequent.location","pixelRatio"],(()=>this.setOverlayPlacementDirty())),this.surface.on("elevation-change",(()=>this.setOverlayPlacementDirty())),e.allLayerViews.on("after-changes",(()=>this._layerViewsDirty=!0)),e.on("resize",(()=>this.setOverlayPlacementDirty())),h({preRender:e=>{this.renderer.processSyncLayers(),this._updateLayerViews(),this.renderer.hasOverlays&&(this._dispatchRendererUpdate(e),this._drawOverlayTextures(this.renderer.overlays)),this._hasUnusedRenderTargets&&this._collectUnusedRenderTargetMemory()}}),e.resourceController.scheduler.registerTask(Z.OVERLAY_MANAGER,this),e._stage.renderView.events.on("force-camera-for-screenshot",(e=>{this._updateOverlays(e),this.renderer.hasOverlays&&this._drawOverlayTextures(this.renderer.overlays)}))]),this._updateLayerViews()}destroy(){this._drapeSources.forEach(((e,t)=>this.unregisterDrapeSource(t))),this._drapeTargets.forEach((e=>this._unregisterDrapeTarget(e))),this.renderer.dispose(),this._handles&&(this._handles.destroy(),this._handles=null),n(re)&&(re.remove(),re=null)}get hasOverlays(){return this.renderer.hasOverlays}setSpatialReference(e){this._spatialReference=e,this.renderer.spatialReference=e,this._longitudeCyclical=null;const t=this.view.renderSpatialReference;n(e)&&n(t)?(this._renderSR=t,this._overlaySREqualsRenderSR=e.equals(this._renderSR),this._isSpherical&&(this._longitudeCyclical=e.isWebMercator?new z(-20037508.342787,20037508.342787):new z(-180,180),this.renderer.longitudeCyclical=this._longitudeCyclical),this.renderer&&(this.renderer.globalUnitScale=this._isSpherical&&n(this._spatialReference)?c(this._spatialReference):1)):this.renderer.disposeOverlays()}getGpuMemoryUsage(){return this.renderer.gpuMemoryUsage}_updateLayerViews(){if(!this._layerViewsDirty)return;const e=new Set;for(const t of this.view.allLayerViews.items)e.add(t.uid),"drapeSourceType"in t&&!this._drapeSources.has(t)&&this._registerDrapeSource(t,0),"drapeTargetType"in t&&!this._drapeTargets.has(t)&&this._registerDrapeTarget(t);this._drapeSources.forEach(((t,r)=>{0!==t||e.has(r.uid)||this.unregisterDrapeSource(r)})),this._drapeTargets.forEach((t=>{e.has(t.uid)||this._unregisterDrapeTarget(t)})),this.renderer.updateLayerOrder(),this._setDrawTexturesDirty(),this._layerViewsDirty=!1}registerDrapeSource(e){this._registerDrapeSource(e,1)}_registerDrapeSource(e,t){this._drapeSources.set(e,t),this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources),this.renderer.overlays.forEach((t=>{this._updateDrapeSource(e,t)})),this._setOverlayContentDirty(),this.notifyChange("running")}_updateDrapeSource(e,t){n(e.setDrapingExtent)&&n(this._spatialReference)&&e.setDrapingExtent(t,this._spatialReference)}unregisterDrapeSource(e){this._drapeSources.has(e)&&(this._drapeSources.delete(e),this.renderer.ensureDrapeSources(this._drapeSources),this._setOverlayContentDirty(),this.notifyChange("running"))}_registerDrapeTarget(e){this._drapeTargets.add(e),this._updateDrapeTarget(e),this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources)}_updateDrapeTarget(e){this.renderer.overlays.forEach((t=>e.setDrapingTextures(t)))}_unregisterDrapeTarget(e){this._drapeTargets.delete(e),this.renderer.ensureDrapeTargets(this._drapeTargets)}_setOverlayContentDirty(){this.setOverlayPlacementDirty(),this._setDrawTexturesDirty()}setOverlayPlacementDirty(){this._placementDirty=!0}runTask(){this._updateOverlays(this.view.state.camera)}_updateOverlays(e){if(!this._spatialReference)return;this._updateLayerViews();const t=N(e.fullWidth,e.fullHeight,this._maxResolution);this._computeOverlayExtents(e,t,oe);const r=M(oe.inner)/M(oe.outer);this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources);const s=this._updateOverlay(0,oe.inner,t,1),i=this._updateOverlay(1,oe.outer,t,r);(s||i)&&(this.surface.updateTileOverlayParams(),this._setDrawTexturesDirty()),this._placementDirty=!1,this.surface.updateOverlayOpacity()}_updateOverlay(e,t,r,s){if(0===this.renderer.overlays.length)return!1;const i=this.renderer.overlays[e];if(!ie(t,i.extent)&&r===i.resolution&&i.pixelRatio===s)return!1;C(i.extent,t),i.resolution=r,i.pixelRatio=s;const a=j(i.extent);return i.renderLocalOrigin=K(a[0],a[1],0,"OV_"+this._latestOriginId++),this._drapeSources.forEach(((e,t)=>this._updateDrapeSource(t,i))),!0}computeOpacity(e){if(!this.renderer.hasOverlays)return this._displayOpacity=0,this._displayOpacityTime=-1,1;if(e*$<this._renderedAltitude){const t=(e-this._renderedAltitude/ee)/(this._renderedAltitude/$-this._renderedAltitude/ee);this._displayOpacity=Math.sqrt(i(t,0,1)),this._displayOpacityTime=performance.now()}else if(1!==this._displayOpacity){const e=performance.now();this._displayOpacityTime=this._displayOpacityTime>0?this._displayOpacityTime:e;const t=e-this._displayOpacityTime,r=this.surface.textureFadeDuration;if(t<r)return this._displayOpacity+(1-this._displayOpacity)*(t/r);this._displayOpacity=1,this._displayOpacityTime=-1}return this._displayOpacity}setTileParameters(e){const t=e.renderData.overlay;if(this.renderer.overlays.length>0){const r=this.renderer.overlays[0],s=this.renderer.overlays[1],i=I(e.extent,e.surface.extent,he);this._rectInsideRect(i,r.extent)||this._rectanglesOverlap(i,r.extent)||this._rectanglesOverlap(i,s.extent)?(this._setTileOverlayData(i,0,t),this._setTileOverlayData(i,1,t)):(this._clearTileOverlayData(0,t),this._clearTileOverlayData(1,t))}else this._clearTileOverlayData(0,t),this._clearTileOverlayData(1,t)}overlayPixelSizeInMapUnits(e){if(0===this.renderer.overlays.length)return 0;const t=this.renderer.overlays[0],r=this.renderer.overlays[1],s=this._pointIsInExtent(e,t.extent)?t:r;return(s.extent[2]-s.extent[0])/s.resolution}_setTileOverlayData(e,t,r){if(0===this.renderer.overlays.length)return;const s=this.renderer.overlays[t].extent;r.setScale(t,(e[2]-e[0])/(s[2]-s[0]),(e[3]-e[1])/(s[3]-s[1]));let i=e[0];if(this._longitudeCyclical){i=this._longitudeCyclical.minimalMonotonic(s[0],i);const t=this._longitudeCyclical.minimalMonotonic(s[0],e[2]);i>t&&(i=t-(e[2]-e[0]))}r.setOffset(t,(i-s[0])/(s[2]-s[0]),(e[1]-s[1])/(s[3]-s[1]))}_clearTileOverlayData(e,t){t.setScale(e,-1,-1),t.setOffset(e,-1,-1)}async reloadShaders(){Q(),await this.renderer.reloadShaders(),this.runTask()}stopAnimationsAtTime(e){this.renderer.stopAnimationsAtTime(e),this._drawTexturesAnimateDirty=!0}_dispatchRendererUpdate(e){const t=l(e.time-this._animationTimeLast);if(t<G)return;this._animationTimeLast=e.time;this.renderer.updateLogic({dt:t,camera:this.view.state.camera})&&(this._drawTexturesAnimateDirty=!0)}_setDrawTexturesDirty(){this.renderer.hasOverlays?this._drawTexturesDirty=!0:this.setOverlayPlacementDirty()}_intersectGroundFromView(e,t,r,s){const i=this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(e,ce,t,r);if(o(i))return!1;const a=i.origin,n=y(ne,i.origin,i.direction);return this.groundIntersector.reset(a,n),this.groundIntersector.intersect([],null,e),this.view.basemapTerrain.intersect(this.groundIntersector,null,a,n),this.groundIntersector.results.min.getIntersectionPoint(s)}_findHorizonBasedPointOfInterest(e,t){let r=.5;const s=.55,a=this.view.renderCoordsHelper.getAltitude(e.eye),n=this.view.pointsOfInterest.centerOnSurfaceFrequent,o=1e-5,h=i(n.estimatedSurfaceAltitude,e.aboveGround?-1/0:a+o,e.aboveGround?a-o:1/0),l=e.aboveGround;if("global"===this.view.viewingMode){const t=ne;L(H(x(this.view.spatialReference).radius+h),P(e.eye,e.viewForward),t),_(t,t,e.eye);const i=Y.normalize(k(e.viewForward,t,e.viewRight))/e.fovY+.5,a=i<=0||i>=1?.5:s;r=l?a*i:i+a*(1-i)}else{const t=.5*Math.PI-Math.acos(-e.viewForward[2]),a=Math.tan(t),n=R(0,a,1,0),o=O(n,n,e.projectionMatrix)[1],h=i(.5+.5*o,0,1);r=1===h||0===h?.5:l?h*s:1-(1-h)*s}return!!this._intersectGroundFromView(e,.5,r,t)&&g(t,e.eye)<n.distance*n.distance}_computeOverlayExtents(e,t,r){const s=this.surface.extent,i=this.view.pointsOfInterest.centerOnSurfaceFrequent.renderLocation,h=v();this._findHorizonBasedPointOfInterest(e,h)||m(h,i),this._renderedAltitude=this.view.renderCoordsHelper.getAltitude(e.eye);const l=f(e.eye,h),c=F(this.view.renderCoordsHelper,i,e.eye),d=Math.PI/2-Math.abs(c-Math.PI/2);B.OVERLAY_SHOW_CENTER?(o(re)&&(re=new W(this.view.graphics,"red")),re.showPoint(h,this._renderSR)):n(re)&&re.remove(),this._overlaySREqualsRenderSR||S(h,this._renderSR,h,this._spatialReference);let p=t*e.perRenderPixelRatio*l/2,y=!1,_=1/0;this._isSpherical&&n(this._spatialReference)&&(this._spatialReference.isWebMercator?(p/=Math.cos(q(h[1])),_=this.surface.extent[3]):(y=!0,p/=x(this._spatialReference).metersPerDegree,_=90),p>=_&&(p=_,h[1]=0,this._spatialReference.isWebMercator&&(h[0]=0)));let g=1;y&&(g=1/Math.max(.2,Math.cos(Math.abs(a(h[1])))),p*g>180&&(g=180/p));const O=Math.log(2)/12;p=Math.exp(Math.round(Math.log(p)/O)*O);const D=p*g,R=32,M=.5*t/(R*D),j=.5*t/(R*p);h[0]=Math.round(h[0]*M)/M,h[1]=Math.round(h[1]*j)/j;const E=r.inner;E[0]=h[0]-D,E[1]=h[1]-p,E[2]=h[0]+D,E[3]=h[1]+p,this._isSpherical&&this._shiftExtentToFitBounds(E,1/0,_);const A=r.outer;if(C(A,E),6*D>s[2]-s[0])C(A,s);else if(d<=.25*Math.PI)A[0]-=D,A[1]-=p,A[2]+=D,A[3]+=p;else{S(e.eye,this._renderSR,ne,this._spatialReference),u(ae,h,ne);let t=-Math.atan2(ae[1],ae[0])+.125*Math.PI;t<0&&(t+=2*Math.PI);const r=Math.floor(t/(.25*Math.PI));w(ae,te[r],2*p),ae[0]*=g,ae[2]*=g,T(A,A,ae)}if(this._isSpherical&&(A[0]=this._longitudeCyclical.clamp(A[0]),A[2]=this._longitudeCyclical.clamp(A[2]),A[1]=Math.max(A[1],-_),A[3]=Math.min(A[3],_)),!this._isSpherical&&s){const e=I(E,s,he),t=I(A,s,le);b(e,t)&&(A[2]=A[0],A[3]=A[1])}}_drawOverlayTextures(e){if(0===e.length||!this._drawTexturesDirty&&!this._drawTexturesAnimateDirty)return;const t=this._drawOverlay(e[0]),r=this._drawOverlay(e[1]);0!==t&&0!==r||this.surface.updateTileOverlayParams(),this._collectUnusedRenderTargetMemory(),this._drapeTargets.forEach((e=>this._updateDrapeTarget(e))),this._drawTexturesAnimateDirty=!1,this._drawTexturesDirty?(this._drawTexturesDirty=!1,this.surface.requestRender(),this.surface.requestUpdate()):this.surface.requestRender(0)}_drawOverlay(e){return this._longitudeCyclical?e.setupGeometryViewsCyclical(this._longitudeCyclical):e.setupGeometryViewsDirect(),e.draw(this.renderer,this.view.state.camera.pixelRatio)}_collectUnusedRenderTargetMemory(){if(this._hasUnusedRenderTargets=!1,this.renderer.hasOverlays){const e=performance.now();this._hasUnusedRenderTargets=this.renderer.collectUnusedRenderTargetMemory(e)}}_rectanglesOverlap(e,t){return this._longitudeCyclical?(this._longitudeCyclical.contains(t[0],t[2],e[0])||this._longitudeCyclical.contains(t[0],t[2],e[2])||this._longitudeCyclical.contains(e[0],e[2],t[0]))&&!(e[1]>t[3]||e[3]<t[1]):E(e,t)}_rectInsideRect(e,t){return this._longitudeCyclical?this._longitudeCyclical.contains(t[0],t[2],e[0])&&this._longitudeCyclical.contains(t[0],t[2],e[2])&&e[1]>t[1]&&e[3]<t[3]:b(t,e)}_pointIsInExtent(e,t){if(this._longitudeCyclical)return this._longitudeCyclical.contains(t[0],t[2],e.x)&&e.y>=t[1]&&e.y<=t[3];const r=e.x,s=e.y;return r>t[0]&&r<t[2]&&s>t[1]&&s<t[3]}_shiftExtentToFitBounds(e,t,r){let s=0,i=0;e[0]<-t?s=e[0]+t:e[2]>t&&(s=t-e[2]),e[1]<-r?i=e[1]+r:e[3]>r&&(i=r-e[3]),A(e,s,i)}get test(){return{renderer:this.renderer,update:()=>this.runTask()}}};function ie(e,t){const r=1e-5,s=B.TESTS_DISABLE_UPDATE_THRESHOLDS?0:r*Math.max(e[2]-e[0],e[3]-e[1],t[2]-t[0],t[3]-t[1]);for(let i=0;i<4;i++)if(Math.abs(t[i]-e[i])>s)return!0;return!1}e([d()],se.prototype,"_spatialReference",void 0),e([d({readOnly:!0})],se.prototype,"running",null),e([d()],se.prototype,"_placementDirty",void 0),e([d()],se.prototype,"_layerViewsDirty",void 0),e([d()],se.prototype,"renderer",void 0),e([d({constructOnly:!0})],se.prototype,"surface",void 0),e([d({readOnly:!0,aliasOf:"surface.suspended"})],se.prototype,"suspended",void 0),e([d({readOnly:!0})],se.prototype,"updating",null),e([d({type:Boolean})],se.prototype,"hasHighlights",null),e([d({type:Boolean})],se.prototype,"rendersOccluded",null),se=e([p("esri.views.3d.terrain.OverlayManager")],se);const ae=D(),ne=v(),oe={inner:U(),outer:U()},he=U(),le=U(),ce=V();export{se as OverlayManager};
