/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{BufferViewMat3f as e,BufferViewVec4f as t,BufferViewVec4u8 as i,BufferViewVec3f as s}from"../../../../geometry/support/buffer/BufferView.js";import{newLayout as r}from"../../support/buffer/InterleavedLayout.js";import a from"../lib/GLMaterial.js";import{Material as n,materialParametersDefaults as o}from"../lib/Material.js";import{OITPolygonOffsetLimit as u}from"../lib/OrderIndependentTransparency.js";import{assert as c}from"../lib/Util.js";import{writeBufferVec4 as h,writeColor as p,writePosition as l}from"./internal/bufferWriterUtils.js";import{DefaultBufferWriter as f}from"./internal/DefaultBufferWriter.js";import{intersectTriangleGeometry as d}from"./internal/MaterialUtil.js";import{patternVertexAttributeLocations as m,PatternTechniqueConfiguration as g,PatternTechnique as q}from"../shaders/PatternTechnique.js";class b extends n{constructor(e){super(e,P),this.supportsEdges=!0,this._vertexAttributeLocations=m,this.techniqueConfig=new g}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.params.cullFace,this.techniqueConfig.vertexColors=this.params.vertexColors,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.polygonOffset=this.params.polygonOffset,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.style=this.params.style,this.techniqueConfig.patternSpacing=this.params.patternSpacing,this.techniqueConfig.lineWidth=this.params.lineWidth,this.techniqueConfig.draped=this.params.draped,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.enableOffset=!t||t.camera.relativeElevation<u,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig}getPassParameters(){return this.params}intersect(e,t,i,s,r,a,n){d(e,t,s,r,a,void 0,n)}getGLMaterial(e){return 0===e.output||7===e.output||4===e.output||1===e.output&&this.params.writeLinearDepth?new C(e):void 0}createBufferWriter(){const e=r().vec3f("position").vec4u8("color").vec4f("uvMapSpace");return this.params.draped||e.mat3f("boundingRect"),new v(e)}}class C extends a{constructor(e){super(e),this.updateParameters()}updateParameters(e){this._technique=this._techniqueRep.releaseAndAcquire(q,this._material.getTechniqueConfig(this._output,e),this._technique)}beginSlot(e){if(4===this._output)return 3===e;return e===(this._technique.configuration.transparent?this._technique.configuration.writeDepth?5:8:3)}_updateOccludeeState(e){e.hasOccludees!==this._material.params.sceneHasOcludees&&this._material.setParameterValues({sceneHasOcludees:e.hasOccludees})}ensureParameters(e){0!==this._output&&7!==this._output||this._updateOccludeeState(e),this.updateParameters(e)}bind(e){this._technique.bindPass(this._material.getPassParameters(),e)}getPipelineState(e,t){return this._technique.getPipelineState(t)}}class v extends f{write(r,a,n,o){for(const u of this.vertexBufferLayout.fieldNames){const f=a.vertexAttributes.get(u),d=a.indices.get(u);if(f&&d)switch(u){case"position":{c(3===f.size);const e=n.getField(u,s);e&&l(d,f.data,r.transformation,e,o);break}case"color":{c(3===f.size||4===f.size);const e=n.getField(u,i);e&&p(d,f.data,f.size,e,o);break}case"uvMapSpace":{c(4===f.size);const e=n.getField(u,t);e&&h(d,f.data,e,o);break}case"boundingRect":{c(9===f.size);const t=n.getField(u,e);t&&this.writeBoundingRect(d,f.data,r.transformation,t,o);break}}}}writeBoundingRect(e,t,i,s,r){const a=i,n=s.typedBuffer,o=s.typedBufferStride,u=e.length;r*=o;for(let c=0;c<u;++c){const i=9*e[c],s=t[i],u=t[i+1],h=t[i+2];n[r]=a[0]*s+a[4]*u+a[8]*h+a[12],n[r+1]=a[1]*s+a[5]*u+a[9]*h+a[13],n[r+2]=a[2]*s+a[6]*u+a[10]*h+a[14];for(let e=3;e<9;++e)n[r+e]=t[i+e];r+=o}}}const P={color:[1,1,1,1],writeDepth:!0,writeLinearDepth:!1,vertexColors:!1,polygonOffset:!1,slicePlaneEnabled:!1,cullFace:0,sceneHasOcludees:!1,style:2,patternSpacing:10,lineWidth:1,draped:!0,...o};export{b as PatternMaterial};
