/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import{getAssetUrl as e}from"../../../../../assets.js";import r from"../../../../../core/Accessor.js";import a from"../../../../../core/Logger.js";import{property as s}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as o}from"../../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as i}from"../../../../../support/requestImageUtils.js";import p from"../../../../webgl/Texture.js";const n=a.getLogger("esri.views.3d.webgl-engine.materials.internal.waterMaterialUtils");let l=class extends r{constructor(){super(...arguments),this._data=new Array,this.loadingState=0}dispose(){this.loadingState=0,this._data.forEach((t=>t.dispose())),this._data.length=0}get updating(){return 1===this.loadingState}get ready(){return 2===this.loadingState}loadTextures(t){const r=[e("esri/images/materials/water/normals.jpg"),e("esri/images/materials/water/perturbation.jpg")];this.loadingState=1,Promise.all(r.map((t=>i(t)))).then((e=>{e.forEach((e=>this._data.push(new p(t,{target:3553,pixelFormat:6408,dataType:5121,wrapMode:10497,samplingMode:9987,hasMipmap:!0,maxAnisotropy:8,width:e.width,height:e.height},e)))),this.loadingState=2})).catch((t=>{n.error("Failed to load textures for water material.",t),this.loadingState=0}))}bind(t){this._data.length>=2&&(t.bindTexture(this._data[0],"texWaveNormal"),t.bindTexture(this._data[1],"texWavePerturbation"))}};t([s()],l.prototype,"loadingState",void 0),t([s({type:Boolean,readOnly:!0})],l.prototype,"updating",null),l=t([o("esri.views.3d.webgl-engine.materials.internal.WaterTextureRepository")],l);export{l as WaterTextureRepository};
