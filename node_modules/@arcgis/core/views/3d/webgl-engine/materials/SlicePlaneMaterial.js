/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import{autoDispose as r}from"../lib/AutoDisposable.js";import e from"../lib/GLMaterial.js";import{Material as i,materialParametersDefaults as s}from"../lib/Material.js";import{DefaultBufferWriter as o,PositionUVLayout as a}from"./internal/DefaultBufferWriter.js";import{intersectTriangleGeometry as n}from"./internal/MaterialUtil.js";import{SlicePlaneMaterialTechnique as u}from"../shaders/SlicePlaneMaterialTechnique.js";class l extends i{constructor(t){super(t,m)}intersect(t,r,e,i,s,o,a){return n(t,r,i,s,o,void 0,a)}createBufferWriter(){return new o(a)}getGLMaterial(t){return 0===t.output?new c(t):void 0}}class c extends e{constructor(t){super(t),this._technique=new u(this._techniqueRep.constructionContext,null),this.updateParameters()}updateParameters(){}beginSlot(t){return 8===t}bind(t){this._technique.bindPass(this._material.params,t)}}t([r()],c.prototype,"_technique",void 0);const m={backgroundColor:[1,0,0,.5],gridColor:[0,1,0,.5],gridWidth:4,...s};export{l as SlicePlaneMaterial};
