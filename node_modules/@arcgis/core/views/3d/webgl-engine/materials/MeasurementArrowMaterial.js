/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{s as e,n as t,f as s,c as r,i,m as o}from"../../../../chunks/vec3.js";import{c as n}from"../../../../chunks/vec3f64.js";import{newLayout as a}from"../../support/buffer/InterleavedLayout.js";import c from"../lib/GLMaterial.js";import{Material as u,materialParametersDefaults as f}from"../lib/Material.js";import{MeasurementArrowTechniqueConfiguration as l,MeasurementArrowTechnique as p}from"../shaders/MeasurementArrowTechnique.js";class h extends u{constructor(e){super(e,d),this.techniqueConfig=new l}getTechniqueConfig(){return this.techniqueConfig.polygonOffsetEnabled=this.params.polygonOffset,this.techniqueConfig}dispose(){}getPassParameters(){return this.params}intersect(){}createBufferWriter(){return new w}getGLMaterial(e){return 0===e.output?new m(e):void 0}}class m extends c{constructor(e){super(e),this.updateParameters()}updateParameters(){this._technique=this._techniqueRep.releaseAndAcquire(p,this._material.getTechniqueConfig(),this._technique)}beginSlot(e){return 3===e}bind(e){this._technique.bindPass(this._material.getPassParameters(),e)}}const d={width:32,outlineSize:.2,outlineColor:[1,.5,0,1],stripeLength:1,stripeEvenColor:[1,1,1,1],stripeOddColor:[1,.5,0,1],polygonOffset:!1,...f},g=a().vec3f("position").vec3f("normal").vec2f("uv0").f32("auxpos1"),v=n(),q=n(),b=n(),x=n(),C=n();class w{constructor(){this.vertexBufferLayout=g}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return 2*(e.indices.get("position").length/2+1)}write(n,a,c,u){const f=a.vertexAttributes.get("position").data,l=a.vertexAttributes.get("normal").data,p=f.length/3,h=a&&a.indices&&a.indices.get("position");h&&h.length!==2*(p-1)&&console.warn("MeasurementArrowMaterial does not support indices");const m=v,d=q,g=b,w=x,P=C,j=n.transformation,y=n.invTranspTransformation,A=c.position,L=c.normal,M=c.uv0;let _=0;for(let v=0;v<p;++v){const n=3*v;if(e(m,f[n],f[n+1],f[n+2]),v<p-1){const i=3*(v+1);e(d,f[i],f[i+1],f[i+2]),e(P,l[i],l[i+1],l[i+2]),t(P,P),s(g,d,m),t(g,g),r(w,P,g),t(w,w)}const a=i(m,d);j&&y&&(o(m,m,j),o(d,d,j),o(w,w,y));const c=u+2*v,h=c+1;A.setVec(c,m),A.setVec(h,m),L.setVec(c,w),L.setVec(h,w),M.set(c,0,_),M.set(c,1,-1),M.set(h,0,_),M.set(h,1,1),v<p-1&&(_+=a)}const T=c.auxpos1;for(let e=0;e<2*p;++e)T.set(u+e,_)}}export{h as MeasurementArrowMaterial};
