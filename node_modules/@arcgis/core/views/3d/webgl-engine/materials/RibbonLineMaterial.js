/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../core/Logger.js";import{clamp as t}from"../../../../core/mathUtils.js";import{isSome as i}from"../../../../core/maybe.js";import{createRenderScreenPointArray3 as s}from"../../../../core/screenUtils.js";import{c as r}from"../../../../chunks/vec2.js";import{s as a,f as n,d as o,a as u,b as l,g as c,l as p,i as h,m}from"../../../../chunks/vec3.js";import{c as f}from"../../../../chunks/vec3f64.js";import{distance2 as d,fromPoints as v,closestLineSegmentPoint as b,create as g}from"../../../../geometry/support/lineSegment.js";import{fromPoints as C,signedDistance as S,normal as q,create as A}from"../../../../geometry/support/plane.js";import{newLayout as y}from"../../support/buffer/InterleavedLayout.js";import{computeAttachmentOriginLines as x}from"../lib/geometryDataUtils.js";import z from"../lib/GLMaterial.js";import{Material as E,materialParametersDefaults as j}from"../lib/Material.js";import{isTranslationMatrix as P}from"../lib/Util.js";import O from"./VisualVariableMaterialParameters.js";import{isInstanceHidden as L}from"./renderers/utils.js";import{ribbonVertexAttributeLocations as _,RibbonLineTechniqueConfiguration as R,RibbonLineTechnique as w}from"../shaders/RibbonLineTechnique.js";const T=e.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial");class M extends E{constructor(e){super(e,D),this._vertexAttributeLocations=_,this.techniqueConfig=new R,this.layout=this.createLayout()}isClosed(e,t){return B(this.params,e,t)}dispose(){}getPassParameters(){return this.params}getTechniqueConfig(e,t){this.techniqueConfig.output=e;const s=i(this.params.stipplePattern);return this.techniqueConfig.stippleEnabled=s,this.techniqueConfig.stippleIntegerRepeatsEnabled=s&&this.params.stippleIntegerRepeats,this.techniqueConfig.stippleOffColorEnabled=s&&i(this.params.stippleOffColor),this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees,this.techniqueConfig.roundJoins="round"===this.params.join,this.techniqueConfig.roundCaps="round"===this.params.cap,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.polygonOffset=this.params.polygonOffset,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.vvColor=this.params.vvColorEnabled,this.techniqueConfig.vvOpacity=this.params.vvOpacityEnabled,this.techniqueConfig.vvSize=this.params.vvSizeEnabled,this.techniqueConfig.innerColorEnabled=this.params.innerWidth>0&&i(this.params.innerColor),this.techniqueConfig.falloffEnabled=this.params.falloff>0,this.techniqueConfig.occluder=8===this.params.renderOccluded,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig}intersect(e,t,i,s,r,a,n,o,u){u?this.intersectDrapedLineGeometry(e,s,a,n):this.intersectLineGeometry(e,t,i,s,this.params.width,n)}intersectDrapedLineGeometry(e,i,s,r){if(!i.options.selectionMode)return;const a=e.vertexAttributes.get("position").data,n=e.vertexAttributes.get("size");let o=this.params.width;if(this.params.vvSizeEnabled){const i=e.vertexAttributes.get("sizeFeatureAttribute").data[0];o*=t(this.params.vvSizeOffset[0]+i*this.params.vvSizeFactor[0],this.params.vvSizeMinSize[0],this.params.vvSizeMaxSize[0])}else n&&(o*=n.data[0]);const u=s[0],l=s[1],c=(o/2+4)*e.screenToWorldRatio;let p=Number.MAX_VALUE;for(let h=0;h<a.length-5;h+=3){const e=a[h],i=a[h+1],s=u-e,r=l-i,n=a[h+3]-e,o=a[h+4]-i,c=t((n*s+o*r)/(n*n+o*o),0,1),m=n*c-s,f=o*c-r,d=m*m+f*f;d<p&&(p=d)}p<c*c&&r()}intersectLineGeometry(e,i,s,m,f,g){if(!m.options.selectionMode||L(i))return;if(!P(s))return void T.error("intersection assumes a translation-only matrix");const A=e.vertexAttributes,y=A.get("position").data;let x=f;if(this.params.vvSizeEnabled){const e=A.get("sizeFeatureAttribute").data[0];x*=t(this.params.vvSizeOffset[0]+e*this.params.vvSizeFactor[0],this.params.vvSizeMinSize[0],this.params.vvSizeMaxSize[0])}else A.has("size")&&(x*=A.get("size").data[0]);const z=m.camera,E=X;r(E,m.point);const j=x*z.pixelRatio/2+4*z.pixelRatio;a(re[0],E[0]-j,E[1]+j,0),a(re[1],E[0]+j,E[1]+j,0),a(re[2],E[0]+j,E[1]-j,0),a(re[3],E[0]-j,E[1]-j,0);for(let t=0;t<4;t++)if(!z.unprojectFromRenderScreen(re[t],ae[t]))return;C(z.eye,ae[0],ae[1],ne),C(z.eye,ae[1],ae[2],oe),C(z.eye,ae[2],ae[3],ue),C(z.eye,ae[3],ae[0],le);let O=Number.MAX_VALUE;const _=V(this.params,A,e.indices)?y.length-2:y.length-5;for(let t=0;t<_;t+=3){W[0]=y[t]+s[12],W[1]=y[t+1]+s[13],W[2]=y[t+2]+s[14];const e=(t+3)%y.length;if(k[0]=y[e]+s[12],k[1]=y[e+1]+s[13],k[2]=y[e+2]+s[14],S(ne,W)<0&&S(ne,k)<0||S(oe,W)<0&&S(oe,k)<0||S(ue,W)<0&&S(ue,k)<0||S(le,W)<0&&S(le,k)<0)continue;if(z.projectToRenderScreen(W,K),z.projectToRenderScreen(k,Q),K[2]<0&&Q[2]>0){n(I,W,k);const e=z.frustum,t=-S(e[4],W)/o(I,q(e[4]));u(I,I,t),l(W,W,I),z.projectToRenderScreen(W,K)}else if(K[2]>0&&Q[2]<0){n(I,k,W);const e=z.frustum,t=-S(e[4],k)/o(I,q(e[4]));u(I,I,t),l(k,k,I),z.projectToRenderScreen(k,Q)}else if(K[2]<0&&Q[2]<0)continue;K[2]=0,Q[2]=0;const i=d(v(K,Q,$),E);i<O&&(O=i,c(Y,W),c(Z,k))}const R=m.rayBeginPoint,w=m.rayEndPoint;if(O<j*j){let e=Number.MAX_VALUE;if(b(v(Y,Z,$),v(R,w,ee),N)){n(N,N,R);const t=p(N);u(N,N,1/t),e=t/h(R,w)}g(e,N)}}computeAttachmentOrigin(e,t){const i=e.vertexAttributes;if(!i)return null;const s=e.indices,r=i.get("position");return x(r,s?s.get("position"):null,s&&V(this.params,i,s),t)}createLayout(){const e=y().vec3f("position").f32("subdivisionFactor").vec2f("uv0").vec3f("auxpos1").vec3f("auxpos2");return this.params.vvSizeEnabled?e.f32("sizeFeatureAttribute"):e.f32("size"),this.params.vvColorEnabled?e.f32("colorFeatureAttribute"):e.vec4f("color"),this.params.vvOpacityEnabled&&e.f32("opacityFeatureAttribute"),e}createBufferWriter(){return new G(this.layout,this.params)}getGLMaterial(e){return 0===e.output||7===e.output||4===e.output||1===e.output?new F(e):void 0}validateParameterValues(e){"miter"!==e.join&&(e.miterLimit=0),this.requiresTransparent(e)&&(e.transparent=!0)}requiresTransparent(e){return!!((e.color&&e.color[3])<1||e.innerWidth>0&&this.colorRequiresTransparent(e.innerColor)||e.stipplePattern&&this.colorRequiresTransparent(e.stippleOffColor)||e.falloff>0)}colorRequiresTransparent(e){return i(e)&&e[3]<1&&e[3]>0}}class F extends z{constructor(e){super(e),this.updateParameters()}updateParameters(e){this._technique=this._techniqueRep.releaseAndAcquire(w,this._material.getTechniqueConfig(this._output,e),this._technique)}beginSlot(e){return this._technique.configuration.occluder?3===e||10===e||11===e:0===this._output||7===this._output?(this.targetSlot=this._technique.configuration.writeDepth?5:8,e===this.targetSlot):3===e}_updateOccludeeState(e){e.hasOccludees!==this._material.params.sceneHasOcludees&&this._material.setParameterValues({sceneHasOcludees:e.hasOccludees})}ensureParameters(e){0!==this._output&&7!==this._output||this._updateOccludeeState(e),this.updateParameters(e)}bind(e){this._technique.bindPass(this._material.getPassParameters(),e)}getPipelineState(e,t){return this._technique.getPipelineState(e,t)}}const D={width:0,color:[1,1,1,1],join:"miter",cap:"butt",miterLimit:5,writeDepth:!0,polygonOffset:!1,stipplePattern:null,stippleIntegerRepeats:!1,stippleOffColor:null,slicePlaneEnabled:!1,vvFastUpdate:!1,transparent:!1,isClosed:!1,falloff:0,innerWidth:0,innerColor:null,sceneHasOcludees:!1,...j,...O.Default};class G{constructor(e,t){switch(this.params=t,this.numJoinSubdivisions=0,this.vertexBufferLayout=e,this.params.join){case"miter":case"bevel":this.numJoinSubdivisions=t.stipplePattern?1:0;break;case"round":this.numJoinSubdivisions=H}}isClosed(e){return V(this.params,e.vertexAttributes,e.indices)}numCapSubdivisions(e){if(this.isClosed(e))return 0;switch(this.params.cap){case"butt":return 0;case"square":return 1;case"round":return J}}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){const t=2*this.numCapSubdivisions(e)+2,i=e.indices.get("position").length/2+1,s=this.isClosed(e);let r=s?2:2*t;const a=s?0:1,n=s?i:i-1;if(e.vertexAttributes.has("subdivisions")){const t=e.vertexAttributes.get("subdivisions").data;for(let e=a;e<n;++e){r+=4+2*t[e]}}else{r+=(n-a)*(2*this.numJoinSubdivisions+4)}return r+=2,r}write(e,t,i,s){const r=te,n=ie,o=se,u=t.vertexAttributes.get("position").data,l=t.indices&&t.indices.get("position"),p=this.numCapSubdivisions(t);l&&l.length!==2*(u.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");let h=null;t.vertexAttributes.has("subdivisions")&&(h=t.vertexAttributes.get("subdivisions").data);let f=1,d=0;this.params.vvSizeEnabled?d=t.vertexAttributes.get("sizeFeatureAttribute").data[0]:t.vertexAttributes.has("size")&&(f=t.vertexAttributes.get("size").data[0]);let v=[1,1,1,1],b=0;this.params.vvColorEnabled?b=t.vertexAttributes.get("colorFeatureAttribute").data[0]:t.vertexAttributes.has("color")&&(v=t.vertexAttributes.get("color").data);let g=0;this.params.vvOpacityEnabled&&(g=t.vertexAttributes.get("opacityFeatureAttribute").data[0]);const C=u.length/3,S=e.transformation,q=new Float32Array(i.buffer),A=this.vertexBufferLayout.stride/4;let y=s*A;const x=y,z=(e,t,i,s,r,a,n)=>{if(q[y++]=t[0],q[y++]=t[1],q[y++]=t[2],q[y++]=s,q[y++]=r,q[y++]=a,q[y++]=e[0],q[y++]=e[1],q[y++]=e[2],q[y++]=i[0],q[y++]=i[1],q[y++]=i[2],this.params.vvSizeEnabled?q[y++]=d:q[y++]=f,this.params.vvColorEnabled)q[y++]=b;else{const e=Math.min(4*n,v.length-4);q[y++]=v[e+0],q[y++]=v[e+1],q[y++]=v[e+2],q[y++]=v[e+3]}this.params.vvOpacityEnabled&&(q[y++]=g)};y+=A,a(n,u[0],u[1],u[2]),S&&m(n,n,S);const E=this.isClosed(t);if(E){const e=u.length-3;a(r,u[e],u[e+1],u[e+2]),S&&m(r,r,S)}else{c(r,n),a(o,u[3],u[4],u[5]),S&&m(o,o,S);for(let e=0;e<p;++e){const t=1-e/p;z(r,n,o,t,1,-4,0),z(r,n,o,t,1,4,0)}z(r,n,o,0,0,-4,0),z(r,n,o,0,0,4,0),c(r,n),c(n,o)}const j=E?C:C-1;for(let P=E?0:1;P<j;P++){const e=(P+1)%C*3;a(o,u[e+0],u[e+1],u[e+2]),S&&m(o,o,S),z(r,n,o,0,1,-1,P),z(r,n,o,0,1,1,P);const t=h?h[P]:this.numJoinSubdivisions;for(let i=0;i<t;++i){const e=(i+1)/(t+1);z(r,n,o,e,1,-2,P),z(r,n,o,e,1,2,P)}z(r,n,o,1,0,-2,P),z(r,n,o,1,0,2,P),c(r,n),c(n,o)}if(E){y=U(q,x+A,q,y,2*A)}else{z(r,n,o,0,1,-5,j),z(r,n,o,0,1,5,j);for(let e=0;e<p;++e){const t=(e+1)/p;z(r,n,o,t,1,-5,j),z(r,n,o,t,1,5,j)}}U(q,x+A,q,x,A);y=U(q,y-A,q,y,A)}}function U(e,t,i,s,r){for(let a=0;a<r;a++)i[s++]=e[t++];return s}function V(e,t,i){return B(e,t.get("position").data,i?i.get("position"):null)}function B(e,t,i){return!!e.isClosed&&(i?i.length>2:t.length>6)}const J=3,H=1,W=f(),k=f(),I=f(),N=f(),X=f(),K=s(),Q=s(),Y=f(),Z=f(),$=g(),ee=g(),te=f(),ie=f(),se=f(),re=[s(),s(),s(),s()],ae=[f(),f(),f(),f()],ne=A(),oe=A(),ue=A(),le=A();export{M as RibbonLineMaterial};
