/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../lib/GLMaterial.js";import{Material as t,materialParametersDefaults as i}from"../lib/Material.js";import{OITPolygonOffsetLimit as s}from"../lib/OrderIndependentTransparency.js";import{DefaultBufferWriter as r,PositionColorLayout as a}from"./internal/DefaultBufferWriter.js";import{intersectTriangleGeometry as n}from"./internal/MaterialUtil.js";import{ColorMaterialTechniqueConfiguration as u,ColorMaterialTechnique as h}from"../shaders/ColorMaterialTechnique.js";class o extends t{constructor(e){super(e,l),this.supportsEdges=!0,this.techniqueConfig=new u}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.params.cullFace,this.techniqueConfig.vertexColors=this.params.vertexColors,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.polygonOffset=this.params.polygonOffset,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.enableOffset=!t||t.camera.relativeElevation<s,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig}getPassParameters(){return this.params}intersect(e,t,i,s,r,a,u){n(e,t,s,r,a,void 0,u)}getGLMaterial(e){return 0===e.output||7===e.output||4===e.output||1===e.output&&this.params.writeLinearDepth?new c(e):void 0}createBufferWriter(){return new r(a)}}class c extends e{constructor(e){super(e),this.updateParameters()}updateParameters(e){this._technique=this._techniqueRep.releaseAndAcquire(h,this._material.getTechniqueConfig(this._output,e),this._technique)}beginSlot(e){if(4===this._output)return 3===e;return e===(this._technique.configuration.transparent?this._technique.configuration.writeDepth?5:8:3)}_updateOccludeeState(e){e.hasOccludees!==this._material.params.sceneHasOcludees&&this._material.setParameterValues({sceneHasOcludees:e.hasOccludees})}ensureParameters(e){0!==this._output&&7!==this._output||this._updateOccludeeState(e),this.updateParameters(e)}bind(e){this._technique.bindPass(this._material.getPassParameters(),e)}getPipelineState(e,t){return this._technique.getPipelineState(t)}}const l={color:[1,1,1,1],transparent:!1,writeDepth:!0,writeLinearDepth:!1,vertexColors:!1,polygonOffset:!1,slicePlaneEnabled:!1,cullFace:0,sceneHasOcludees:!1,...i};export{o as ColorMaterial};
