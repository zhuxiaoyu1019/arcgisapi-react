/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{isNone as e}from"../../../../core/maybe.js";import{createResolver as t}from"../../../../core/promiseUtils.js";import{d as r}from"../../../../chunks/vec4f64.js";import{AutoDisposable as s}from"../lib/AutoDisposable.js";import{encodeResult as i,createEmptyImageData as o,resampleHermite as n}from"../../../support/screenshotUtils.js";import a from"../../../webgl/FramebufferObject.js";class h extends s{constructor(e,t,r,s=null,i,o=!0){super(),this._rctx=e,this._renderScene=t,this._requestRenderScene=r,this._renderOverlay=s,this.forceCameraHook=i,this.supersample=o,this._screenshotQueue=[]}dispose(){this._rctx=null}takeScreenshot(e){this._requestRenderScene();const r=t();return this._screenshotQueue.push({settings:e,resolver:r}),r.promise}update(e){if(0!==this._screenshotQueue.length){for(const t of this._screenshotQueue){if(this.isDisposed){t.resolver.reject();continue}const r={...t.settings,pixelRatio:t.settings.pixelRatio*e.viewCamera.pixelRatio},s=this._ensureScreenshotEncodeCanvas(),o=this._renderScreenshot(e,r),n=i(o,r,s,{flipY:!0,premultipliedAlpha:!0});t.resolver(n)}this._screenshotQueue=[]}}_renderScreenshotOverlay(t,r,s){if(e(this._renderOverlay))return r;t.width=r.width,t.height=r.height;const i=t.getContext("2d"),o=s.pixelRatio;return i.save(),i.translate(0,r.height),i.scale(1,-1),s.region&&i.translate(-s.region.x,-s.region.y),i.scale(o,o),r=this._renderOverlay(t,r),i.restore(),r}_readbackScreenshot(e){return e.resample?this._readbackScreenshotResampled(e):this._readbackScreenshotImmediate(e)}_readbackScreenshotResampled(e){const{framebufferWidth:t,framebufferHeight:r,region:s,resample:i}=e,a=this._ensureScreenshotEncodeCanvas();let h=o(t,r,a);this._rctx.gl.readPixels(0,0,t,r,6408,5121,new Uint8Array(h.data.buffer)),h=this._renderScreenshotOverlay(a,h,{...e,region:null});const c=o(s.width,s.height,a);return n(h,c,!0,i.region.x,r-(i.region.y+i.region.height),i.region.width,i.region.height)}_readbackScreenshotImmediate(e){const{framebufferHeight:t,region:r}=e,s=this._ensureScreenshotEncodeCanvas(),i=o(r.width,r.height,s);return this._rctx.gl.readPixels(r.x,t-(r.y+r.height),r.width,r.height,6408,5121,new Uint8Array(i.data.buffer)),this._renderScreenshotOverlay(s,i,e)}_renderScreenshot(e,t){let s=null;const i=e.viewCamera,{framebufferWidth:o,framebufferHeight:n}=t;let h=!1;const c=t.disableDecorations&&e.frameHasDecorations,l=o!==i.fullWidth||n!==i.fullHeight,d=t.ignorePadding&&i.pixelRatio!==t.pixelRatio,f=l||c||d;if(f){const e=i.clone();if(t.ignorePadding){const s=r(e.padding);for(let r=0;r<4;r++)s[r]=Math.round(s[r]/e.pixelRatio*t.pixelRatio);e.padding=s}e.fullWidth=o,e.fullHeight=n,e.pixelRatio=t.pixelRatio;const c=i.fovX-e.fovX,l=i.fovY-e.fovY;c<0&&c<l?e.fovX=i.fovX:l<0&&l<c&&(e.fovY=i.fovY),this.forceCameraHook(e),h=!0,s=new a(this._rctx,{width:e.fullWidth,height:e.fullHeight,colorTarget:0,depthStencilTarget:3}),this._renderScene(s,e,t.disableDecorations)}const u=this._readbackScreenshot(t);if(f&&!this._rctx.contextAttributes.alpha)for(let r=3;r<u.data.length;r+=4)u.data[r]=255;return s&&s.dispose(),this._rctx.bindFramebuffer(null),h&&this.forceCameraHook(i),u}_ensureScreenshotEncodeCanvas(){return this._screenshotEncodeCanvas||(this._screenshotEncodeCanvas=document.createElement("canvas")),this._screenshotEncodeCanvas}}export{h as ScreenshotManager};
