/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{f as t}from"../../../../chunks/vec3f64.js";import{bindSliceUniforms as i}from"../core/shaderLibrary/Slice.glsl.js";import{InstancedDoublePrecision as r}from"../core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js";import{bindVerticalOffsetUniforms as o}from"../core/shaderLibrary/attributes/VerticalOffset.glsl.js";import{bindOutputHighlight as s}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindMultipassTerrainTexture as a}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{bindPBRUniforms as n}from"../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{bindReadShadowMapViewCustomOrigin as l}from"../core/shaderLibrary/shading/ReadShadowMap.glsl.js";import{bindVisualVariablesUniformsForSymbols as p}from"../core/shaderLibrary/shading/VisualVariables.glsl.js";import{doublePrecisionRequiresObfuscation as c}from"../core/shaderLibrary/util/DoublePrecision.glsl.js";import{bindProjectionMatrix as u,bindViewCustomOrigin as h,bindCameraPosition as d}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as m}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as f}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as v,parameter as g}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as b}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as y,OITBlending as x,OITDepthTest as T,getOITPolygonOffset as P}from"../lib/OrderIndependentTransparency.js";import{Program as M}from"../lib/Program.js";import{stencilWriteMaskOn as S,stencilToolMaskBaseParams as C,stencilBaseAllZerosParams as O}from"../lib/StencilUtils.js";import{colorMixModes as D,bindScreenSizePerspective as w}from"../materials/internal/MaterialUtil.js";import{D as j}from"../../../../chunks/DefaultMaterial.glsl.js";import{makePipelineState as A,cullingParams as E,defaultDepthWriteParams as U,defaultColorWriteParams as z}from"../../../webgl/renderState.js";class R extends f{initializeProgram(e){const t=R.shader.get(),i=this.configuration,r=t.build({OITEnabled:0===i.transparencyPassType,output:i.output,viewingMode:e.viewingMode,receiveShadows:i.receiveShadows,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:i.sliceHighlightDisabled,sliceEnabledForVertexPrograms:!1,symbolColor:i.symbolColors,vvSize:i.vvSize,vvColor:i.vvColor,vvInstancingEnabled:!0,instanced:i.instanced,instancedColor:i.instancedColor,instancedDoublePrecision:i.instancedDoublePrecision,pbrMode:i.usePBR?i.isSchematic?2:1:0,hasMetalnessAndRoughnessTexture:i.hasMetalnessAndRoughnessTexture,hasEmissionTexture:i.hasEmissionTexture,hasOcclusionTexture:i.hasOcclusionTexture,hasNormalTexture:i.hasNormalTexture,hasColorTexture:i.hasColorTexture,receiveAmbientOcclusion:i.receiveAmbientOcclusion,useCustomDTRExponentForWater:!1,normalType:i.normalsTypeDerivate?3:0,doubleSidedMode:i.doubleSidedMode,vertexTangents:i.vertexTangents,attributeTextureCoordinates:i.hasMetalnessAndRoughnessTexture||i.hasEmissionTexture||i.hasOcclusionTexture||i.hasNormalTexture||i.hasColorTexture?1:0,textureAlphaPremultiplied:i.textureAlphaPremultiplied,attributeColor:i.vertexColors,screenSizePerspectiveEnabled:i.screenSizePerspective,verticalOffsetEnabled:i.verticalOffset,offsetBackfaces:i.offsetBackfaces,doublePrecisionRequiresObfuscation:c(e.rctx),alphaDiscardMode:i.alphaDiscardMode,supportsTextureAtlas:!1,multipassTerrainEnabled:i.multipassTerrainEnabled,cullAboveGround:i.cullAboveGround});return new M(e.rctx,r,b)}bindPass(e,t){var i,r;u(this.program,t.camera.projectionMatrix);const l=this.configuration.output;(1===this.configuration.output||t.multipassTerrainEnabled||3===l)&&this.program.setUniform2fv("cameraNearFar",t.camera.nearFar),t.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",t.inverseViewport),a(this.program,t)),7===l&&(this.program.setUniform1f("opacity",e.opacity),this.program.setUniform1f("layerOpacity",e.layerOpacity),this.program.setUniform4fv("externalColor",e.externalColor),this.program.setUniform1i("colorMixMode",D[e.colorMixMode])),0===l?(t.lighting.setUniforms(this.program,!1),this.program.setUniform3fv("ambient",e.ambient),this.program.setUniform3fv("diffuse",e.diffuse),this.program.setUniform4fv("externalColor",e.externalColor),this.program.setUniform1i("colorMixMode",D[e.colorMixMode]),this.program.setUniform1f("opacity",e.opacity),this.program.setUniform1f("layerOpacity",e.layerOpacity),this.configuration.usePBR&&n(this.program,e,this.configuration.isSchematic)):4===l&&s(this.program,t),p(this.program,e),o(this.program,e,t),w(e.screenSizePerspective,this.program,"screenSizePerspectiveAlignment"),2!==e.textureAlphaMode&&3!==e.textureAlphaMode||this.program.setUniform1f("textureAlphaCutoff",e.textureAlphaCutoff),null==(i=t.shadowMap)||i.bind(this.program),null==(r=t.ssaoHelper)||r.bind(this.program)}bindDraw(e){const o=this.configuration.instancedDoublePrecision?t(e.camera.viewInverseTransposeMatrix[3],e.camera.viewInverseTransposeMatrix[7],e.camera.viewInverseTransposeMatrix[11]):e.origin;h(this.program,o,e.camera.viewMatrix),this.program.rebindTextures(),(0===this.configuration.output||7===this.configuration.output||1===this.configuration.output&&this.configuration.screenSizePerspective||2===this.configuration.output&&this.configuration.screenSizePerspective||4===this.configuration.output&&this.configuration.screenSizePerspective)&&d(this.program,o,e.camera.viewInverseTransposeMatrix),2===this.configuration.output&&this.program.setUniformMatrix4fv("viewNormal",e.camera.viewInverseTransposeMatrix),this.configuration.instancedDoublePrecision&&r.bindCustomOrigin(this.program,o),i(this.program,this.configuration,e.slicePlane,o),0===this.configuration.output&&l(this.program,e,o)}setPipeline(e,t){const i=this.configuration,r=3===e,o=2===e;return A({blending:0!==i.output&&7!==i.output||!i.transparent?null:r?y:x(e),culling:L(i)&&E(i.cullFace),depthTest:{func:T(e)},depthWrite:r||o?i.writeDepth&&U:null,colorWrite:z,stencilWrite:i.sceneHasOcludees?S:null,stencilTest:i.sceneHasOcludees?t?C:O:null,polygonOffset:r||o?null:P(i.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this.setPipeline(this.configuration.transparencyPassType,!0),this.setPipeline(this.configuration.transparencyPassType,!1)}getPipelineState(e){return e?this._occludeePipelineState:this.pipeline}}function L(e){return e.cullFace?0!==e.cullFace:!e.slicePlaneEnabled&&(!e.transparent&&!e.doubleSidedMode)}R.shader=new m(j,(()=>import("./DefaultMaterial.glsl.js")));class H extends v{constructor(){super(...arguments),this.output=0,this.alphaDiscardMode=1,this.doubleSidedMode=0,this.isSchematic=!1,this.vertexColors=!1,this.offsetBackfaces=!1,this.symbolColors=!1,this.vvSize=!1,this.vvColor=!1,this.verticalOffset=!1,this.receiveShadows=!1,this.slicePlaneEnabled=!1,this.sliceHighlightDisabled=!1,this.receiveAmbientOcclusion=!1,this.screenSizePerspective=!1,this.textureAlphaPremultiplied=!1,this.hasColorTexture=!1,this.usePBR=!1,this.hasMetalnessAndRoughnessTexture=!1,this.hasEmissionTexture=!1,this.hasOcclusionTexture=!1,this.hasNormalTexture=!1,this.instanced=!1,this.instancedColor=!1,this.instancedDoublePrecision=!1,this.vertexTangents=!1,this.normalsTypeDerivate=!1,this.writeDepth=!0,this.sceneHasOcludees=!1,this.transparent=!1,this.enableOffset=!0,this.cullFace=0,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}e([g({count:8})],H.prototype,"output",void 0),e([g({count:4})],H.prototype,"alphaDiscardMode",void 0),e([g({count:3})],H.prototype,"doubleSidedMode",void 0),e([g()],H.prototype,"isSchematic",void 0),e([g()],H.prototype,"vertexColors",void 0),e([g()],H.prototype,"offsetBackfaces",void 0),e([g()],H.prototype,"symbolColors",void 0),e([g()],H.prototype,"vvSize",void 0),e([g()],H.prototype,"vvColor",void 0),e([g()],H.prototype,"verticalOffset",void 0),e([g()],H.prototype,"receiveShadows",void 0),e([g()],H.prototype,"slicePlaneEnabled",void 0),e([g()],H.prototype,"sliceHighlightDisabled",void 0),e([g()],H.prototype,"receiveAmbientOcclusion",void 0),e([g()],H.prototype,"screenSizePerspective",void 0),e([g()],H.prototype,"textureAlphaPremultiplied",void 0),e([g()],H.prototype,"hasColorTexture",void 0),e([g()],H.prototype,"usePBR",void 0),e([g()],H.prototype,"hasMetalnessAndRoughnessTexture",void 0),e([g()],H.prototype,"hasEmissionTexture",void 0),e([g()],H.prototype,"hasOcclusionTexture",void 0),e([g()],H.prototype,"hasNormalTexture",void 0),e([g()],H.prototype,"instanced",void 0),e([g()],H.prototype,"instancedColor",void 0),e([g()],H.prototype,"instancedDoublePrecision",void 0),e([g()],H.prototype,"vertexTangents",void 0),e([g()],H.prototype,"normalsTypeDerivate",void 0),e([g()],H.prototype,"writeDepth",void 0),e([g()],H.prototype,"sceneHasOcludees",void 0),e([g()],H.prototype,"transparent",void 0),e([g()],H.prototype,"enableOffset",void 0),e([g({count:3})],H.prototype,"cullFace",void 0),e([g({count:4})],H.prototype,"transparencyPassType",void 0),e([g()],H.prototype,"multipassTerrainEnabled",void 0),e([g()],H.prototype,"cullAboveGround",void 0);export{R as DefaultMaterialTechnique,H as DefaultMaterialTechniqueConfiguration};
