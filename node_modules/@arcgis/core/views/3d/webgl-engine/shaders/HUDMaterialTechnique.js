/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{bindSliceUniformsWithOrigin as r}from"../core/shaderLibrary/Slice.glsl.js";import{bindVerticalOffsetUniforms as t}from"../core/shaderLibrary/attributes/VerticalOffset.glsl.js";import{bindHUDUniforms as i}from"../core/shaderLibrary/hud/HUD.glsl.js";import{bindOutputHighlight as o}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindMultipassGeometryTexture as s}from"../core/shaderLibrary/shading/MultipassGeometryTest.glsl.js";import{bindMultipassTerrainTexture as a}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{bindVisualVariablesUniforms as n}from"../core/shaderLibrary/shading/VisualVariables.glsl.js";import{bindScreenSizePerspectiveUniforms as l}from"../core/shaderLibrary/util/ScreenSizePerspective.glsl.js";import{bindProjectionMatrix as p,bindViewport as d,bindView as c,bindCameraPosition as u}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as h}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as m}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as g,parameter as f}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as b}from"../lib/DefaultVertexAttributeLocations.js";import{OITBlending as v}from"../lib/OrderIndependentTransparency.js";import{Program as y}from"../lib/Program.js";import{b as E,H as T}from"../../../../chunks/HUDMaterial.glsl.js";import{defaultDepthWriteParams as P,makePipelineState as x,defaultColorWriteParams as O,simpleBlendingParams as S}from"../../../webgl/renderState.js";class j extends m{initializeProgram(e){const r=j.shader.get(),t=this.configuration,i=r.build({output:t.output,FrontFacePass:2===t.transparencyPassType,viewingMode:e.viewingMode,occlusionTestEnabled:t.occlusionTestEnabled,signedDistanceFieldEnabled:t.sdf,slicePlaneEnabled:t.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!0,debugDrawBorder:t.debugDrawBorder,binaryHighlightOcclusionEnabled:t.binaryHighlightOcclusion,screenCenterOffsetUnitsEnabled:t.screenCenterOffsetUnitsEnabled,screenSizePerspectiveEnabled:t.screenSizePerspective,verticalOffsetEnabled:t.verticalOffset,pixelSnappingEnabled:t.pixelSnappingEnabled,vvSize:t.vvSize,vvColor:t.vvColor,vvInstancingEnabled:!1,isDraped:t.isDraped,multipassGeometryEnabled:t.multipassGeometryEnabled,multipassTerrainEnabled:t.multipassTerrainEnabled,cullAboveGround:t.cullAboveGround});return new y(e.rctx,i,b)}bindPass(e,r){p(this.program,r.camera.projectionMatrix),this.program.setUniform1f("cameraGroundRelative",r.camera.aboveGround?1:-1),this.program.setUniform1f("perDistancePixelRatio",Math.tan(r.camera.fovY/2)/(r.camera.fullViewport[2]/2)),this.program.setUniformMatrix4fv("viewNormal",r.camera.viewInverseTransposeMatrix),this.program.setUniform1f("polygonOffset",e.shaderPolygonOffset),t(this.program,e,r),l(this.program,e),this.program.setUniform1f("pixelRatio",r.camera.pixelRatio||1),d(this.program,r),6===this.configuration.output?(this.program.setUniform2fv("cameraNearFar",r.camera.nearFar),this.program.setUniform2fv("inverseViewport",r.inverseViewport),s(this.program,r),a(this.program,r)):(i(this.program,r),E(this.program,e,r.camera.pixelRatio||1),n(this.program,e),this.configuration.occlusionTestEnabled&&this.program.bindTexture(r.hudVisibilityTexture,"hudVisibilityTexture")),4===this.configuration.output&&o(this.program,r)}bindDraw(e){c(this.program,e),u(this.program,e.origin,e.camera.viewInverseTransposeMatrix),r(this.program,this.configuration,e),this.program.rebindTextures()}setPipelineState(e){const r=this.configuration,t=3===e,i=2===e,o=515,s=this.configuration.polygonOffsetEnabled&&w,a=(t||i)&&4!==r.output?(r.depthEnabled||6===r.output)&&P:null;return x({blending:0===r.output||7===r.output||4===r.output?t?D:v(e):null,depthTest:{func:o},depthWrite:a,colorWrite:O,polygonOffset:s})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return 6===this.configuration.output?0:4}}j.shader=new h(T,(()=>import("./HUDMaterial.glsl.js")));const w={factor:0,units:-4},D=S(1,771);class U extends g{constructor(){super(...arguments),this.output=0,this.occlusionTestEnabled=!0,this.sdf=!1,this.vvSize=!1,this.vvColor=!1,this.verticalOffset=!1,this.screenSizePerspective=!1,this.screenCenterOffsetUnitsEnabled=0,this.debugDrawBorder=!0,this.binaryHighlightOcclusion=!0,this.slicePlaneEnabled=!1,this.polygonOffsetEnabled=!1,this.depthEnabled=!0,this.transparencyPassType=3,this.pixelSnappingEnabled=!0,this.isDraped=!1,this.multipassGeometryEnabled=!1,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}e([f({count:8})],U.prototype,"output",void 0),e([f()],U.prototype,"occlusionTestEnabled",void 0),e([f()],U.prototype,"sdf",void 0),e([f()],U.prototype,"vvSize",void 0),e([f()],U.prototype,"vvColor",void 0),e([f()],U.prototype,"verticalOffset",void 0),e([f()],U.prototype,"screenSizePerspective",void 0),e([f({count:2})],U.prototype,"screenCenterOffsetUnitsEnabled",void 0),e([f()],U.prototype,"debugDrawBorder",void 0),e([f()],U.prototype,"binaryHighlightOcclusion",void 0),e([f()],U.prototype,"slicePlaneEnabled",void 0),e([f()],U.prototype,"polygonOffsetEnabled",void 0),e([f()],U.prototype,"depthEnabled",void 0),e([f({count:4})],U.prototype,"transparencyPassType",void 0),e([f()],U.prototype,"pixelSnappingEnabled",void 0),e([f()],U.prototype,"isDraped",void 0),e([f()],U.prototype,"multipassGeometryEnabled",void 0),e([f()],U.prototype,"multipassTerrainEnabled",void 0),e([f()],U.prototype,"cullAboveGround",void 0);export{j as HUDMaterialTechnique,U as HUDMaterialTechniqueConfiguration};
