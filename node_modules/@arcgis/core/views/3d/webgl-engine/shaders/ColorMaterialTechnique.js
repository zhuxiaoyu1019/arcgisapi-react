/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{bindSliceUniformsWithOrigin as t}from"../core/shaderLibrary/Slice.glsl.js";import{bindOutputHighlight as r}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindMultipassTerrainTexture as i}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{bindProjectionMatrix as o,bindView as s}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as a}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as n}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as l,parameter as p}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as u}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as c,OITBlending as d,OITDepthTest as h,getOITPolygonOffset as m}from"../lib/OrderIndependentTransparency.js";import{Program as f}from"../lib/Program.js";import{stencilWriteMaskOn as g,stencilToolMaskBaseParams as b,stencilBaseAllZerosParams as y}from"../lib/StencilUtils.js";import{C as v}from"../../../../chunks/ColorMaterial.glsl.js";import{makePipelineState as T,cullingParams as P,defaultDepthWriteParams as j,defaultColorWriteParams as O}from"../../../webgl/renderState.js";class E extends n{initializeProgram(e){const t=E.shader.get(),r=this.configuration,i=t.build({output:r.output,OITEnabled:0===r.transparencyPassType,attributeColor:r.vertexColors,slicePlaneEnabled:r.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,multipassTerrainEnabled:r.multipassTerrainEnabled,cullAboveGround:r.cullAboveGround});return new f(e.rctx,i,u)}bindPass(e,t){o(this.program,t.camera.projectionMatrix),this.program.setUniform4fv("eColor",e.color),4===this.configuration.output&&r(this.program,t),(1===this.configuration.output||t.multipassTerrainEnabled)&&this.program.setUniform2fv("cameraNearFar",t.camera.nearFar),t.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",t.inverseViewport),i(this.program,t))}bindDraw(e){s(this.program,e),this.program.rebindTextures(),t(this.program,this.configuration,e)}setPipelineState(e,t){const r=this.configuration,i=3===e,o=2===e;return T({blending:0!==r.output&&7!==r.output||!r.transparent?null:i?c:d(e),culling:P(r.cullFace),depthTest:{func:h(e)},depthWrite:i||o?r.writeDepth&&j:null,colorWrite:O,stencilWrite:r.sceneHasOcludees?g:null,stencilTest:r.sceneHasOcludees?t?b:y:null,polygonOffset:i||o?r.polygonOffset&&S:m(r.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this.setPipelineState(this.configuration.transparencyPassType,!0),this.setPipelineState(this.configuration.transparencyPassType,!1)}getPipelineState(e){return e?this._occludeePipelineState:this.pipeline}}E.shader=new a(v,(()=>import("./ColorMaterial.glsl.js")));const S={factor:1,units:1};class x extends l{constructor(){super(...arguments),this.output=0,this.cullFace=0,this.slicePlaneEnabled=!1,this.vertexColors=!1,this.transparent=!1,this.polygonOffset=!1,this.enableOffset=!0,this.writeDepth=!0,this.sceneHasOcludees=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}e([p({count:8})],x.prototype,"output",void 0),e([p({count:3})],x.prototype,"cullFace",void 0),e([p()],x.prototype,"slicePlaneEnabled",void 0),e([p()],x.prototype,"vertexColors",void 0),e([p()],x.prototype,"transparent",void 0),e([p()],x.prototype,"polygonOffset",void 0),e([p()],x.prototype,"enableOffset",void 0),e([p()],x.prototype,"writeDepth",void 0),e([p()],x.prototype,"sceneHasOcludees",void 0),e([p({count:4})],x.prototype,"transparencyPassType",void 0),e([p()],x.prototype,"multipassTerrainEnabled",void 0),e([p()],x.prototype,"cullAboveGround",void 0);export{E as ColorMaterialTechnique,x as ColorMaterialTechniqueConfiguration};
