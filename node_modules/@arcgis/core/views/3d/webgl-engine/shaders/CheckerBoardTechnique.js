/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as r}from"../../../../chunks/tslib.es6.js";import{bindMultipassTerrainTexture as e}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{bindProjectionMatrix as t,bindView as o}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as i}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as s}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as a,parameter as n}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as p}from"../lib/DefaultVertexAttributeLocations.js";import{OITBlending as l,OITDepthTest as c,OITDepthWrite as m}from"../lib/OrderIndependentTransparency.js";import{Program as d}from"../lib/Program.js";import{C as h}from"../../../../chunks/CheckerBoard.glsl.js";import{makePipelineState as u,defaultDepthWriteParams as f,defaultColorWriteParams as g,separateBlendingParams as b}from"../../../webgl/renderState.js";class y extends s{initializeProgram(r){const e=y.shader.get(),t=this.configuration,o=e.build({OITEnabled:0===t.transparencyPassType,multipassTerrainEnabled:t.multipassTerrainEnabled,cullAboveGround:t.cullAboveGround});return new d(r.rctx,o,p)}bindPass(r,o){t(this.program,o.camera.projectionMatrix),this.program.setUniform2fv("size",r.size),this.program.setUniform4fv("color1",r.color1),this.program.setUniform4fv("color2",r.color2),o.multipassTerrainEnabled&&(this.program.setUniform2fv("cameraNearFar",o.camera.nearFar),this.program.setUniform2fv("inverseViewport",o.inverseViewport),e(this.program,o))}bindDraw(r){o(this.program,r)}setPipelineState(r){const e=this.configuration,t=3===r,o=2===r;return u({blending:e.transparent?t?v:l(r):null,depthTest:{func:c(r)},depthWrite:t?e.writeDepth&&f:m(r),colorWrite:g,polygonOffset:t||o?e.polygonOffset&&T:{factor:-1,units:-25}})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}y.shader=new i(h,(()=>import("./CheckerBoard.glsl.js")));const T={factor:0,units:-25},v=b(770,1,771,771);class j extends a{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}r([n()],j.prototype,"transparent",void 0),r([n()],j.prototype,"writeDepth",void 0),r([n()],j.prototype,"polygonOffset",void 0),r([n({count:4})],j.prototype,"transparencyPassType",void 0),r([n()],j.prototype,"multipassTerrainEnabled",void 0),r([n()],j.prototype,"cullAboveGround",void 0);export{y as CheckerBoardTechnique,j as CheckerBoardTechniqueConfiguration};
