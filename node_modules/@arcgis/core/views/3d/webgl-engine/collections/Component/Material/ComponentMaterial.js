/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../../chunks/tslib.es6.js";import{releaseMaybe as t,isSome as s}from"../../../../../../core/maybe.js";import{C as r}from"../../../../../../chunks/vec3.js";import{f as o}from"../../../../../../chunks/vec3f32.js";import{v as a,g as i,c as l}from"../../../../../../chunks/vec4.js";import{f as n}from"../../../../../../chunks/vec4f32.js";import{f as h}from"../../../../../../chunks/vec4f64.js";import{ComponentTechniqueConfiguration as c,ComponentTechnique as p}from"./ComponentTechnique.js";import{a as u}from"../../../../../../chunks/ComponentShader.glsl.js";import{MaterialBase as d,parameter as m,parameterBlock as v,MaterialParameterBlock as y}from"../../../core/material/MaterialBase.js";import{defaultMaskAlphaCutoff as b}from"../../../core/shaderLibrary/util/AlphaDiscard.glsl.js";class x extends d{constructor(){super(...arguments),this.baseColor=n(1,1,1,1),this.usePBR=!1,this.hasParametersFromSource=!1,this.mrrFactors=o(1,1,.5),this.emissiveFactor=o(0,0,0),this.baseColorTexture=null,this.metallicRoughnessTexture=null,this.emissionTexture=null,this.occlusionTexture=null,this.normalTexture=null,this.overlayTexOffset=h(-1,-1,-1,-1),this.overlayTexScale=h(0,0,0,0),this.overlayColor=null,this.overlayHighlight=null,this.overlayNormal=null,this.objectOpacity=1,this.commonMaterialParameters=new g,this.componentParameters=new M,this.alphaCutoff=b,this.alphaDiscardMode=1,this.isIntegratedMesh=!1,this.polygonOffsetEnabled=!1,this.ellipsoidMode=1,this.sceneHasOcludees=!1,this._techniqueConfig=new c}dispose(){this._technique=t(this._technique),this.baseColorTexture=null,this.metallicRoughnessTexture=null,this.emissionTexture=null,this.occlusionTexture=null,this.normalTexture=null}getTechnique(e,t,r){const o=this._techniqueConfig;if(o.hasVertexColors=r.colors,o.hasNormals=r.normals,o.vertexTextureCoordinates=r.textureCoordinates,o.usePBR=this.usePBR,o.hasMetalnessAndRoughnessTexture=s(this.metallicRoughnessTexture),o.hasEmissionTexture=s(this.emissionTexture),o.hasOcclusionTexture=s(this.occlusionTexture),o.hasNormalTexture=s(this.normalTexture),o.transparencyPassType=0===t.identifier&&null!=t.transparencyPassType?t.transparencyPassType:3,o.multipassTerrainEnabled=0===t.identifier&&null!=t.multipassTerrainParams&&t.multipassTerrainParams.multipassTerrainEnabled,o.cullAboveGround=0===t.identifier&&null!=t.multipassTerrainParams&&t.multipassTerrainParams.cullAboveGround,o.ellipsoidMode=this.ellipsoidMode,this.dirty){o.componentData=this.componentParameters.type,o.cullFace=this.commonMaterialParameters.cullFace,o.doubleSidedMode=this.commonMaterialParameters.doubleSided?1:0,o.baseColorTexture=s(this.baseColorTexture),o.isSchematic=this.hasParametersFromSource&&!s(this.baseColorTexture);const e=this._computeWhichMaterialPass();o.blendingEnabled=1===e||2===e,o.alphaDiscardMode=this.alphaDiscardMode,o.integratedMeshMode=this.isIntegratedMesh?this.overlayColor?this.overlayNormal?3:2:1:0,o.polygonOffsetEnabled=this.polygonOffsetEnabled,this._setClean()}return o.slicePlaneEnabled=t.slicePlaneEnabled&&this.commonMaterialParameters.slicePlaneEnabled,1===t.identifier?(o.output=3,o.vertexDiscardMode=0):2===t.identifier?(o.output=4,o.vertexDiscardMode=0):(2===this._computeWhichMaterialPass()?o.vertexDiscardMode=t.transparent?2:1:o.vertexDiscardMode=0,o.output=T(t.subPass),1===t.subPass&&(o.sceneHasOcludees=t.sceneHasOcludees),0===t.subPass?(o.receiveAmbientOcclusion=t.ambientOcclusionEnabled,o.sceneHasOcludees=t.sceneHasOcludees,o.receiveShadows=t.shadowsEnabled,o.ssrEnabled=t.ssrParams.ssrEnabled):(o.receiveAmbientOcclusion=!1,o.receiveShadows=!1)),this._technique=e.releaseAndAcquire(p,o,this._technique),this._technique}submit(e,t){if(0===this.objectOpacity)return;const r=t.renderable.geometry,o=t.components,a=t.renderable.drawParameters,i=t.renderable.meta.cameraDepthSquared,l=o.geometryRanges,n=o.highlightRanges,h=o.defaultShadowMapRanges;switch(this._computeWhichMaterialPass()){case 0:e.materialOpaque.submitDraw(this,r,l,a,i);break;case 1:e.materialTransparent.submitDraw(this,r,l,a,i);break;case 2:e.materialOpaque.submitDraw(this,r,l,a,i),e.materialTransparent.submitDraw(this,r,l,a,i);break;case 3:e.materialIntegratedMesh.submitDraw(this,r,l,a,i),this.overlayHighlight&&e.highlightIntegratedMesh.submitDraw(this,r,l,a,i)}s(e.shadowMap)&&2!==this.componentParameters.castShadows&&e.shadowMap.submitDraw(this,r,l,a,i),s(e.highlight)&&s(n)&&e.highlight.submitDraw(this,r,n,a,i),s(e.highlightShadowMap)&&2!==this.componentParameters.castShadows&&s(n)&&e.highlightShadowMap.submitDraw(this,r,n,a,i),s(e.defaultShadowMap)&&2!==this.componentParameters.castShadows&&s(h)&&e.defaultShadowMap.submitDraw(this,r,h,a,i)}get attributeLocations(){return u}_computeWhichMaterialPass(){return this.isIntegratedMesh?3:this.objectOpacity<1?1:0===this.componentParameters.opaqueOverride?0:this.baseColor[3]<1||0===this.alphaDiscardMode||3===this.alphaDiscardMode?1:2===this.componentParameters.transparent?0:0===this.componentParameters.transparent?1:2}}e([m({vectorOps:a})],x.prototype,"baseColor",void 0),e([m()],x.prototype,"usePBR",void 0),e([m()],x.prototype,"hasParametersFromSource",void 0),e([m({vectorOps:r})],x.prototype,"mrrFactors",void 0),e([m({vectorOps:r})],x.prototype,"emissiveFactor",void 0),e([m({dispose:!0})],x.prototype,"baseColorTexture",void 0),e([m({dispose:!0})],x.prototype,"metallicRoughnessTexture",void 0),e([m({dispose:!0})],x.prototype,"emissionTexture",void 0),e([m({dispose:!0})],x.prototype,"occlusionTexture",void 0),e([m({dispose:!0})],x.prototype,"normalTexture",void 0),e([m({vectorOps:{equals:i,copy:l}})],x.prototype,"overlayTexOffset",void 0),e([m({vectorOps:{equals:i,copy:l}})],x.prototype,"overlayTexScale",void 0),e([m()],x.prototype,"overlayColor",void 0),e([m()],x.prototype,"overlayHighlight",void 0),e([m()],x.prototype,"overlayNormal",void 0),e([m()],x.prototype,"objectOpacity",void 0),e([v()],x.prototype,"commonMaterialParameters",void 0),e([v()],x.prototype,"componentParameters",void 0),e([m()],x.prototype,"alphaCutoff",void 0),e([m()],x.prototype,"alphaDiscardMode",void 0),e([m()],x.prototype,"isIntegratedMesh",void 0),e([m()],x.prototype,"polygonOffsetEnabled",void 0),e([m()],x.prototype,"ellipsoidMode",void 0),e([m()],x.prototype,"sceneHasOcludees",void 0);class g extends y{constructor(){super(...arguments),this.doubleSided=!1,this.cullFace=2,this.slicePlaneEnabled=!0}}e([m()],g.prototype,"doubleSided",void 0),e([m()],g.prototype,"cullFace",void 0),e([m()],g.prototype,"slicePlaneEnabled",void 0);class M extends y{constructor(){super(...arguments),this.externalColor=n(1,1,1,1),this.externalColorMixMode=1,this.castShadows=0}get transparent(){return this.externalColor[3]<1?0:2}get opaqueOverride(){return 3===this.externalColorMixMode&&1===this.externalColor[3]?0:2}get visible(){return this.externalColor[3]>0?0:2}get type(){return 0}}e([m({vectorOps:a})],M.prototype,"externalColor",void 0),e([m()],M.prototype,"externalColorMixMode",void 0),e([m()],M.prototype,"castShadows",void 0);class f extends y{constructor(){super(...arguments),this.texture=null,this.transparent=2,this.opaqueOverride=2,this.castShadows=2}get type(){return 1}}function T(e){switch(e){case 0:return 0;case 1:return 7;case 2:return 1;case 3:return 2;case 4:return 8}}e([m()],f.prototype,"texture",void 0),e([m()],f.prototype,"transparent",void 0),e([m()],f.prototype,"opaqueOverride",void 0),e([m()],f.prototype,"castShadows",void 0);export{g as CommonMaterialParameters,x as ComponentMaterial,M as ComponentParametersUniform,f as ComponentParametersVarying};
