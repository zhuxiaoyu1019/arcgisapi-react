/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../../core/Logger.js";import{isSome as t,isNone as o,applySome as r,unwrap as n}from"../../../../../core/maybe.js";import{e as i,t as s,g as a}from"../../../../../chunks/mat3.js";import{a as c,c as m}from"../../../../../chunks/mat3f32.js";import{h as l,w as p,t as h,g as f}from"../../../../../chunks/vec3.js";import{c as u}from"../../../../../chunks/vec3f64.js";import{c as g}from"../../../../../chunks/vec4.js";import{c as b}from"../../../../../chunks/vec4f32.js";import{encodeSymbolColor as d}from"../../../layers/support/symbolColorUtils.js";import{clone as y}from"../../../support/orientedBoundingBox.js";import{glLayout as C}from"../../../support/buffer/glUtil.js";import{newLayout as j}from"../../../support/buffer/InterleavedLayout.js";import w from"./ComponentData.js";import M from"./ComponentObject.js";import{VISIBLE_BIT as x,isVaryingComponentParameters as _}from"./interface.js";import S from"./IntersectionGeometry.js";import{Renderable as v}from"./Renderable.js";import{RenderGeometry as D}from"./RenderGeometry.js";import{RenderSubmitSystem as P}from"./RenderSubmitSystem.js";import{createVertexBufferLayout as k}from"./SourceGeometry.js";import{ComponentParametersVarying as O,ComponentParametersUniform as B,ComponentMaterial as G}from"./Material/ComponentMaterial.js";import{ComponentDrawParameters as I}from"./Material/ComponentTechnique.js";import{BucketedObjectStore as U}from"../../core/util/BucketedObjectStore.js";import{TwoVectorPosition as A}from"../../core/util/TwoVectorPosition.js";import{getVisibility as R,updateVisibilityWithCount as E}from"../../lib/ComponentUtils.js";import{assert as T}from"../../lib/Util.js";import{BufferManager as V}from"../../lib/TextureBackedBuffer/BufferManager.js";import L from"../../../../webgl/BufferObject.js";import q from"../../../../webgl/VertexArrayObject.js";const F=e.getLogger("esri.views.3d.webgl-engine.collections.Component.ComponentObjectCollection");class H{constructor(e){this._renderManager=e,this._objects=new U,this._renderSubmit=new P(this),this._renderManager.register(this._renderSubmit),this._componentBufferManager=new V(e.rctx)}dispose(){T(0===this._objects.count,"ObjectCollection should be empty upon disposal"),this._componentBufferManager.destroy()}createObject(e){const t=new M;return t.toMapSpace=e.toMapSpace.slice(),t.transform=e.transform,t.obb=y(e.obb),t.components=new w(this._componentBufferManager,e.geometry.componentOffsets),t.renderable=this._createRenderable(e,t.components),t.intersectionGeometry=new S(e.geometry.positionData,t.components),this._objects.add(e.visible?x:0,t),t}destroyObject(e){const t=e;this._objects.remove(t),t.dispose(),this._notifyDirty()}setObjectVisibility(e,t){const o=e;if(t!==o.visible){const e=t?o.bucketKey|x:o.bucketKey&~x;this._objects.updateKey(o,e),this._notifyDirty()}}preSubmit(e){const t=e.camera.eye;this._objects.forEach(((e,o)=>{o&x&&e.forEach((e=>{const o=l(t,e.obb.center);e.renderable.meta.cameraDepthSquared=o}))}))}getMaterial(e){return e.renderable.material}updateMaterial(e,t){const o=e.renderable.material;t(o),o.dirty&&this._notifyDirty()}setAllComponentVisibilities(e,t){const o=e;o.components.visibility.reset(t),o.components.visibilityDirty(),this._notifyDirty()}forEachVisibleComponent(e,t){return e.components.visibility.forEachComponent(t)}getComponentCount(e){const t=e,o=t.components.visibility.componentCount();return{visible:o,invisible:t.components.count-o}}setComponentData(e,t){const o=e,r=o.renderable.material;if(_(t)){const e=o.components,n=e.materialDataBuffer,i=e.materialDataIndices,s={castShadows:!0,pickable:!0,externalColor:b(),externalColorMixMode:1},a=n.textureBuffer,c=new Uint8Array(4),m=new Uint32Array(c.buffer);let l=0,p=0,h=0,f=!1,u=0;for(let o=0;o<e.count;o++)t(o,s),l+=+(s.externalColor[3]<1),p+=+(3===s.externalColorMixMode&&1===s.externalColor[3]),h+=+s.castShadows,d(s.externalColor,s.externalColorMixMode,c),c[2]=254&c[2]|+s.castShadows,a.setData(i[o],0,c[0],c[1],c[2],c[3]),f=f||o>0&&u!==m[0],u=m[0],s.pickable!==R(e.pickability,o)&&(e.pickability=E(e.pickability,e.count,o,s.pickable));f?(r.componentParameters=new O,r.componentParameters.castShadows=K(h,e.count),r.componentParameters.transparent=K(l,e.count),r.componentParameters.opaqueOverride=K(p,e.count),r.componentParameters.texture=a,a.updateTexture()):(r.componentParameters=new B,r.componentParameters.castShadows=s.castShadows?0:2,r.componentParameters.externalColor=s.externalColor,r.componentParameters.externalColorMixMode=s.externalColorMixMode)}else r.componentParameters=new B,r.componentParameters.castShadows=t.castShadows?0:2,r.componentParameters.externalColor=t.externalColor,r.componentParameters.externalColorMixMode=t.externalColorMixMode;this._notifyDirty()}getComponentAabb(e,t,o){return e.intersectionGeometry.getComponentAabb(t,o)}getComponentObb(e){return e.obb}getObjectTransform(e){return e.transform}getComponentPositions(e,t,o){return e.intersectionGeometry.getComponentPositions(t,o)}intersect(e,o,r,n,a,c){const m=e;t(a)&&(a.localOrigin=m.transform.position);const l=i(N,m.transform.rotationScale);p(J,o,m.transform.position),p(Q,r,m.transform.position),h(J,J,l),h(Q,Q,l);const f=s(N,l);return m.intersectionGeometry.intersect(J,Q,n,f,a,c)}addEdges(e,t,o,r){const n=e,{indices:i,positions:s}=n.intersectionGeometry,a=n.components.offsets;return t.addComponentObject(e,n.transform,n.obb.center,s,i,a,o,r)}addComponentHighlight(e,t){const r=e.components;o(r.highlightCounts)&&(r.highlightCounts=new Uint32Array(r.count+1));0===r.highlightCounts[t]++&&(r.highlightsDirty(),this._notifyDirty()),r.highlightCounts[r.count]++}removeComponentHighlight(e,t){const r=e.components;if(o(r.highlightCounts))return void F.warn("Removing non-existing highlight.");const n=r.highlightCounts[t],i=r.highlightCounts[r.count];if(0!==n){if(n>1)return r.highlightCounts[t]=n-1,void(r.highlightCounts[r.count]=i-1);r.highlightCounts[t]=0,r.highlightsDirty(),this._notifyDirty(),1===i?r.highlightCounts=null:r.highlightCounts[r.count]=i-1}else F.warn("Removing non-existing highlight.")}clearHighlights(e){const o=e.components;t(o.highlightCounts)&&(o.highlightCounts=null,o.highlightsDirty(),this._notifyDirty())}getObjectGPUMemoryUsage(e){return e.renderable.meta.gpuMemoryEstimate}get visibleObjects(){return this._objects.getBucket(x)}get performanceInfo(){const e=this._objects.getPerformanceInfo(x);return{shown:e.added,hidden:e.removed}}_createRenderable(e,o){const m=this._renderManager.rctx,l=e.geometry,p=l.vertices.layoutParameters,h=L.createVertex(m,35044,l.vertices.data),u=r(l.indices,(e=>L.createIndex(m,35044,e))),b=C(k(p)),d=new Uint16Array(l.vertices.count);for(let r=0;r<o.count;r++){const e=o.offsets[r],n=o.offsets[r+1],i=o.materialDataIndices[r];if(t(l.indices))for(let t=e;t<n;t++){d[l.indices[t]]=i}else for(let t=e;t<n;t++)d[t]=i}const y=L.createVertex(m,35044,d.buffer),j=new A(e.transform.position),w=c(e.transform.rotationScale);i(w,w),s(w,w);const M=new I;f(M.worldFromModel_TL,j.low),f(M.worldFromModel_TH,j.high),a(M.worldFromModel_RS,e.transform.rotationScale),a(M.transformNormal_GlobalFromModel,w),g(M.toMapSpace,e.toMapSpace);const x=new G,_=new q(m,x.attributeLocations,{data:b,componentIndices:z},{data:h,componentIndices:y},n(u)),S=new D(_,4,p,t(u)),P={cameraDepthSquared:.5,gpuMemoryEstimate:h.byteSize+y.byteSize+(t(u)?u.byteSize:0)};return new v(x,M,S,P)}_notifyDirty(){this._renderManager.notifyDirty()}}const z=C(j().u16("componentIndex"));function K(e,t){return e===t?0:0===e?2:1}const N=m(),J=u(),Q=u();export{H as ComponentObjectCollection};
