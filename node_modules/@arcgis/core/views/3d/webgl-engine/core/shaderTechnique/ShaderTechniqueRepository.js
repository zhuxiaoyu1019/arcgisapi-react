/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{isSome as e,isNone as t}from"../../../../../core/maybe.js";class r{constructor(e){this.technique=e,this.refCount=0,this.refZeroFrame=0}}class s{constructor(e){this._context=e,this._perConstructorInstances=new Map,this._frameCounter=0,this._keepAliveFrameCount=1200}get viewingMode(){return this._context.viewingMode}get constructionContext(){return this._context}dispose(){this._perConstructorInstances.forEach((e=>e.forEach((e=>e.technique.dispose())))),this._perConstructorInstances.clear()}acquire(e,t){const s=t.key;let n=this._perConstructorInstances.get(e);n||(n=new Map,this._perConstructorInstances.set(e,n));let o=n.get(s);if(void 0===o){const c=new e(this._context,t,(()=>this.release(c)));o=new r(c),n.set(s,o)}return++o.refCount,o.technique}releaseAndAcquire(t,r,s){if(e(s)){if(r.key===s.key)return s;s.release()}return this.acquire(t,r)}release(e){if(t(e))return;const r=this._perConstructorInstances.get(e.constructor).get(e.key);--r.refCount,0===r.refCount&&(r.refZeroFrame=this._frameCounter)}frameUpdate(){this._frameCounter++,this._perConstructorInstances.forEach(((e,t)=>{e.forEach(((t,r)=>{0===t.refCount&&t.refZeroFrame+this._keepAliveFrameCount<this._frameCounter&&(t.technique.dispose(),e.delete(r))})),0===e.size&&this._perConstructorInstances.delete(t)}))}async hotReload(){const e=new Array;this._perConstructorInstances.forEach(((t,r)=>{const s=async(e,t)=>{const r=t.shader;r&&(await r.reload(),e.forEach((e=>{e.technique.reload(this._context)})))};e.push(s(t,r))})),await Promise.all(e)}}export{s as ShaderTechniqueRepository};
