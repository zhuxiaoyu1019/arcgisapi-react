/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{disposeMaybe as e,isSome as i}from"../../../../core/maybe.js";import{c as t}from"../../../../chunks/vec4.js";import{f as r}from"../../../../chunks/vec4f32.js";import{c as o}from"../../../../chunks/vec4f64.js";import a from"../../support/debugFlags.js";import{Default3D as s}from"./DefaultVertexAttributeLocations.js";import{Pos2Tex as l}from"./DefaultVertexBufferLayouts.js";import{createQuadVAO as h}from"./glUtil3D.js";import{HighlightCompositionTechniqueConfiguration as p,HighlightCompositionTechnique as c}from"../shaders/HighlightTechnique.js";import g from"../../../webgl/BufferObject.js";import u from"../../../webgl/FramebufferObject.js";import{vertexCount as m}from"../../../webgl/Util.js";import n from"../../../webgl/VertexArrayObject.js";const d=32;class b{constructor(e,i){this._techniqueRep=e,this._rctx=i,this.viewportToRestore=o(),this.defaultOptions={color:r(1,0,1,1),haloColor:r(1,0,1,1),haloOpacity:1,fillOpacity:.2,haloOpacityOccluded:.25,fillOpacityOccluded:.05,shadowColor:r(1,0,1,1),shadowOpacity:.15,occludedShadowOpacity:.075},this._grid={coverageMipmap:null,vao:null,verticalCellCount:0,horizontalCellCount:0,cellPixelSize:0,mipmapLevels:0,viewportWidth:0,viewportHeight:0}}assertResources(){if(this.quadVAO)return;this.quadVAO=h(this._rctx);const e={colorTarget:0,depthStencilTarget:0,width:0,height:0},i={target:3553,pixelFormat:6408,dataType:5121,samplingMode:9729,wrapMode:33071,width:0,height:0};this.blur0Fbo=new u(this._rctx,e,i),this.blur1Fbo=new u(this._rctx,e,i);const t=new p;t.highlightStage=0,t.gridOptimization=!1,this.blurTechnique=this._techniqueRep.acquire(c,t),t.highlightStage=0,t.gridOptimization=!0,this.blurGridTechnique=this._techniqueRep.acquire(c,t),t.highlightStage=1,t.gridOptimization=!1,this.applyTechnique=this._techniqueRep.acquire(c,t),t.highlightStage=1,t.gridOptimization=!0,this.applyGridTechnique=this._techniqueRep.acquire(c,t),t.highlightStage=2,t.gridOptimization=!1,this.downsampleTechnique=this._techniqueRep.acquire(c,t)}dispose(){if(this._grid.coverageMipmap)for(let e=1;e<this._grid.coverageMipmap.length;e++)this._grid.coverageMipmap[e].dispose();this._grid.vao&&this._grid.vao.dispose(!0),this.quadVAO&&(this.quadVAO.dispose(!0),this.quadVAO=null),this.blur0Fbo=e(this.blur0Fbo),this.blur1Fbo=e(this.blur1Fbo)}get profilingCallback(){return a.HIGHLIGHTS_PROFILE_TO_CONSOLE?e=>console.log(e):null}setDefaultOptions(e){this.defaultOptions=e}render(e,i,r){const o=e.pixelRatio,s=a.HIGHLIGHTS_GRID_OPTIMIZATION_ENABLED,l=this._rctx;this.assertResources(),t(this.viewportToRestore,e.fullViewport);const h=e.fullWidth,p=e.fullHeight,c=Math.ceil(h/o),g=Math.ceil(p/o);this.blur0Fbo.resize(c,g),this.blur1Fbo.resize(c,g),l.bindVAO(this.quadVAO);let u=null;const n=s?this.blurGridTechnique:this.blurTechnique;n.bindPipelineState(l),l.useProgram(n.program),s?(this._gridUpdateResources(i,d),this._gridComputeMipmap(),u=this._grid.vao,n.program.bindTexture(this._grid.coverageMipmap[this._grid.mipmapLevels].colorTexture,"coverageTex")):u=this.quadVAO,l.bindVAO(u),l.bindFramebuffer(this.blur0Fbo),l.setViewport(0,0,c,g),l.setClearColor(0,0,0,0),l.clear(16384),n.program.bindTexture(i.colorTexture,"tex"),n.program.setUniform2f("blurSize",1/c,0),l.drawArrays(n.primitiveType,0,m(u,"geometry")),l.bindFramebuffer(this.blur1Fbo),l.clear(16384),n.program.bindTexture(this.blur0Fbo.colorTexture,"tex"),n.program.setUniform2f("blurSize",0,1/g),l.drawArrays(n.primitiveType,0,m(u,"geometry"));const b=s?this.applyGridTechnique:this.applyTechnique;if(l.bindFramebuffer(r),b.bindPipelineState(l),l.setViewport(this.viewportToRestore[0],this.viewportToRestore[1],this.viewportToRestore[2],this.viewportToRestore[3]),l.useProgram(b.program),b.program.bindTexture(this.blur1Fbo.colorTexture,"tex"),b.program.bindTexture(i.colorTexture,"origin"),s){const e=this._grid.coverageMipmap[this._grid.mipmapLevels].colorTexture;b.program.bindTexture(e,"coverageTex")}b.bindApplyPass(this.defaultOptions),l.drawArrays(b.primitiveType,0,m(u,"geometry")),l.bindVAO(null)}_gridUpdateResources(e,i){const t=this._rctx,r=this._grid;let o=!1;if(null===r.coverageMipmap&&(r.coverageMipmap=[e],o=!0),r.viewportWidth===e.width&&r.viewportHeight===e.height||(o=!0,r.viewportWidth=e.width,r.viewportHeight=e.height),r.coverageMipmap[0]=e,r.cellPixelSize!==i&&(r.cellPixelSize=i,o=!0),o){for(let e=1;e<r.coverageMipmap.length;e++)r.coverageMipmap[e].dispose();r.mipmapLevels=Math.ceil(Math.log(r.cellPixelSize)*Math.LOG2E),r.coverageMipmap.length=r.mipmapLevels+1;for(let e=0;e<r.mipmapLevels;e++){const i=r.coverageMipmap[e],o={target:3553,pixelFormat:6407,dataType:33635,samplingMode:9729,wrapMode:33071,width:Math.ceil(i.width/2),height:Math.ceil(i.height/2)},a={colorTarget:0,depthStencilTarget:0,width:Math.ceil(i.width/2),height:Math.ceil(i.height/2)};r.coverageMipmap[e+1]=new u(t,a,o)}}const a=Math.ceil(e.height/r.cellPixelSize),h=Math.ceil(e.width/r.cellPixelSize);if(!r.vao||r.verticalCellCount!==a||r.horizontalCellCount!==h){r.verticalCellCount=a,r.horizontalCellCount=h;const e=a+1,i=h+1,o=1/a,p=1/h,c=6,u=4,m=new Float32Array(c*u*e*i);let d=0;for(let t=0;t<e;t++)for(let e=0;e<i;e++)m[d+0]=(e-.5)*p*2-1,m[d+1]=(t-.5)*o*2-1,m[d+2]=e*p,m[d+3]=t*o,m[d+4]=(e+.5)*p*2-1,m[d+5]=(t-.5)*o*2-1,m[d+6]=e*p,m[d+7]=t*o,m[d+8]=(e-.5)*p*2-1,m[d+9]=(t+.5)*o*2-1,m[d+10]=e*p,m[d+11]=t*o,m[d+12]=(e-.5)*p*2-1,m[d+13]=(t+.5)*o*2-1,m[d+14]=e*p,m[d+15]=t*o,m[d+16]=(e+.5)*p*2-1,m[d+17]=(t-.5)*o*2-1,m[d+18]=e*p,m[d+19]=t*o,m[d+20]=(e+.5)*p*2-1,m[d+21]=(t+.5)*o*2-1,m[d+22]=e*p,m[d+23]=t*o,d+=c*u;r.vao&&r.vao.dispose(!0),r.vao=new n(t,s,{geometry:l},{geometry:g.createVertex(t,35044,m)})}}_gridComputeMipmap(){const e=this._rctx,i=this._grid,t=this.downsampleTechnique.program;this.downsampleTechnique.bindPipelineState(e),e.bindVAO(this.quadVAO),e.useProgram(t);for(let r=0;r<i.mipmapLevels;r++){e.bindFramebuffer(i.coverageMipmap[r+1]),t.bindTexture(i.coverageMipmap[r].colorTexture,"tex");const o=i.coverageMipmap[r+1].width,a=i.coverageMipmap[r+1].height;t.setUniform2f("invFramebufferDim",1/o,1/a),e.setViewport(0,0,o,a),e.drawArrays(5,0,m(this.quadVAO,"geometry"))}}getGpuMemoryUsage(){let e=(i(this.blur0Fbo)?this.blur0Fbo.gpuMemoryUsage:0)+(i(this.blur1Fbo)?this.blur1Fbo.gpuMemoryUsage:0);if(this._grid.coverageMipmap)for(const i of this._grid.coverageMipmap)e+=i.gpuMemoryUsage;return e}get test(){return{coverage:this._grid.coverageMipmap,blur:[this.blur0Fbo,this.blur1Fbo]}}}export default b;
