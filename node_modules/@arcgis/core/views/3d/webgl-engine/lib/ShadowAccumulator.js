/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{equals as e}from"../../../../core/arrayUtils.js";import t from"../../../../core/Handles.js";import{smoothstep as i}from"../../../../core/mathUtils.js";import{isNone as s,disposeMaybe as r}from"../../../../core/maybe.js";import{reactionInit as a}from"../../../../core/accessorSupport/trackingUtils.js";import{t as o,a as n}from"../../../../chunks/mat4.js";import{c as h}from"../../../../chunks/mat4f64.js";import{a as c}from"../../../../chunks/vec2f64.js";import{z as _,g as u}from"../../../../chunks/vec3.js";import{c as m}from"../../../../chunks/vec3f64.js";import{c as l}from"../../../../chunks/vec4f64.js";import"../../../webgl/BufferObject.js";import d from"../../../webgl/FramebufferObject.js";import"../../../../core/has.js";import"../../../webgl/enums.js";import"../../../webgl/RenderingContext.js";import"../../../../chunks/builtins.js";import"../../../webgl/Texture.js";import"../../../webgl/VertexArrayObject.js";import p from"./Camera.js";import{ZERO as g}from"./depthRange.js";import{createQuadVAO as w}from"./glUtil3D.js";import{ShadowAccumulationRenderer as f,shadowAccumulationDisabledElevationThreshold as v,shadowAccumulationDisableElevationMax as b,shadowAccumulationDisableElevationMin as j}from"./ShadowAccumulationRenderer.js";import S from"./ShadowMap.js";import{inverseProjectionInfo as C}from"./Util.js";import{s as x}from"../../../../chunks/ShadowAccumulation.glsl.js";import{ShadowAccumulationTechniqueConfiguration as A,ShadowAccumulationTechnique as F}from"../shaders/ShadowAccumulationTechnique.js";import{TaskPriority as R}from"../../../support/Scheduler.js";import{vertexCount as T}from"../../../webgl/Util.js";class M{constructor(e,i,r,o,n,_){this._rctx=e,this._stage=r,this._prepareForShadowMapPass=o,this._renderToShadowMap=n,this._requestRender=_,this._progress=0,this._sampleCount=0,this._cachedCamera=new p,this._contentCamera=new p,this._enabled=!1,this._cachedLightDirections=[],this._depthRange=g,this._previewing=!1,this._handles=new t,this._cameraForcedForScreenshot=!1,this._shadowMap=new S(e,r.viewingMode),this._shadowMap.enabled=!0,this._vao=w(e);const u={rctx:e,viewingMode:r.viewingMode},m=new A;m.pass=0,this._accumulationTechnique=new F(u,m);const v={colorTarget:0,depthStencilTarget:0,width:0,height:0},b={target:3553,pixelFormat:6408,dataType:5121,samplingMode:9729,wrapMode:33071,width:0,height:0};this._fbo=new d(e,v,b),this._accumulationParams={camera:this._cachedCamera,linearDepthTexture:null,shadowMap:this._shadowMap,inverseView:h(),projInfo:l(),zScale:c()},this._accumulationRenderer=new f(i,e,this,_);const j=this._stage.resourceController.scheduler;this._handles.add(j.registerTask(R.SHADOW_ACCUMULATOR,this)),this._handles.add(a((()=>r.renderView),(e=>{this._handles.remove(M.renderViewHandleKey),s(e)||this._handles.add(e.events.on("force-camera-for-screenshot",(()=>this._cameraForcedForScreenshot=!0)),M.renderViewHandleKey)})))}get computedSamples(){return this._progress}get accumulationTexture(){return this._fbo.colorTexture}get running(){return this._isRefining&&this._canAccumulate}get isAccumulating(){return this._isPreviewing||this._isRefining}get _isRefining(){return this._isActive&&!this._isDoneAccumulating&&!this._previewing}get _isPreviewing(){return this._isActive&&this._previewing}get _isActive(){return this._enabled&&this._sampleCount>0}get _canAccumulate(){return null!==this._accumulationParams.linearDepthTexture&&this._depthRange!==g&&this._opacityFromElevation>v}get _isDoneAccumulating(){return this._progress>=this._sampleCount}get _lightDirections(){return this._cachedLightDirections}set _lightDirections(t){const i=this._cachedLightDirections;if(e(i,t,_))return;const s=t.length;i.length=s,this._sampleCount=Math.min(x,s);for(let e=0;e<s;++e){const s=t[e],r=i[e]||m();u(r,s),i[e]=r}this._invalidate()}get _projInfo(){return this._accumulationParams.projInfo}get _zScale(){return this._accumulationParams.zScale}get _inverseView(){return this._accumulationParams.inverseView}get _opacityFromElevation(){return this._accumulationRenderer.opacityFromElevation}set _opacityFromElevation(e){this._accumulationRenderer.opacityFromElevation=e}runTask(e){for(this._prepareForShadowMapPass(this._cachedCamera,this._contentCamera);!e.done&&!this._isDoneAccumulating;)this._accumulateShadow(),e.madeProgress();this._requestRender()}accumulateFixedSamples(){if(!this.isAccumulating||!this._canAccumulate)return;(this._previewing||0===this._progress||this._cameraForcedForScreenshot)&&this._clear();const e=this._cameraForcedForScreenshot?this._sampleCount:Math.min(M.previewSamples,this._sampleCount-this._progress);for(let t=0;t<e;++t)this._accumulateShadow();this._cameraForcedForScreenshot=!1}render(){this._accumulationRenderer.render()}dispose(){this._stop(),this._handles.destroy(),this._accumulationRenderer=r(this._accumulationRenderer),this._shadowMap=r(this._shadowMap),this._fbo=r(this._fbo),this._vao=r(this._vao),this._accumulationTechnique=r(this._accumulationTechnique),this._cachedLightDirections.length=0,this._sampleCount=0}setOptions(e){void 0!==e.enabled&&this._setEnabled(e.enabled),void 0!==e.previewing&&this.setPreviewing(e.previewing),void 0!==e.lightDirections&&this.setLightDirections(e.lightDirections),this._accumulationRenderer.setOptions(e)}setPreviewing(e){this._previewing!==e&&(this._previewing=e,this._requestRenderIfEnabled())}setLightDirections(e){this._lightDirections=e}setAccumulationDependencies(e,t,i,s){this._accumulationParams.linearDepthTexture=e,this._depthRange=t,this._updateCamera(i),this._contentCamera=s}readAccumulatedShadow(e,t){if(!this._isActive||this._progress<1||e<0||e>this._fbo.width||t<0||t>this._fbo.height)return 0;const i=D;return this._fbo.readPixels(e,t,1,1,6408,5121,i),i[0]/this._progress}_start(){this._progress=0,this._enabled=!0}_stop(){this._enabled=!1}_invalidate(){this._progress=0,this._requestRenderIfEnabled()}_clear(){this._rctx.bindFramebuffer(this._fbo),this._rctx.setClearColor(0,0,0,0),this._rctx.clearSafe(16384),this._progress=0}_accumulateShadow(){const e=this._lightDirections[this._progress],t=this._cachedCamera;this._renderToShadowMap(this._shadowMap,e,t,this._depthRange),this._rctx.bindFramebuffer(this._fbo),this._rctx.useProgram(this._accumulationTechnique.program),this._accumulationTechnique.bindPipelineState(this._rctx),this._accumulationTechnique.bindPass(this._accumulationParams),this._rctx.bindVAO(this._vao),this._rctx.drawArrays(this._accumulationTechnique.primitiveType,0,T(this._vao,"geometry")),this._progress++}_updateCamera(e){if(e.equals(this._cachedCamera))return;const{fullWidth:t,fullHeight:s,projectionMatrix:r,viewMatrix:a,center:h}=e;this._cachedCamera.copyFrom(e),this._fbo.resize(t,s),C(r,t,s,this._projInfo,this._zScale),o(this._inverseView,a,h),n(this._inverseView,this._inverseView),this._opacityFromElevation=1-i(j,b,e.relativeElevation)}_setEnabled(e){e!==this._enabled&&(e?this._start():this._stop())}_requestRenderIfEnabled(){this._enabled&&this._requestRender()}}M.previewSamples=6,M.renderViewHandleKey="renderView";const D=new Uint8Array(4);export{M as ShadowAccumulator};
