/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{clamp as t}from"../../../../core/mathUtils.js";import{i as n}from"../../../../chunks/mat4.js";import{s as r}from"../../../../chunks/vec2.js";import{a as o}from"../../../../chunks/vec2f64.js";import{c as a}from"../../../../chunks/vec3f64.js";import{t as u}from"../../../../chunks/vec4.js";import{c}from"../../../../chunks/vec4f64.js";const s=c();class e{constructor(t){this.message=t}toString(){return`AssertException: ${this.message}`}}function i(t,n){if(!t){n=n||"assert";const t=new Error(n);throw t.stack&&console.log(t.stack),new e(n)}}function f(t,n){t||(n=n||"",console.warn("Verify failed: "+n+"\n"+new Error("verify").stack))}function h(n){return t(Math.round(32767*n),-32767,32767)}function M(t,n){const r=Math.abs(t[0]),o=Math.abs(t[1]),a=1/(r+o+Math.abs(t[2])),u=r*a,c=o*a,s=Math.min(t[2]*a,0);n[0]=(t[0]<0?-1:1)*(u-s),n[1]=(t[1]<0?-1:1)*(c-s)}function l(t,n){return void 0===t?n:t}function m(t){return[((t=Math.floor(t))>>16&255)/255,(t>>8&255)/255,(255&t)/255]}function g(n){return"0x"+((t(Math.round(255*n[0]),0,255)<<16)+(t(Math.round(255*n[1]),0,255)<<8)+t(Math.round(255*n[2]),0,255)).toString(16)}function p(t){const n=t.toString(16);return"00000000".substr(0,8-n.length)+n}function k(t,n,r,o,u,c,s,e,i=a()){const f=1e-5,h=o[s]-r[c],M=o[s+1]-r[c+1],l=o[s+2]-r[c+2],m=u[e]-r[c],g=u[e+1]-r[c+1],p=u[e+2]-r[c+2],k=n[1]*p-g*n[2],d=n[2]*m-p*n[0],j=n[0]*g-m*n[1],v=h*k+M*d+l*j;if(v>-f&&v<f)return!1;const w=1/v,b=t[0]-r[c],q=t[1]-r[c+1],x=t[2]-r[c+2];if(i[1]=w*(b*k+q*d+x*j),i[1]<0||i[1]>1)return!1;const y=q*l-M*x,E=x*h-l*b,S=b*M-h*q;return i[2]=w*(n[0]*y+n[1]*E+n[2]*S),!(i[2]<0||i[1]+i[2]>1)&&(i[0]=w*(m*y+g*E+p*S),!0)}function d(t,n,r,o){let a,u=(r[0]-t[0])/n[0],c=(o[0]-t[0])/n[0];u>c&&(a=u,u=c,c=a);let s=(r[1]-t[1])/n[1],e=(o[1]-t[1])/n[1];if(s>e&&(a=s,s=e,e=a),u>e||s>c)return!1;s>u&&(u=s),e<c&&(c=e);let i=(r[2]-t[2])/n[2],f=(o[2]-t[2])/n[2];return i>f&&(a=i,i=f,f=a),!(u>f||i>c)&&(f<c&&(c=f),!(c<0))}function j(t,n,r,a,u,c=o()){const s=(a[u]-r[u])*(n[0]-t[0])-(a[0]-r[0])*(n[u]-t[u]),e=(a[0]-r[0])*(t[u]-r[u])-(a[u]-r[u])*(t[0]-r[0]);if(0===s)return!1;const i=e/s;return c[0]=t[0]+i*(n[0]-t[0]),c[1]=t[u]+i*(n[u]-t[u]),!0}function v(t,n,r,o,a){a||(a=t),s[0]=t[0],s[1]=t[1],s[2]=t[2],s[3]=1,u(s,s,n),a.length>2&&(a[2]=-s[2]),u(s,s,r),i(0!==s[3]),a[0]=s[0]/s[3],a[1]=s[1]/s[3],a[2]=s[2]/s[3],a[0]=(.5*a[0]+.5)*o[2]+o[0],a[1]=(.5*a[1]+.5)*o[3]+o[1]}function w(t){for(const n in t)return n}function b(t){for(const n in t)return!1;return!0}function q(t,n){return Math.log(t)/Math.log(n)}function x(t,n){t[12]=n[0],t[13]=n[1],t[14]=n[2]}function y(t,n,r,o){t[12]=n,t[13]=r,t[14]=o}function E(t,n=a()){return n[0]=t[12],n[1]=t[13],n[2]=t[14],n}function S(t,r){return x(t=n(t),r),t}function A(t){return 1===t[0]&&0===t[1]&&0===t[2]&&0===t[3]&&0===t[4]&&1===t[5]&&0===t[6]&&0===t[7]&&0===t[8]&&0===t[9]&&1===t[10]&&0===t[11]&&1===t[15]}function U(t,n,r){return 2*Math.atan(r*Math.tan(.5*t)/n)}function C(t,n,r){return 2*Math.atan(n*Math.tan(.5*t)/r)}function V(t,n,r){return 2*Math.atan(Math.sqrt(n*n+r*r)*Math.tan(.5*t)/n)}function $(t,n,r){return 2*Math.atan(Math.sqrt(n*n+r*r)*Math.tan(.5*t)/r)}function z(t,n,r){return 2*Math.atan(n*Math.tan(.5*t)/Math.sqrt(n*n+r*r))}function B(t,n,r){return 2*Math.atan(r*Math.tan(.5*t)/Math.sqrt(n*n+r*r))}function D(n,r,o=0){const a=t(n,0,I);for(let t=0;t<4;t++)r[o+t]=Math.floor(256*J(a*G[t]))}function F(t,n=0){let r=0;for(let o=0;o<4;o++)r+=t[n+o]*H[o];return r}const G=[1,256,65536,16777216],H=[1/256,1/65536,1/16777216,1/4294967296],I=F(new Uint8ClampedArray([255,255,255,255]));function J(t){return t-Math.floor(t)}function K(t,n,o,a,u){const c=t;0===t[11]?(a[0]=2/(n*c[0]),a[1]=2/(o*c[5]),a[2]=(1+c[12])/c[0],a[3]=(1+c[13])/c[5],r(u,0,1)):(a[0]=-2/(n*c[0]),a[1]=-2/(o*c[5]),a[2]=(1-c[8])/c[0],a[3]=(1-c[9])/c[5],r(u,1,0))}export{e as AssertException,i as assert,S as createTranslationMatrix,p as dec2hex,h as encodeInt16,M as encodeNormal,l as fallbackIfUndefined,z as fovd2fovx,B as fovd2fovy,V as fovx2fovd,U as fovx2fovy,$ as fovy2fovd,C as fovy2fovx,w as getFirstObjectKey,E as getMatrixTranslation,m as hex2rgb,K as inverseProjectionInfo,A as isTranslationMatrix,q as logWithBase,b as objectEmpty,D as packFloatRGBA,v as project,d as rayBoxTest,j as rayRay2D,k as rayTriangle3D,g as rgb2hex,x as setMatrixTranslation,y as setMatrixTranslation3,F as unpackFloatRGBA,f as verify};
