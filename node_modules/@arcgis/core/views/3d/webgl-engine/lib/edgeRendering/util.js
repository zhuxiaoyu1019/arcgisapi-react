/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{binaryIndexOf as t}from"../../../../../core/arrayUtils.js";import{isNone as n,isSome as r}from"../../../../../core/maybe.js";function e(t){let e=null;for(const r of t){const t=r.type;if(c(r))if(n(e))e=t;else if(e!==t)return"uber"}return r(e)?e:"solid"}function o(t){let n=0;for(const{material:r}of t)if(c(r)){if(r.color[3]*r.opacity<1)return 1;n=2}return n}function i(t){let n=0;for(const{material:r}of t)if(c(r)){switch(r.objectTransparency){case 1:case 0:return 1;case 2:if(r.opacity<1)return 1}n=2}return n}function c(t){return t.size*t.color[3]*t.opacity>0}function f(t,n,r,e){return r*(e/t)*2*Math.tan(.5*n)}function u(n,r){const e=t(n,r,!0);return-1===e?r<n[0]?0:n.length:e}function s(t,n,r){return t.length-u(t,n*r.minimumEdgeLength)}function l(t,n,r,e){for(let o=0;o<t.length;o++){const i=t[o].index,c=n[o],f=n[o+1];if(e)for(let t=c;t<f;t++){const n=e[t];r.set(n,i)}else for(let t=c;t<f;t++)r.set(t,i)}}export{s as computeEdgeCount,o as determineEdgeTransparency,i as determineObjectTransparency,e as determineRendererType,f as estimateLengthAtDistance,l as fillComponenBufferIndices};
