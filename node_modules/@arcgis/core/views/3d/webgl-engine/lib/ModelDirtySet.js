/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import{someMap as r}from"../../../../core/MapUtils.js";import{unwrapOr as o,isSome as s}from"../../../../core/maybe.js";import{NullUID as d}from"../../../../core/uid.js";import{property as i}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as c}from"../../../../core/accessorSupport/decorators/subclass.js";import{GeometryRecord as a}from"./GeometryRecord.js";import{assert as n}from"./Util.js";let m=class extends t{constructor(e){super(e),this._residentGeomRecords=new Map,this._dirtyGeomRecords=new Map,this.dirty=!1}commit(e){this.dirty=!1,this._dirtyGeomRecords.forEach(((t,r)=>this.commitLayer(r,e)))}commitLayer(e,t){const r=this._dirtyGeomRecords.get(e);r&&(r.forEach(((r,o)=>{const s=this._ensureGeomRecord(e,o);r.forEach(((e,r)=>{const d=e[0],i=e[1],c=e[2];let m=!1;if(2&i){const e=s.get(r);if(e){const r=e[1];if(4&c){const e=this.model.getObject(o);this.model.updateRenderGeometryTransformation(e,d,r)&&(m=!0)}m||t.updates.push({renderGeometry:r,updateType:c})}else n(!1,"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid update")}if(4&i||m){const e=s.get(r);e?(t.removes.push(e[1]),s.delete(r),e[0].disposed&&a.pool.release(e[0])):4===i&&n(!1,"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid remove")}if(1&i||m){const e=this.model.getObject(o),i=this.model.getRenderGeometry(e,d),c=[d,i];t.adds.push(i),s.set(r,c)}})),0===s.size&&this._residentGeomRecords.get(e).delete(o)})),0===this._residentGeomRecords.get(e).size&&this._residentGeomRecords.delete(e),this._dirtyGeomRecords.delete(e))}getResidentRenderGeometries(e,t){const r=this._residentGeomRecords.get(e);r&&r.forEach((e=>e.forEach((e=>t.push(e[1])))))}_objectStateChanged(e,t){for(const r of t.geometryRecords)this._updateOrCreateDirtyRecord(t,r,null,2,0,0,2,5,e)}visibilityChanged(e){this._objectStateChanged(1,e)}highlightChanged(e){this._objectStateChanged(8,e)}occlusionChanged(e){this._objectStateChanged(16,e)}vertexAttrsUpdated(e){this._updateOrCreateDirtyRecord(e.object,e.record,null,2,0,0,2,5,2)}layerAdded(e){e.objects.forAll((t=>this._layerObjectAdded(e,t)))}layerRemoved(e){e.objects.forAll((t=>this._layerObjectRemoved(e,t)))}layerObjectAdded(e){this._layerObjectAdded(e.layer,e.object)}_layerObjectAdded(e,t){const r=e.id,o=t.geometryRecords;for(let s=0;s<o.length;s++)this._objectGeometryAdded(t,o[s],r)}layerObjectRemoved(e){this._layerObjectRemoved(e.layer,e.object)}layerObjectsAdded(e){for(const t of e.objects)this._layerObjectAdded(e.layer,t)}layerObjectsRemoved(e){for(const t of e.objects)this._layerObjectRemoved(e.layer,t)}_layerObjectRemoved(e,t){const r=e.id,o=t.geometryRecords;for(let s=0;s<o.length;s++)this._objectGeometryRemoved(t,o[s],r)}shaderTransformationChanged(e){const t=this._residentGeomRecords.get(e.id);t&&t.forEach(((e,t)=>{const r=this.model.getObject(t);r&&r.hasVolativeTransformation()&&e.forEach((e=>{e[1].shaderTransformationChanged()}))}))}objectTransformation(e){const t=this._getParentLayerId(e),r=e.id;this._ensureGeomRecord(t,r).forEach((r=>{this._updateOrCreateDirtyRecord(e,r[0],t,2,0,0,2,5,4)}))}objectGeometryAdded(e){this._objectGeometryAdded(e.object,e.record)}_objectGeometryAdded(e,t,r=null){this._updateOrCreateDirtyRecord(e,t,r,1,4,0,0,0)}objectGeometryRemoved(e){this._objectGeometryRemoved(e.object,e.record)}_objectGeometryRemoved(e,t,r=null){this._updateOrCreateDirtyRecord(e,t,r,4,1,2,0,0)}_updateOrCreateDirtyRecord(e,t,r,s,d,i,c,m,h){r=o(r,this._getParentLayerId(e));const l=e.id,y=t.id,p=this._ensureDirtyRecord(r,l),R=p.get(y);if(R){const e=R[1];e&d?(p.delete(y),R[0].disposed&&a.pool.release(R[0])):e&i?(R[1]=s,R[2]=h):e&c?R[2]|=h:e&m||n(!1,"ModelDirtySet.objectGeometryAdded: inconsistent state")}else p.set(y,[t,s,h]);this.dirty=this._hasDirtyGeometryRecords}_ensureGeomRecord(e,t){let r=this._residentGeomRecords.get(e);r||(r=new Map,this._residentGeomRecords.set(e,r));let o=r.get(t);return o||(o=new Map,r.set(t,o)),o}get _hasDirtyGeometryRecords(){return r(this._dirtyGeomRecords,(e=>r(e,(e=>e&&e.size>0))))}_ensureDirtyRecord(e,t){let r=this._dirtyGeomRecords.get(e);r||(r=new Map,this._dirtyGeomRecords.set(e,r));let o=r.get(t);return o||(o=new Map,r.set(t,o)),o}_getParentLayerId(e){return s(e.parentLayer)?e.parentLayer.id:d}formatDebugInfo(){const e=["ADD","UPD",void 0,"REM"];let t="";return this._dirtyGeomRecords.forEach(((r,o)=>{r.forEach(((r,s)=>{t.length>0&&(t+="\n"),t+=o+"."+s;const d=[];r.forEach((e=>{const t=e[1];d[t]||(d[t]=[]),d[t].push(e[0].geometry.id)}));for(let o=0;o<d.length;o++)if(d[o]){t+=" "+e[o-1]+": ";for(let e=0;e<d[o].length;e++)t+=d[o][e]+", "}}))})),t}get test(){const e=this;return{get residentLayerCount(){return e._residentGeomRecords.size},get residentObjectCount(){return Array.from(e._residentGeomRecords.values()).reduce(((e,t)=>e+t.size),0)}}}};e([i({constructOnly:!0})],m.prototype,"model",void 0),e([i()],m.prototype,"dirty",void 0),m=e([c("esri.views.3d.webgl-engine.lib.ModelDirtySet")],m);var h=m;export default h;
