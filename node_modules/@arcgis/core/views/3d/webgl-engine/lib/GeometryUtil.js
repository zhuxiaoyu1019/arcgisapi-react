/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{f as t,c as e,n,a as o,b as r,d as a,s,g as i,m as l}from"../../../../chunks/vec3.js";import{f as c,c as u,a as f}from"../../../../chunks/vec3f32.js";import{c as h}from"../../../../chunks/vec3f64.js";import{create as y,fromPositionAndNormal as m,intersectRay as p}from"../../../../geometry/support/plane.js";import{wrap as g}from"../../../../geometry/support/ray.js";import{Vec3Compact as A}from"./BufferVectorMath.js";import{Geometry as d}from"./Geometry.js";import{generateDefaultIndexArray as w}from"./geometryDataUtils.js";import{assert as v}from"./Util.js";const x=A;var z,M,U,b;!function(t){const e=.5,n=[[-e,-e,e],[e,-e,e],[e,e,e],[-e,e,e],[-e,-e,-e],[e,-e,-e],[e,e,-e],[-e,e,-e]],o=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],r=[0,0,1,0,1,1,0,1],a=new Uint16Array([0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5]),s=new Uint16Array(36);for(let c=0;c<6;c++)for(let t=0;t<6;t++)s[6*c+t]=c;const i=new Uint16Array(36);for(let c=0;c<6;c++)i[6*c+0]=0,i[6*c+1]=1,i[6*c+2]=2,i[6*c+3]=2,i[6*c+4]=3,i[6*c+5]=0;function l(t){Array.isArray(t)||(t=[t,t,t]);const e=new Array(24);for(let o=0;o<8;o++)e[3*o]=n[o][0]*t[0],e[3*o+1]=n[o][1]*t[1],e[3*o+2]=n[o][2]*t[2];return new d([["position",{size:3,data:e,exclusive:!0}],["normal",{size:3,data:o}],["uv0",{size:2,data:r}]],[["position",a],["normal",s],["uv0",i]])}t.createGeometry=l}(z||(z={})),function(t){const e=.5,n=[[-e,0,-e],[e,0,-e],[e,0,e],[-e,0,e],[0,-e,0],[0,e,0]],o=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],r=new Uint16Array([5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0]),a=new Uint16Array([0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7]);function s(t){Array.isArray(t)||(t=[t,t,t]);const e=new Array(18);for(let o=0;o<6;o++)e[3*o]=n[o][0]*t[0],e[3*o+1]=n[o][1]*t[1],e[3*o+2]=n[o][2]*t[2];return new d([["position",{size:3,data:e,exclusive:!0}],["normal",{size:3,data:o}]],[["position",r],["normal",a]])}t.createGeometry=s}(M||(M={})),function(o){const r=.5,a=0,s=c(-r,a,-r),i=c(r,a,-r),l=c(0,a,r),f=c(0,a+r,0),h=u(),y=u(),m=u(),p=u(),g=u();t(h,s,f),t(y,s,i),e(m,h,y),n(m,m),t(h,i,f),t(y,i,l),e(p,h,y),n(p,p),t(h,l,f),t(y,l,s),e(g,h,y),n(g,g);const A=[s,i,l,f],w=[0,-1,0,m[0],m[1],m[2],p[0],p[1],p[2],g[0],g[1],g[2]],v=[0,1,2,3,1,0,3,2,1,3,0,2],x=[0,0,0,1,1,1,2,2,2,3,3,3];function z(t){Array.isArray(t)||(t=[t,t,t]);const e=new Array(12);for(let n=0;n<4;n++)e[3*n]=A[n][0]*t[0],e[3*n+1]=A[n][1]*t[1],e[3*n+2]=A[n][2]*t[2];return new d([["position",{size:3,data:e,exclusive:!0}],["normal",{size:3,data:w}]],[["position",new Uint16Array(v)],["normal",new Uint16Array(x)]])}o.createGeometry=z}(U||(U={})),function(A){function b(t,e,n,o={uv:!0}){const r=-Math.PI,a=2*Math.PI,s=-Math.PI/2,i=Math.PI,l=Math.max(3,Math.floor(e)),c=Math.max(2,Math.floor(n)),u=(l+1)*(c+1),f=new Float32Array(3*u),h=new Float32Array(3*u),y=new Float32Array(2*u),m=[];let p=0;for(let d=0;d<=c;d++){const e=[],n=d/c,o=s+n*i,u=Math.cos(o);for(let s=0;s<=l;s++){const i=s/l,c=r+i*a,m=Math.cos(c)*u,g=Math.sin(o),A=-Math.sin(c)*u;f[3*p]=m*t,f[3*p+1]=g*t,f[3*p+2]=A*t,h[3*p]=m,h[3*p+1]=g,h[3*p+2]=A,y[2*p]=i,y[2*p+1]=n,e.push(p),++p}m.push(e)}const g=new Uint32Array(2*l*(c-1)*3);p=0;for(let d=0;d<c;d++)for(let t=0;t<l;t++){const e=m[d][t],n=m[d][t+1],o=m[d+1][t+1],r=m[d+1][t];0===d?(g[p++]=e,g[p++]=o,g[p++]=r):d===c-1?(g[p++]=e,g[p++]=n,g[p++]=o):(g[p++]=e,g[p++]=n,g[p++]=o,g[p++]=o,g[p++]=r,g[p++]=e)}const A=[["position",g],["normal",g]],w=[["position",{size:3,data:f,exclusive:!0}],["normal",{size:3,data:h,exclusive:!0}]];return o.uv&&(w.push(["uv0",{size:2,data:y,exclusive:!0}]),A.push(["uv0",g])),o.offset&&(A[0][0]="offset",w[0][0]="offset",A.push(["position",new Uint32Array(g.length)]),w.push(["position",{size:3,data:Float64Array.from(o.offset),exclusive:!0}])),new d(w,A)}function P(t,e,n){const o=t;let r,a;if(n)r=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],a=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1]);else{const t=o*(1+Math.sqrt(5))/2;r=[-o,t,0,o,t,0,-o,-t,0,o,-t,0,0,-o,t,0,o,t,0,-o,-t,0,o,-t,t,0,-o,t,0,o,-t,0,-o,-t,0,o],a=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1])}for(let f=0;f<r.length;f+=3)x.scale(r,f,t/x.length(r,f));let s={};function i(e,n){e>n&&([e,n]=[n,e]);const o=e.toString()+"."+n.toString();if(s[o])return s[o];let a=r.length;return r.length+=3,x.add(r,3*e,r,3*n,r,a),x.scale(r,a,t/x.length(r,a)),a/=3,s[o]=a,a}for(let f=0;f<e;f++){const t=a.length,e=new Uint32Array(4*t);for(let n=0;n<t;n+=3){const t=a[n],o=a[n+1],r=a[n+2],s=i(t,o),l=i(o,r),c=i(r,t),u=4*n;e[u]=t,e[u+1]=s,e[u+2]=c,e[u+3]=o,e[u+4]=l,e[u+5]=s,e[u+6]=r,e[u+7]=c,e[u+8]=l,e[u+9]=s,e[u+10]=l,e[u+11]=c}a=e,s={}}const l=new Float32Array(r);for(let f=0;f<l.length;f+=3)x.normalize(l,f);const c=[["position",a],["normal",a]],u=[["position",{size:3,data:new Float32Array(r),exclusive:!0}],["normal",{size:3,data:l,exclusive:!0}]];return new d(u,c)}function I(t,e,n,o,r,a,s){const i=e?[e[0],e[1],e[2]]:[0,0,0],l=t?[t[0],t[1],t[2]]:[0,0,1];a=a||[0,0];const c=n?[255*n[0],255*n[1],255*n[2],n.length>3?255*n[3]:255]:[255,255,255,255],u=null!=o&&2===o.length?o:[1,1],f=[["position",{size:3,data:i,exclusive:!0}],["normal",{size:3,data:l,exclusive:!0}],["uv0",{size:a.length,data:a}],["color",{size:4,data:c,exclusive:!0}],["size",{size:2,data:u}]];if(null!=r){const t=new Float32Array([r[0],r[1],r[2],r[3]]);f.push(["auxpos1",{size:4,data:t}])}if(null!=s){const t=new Float32Array([s[0],s[1],s[2],s[3]]);f.push(["auxpos2",{size:4,data:t}])}return new d(f,null,1)}function j(t,e,n,o,r,a,s,i){if(null!=t){const{data:e}=i.getMutableAttribute("normal");e[0]=t[0],e[1]=t[1],e[2]=t[2]}if(null!=e){const{data:t}=i.getMutableAttribute("position");t[0]=e[0],t[1]=e[1],t[2]=e[2]}if(null!=n){const{data:t}=i.getMutableAttribute("color");t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3]}if(null!=o){const{data:t}=i.getMutableAttribute("size");t[0]=o[0],t[1]=o[1]}if(null!=r){const{data:t}=i.getMutableAttribute("auxpos1");t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3]}if(null!=a){const{data:t}=i.getMutableAttribute("uv0");t[0]=a[0],t[1]=a[1]}if(null!=s){const{data:t}=i.getMutableAttribute("auxpos2");t[0]=s[0],t[1]=s[1],t[2]=s[2],t[3]=s[3]}}function k(t,e){const n=new Float32Array(3*t.length),o=new Float32Array(e?3*t.length:3),r=new Uint32Array(t.length),a=new Uint32Array(t.length);for(let s=0;s<t.length;s++)n[3*s]=t[s][0],n[3*s+1]=t[s][1],n[3*s+2]=t[s][2],e&&(o[3*s]=e[s][0],o[3*s+1]=e[s][1],o[3*s+2]=e[s][2]),r[s]=s,a[s]=0;e||(o[0]=0,o[1]=1,o[2]=0);return new d([["position",{size:3,data:n,exclusive:!0}],["normal",{size:3,data:o,exclusive:!0}],["uv0",{size:2,data:[0,0],exclusive:!0}]],[["position",r],["normal",e?r:a],["uv0",a]],1)}function S(){const t=[0,0,0,0,0,100,100,0,0],e=new Uint16Array([0,1,2]),n=[0,1,0],o=new Uint16Array([0,0,0]),r=[0,0],a=new Uint16Array([0,0,0]);return new d([["position",{size:3,data:t,exclusive:!0}],["normal",{size:3,data:n,exclusive:!0}],["uv0",{size:2,data:r,exclusive:!0}]],[["position",e],["normal",o],["uv0",a]])}A.createBoxGeometry=z.createGeometry,A.createDiamondGeometry=M.createGeometry,A.createTetrahedronGeometry=U.createGeometry,A.createSphereGeometry=b,A.createPolySphereGeometry=P,A.createPointGeometry=I,A.updatePointGeometry=j,A.createPointArrayGeometry=k,A.createTriangleGeometry=S;const T=[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0]];function B(t=T){const e=new Array(12);for(let a=0;a<4;a++)for(let n=0;n<3;n++)e[3*a+n]=t[a][n];const n=new Uint32Array([0,1,2,2,3,0]),o=[0,0,1],r=new Uint32Array([0,0,0,0,0,0]);return new d([["position",{size:3,data:e,exclusive:!0}],["normal",{size:3,data:o,exclusive:!0}],["uv0",{size:2,data:[0,0,1,0,1,1,0,1],exclusive:!0}],["color",{size:4,data:[255,255,255,255],exclusive:!0}]],[["position",n],["normal",r],["uv0",n],["color",r]])}function D(t,e,n,o,r=!0,a=!0){let s=0;const i=e,l=t;let u=c(0,s,0),f=c(0,s+l,0),h=c(0,-1,0),y=c(0,1,0);o&&(s=l,f=c(0,0,0),u=c(0,s,0),h=c(0,1,0),y=c(0,-1,0));const m=[f,u],p=[h,y],g=n+2,A=Math.sqrt(l*l+i*i);if(o)for(let d=n-1;d>=0;d--){const t=d*(2*Math.PI/n),e=c(Math.cos(t)*i,s,Math.sin(t)*i);m.push(e);const o=c(l*Math.cos(t)/A,-i/A,l*Math.sin(t)/A);p.push(o)}else for(let d=0;d<n;d++){const t=d*(2*Math.PI/n),e=c(Math.cos(t)*i,s,Math.sin(t)*i);m.push(e);const o=c(l*Math.cos(t)/A,i/A,l*Math.sin(t)/A);p.push(o)}const w=new Uint32Array(2*(n+2)*3),v=new Uint32Array(2*(n+2)*3);let x=0,z=0;if(r){for(let t=3;t<m.length;t++)w[x++]=1,w[x++]=t-1,w[x++]=t,v[z++]=0,v[z++]=0,v[z++]=0;w[x++]=m.length-1,w[x++]=2,w[x++]=1,v[z++]=0,v[z++]=0,v[z++]=0}if(a){for(let t=3;t<m.length;t++)w[x++]=t,w[x++]=t-1,w[x++]=0,v[z++]=t,v[z++]=t-1,v[z++]=1;w[x++]=0,w[x++]=2,w[x++]=m.length-1,v[z++]=1,v[z++]=2,v[z++]=p.length-1}const M=new Float32Array(3*g);for(let c=0;c<g;c++)M[3*c]=m[c][0],M[3*c+1]=m[c][1],M[3*c+2]=m[c][2];const U=new Float32Array(3*g);for(let c=0;c<g;c++)U[3*c]=p[c][0],U[3*c+1]=p[c][1],U[3*c+2]=p[c][2];return new d([["position",{size:3,data:M,exclusive:!0}],["normal",{size:3,data:U,exclusive:!0}]],[["position",w],["normal",v]])}function q(t,i,l,h,y,m){const p=h?f(h):c(1,0,0),g=y?f(y):c(0,0,0);m=null==m||m;const A=u();n(A,p);const w=u();o(w,A,Math.abs(t));const v=u();o(v,w,-.5),r(v,v,g);const x=c(0,1,0);Math.abs(1-a(A,x))<.2&&s(x,0,0,1);const z=u();e(z,A,x),n(z,z),e(x,z,A);const M=2*l+(m?2:0),U=l+(m?2:0),b=new Float32Array(3*M),G=new Float32Array(3*U),F=new Float32Array(2*M),P=new Uint32Array(3*l*(m?4:2)),I=new Uint32Array(3*l*(m?4:2));m&&(b[3*(M-2)+0]=v[0],b[3*(M-2)+1]=v[1],b[3*(M-2)+2]=v[2],F[2*(M-2)]=0,F[2*(M-2)+1]=0,b[3*(M-1)+0]=b[3*(M-2)+0]+w[0],b[3*(M-1)+1]=b[3*(M-2)+1]+w[1],b[3*(M-1)+2]=b[3*(M-2)+2]+w[2],F[2*(M-1)]=1,F[2*(M-1)+1]=1,G[3*(U-2)+0]=-A[0],G[3*(U-2)+1]=-A[1],G[3*(U-2)+2]=-A[2],G[3*(U-1)+0]=A[0],G[3*(U-1)+1]=A[1],G[3*(U-1)+2]=A[2]);const j=function(t,e,n){P[t]=e,I[t]=n};let k=0;const S=u(),T=u();for(let e=0;e<l;e++){const t=e*(2*Math.PI/l);o(S,x,Math.sin(t)),o(T,z,Math.cos(t)),r(S,S,T),G[3*e+0]=S[0],G[3*e+1]=S[1],G[3*e+2]=S[2],o(S,S,i),r(S,S,v),b[3*e+0]=S[0],b[3*e+1]=S[1],b[3*e+2]=S[2],F[2*e+0]=e/l,F[2*e+1]=0,b[3*(e+l)+0]=b[3*e+0]+w[0],b[3*(e+l)+1]=b[3*e+1]+w[1],b[3*(e+l)+2]=b[3*e+2]+w[2],F[2*(e+l)+0]=e/l,F[2*e+1]=1;const n=(e+1)%l;j(k++,e,e),j(k++,e+l,e),j(k++,n,n),j(k++,n,n),j(k++,e+l,e),j(k++,n+l,n)}if(m){for(let t=0;t<l;t++){const e=(t+1)%l;j(k++,M-2,U-2),j(k++,t,U-2),j(k++,e,U-2)}for(let t=0;t<l;t++){const e=(t+1)%l;j(k++,t+l,U-1),j(k++,M-1,U-1),j(k++,e+l,U-1)}}return new d([["position",{size:3,data:b,exclusive:!0}],["normal",{size:3,data:G,exclusive:!0}],["uv0",{size:2,data:F,exclusive:!0}]],[["position",P],["normal",I],["uv0",P]])}function E(t,e,n,o,r){n=n||10,o=null==o||o,v(t.length>1);const a=[[0,0,0]],s=[],i=[];for(let l=0;l<n;l++){s.push([0,-l-1,-(l+1)%n-1]);const t=l/n*2*Math.PI;i.push([Math.cos(t)*e,Math.sin(t)*e])}return A.createPathExtrusionGeometry(i,t,a,s,o,r)}function C(a,l,f,A,w,v=c(0,0,0)){const x=a.length,z=new Float32Array(l.length*x*3+(6*f.length||0)),M=new Float32Array(l.length*x*3+(f?6:0)),U=(l.length-1)*x*6+3*A.length*2,b=new Uint32Array(U),F=new Uint32Array(U);let P=0,I=0,j=0,k=0;const S=u(),T=u(),B=u(),D=u(),q=u(),E=u(),C=u(),O=h(),V=u(),H=u(),J=u(),K=u(),N=u(),Q=y();s(V,0,1,0),t(T,l[1],l[0]),n(T,T),w?(r(O,l[0],v),n(B,O)):s(B,0,0,1),L(T,B,V,V,q,B,G),i(D,B),i(K,q);for(let t=0;t<f.length;t++)o(E,q,f[t][0]),o(O,B,f[t][2]),r(E,E,O),r(E,E,l[0]),z[P++]=E[0],z[P++]=E[1],z[P++]=E[2];M[I++]=-T[0],M[I++]=-T[1],M[I++]=-T[2];for(let t=0;t<A.length;t++)b[j++]=A[t][0]>0?A[t][0]:-A[t][0]-1+f.length,b[j++]=A[t][1]>0?A[t][1]:-A[t][1]-1+f.length,b[j++]=A[t][2]>0?A[t][2]:-A[t][2]-1+f.length,F[k++]=0,F[k++]=0,F[k++]=0;let R=f.length;const W=f.length-1;for(let s=0;s<l.length;s++){let c=!1;if(s>0){i(S,T),s<l.length-1?(t(T,l[s+1],l[s]),n(T,T)):c=!0,r(H,S,T),n(H,H),r(J,l[s-1],D),m(l[s],H,Q);p(Q,g(J,S),O)?(t(O,O,l[s]),n(B,O),e(q,H,B),n(q,q)):L(H,D,K,V,q,B,G),i(D,B),i(K,q)}w&&(r(O,l[s],v),n(N,O));for(let t=0;t<x;t++)if(o(E,q,a[t][0]),o(O,B,a[t][1]),r(E,E,O),n(C,E),M[I++]=C[0],M[I++]=C[1],M[I++]=C[2],r(E,E,l[s]),z[P++]=E[0],z[P++]=E[1],z[P++]=E[2],!c){const e=(t+1)%x;b[j++]=R+t,b[j++]=R+x+t,b[j++]=R+e,b[j++]=R+e,b[j++]=R+x+t,b[j++]=R+x+e;for(let t=0;t<6;t++)F[k++]=b[j-6+t]-W}R+=x}const X=l[l.length-1];for(let t=0;t<f.length;t++)o(E,q,f[t][0]),o(O,B,f[t][1]),r(E,E,O),r(E,E,X),z[P++]=E[0],z[P++]=E[1],z[P++]=E[2];const Y=I/3;M[I++]=T[0],M[I++]=T[1],M[I++]=T[2];const Z=R-x;for(let t=0;t<A.length;t++)b[j++]=A[t][0]>=0?R+A[t][0]:-A[t][0]-1+Z,b[j++]=A[t][2]>=0?R+A[t][2]:-A[t][2]-1+Z,b[j++]=A[t][1]>=0?R+A[t][1]:-A[t][1]-1+Z,F[k++]=Y,F[k++]=Y,F[k++]=Y;return new d([["position",{size:3,data:z,exclusive:!0}],["normal",{size:3,data:M,exclusive:!0}]],[["position",b],["normal",F]])}function O(t,e,n){v(t.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),v(3===t[0].length,"createPolylineGeometry(): malformed vertex"),v(null==e||e.length===t.length,"createPolylineGeometry: need same number of points and normals"),v(null==e||3===e[0].length,"createPolylineGeometry(): malformed normal");const o=new Float64Array(3*t.length),r=new Uint32Array(2*(t.length-1));let a=0,s=0;for(let c=0;c<t.length;c++){for(let e=0;e<3;e++)o[a++]=t[c][e];c>0&&(r[s++]=c-1,r[s++]=c)}const i=[],l=[];if(i.push(["position",r]),l.push(["position",{size:3,data:o,exclusive:!0}]),e){const n=new Float32Array(3*e.length);let o=0;for(let r=0;r<t.length;r++)for(let t=0;t<3;t++)n[o++]=e[r][t];i.push(["normal",r]),l.push(["normal",{size:3,data:n,exclusive:!0}])}return n&&(l.push(["color",{size:4,data:n}]),i.push(["color",w(n.length/4)])),new d(l,i,2)}function V(t,e,n,o,r=0){const a=new Array(18),s=[[-e,r,o/2],[n,r,o/2],[0,t+r,o/2],[-e,r,-o/2],[n,r,-o/2],[0,t+r,-o/2]],i=new Uint16Array([0,1,2,3,0,2,2,5,3,1,4,5,5,2,1,1,0,3,3,4,1,4,3,5]);for(let l=0;l<6;l++)a[3*l]=s[l][0],a[3*l+1]=s[l][1],a[3*l+2]=s[l][2];return new d([["position",{size:3,data:a,exclusive:!0}]],[["position",i]])}function H(t,e){const n=t.getMutableAttribute("position").data;for(let o=0;o<n.length;o+=3){const t=n[o],r=n[o+1],a=n[o+2];s(F,t,r,a),l(F,F,e),n[o]=F[0],n[o+1]=F[1],n[o+2]=F[2]}}function J(t,e=t){const n=t.vertexAttributes,o=n.get("position").data,r=n.get("normal").data;if(r){const t=e.getMutableAttribute("normal").data;for(let e=0;e<r.length;e+=3){const n=r[e+1];t[e+1]=-r[e+2],t[e+2]=n}}if(o){const t=e.getMutableAttribute("position").data;for(let e=0;e<o.length;e+=3){const n=o[e+1];t[e+1]=-o[e+2],t[e+2]=n}}return e}function K(t,o,r,s,i){return!(Math.abs(a(o,t))>i)&&(e(r,t,o),n(r,r),e(s,r,t),n(s,s),!0)}function L(t,e,n,o,r,a,s){return K(t,e,r,a,s)||K(t,n,r,a,s)||K(t,o,r,a,s)}A.createSquareGeometry=B,A.createConeGeometry=D,A.createCylinderGeometry=q,A.createTubeGeometry=E,A.createPathExtrusionGeometry=C,A.createPolylineGeometry=O,A.createExtrudedTriangle=V,A.transformInPlace=H,A.cgToGIS=J,A.makeOrthoBasisDirUp=K,A.makeOrthoBasisDirUpFallback=L}(b||(b={}));const G=.99619469809,F=u();var P=b;export default P;
