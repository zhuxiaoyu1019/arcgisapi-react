/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import s from"../../../../core/Accessor.js";import t from"../../../../core/Evented.js";import r from"../../../../core/Handles.js";import{clamp as i}from"../../../../core/mathUtils.js";import{isNone as o,isSome as a}from"../../../../core/maybe.js";import{createTask as n}from"../../../../core/promiseUtils.js";import{createScreenPointArray as m,createRenderScreenPointArray as u,screenPointObjectToArray as l}from"../../../../core/screenUtils.js";import{isSVG as p}from"../../../../core/urlUtils.js";import{property as c}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as h}from"../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as d}from"../../../../support/requestImageUtils.js";import"../../../webgl/BufferObject.js";import"../../../webgl/FramebufferObject.js";import"../../../webgl/enums.js";import"../../../webgl/RenderingContext.js";import"../../../../chunks/builtins.js";import g from"../../../webgl/Texture.js";import"../../../webgl/VertexArrayObject.js";import{Pos2 as f}from"./DefaultVertexBufferLayouts.js";import{createQuadVAO as _}from"./glUtil3D.js";import{Program as k}from"./Program.js";import{testWebGLDriver as v}from"./WebGLDriverTest.js";import{build as y}from"../shaders/Magnifier.glsl.js";import{loadMagnifierResources as b}from"../../../magnifier/resources.js";import{makePipelineState as T,simpleBlendingParams as j,defaultColorWriteParams as x}from"../../../webgl/renderState.js";let w=class extends s{constructor(){super(...arguments),this._handles=new r,this._magnifier=null,this._imageSources=null,this._imageLoadTask=null,this._resources=null,this.events=new t,this.attributeLocations=new Map([["position",0]]),this.tmpScreenPoint=m(),this.tmpRenderPoint=u()}get updating(){return o(this._imageSources)&&a(this._imageLoadTask)&&!this._imageLoadTask.task.finished}get magnifier(){return this._magnifier}set magnifier(e){if(e===this._magnifier)return;this._handles.removeAll(),this._magnifier=e;const s=()=>{this.updateResourceLoading(),this.events.emit("request-render")};a(this._magnifier)&&this._handles.add(this._magnifier.watch("version",s)),s()}get enabled(){return a(this._validMagnifier)}get _validMagnifier(){return a(this._magnifier)&&this._magnifier.visible&&a(this._magnifier.position)&&this._magnifier.size>0?this._magnifier:null}get factor(){return a(this._magnifier)&&this._magnifier.factor||1}dispose(){this._magnifier=null,this._handles.destroy(),a(this._imageLoadTask)&&(this._imageLoadTask.task.abort(),this._imageLoadTask=null),this.disposeResources()}render(e,s){const t=this._validMagnifier;if(o(t))return;const r=s.camera.pixelRatio,a=Math.ceil(r*t.size);if(this.updateResources(e,a),o(this._resources))return;const n=this._resources.program;e.useProgram(n);const m=this._resources.textures,u=Math.ceil(1/this.factor*a);m.input.resize(u,u);const p=s.camera.fullWidth,c=s.camera.fullHeight;l(t.position,this.tmpScreenPoint);const h=s.camera.screenToRender(this.tmpScreenPoint,this.tmpRenderPoint),d=.5*u,g=.5*u;h[0]=i(h[0],d,p-d-1),h[1]=i(h[1],g,c-g-1);const f=Math.floor(h[0]-d),_=Math.floor(h[1]-g);n.bindTexture(m.input,"textureInput"),e.gl.copyTexImage2D(m.input.descriptor.target,0,m.input.descriptor.pixelFormat,f,_,u,u,0);const k=t.offset.x*r,v=t.offset.y*r,y=(h[0]+k)/p*2-1,b=(h[1]-v)/c*2-1,T=a/p*2,j=a/c*2;e.bindVAO(this._resources.vao),n.bindTexture(m.overlay,"textureOverlay"),n.bindTexture(m.mask,"textureMask"),n.setUniform4f("drawPosition",y,b,T,j),n.setUniform1i("maskEnabled",t.maskEnabled?1:0),n.setUniform1i("overlayEnabled",t.overlayEnabled?1:0),e.setPipelineState(this._resources.pipelineState),e.drawArrays(5,0,4)}updateResourceLoading(){const e=this._validMagnifier;if(o(e))return;const s=e.maskUrl,t=e.overlayUrl;!a(this._imageLoadTask)||this._imageLoadTask.maskUrl===s&&this._imageLoadTask.overlayUrl===t||(this._imageLoadTask.task.abort(),this._imageLoadTask=null,this._imageSources=null),a(this._imageSources)||a(this._imageLoadTask)||(this._imageLoadTask={maskUrl:s,overlayUrl:t,task:n((async e=>{const r=o(s)||o(t)?b(e):null,i=a(s)?d(s,{signal:e}):r.then((e=>e.mask)),n=a(t)?d(t,{signal:e}):r.then((e=>e.overlay));this._imageSources={mask:await i,overlay:await n},this.disposeResources(),this.events.emit("request-render")}))},this._imageLoadTask.task.promise.then((()=>this.notifyChange("updating")),(()=>this.notifyChange("updating"))))}updateResources(e,s){if(!this.enabled)return void this.disposeResources();if(a(this._resources)){if(this._resources.textures.size!==s){const t=this.createTextureResources(e,s);if(o(t))return void this.disposeResources();this.disposeTextureResources(this._resources.textures),this._resources.textures=t}return}const t=this.createTextureResources(e,s);o(t)||(this._resources={textures:t,program:this.createProgram(e),vao:_(e,f,this.attributeLocations,0,1),pipelineState:T({blending:j(1,771),depthTest:null,depthWrite:null,colorWrite:x})})}disposeResources(){o(this._resources)||(this.disposeTextureResources(this._resources.textures),this._resources.program.dispose(),this._resources.vao.dispose(),this._resources=null)}disposeTextureResources(e){e.mask.dispose(),e.overlay.dispose(),e.input.dispose()}createTextureResources(e,s){if(o(this._imageSources))return null;this._imageSources.overlay.width=s,this._imageSources.overlay.height=s,this._imageSources.mask.width=s,this._imageSources.mask.height=s;const t=new g(e,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!0,preMultiplyAlpha:!p(this._imageSources.overlay.src)||!v(e).svgAlwaysPremultipliesAlpha},this._imageSources.overlay),r=new g(e,{target:3553,pixelFormat:6406,internalFormat:6406,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!0},this._imageSources.mask);return{input:new g(e,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!1}),mask:r,overlay:t,size:s}}createProgram(e){const s=y();return new k(e,s,this.attributeLocations)}};e([c()],w.prototype,"_imageSources",void 0),e([c()],w.prototype,"_imageLoadTask",void 0),e([c({readOnly:!0})],w.prototype,"updating",null),w=e([h("esri/views/3d/webgl-engine/lib/MagnifierHelper")],w);export{w as MagnifierHelper};
