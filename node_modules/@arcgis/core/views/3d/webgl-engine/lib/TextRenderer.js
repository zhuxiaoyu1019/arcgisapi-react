/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{isNone as e,isSome as t}from"../../../../core/maybe.js";class i{constructor(e,t,i=2048){this.text=e,this._parameters=t,this.maxSize=i,this._lineWidths=new Array,this._renderPixelRatio=null,this._displayWidth=null,this.key=`${this._parameters.key}--${e}`,this._lines=e.split(/\r?\n/),this._lineHeight=this.computeLineHeight()}get displayWidth(){return this._ensureTextWidth()}get displayHeight(){return this._lineHeight*this._lines.length}get renderedWidth(){return Math.round(this.displayWidth*this.renderPixelRatio)}get renderedHeight(){return Math.round(this.displayHeight*this.renderPixelRatio)}get renderedLineHeight(){return Math.round(this._lineHeight*this.renderPixelRatio)}get renderedFontSize(){return this._parameters.definition.size*this.renderPixelRatio}get renderedHaloSize(){return this._parameters.haloSize*this.renderPixelRatio}get renderPixelRatio(){if(e(this._renderPixelRatio)){const e=this._parameters.definition.pixelRatio;this.maxSize>0?this._renderPixelRatio=Math.min(e,Math.min(this.maxSize/(this.displayWidth*e),this.maxSize/(this.displayHeight*e))):this._renderPixelRatio=e}return this._renderPixelRatio}getLineXOffset(e){return Math.round((this.renderedWidth-this._lineWidths[e]*this.renderPixelRatio)/2)}render(e,t=0,i=0){const n=this.renderedLineHeight,h=this.renderedHaloSize,a=s(e.textAlign,this.renderedWidth)+h,l=h+r;e.save(),h>0&&this.renderHalo(e,a,l,t,i),this.setFontProperties(e,this.renderedFontSize),i+=l,t+=a;for(let s=0;s<this._lines.length;++s){e.globalCompositeOperation="destination-out",e.fillStyle="rgb(0, 0, 0)";const r=this._lines[s],h=this.getLineXOffset(s);e.fillText(r,t+h,i),e.globalCompositeOperation="source-over",e.fillStyle=this._parameters.fillStyle,e.fillText(r,t+this.getLineXOffset(s),i),i+=n}e.restore()}renderHalo(e,t,i,s,r){const n=this.renderedWidth,o=this.renderedHeight,d=h(a,Math.max(n,l),Math.max(o,l)),g=d.getContext("2d");g.clearRect(0,0,n,o),this.setFontProperties(g,this.renderedFontSize),g.fillStyle=this._parameters.haloStyle,g.strokeStyle=this._parameters.haloStyle;const p=this.renderedHaloSize<3;g.lineJoin=p?"miter":"round",p?this.renderHaloEmulated(g,t,i):this.renderHaloNative(g,t,i),e.globalAlpha=this._parameters.definition.halo.color[3],e.drawImage(d,0,0,n,o,s,r,n,o),e.globalAlpha=1}renderHaloEmulated(e,t,i){const s=this.renderedLineHeight,r=this.renderedHaloSize;for(let h=0;h<this._lines.length;++h){const a=this._lines[h],l=this.getLineXOffset(h);for(const[s,h]of n)e.fillText(a,t+l+r*s,i+r*h);i+=s}}renderHaloNative(e,t,i){const s=this.renderedLineHeight,r=this.renderedHaloSize;for(let n=0;n<this._lines.length;++n){const h=2*r,a=this._lines[n],l=this.getLineXOffset(n),o=5,d=.1;for(let s=0;s<o;s++){const r=1-(o-1)*d+s*d;e.lineWidth=r*h,e.strokeText(a,t+l,i)}i+=s}}setFontProperties(e,t){const i=this._parameters.definition.font,s=`${i.style} ${i.weight} ${t}px ${i.family}, sans-serif`;e.font=s,e.textAlign="left",e.textBaseline="top"}_ensureTextWidth(){if(t(this._displayWidth))return this._displayWidth;const e=h(a,l,l).getContext("2d");this.setFontProperties(e,this._parameters.definition.size);let i=0,s=2*this._parameters.haloSize;this._lineWidths.length=0;const r=this._parameters.definition.font;("italic"===r.style||"oblique"===r.style||"string"==typeof r.weight&&("bold"===r.weight||"bolder"===r.weight)||"number"==typeof r.weight&&r.weight>600)&&(s+=.3*e.measureText("A").width);for(const t of this._lines){const r=Math.round(e.measureText(t).width+s);this._lineWidths.push(r),i=Math.max(i,r)}return this._displayWidth=i,this._displayWidth}computeLineHeight(){const e=1.275*this._parameters.definition.size;return Math.ceil(e+2*this._parameters.haloSize)+r}}function s(e,t){return"center"===e?.5*t:"right"===e?t:0}const r=1,n=[];{const e=16;for(let t=0;t<360;t+=360/e)n.push([Math.cos(Math.PI*t/180),Math.sin(Math.PI*t/180)])}function h(e,t,i){return e.canvas||(e.canvas=document.createElement("canvas")),e.canvas.width=t,e.canvas.height=i,e.canvas}const a={canvas:null},l=512;export default i;export{i as TextRenderer,h as getTextHelperCanvas};
