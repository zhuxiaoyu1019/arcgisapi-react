/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{flatten as i,equals as t}from"../../../../core/arrayUtils.js";import{disposeMaybe as e}from"../../../../core/maybe.js";import{f as s}from"../../../../chunks/vec4f64.js";import"../../../webgl/BufferObject.js";import"../../../webgl/FramebufferObject.js";import"../../../../core/has.js";import"../../../webgl/enums.js";import"../../../webgl/RenderingContext.js";import"../../../../chunks/builtins.js";import a from"../../../webgl/Texture.js";import"../../../webgl/VertexArrayObject.js";import{createQuadVAO as o}from"./glUtil3D.js";import{ShadowAccumulationTechniqueConfiguration as n,ShadowAccumulationTechnique as r}from"../shaders/ShadowAccumulationTechnique.js";import{vertexCount as l}from"../../../webgl/Util.js";const u=[s(.01,0,.25,0),s(.01,0,.25,1)],h=4e4,c=5e4,_=1/512;class m{constructor(t,e,l,h){this._techniqueRep=t,this._rctx=e,this._shadowAccumulator=l,this._requestRender=h,this._enabled=!1,this._vao=o(e),this._visualizationConfig=new n,this._visualizationConfig.pass=1,this._visualizationConfig.visualization=0,this._visualizeAccumulationTechnique=t.acquire(r,this._visualizationConfig);const c={target:3553,pixelFormat:6408,dataType:5121,samplingMode:9729,wrapMode:33071,width:u.length,height:1};this._colorRampTexture=new a(this._rctx,c,d(u)),this._visualizationParams={shadowAccumulationMap:this._accumulationTexture,sampleScale:0,colorRamp:this._colorRampTexture,rampSize:c.width,threshold:.5,bandSize:.1,colors:i([s(0,1,0,.5),s(1,0,0,.5)]),opacityFromElevation:1}}dispose(){this._stop(),this._vao=e(this._vao),this._visualizeAccumulationTechnique=e(this._visualizeAccumulationTechnique),this._colorRampTexture=e(this._colorRampTexture),this._shadowAccumulator=null}render(){this._isRenderingVisualization&&(this._sampleScale=1/this._computedSamples,this._rctx.bindVAO(this._vao),this._rctx.useProgram(this._visualizeAccumulationTechnique.program),this._visualizeAccumulationTechnique.bindPipelineState(this._rctx),this._visualizeAccumulationTechnique.bindPass(this._visualizationParams),this._rctx.drawArrays(this._visualizeAccumulationTechnique.primitiveType,0,l(this._vao,"geometry")))}setOptions(i){void 0!==i.enabled&&this._setEnabled(i.enabled),void 0!==i.gradientColorRamp&&this._setColorRamp(i.gradientColorRamp),void 0!==i.threshold&&(this._threshold=i.threshold),void 0!==i.thresholdColors&&this._setThresholdColors(i.thresholdColors),void 0!==i.visualization&&(this._visualization=i.visualization),void 0!==i.bandSize&&(this._bandSize=i.bandSize),void 0!==i.bandsEnabled&&(this._bandsEnabled=i.bandsEnabled)}get opacityFromElevation(){return this._visualizationParams.opacityFromElevation}set opacityFromElevation(i){this._visualizationParams.opacityFromElevation=i}get _isRenderingVisualization(){return this._enabled&&this._computedSamples>0&&this.opacityFromElevation>_}get _computedSamples(){return this._shadowAccumulator.computedSamples}get _accumulationTexture(){return this._shadowAccumulator.accumulationTexture}get _sampleScale(){return this._visualizationParams.sampleScale}set _sampleScale(i){this._visualizationParams.sampleScale=i}get _threshold(){return this._visualizationParams.threshold}set _threshold(i){this._threshold!==i&&(this._visualizationParams.threshold=i,this._requestRenderIfRunning())}get _visualization(){return this._visualizationConfig.visualization}set _visualization(i){if(i===this._visualization)return;const t=this._visualizationConfig;t.visualization=i,this._visualizeAccumulationTechnique=this._techniqueRep.releaseAndAcquire(r,t,this._visualizeAccumulationTechnique),this._requestRenderIfRunning()}get _bandSize(){return this._visualizationParams.bandSize}set _bandSize(i){i!==this._bandSize&&(this._visualizationParams.bandSize=i,this._requestRenderIfRunning())}get _bandsEnabled(){return this._visualizationConfig.bandsEnabled}set _bandsEnabled(i){if(i===this._bandsEnabled)return;const t=this._visualizationConfig;t.bandsEnabled=i,this._visualizeAccumulationTechnique=this._techniqueRep.releaseAndAcquire(r,t,this._visualizeAccumulationTechnique),this._requestRenderIfRunning()}_setColorRamp(i){const t=i.length,e=d(i);this._colorRampTexture.resize(t,1),this._colorRampTexture.setData(e),this._visualizationParams.rampSize=t,this._requestRenderIfRunning()}_setThresholdColors(e){const s=this._visualizationParams.colors,a=i(e);t(s,a)||(this._visualizationParams.colors=a,this._requestRenderIfRunning())}_setEnabled(i){i!==this._enabled&&(i?this._start():this._stop())}_requestRenderIfRunning(){this._enabled&&this._requestRender()}_start(){this._enabled=!0,this._requestRender()}_stop(){this._enabled=!1,this._requestRender()}}function d(i){const t=i.length,e=new Uint8Array(4*t);for(let s=0;s<t;++s){const t=i[s];e[4*s+0]=255*t[0],e[4*s+1]=255*t[1],e[4*s+2]=255*t[2],e[4*s+3]=255*t[3]}return e}export{m as ShadowAccumulationRenderer,c as shadowAccumulationDisableElevationMax,h as shadowAccumulationDisableElevationMin,_ as shadowAccumulationDisabledElevationThreshold};
