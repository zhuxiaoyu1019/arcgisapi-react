/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{isSome as r}from"../../core/maybe.js";const a=()=>import("./layers/TileLayerView3D.js"),i=()=>import("./layers/ElevationLayerView3D.js"),s={"base-dynamic":()=>import("./layers/BaseDynamicLayerView3D.js"),"base-elevation":i,"base-tile":a,"bing-maps":a,"building-scene":()=>import("./layers/BuildingSceneLayerView3D.js"),csv:()=>import("./layers/CSVLayerView3D.js"),"direct-line-measurement":()=>import("./layers/DirectLineMeasurementLayerView3D.js"),"area-measurement":()=>import("./layers/AreaMeasurementLayerView3D.js"),elevation:i,feature:()=>import("./layers/FeatureLayerView3D.js"),geojson:()=>import("./layers/GeoJSONLayerView3D.js"),graphics:()=>import("./layers/GraphicsLayerView3D.js"),group:()=>import("../layers/GroupLayerView.js"),imagery:()=>import("./layers/ImageryLayerView3D.js"),"integrated-mesh":()=>import("./layers/IntegratedMeshLayerView3D.js"),"line-of-sight":()=>import("./layers/LineOfSightLayerView3D.js"),"map-image":()=>import("./layers/MapImageLayerView3D.js"),"ogc-feature":()=>import("./layers/OGCFeatureLayerView3D.js"),"open-street-map":a,"point-cloud":()=>import("./layers/PointCloudLayerView3D.js"),voxel:()=>import("./layers/VoxelLayerView3D.js"),scene:e=>null==e.profile||"mesh-pyramids"===e.profile?import("./layers/SceneLayerView3D.js"):import("./layers/SceneLayerGraphicsView3D.js"),stream:()=>import("./layers/StreamLayerView3D.js"),tile:a,"imagery-tile":()=>import("./layers/ImageryTileLayerView3D.js"),"vector-tile":()=>import("./layers/VectorTileLayerView3D.js"),wcs:()=>import("./layers/ImageryTileLayerView3D.js"),"web-tile":a,wfs:()=>import("./layers/WFSLayerView3D.js"),wms:()=>import("./layers/WMSLayerView3D.js"),wmts:()=>import("./layers/WMTSLayerView3D.js"),slice:()=>import("./layers/SliceLayerView3D.js"),"geo-rss":null,kml:null,"map-notes":null,route:null,"subtype-group":null,unknown:null,unsupported:null};function t(r){const a=r.declaredClass?r.declaredClass.slice(r.declaredClass.lastIndexOf(".")+1):"Unknown",i=a.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();return new e(`${i}:view-not-supported`,`${a} is not supported in 3D`)}const l={hasLayerViewModule:e=>r(s[e.type]),importLayerView:e=>{const a=s[e.type];if(!r(a))throw t(e);return a(e)}};export{l as layerView3DImporter};
