/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import r from"../../core/Error.js";import{isSome as t}from"../../core/maybe.js";import{eachAlways as o}from"../../core/promiseUtils.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import"../../core/Logger.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import{combinedViewLayerTimeExtentProperty as p}from"../../layers/support/commonProperties.js";import{ExportImageParameters as i}from"../../layers/support/ExportImageParameters.js";import{calculateTolerance as m}from"../../renderers/support/clickToleranceUtils.js";import{loadArcade as l}from"../../support/arcadeOnDemand.js";import{getRequiredFields as n,getFetchPopupTemplate as u}from"./support/popupUtils.js";const c=c=>{let y=class extends c{initialize(){this.exportImageParameters=new i({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}async fetchPopupFeatures(e,s){const{layer:a}=this;if(!e)return Promise.reject(new r("mapimagelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a}));const p=this.get("view.scale"),i=[],l=async e=>{const r=0===e.minScale||p<=e.minScale,o=0===e.maxScale||p>=e.maxScale;if(e.visible&&r&&o)if(e.sublayers)e.sublayers.forEach(l);else if(e.popupEnabled){const r=u(e,{...s,defaultPopupTemplateEnabled:!1});t(r)&&i.unshift({sublayer:e,popupTemplate:r})}},c=a.sublayers.toArray().reverse().map(l);await Promise.all(c);const y=i.map((async({sublayer:r,popupTemplate:o})=>{await r.load().catch((()=>{}));const a=r.createQuery(),p=t(s)?s.event:null,i=m({renderer:r.renderer,event:p}),l=this.createFetchPopupFeaturesQueryGeometry(e,i);a.geometry=l,a.outFields=await n(r,o);const u=await this._loadArcadeModules(o);u&&u.arcadeUtils.hasGeometryOperations(o)||(a.maxAllowableOffset=l.width/i);return(await r.queryFeatures(a)).features}));return(await o(y)).reduce(((e,r)=>r.value?[...e,...r.value]:e),[]).filter((e=>null!=e))}canResume(){var e;return!!super.canResume()&&(null==(e=this.timeExtent)||!e.isEmpty)}_loadArcadeModules(e){if(e.get("expressionInfos.length"))return l()}};return e([s()],y.prototype,"exportImageParameters",void 0),e([s({readOnly:!0})],y.prototype,"exportImageVersion",null),e([s()],y.prototype,"layer",void 0),e([s()],y.prototype,"suspended",void 0),e([s(p)],y.prototype,"timeExtent",void 0),y=e([a("esri.views.layers.MapImageLayerView")],y),y};export default c;export{c as MapImageLayerView};
