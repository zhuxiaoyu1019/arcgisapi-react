/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import s from"../../../Graphic.js";import i from"../../../core/Collection.js";import{isSome as r,isNone as t}from"../../../core/maybe.js";import{init as a,on as o}from"../../../core/watchUtils.js";import"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as h}from"../../../core/accessorSupport/decorators/subclass.js";import{LayerView2DMixin as n}from"./LayerView2D.js";import p from"./graphics/GraphicContainer.js";import c from"./graphics/GraphicsView2D.js";import l from"../../layers/LayerView.js";const u="sublayers",d="layerView",f=Object.freeze({remove(){},pause(){},resume(){}});let g=class extends(n(l)){async fetchPopupFeatures(e){return(await Promise.all(Array.from(this.graphicsViews(),(s=>s.searchFeatures(e).then((e=>e.filter((e=>!!e.popupTemplate)))))))).flat()}*graphicsViews(){r(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():r(this._graphicsViews)?yield*this._graphicsViews:yield*[]}async hitTest(e,s){if(this.suspended)return null;const i=Array.from(this.graphicsViews(),(async i=>{const t=await i.hitTest(e,s);if(t){if(r(this._graphicsViewsFeatureCollectionMap)){const e=this._graphicsViewsFeatureCollectionMap.get(i);!t.popupTemplate&&e.popupTemplate&&(t.popupTemplate=e.popupTemplate)}return t}return null}));return(await Promise.all(i)).filter((e=>!!e))[0]||null}highlight(e){let r;if("number"==typeof e?r=[e]:e instanceof s?r=[e.uid]:Array.isArray(e)&&e.length>0?r="number"==typeof e[0]?e:e.map((e=>e&&e.uid)):i.isCollection(e)&&(r=e.map((e=>e&&e.uid)).toArray()),r=r.filter((e=>null!=e)),!r.length)return f;for(const s of this.graphicsViews())s.addHighlight(r);return{remove:()=>{for(const e of this.graphicsViews())e.removeHighlight(r)}}}update(e){for(const s of this.graphicsViews())s.processUpdate(e)}attach(){const e=this.view,s=()=>this.requestUpdate(),i=this.layer.featureCollections;if(r(i)&&i.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const r of i){const i=new p(this.view.featuresTilingScheme);i.fadeTransitionEnabled=!0;const t=new c({view:e,graphics:r.source,renderer:r.renderer,requestUpdateCallback:s,container:i});this._graphicsViewsFeatureCollectionMap.set(t,r),this.container.addChild(t.container),this.handles.add([a(r,"visible",(e=>t.container.visible=e)),a(t,"updating",(()=>this.notifyChange("updating")))],d)}}else r(this.layer.sublayers)&&this.handles.add(o(this.layer,"sublayers","change",(()=>this._createGraphicsViews()),(()=>this._createGraphicsViews()),(()=>this._destroyGraphicsViews())),u)}detach(){this._destroyGraphicsViews(),this.handles.remove(u)}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews())e.viewChange()}isUpdating(){for(const e of this.graphicsViews())if(e.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.handles.remove(d);for(const e of this.graphicsViews())e.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),t(this.layer.sublayers))return;const e=[],s=this.view,i=()=>this.requestUpdate();for(const r of this.layer.sublayers){const t=new p(this.view.featuresTilingScheme);t.fadeTransitionEnabled=!0;const o=new c({view:s,graphics:r.graphics,requestUpdateCallback:i,container:t});this.handles.add([r.on("graphic-update",o.graphicUpdateHandler),a(r,"visible",(e=>o.container.visible=e)),a(o,"updating",(()=>this.notifyChange("updating")))],d),this.container.addChild(o.container),e.push(o)}this._graphicsViews=e}};g=e([h("esri.views.2d.layers.MapNotesLayerView2D")],g);var w=g;export default w;
