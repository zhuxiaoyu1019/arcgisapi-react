/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{openWithPorts as e}from"../../../../../../core/workers/workers.js";import{convertFromFeatureSet as t,quantizeOptimizedFeatureSet as r}from"../../../../../../layers/graphics/featureConversionUtils.js";import{queryOptimizedFeatureSet as s}from"../../../../../../layers/ogc/ogcFeatureUtils.js";import{executeQueryPBFBuffer as i,executeQuery as a}from"../../../../../../rest/query/operations/query.js";import{FeatureSetReaderJSON as o}from"../../support/FeatureSetReaderJSON.js";import{FeatureSetReaderPBF as n}from"../../support/FeatureSetReaderPBF.js";class c{constructor(e){this.service=e}destroy(){}}function u(e){return Array.isArray(e.source)}function l(e){return e&&e.capabilities&&e.collectionId&&e.layerDefinition&&e.url}function m(e){const{capabilities:t}=e;return l(e.source)?new d(e):u(e)?new p(e):t.query.supportsFormatPBF?new y(e):new f(e)}class p extends c{constructor(t){super(t),this._portsOpen=e(t.source).then((e=>this.client=e))}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const r=await this.client.invoke("queryFeatures",e.toJSON(),t);return o.fromFeatureSet(r,this.service.objectIdField)}}class y extends c{async executeQuery(e,t){const{data:r}=await i(this.service.source,e,{...t,query:{...this.service.customParameters,...null==t?void 0:t.query}}),s=!e.quantizationParameters;return n.fromBuffer(r,this.service.geometryType,s)}}class f extends c{async executeQuery(e,s){const{source:i,capabilities:n,spatialReference:c,objectIdField:u}=this.service;if(e.quantizationParameters&&!n.query.supportsQuantization){const n=e.clone();n.quantizationParameters=null;const{data:l}=await a(i,n,c,{...s,query:{...this.service.customParameters,...null==s?void 0:s.query}}),m=t(l,u);return r(s.transform,m),o.fromOptimizedFeatureSet(m)}const{data:l}=await a(i,e,this.service.spatialReference,{...s,query:{...this.service.customParameters,...null==s?void 0:s.query}});return o.fromFeatureSet(l,this.service.objectIdField)}}class d extends c{async executeQuery(e,t){const{capabilities:i}=this.service;if(e.quantizationParameters&&!i.query.supportsQuantization){e.clone().quantizationParameters=null;const i=await s(this.service.source,e,t);return r(t.transform,i),o.fromOptimizedFeatureSet(i)}const a=await s(this.service.source,e,t);return o.fromOptimizedFeatureSet(a)}}export{c as SourceAdapter,m as createSourceAdapter};
