/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import t from"../../../../../core/Accessor.js";import{createAbortController as s,createAbortError as r,createResolver as o}from"../../../../../core/promiseUtils.js";import{property as i}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as n}from"../../../../../core/accessorSupport/decorators/subclass.js";let u=class extends t{constructor(e){super(e),this._queue=[],this._onGoingRequest=null,this._abortController=s()}destroy(){this.clear()}get updating(){return!this.destroyed&&(this._queue.length>0||null!=this._onGoingRequest)}clear(){if(this.destroyed)throw new Error("instance is already destroyed");let e=this._queue.pop();for(;e;)e.resolver.reject(r()),e=this._queue.pop();this._queue.length=0,this._abortController.abort(),this._abortController=s()}async push(e){if(this.destroyed)throw new Error("instance is already destroyed");const t=o();return this._queue.push({event:e,resolver:t}),this.notifyChange("updating"),Promise.resolve().then((()=>{this._processNext()})),t.promise}async _processNext(){if(this._onGoingRequest)return;const e=[],t=new Set,s=new Set,r=new Set;let o=this._queue.shift();for(;o;){const{event:{addedFeatures:i,deletedFeatures:n,updatedFeatures:u},resolver:a}=o;e.push(a);for(const{objectId:e,error:o}of i)o||(t.add(e),s.add(e),r.delete(e));for(const{objectId:e,error:t}of u)t||(s.add(e),r.delete(e));for(const{objectId:e,error:o}of n)o||(t.has(e)?t.delete(e):r.add(e),s.delete(e));o=this._queue.shift()}if(!s.size&&!r.size)return this.notifyChange("updating"),void e.forEach((e=>e()));const i=[],n=[];s.size&&s.forEach((e=>{i.push(e)})),r.size&&r.forEach((e=>{n.push(e)})),this._onGoingRequest=Promise.resolve().then((()=>this.processEdits(i,n,{signal:this._abortController.signal}))).catch((()=>{})),this.notifyChange("updating"),await this._onGoingRequest,this._onGoingRequest=null,this.notifyChange("updating"),e.forEach((e=>e())),this._queue.length>0&&this._processNext()}};e([i({constructOnly:!0})],u.prototype,"processEdits",void 0),e([i({readOnly:!0})],u.prototype,"updating",null),u=e([n("esri.views.2d.layers.features.controllers.EditsQueue")],u);export{u as EditsQueue};
