/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../../core/Error.js";import t from"../../../../../core/Logger.js";import{isSome as r}from"../../../../../core/maybe.js";import{isAbortError as a,throwIfAborted as s,throwIfNotAbortError as o}from"../../../../../core/promiseUtils.js";import{BaseFeatureSource as i}from"./BaseFeatureSource.js";const n=t.getLogger("esri.views.2d.layers.features.sources.FeatureSource");class d extends i{constructor(e){super(e)}async _fetchDataTile(t){const r=6,o=20,i=this._subscriptions.get(t.key.id);let d=!1,c=0,u=0;const p=(e,r)=>{u--,s(i);const a=t.id,o=e.reader,n=e.query;if(!o.exceededTransferLimit){if(d=!0,0!==r&&!o.hasFeatures){const e={id:a,addOrUpdate:o,end:0===u,type:"append"};return i.add({message:e,query:n}),void this._onMessage(e)}const e={id:a,addOrUpdate:o,end:0===u,type:"append"};return i.add({message:e,query:n}),void this._onMessage(e)}const c={id:a,addOrUpdate:o,end:d&&0===u,type:"append"};i.add({message:c,query:n}),this._onMessage(c)};let h=0,m=0;for(;!d&&m++<o;){let o;for(let r=0;r<h+1;r++){const r=c++;u++,o=this._fetchDataTilePage(t,r,i).then((e=>e&&p(e,r))).catch((r=>{d=!0,a(r)||(n.error(new e("mapview-query-error","Encountered error when fetching tile",{tile:t,error:r})),this._onMessage({id:t.id,addOrUpdate:null,end:d,type:"append"}))}))}await o,s(i),h=Math.min(h+2,r)}}async _fetchDataTilePage(e,t,a){const i=this._queryInfo,n={start:this.pageSize*t,num:this.pageSize,returnExceededLimitFeatures:!0,quantizationParameters:e.getQuantizationParameters()};r(this.maxRecordCountFactor)&&(n.maxRecordCountFactor=this.maxRecordCountFactor);const d=this._createQuery(e,n);try{const r=a.signal,o=await this._queue.push({tile:e,query:d,signal:r,depth:t});return s(a),o?i!==this._queryInfo?this._fetchDataTilePage(e,t,a):{reader:o,query:d}:null}catch(c){return o(c),null}}}export{d as PagedFeatureSource};
