/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import"../../../../../core/has.js";import t from"../../../../../core/Logger.js";import{isSome as e,isNone as s}from"../../../../../core/maybe.js";import{throwIfAborted as r,after as o}from"../../../../../core/promiseUtils.js";import a from"../../../../../core/RandomLCG.js";import{BaseFeatureSource as i}from"./BaseFeatureSource.js";import{FeatureSetReaderIndirect as n}from"../support/FeatureSetReaderPBFIndirect.js";import{UpdateToken as d}from"../support/UpdateToken.js";const h=t.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource");function l(t,e,s){const r=t.getXHydrate(),o=t.getYHydrate(),a=e.getColumnForX(r),i=Math.floor(e.normalizeCol(a));return`${s}/${Math.floor(e.getRowForY(o))}/${i}`}function u(t,e){if(s(t))return null;const r=e.transform,o=t.getQuantizationTransform();if(s(o)){const[e,s]=r.scale,[o,a]=r.translate,i=-o/e,n=1/e,d=a/s,h=1/-s;return t.transform(i,d,n,h)}const[a,i]=o.scale,[n,d]=o.translate,[h,l]=r.scale,[u,c]=r.translate,g=a/h,_=(n-u)/h,p=i/l,m=(-d+c)/l;return t.transform(_,m,g,p)}class c extends i{constructor(t){super(t),this.mode="snapshot",this._loading=!0,this._controller=new AbortController,this._downloadPromise=null,this._didSendEnd=!1,this._queries=new Array,this._invalidated=!1,this._hasAggregates=!1,this._random=new a(1e3),this._featureCount=t.featureCount,this._store=t.store,this._markedIdsBufId=this._store.storage.createBitset()}destroy(){super.destroy(),this._controller.abort()}get loading(){return this._loading}get _signal(){return this._controller.signal}update(t,e){super.update(t,e),this._hasAggregates=t.targets.aggregate}async resend(t=!1){if(await this._downloadPromise,this._invalidated||t)return this._invalidated=!1,this._subscriptions.forEach((t=>t.clear())),this._downloadPromise=this._download(this._featureCount),void await this._downloadPromise;const e=this._queries.map((({query:t,reader:e})=>this._sendPatchQuery(t,e)));await Promise.all(e),this._subscriptions.forEach((t=>{t.requests.done.forEach((t=>this._onMessage(t.message)))}))}async refresh(){await this.resend(!0)}async _sendPatchQuery(t,s){const o=e(t.outFields)?t.outFields:[],a=this._queryInfo.outFields,i=a.filter((t=>-1===o.indexOf(t)));if(!i.length)return;const n=t.clone(),d=this._signal;n.returnGeometry=!1,n.returnCentroid=!1,n.outFields=i,t.outFields=a;const h=await this._queue.push({query:n,depth:0,signal:d});r({signal:d}),s.joinAttributes(h)}async _fetchDataTile(t){this._downloadPromise||(this._downloadPromise=this._download(this._featureCount));const e=this._store.search(t),s=this._subscriptions.get(t.key.id),r=e.length-1;for(let h=0;h<r;h++){const r=u(e[h],t),a={type:"append",id:t.id,addOrUpdate:r,end:!1,status:d.empty()};s.add({query:null,message:a}),this._hasAggregates||await o(1),this._onMessage(a)}const a=u(r>=0?e[r]:null,t),i=this._didSendEnd,n={type:"append",id:t.id,addOrUpdate:a,end:i,status:d.empty()};s.add({query:null,message:n}),this._onMessage(n)}async _download(t){try{await this.whenInitialized();const e=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;e.clear();const r=Math.ceil(t/this.pageSize),o=Array.from({length:r},((t,e)=>e)).sort(((t,e)=>this._random.getInt()-this._random.getInt())).map((t=>this._downloadPage(t,e,s)));await Promise.all(o),this._store.sweepFeatures(e,this._store.storage),this._store.sweepFeatureSets(s)}catch(e){h.error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",e)}this._sendEnd(),this._loading=!1}async _downloadPage(t,s,o){const a=this.pageSize,i={start:t*a,num:a,cacheHint:!0};e(this.maxRecordCountFactor)&&(i.maxRecordCountFactor=this.maxRecordCountFactor);const n=this.createQuery(i),d=this._signal,h=await this._queue.push({query:n,depth:t,signal:d});r({signal:d}),this._queries.push({query:n,reader:h}),this._store.insert(h),o.add(h.instance);const l=h.getCursor();for(;l.next();)s.set(l.getDisplayId());this._send(h)}_send(t){if(!this._subscriptions.size)return;let r=null;const o=new Map,a=new Set,i=new Map;this._subscriptions.forEach((t=>{var e;const s=t.tile;o.set(s.key.id,null),r=s.tileInfoView,a.add(s.level);const{row:n,col:d}=s.key,h=`${s.level}/${n}/${d}`,l=null!=(e=i.get(h))?e:[];l.push(t),i.set(h,l)}));for(const e of a){const a=r.getLODInfoAt(e),n=t.getCursor();for(;n.next();){const t=l(n,a,e),r=n.getIndex();if(i.has(t))for(const e of i.get(t)){const t=e.tile.id;let a=o.get(t);s(a)&&(a=[],o.set(t,a)),a.push(r)}}}o.forEach(((s,r)=>{if(e(s)){const e=this._subscriptions.get(r),o={type:"append",id:r,addOrUpdate:u(n.from(t,s),e.tile),end:!1,status:d.empty()};e.add({query:null,message:o}),this._onMessage(o)}}))}_sendEnd(){this._subscriptions.forEach((t=>{const e={type:"append",id:t.tile.id,addOrUpdate:null,end:!0,status:d.empty()};t.add({query:null,message:e}),this._onMessage(e)})),this._didSendEnd=!0}}export{c as SnapshotFeatureSource};
