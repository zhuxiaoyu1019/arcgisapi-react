/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../../core/SetPool.js";import t from"../../../../../layers/graphics/data/FeatureStore.js";import{isParentOf as s,isChildOf as i}from"./Tile.js";const r=[],a=new Set;class o{constructor(){this._tileById=new Map,this._tilesToFeatures=new Map,this._featureToTiles=new Map}destroy(){this.clear()}add(t){if(this.has(t.id))return;const r=t;this._tileById.set(r.id,r),this._tilesToFeatures.set(r,e.acquire()),this._tilesToFeatures.forEach(((e,t)=>{r!==t&&(s(r,t)?e.forEach((e=>{this._link(r,e)})):i(r,t)&&this.featureStore.forEachInBounds(r.bounds,(t=>{e.has(t.objectId)&&this._link(r,t.objectId)})))}))}clear(){this._tilesToFeatures.forEach((t=>e.release(t))),this._tilesToFeatures.clear(),this._featureToTiles.forEach((t=>e.release(t))),this._featureToTiles.clear(),this._tileById.clear()}delete(e){const t=this.get(e.id);r.length=0,this._tilesToFeatures.get(t).forEach((e=>{const s=this._featureToTiles.get(e);s.has(t)&&1===s.size?r.push(e):this._unlink(t,e)}));for(const s of r)this._unlink(t,s);this.featureStore.removeManyById(r),this._tilesToFeatures.delete(t),this._tileById.delete(t.id),r.length=0}forEach(e,t){return this._tileById.forEach(e,t)}get(e){return this._tileById.get(e)}has(e){return this._tileById.has(e)}setTileFeatures(t,s){const i=this.get(t.id);this._tilesToFeatures.has(i)||(this._tileById.set(i.id,i),this._tilesToFeatures.set(i,e.acquire()));for(const e of s)a.add(e.objectId);r.length=0,this._tilesToFeatures.get(i).forEach((e=>{if(!a.has(e)){const t=this._featureToTiles.get(e);t.has(i)&&1===t.size?r.push(e):this._unlink(i,e)}}));for(const e of r)this._unlink(i,e);this.featureStore.removeManyById(r),this.featureStore.addMany(s),a.forEach((e=>{this._link(i,e)})),a.clear(),r.length=0}addOrUpdateFeatures(e){const s=new Set,i=new t({geometryType:this.featureStore.geometryType,hasM:this.featureStore.hasM,hasZ:this.featureStore.hasZ});for(const t of this.deleteFeaturesById(e.map((e=>e.objectId))))s.add(t);i.addMany(e),this._tileById.forEach((e=>{i.forEachInBounds(e.bounds,(t=>{this._link(e,t.objectId),s.add(e)}))})),this.featureStore.addMany(e);const r=[];return s.forEach((e=>r.push(e))),r}deleteFeaturesById(t){const s=new Set;for(const r of t){const t=this._featureToTiles.get(r);t&&(t.forEach((e=>{s.add(e),this._tilesToFeatures.get(e).delete(r)})),e.release(t),this._featureToTiles.delete(r))}this.featureStore.removeManyById(t);const i=[];return s.forEach((e=>i.push(e))),i}_link(t,s){this._featureToTiles.get(s)||this._featureToTiles.set(s,e.acquire()),this._featureToTiles.get(s).add(t),this._tilesToFeatures.get(t).add(s)}_unlink(t,s){this._featureToTiles.get(s).delete(t),this._tilesToFeatures.get(t).delete(s),0===this._featureToTiles.get(s).size&&(e.release(this._featureToTiles.get(s)),this._featureToTiles.delete(s))}}export default o;
