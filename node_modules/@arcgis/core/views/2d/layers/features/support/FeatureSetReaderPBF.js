/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../../core/Error.js";import t from"../../../../../core/Logger.js";import{isNone as r,isSome as s}from"../../../../../core/maybe.js";import i from"../../../../../core/pbf.js";import{convertToGeometry as a,unquantizeOptimizedGeometry as n}from"../../../../../layers/graphics/featureConversionUtils.js";import o from"../../../../../layers/graphics/OptimizedFeature.js";import h from"../../../../../layers/graphics/OptimizedGeometry.js";import{FeatureSetReader as u}from"./FeatureSetReader.js";import{parseHeader as c}from"./FeatureSetReaderPBFHeader.js";const d=t.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF"),_=268435455;function g(e){return e.toLowerCase().trim()}function l(t){try{const e=2,r=new i(new Uint8Array(t),new DataView(t));for(;r.next();)switch(r.tag()){case e:return f(r.getMessage());default:r.skip()}}catch(r){const t=new e("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:r});d.error(t)}return null}function f(e){const t=1;for(;e.next();)switch(e.tag()){case t:return e.getMessage();default:e.skip()}return null}function y(e){const t=1,r=2,s=3,i=4,a=5,n=6,o=7,h=8,u=9,c=e.getLength(),d=e.pos()+c;for(;e.pos()<d&&e.next();)switch(e.tag()){case t:return e.getString();case r:return e.getFloat();case s:return e.getDouble();case i:return e.getSInt32();case a:return e.getUInt32();case n:return e.getInt64();case o:return e.getUInt64();case h:return e.getSInt64();case u:return e.getBool();default:return e.skip(),null}return null}class m extends u{constructor(e,t,r,s){super(e),this._hasNext=!1,this._isPoints=!1,this._isPolygons=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=s,this._reader=t,this._header=r,this._hasNext=r.hasFeatures,this._isPoints="esriGeometryPoint"===s,this._isPolygons="esriGeometryPolygon"===s}static fromBuffer(e,t,r=!1){const s=l(e),i=c(s,"esriGeometryPoint"===t,r),a=u.createInstance();return new m(a,s,i,t)}get geometryType(){return this._geometryType}get size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this.size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";return this._header.fields.forEach((({index:t})=>{e+=this._readAttributeAtIndex(t)+"."})),e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){if(void 0===this._cache.legacyFeature){var e;const t=this.readCentroid(),r={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:null!=(e=t&&{x:t.coords[0],y:t.coords[1]})?e:null};return this._cache.legacyFeature=r,r}return this._cache.legacyFeature}readOptimizedFeature(){if(void 0===this._cache.optFeature){const e=new o(this.readGeometry(),this.readAttributes(),this.readCentroid());return e.objectId=this.getObjectId(),e.displayId=this.getDisplayId(),this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrate(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return r(t)?e:e*t.scale[0]+t.translate[0]}getYHydrate(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return r(t)?e:t.translate[1]-e*t.scale[1]}getX(){return this._header.centroid[2*this._featureIndex]*this._sx+this._tx}getY(){return this._header.centroid[2*this._featureIndex+1]*this._sy+this._ty}readLegacyPointGeometry(){return{x:this.getX(),y:this.getY()}}readLegacyGeometry(){const e=this.readGeometry();return a(e,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,r]=e.coords;return{x:t,y:r}}readGeometryArea(){return this._cache.area||this.readGeometry(),this._cache.area}readUnquantizedGeometry(){if(void 0===this._cache.unquantGeometry){const e=this.readGeometry();if(!e)return this._cache.unquantGeometry=null,null;const t=e.clone(),r=t.lengths,s=t.coords;for(let i=0,a=2;i<r.length;i++,a+=2){const e=r[i];for(let t=1;t<e;t+=1,a+=2)s[a]+=s[a-2],s[a+1]+=s[a-1]}return this._cache.unquantGeometry=t,t}return this._cache.unquantGeometry}readHydratedGeometry(){if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===_)return null;const e=this.getXHydrate(),t=this.getYHydrate();return new h([],[e,t])}const e=this.readGeometry();if(!e)return null;const t=e.clone(),r=this.getQuantizationTransform();return s(r)&&n(t,t,this.hasZ,this.hasM,r),t}readGeometry(){if(void 0===this._cache.geometry){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===_)return null;const e=this.getX(),r=this.getY();t=new h([],[e,r])}else{const r=this._header.offsets.geometry[this._featureIndex],s=this._reader;if(0===r)return null;s.move(r);try{t=this._parseGeometry(s)}catch(e){return console.error("Failed to parse geometry!",e),null}}return this._cache.geometry=t,t}return this._cache.geometry}readCentroid(){if(void 0===this._cache.centroid){let e=null;const t=this._header.centroid[2*this._featureIndex]+this._tx,r=this._header.centroid[2*this._featureIndex+1]+this._ty;return t===_?(e=this._computeCentroid(),e&&(this._header.centroid[2*this._featureIndex]=e.coords[0]-this._tx,this._header.centroid[2*this._featureIndex+1]=e.coords[1]-this._ty)):e=new h([],[t,r]),this._cache.centroid=e,e}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new m(this.instance,e,this._header,this.geometryType);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this.size&&!this._getExists(););return this._featureIndex<this.size}_readAttribute(e,t){const r=this._header.hasField(e)?e:g(e),s=this._header.getFieldIndex(r);if(null==s)return;const i=this._readAttributeAtIndex(s);if(!t)return i;if(null==i)return i;return this._header.isDateField(r)?new Date(i):i}_readAttributes(){const e={};return this._header.fields.forEach((({fieldName:t,index:r})=>{e[t]=this._readAttributeAtIndex(r)})),e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;return r.move(t),y(r)}_preprocessPolygon(e,t){let r=0,s=0,i=0,a=!1,n=!1,o=!1,u=-1;const c=1e6,d=[];let _=0,g=!1;for(let h=0;h<t.length;h++){const l=t[h];let f=e[2*r],y=e[2*r+1],m=0;for(let t=1;t<l;t++){const s=f,i=y,a=f+e[2*(r+t)],n=y+e[2*(r+t)+1];f=a,y=n,m+=.5*((a-s)*(n+i))}const p=m>0;if(p&&g&&(s+=l),p||(u++,g=!1),u>=c)break;_+=m,a&&p&&n&&(o=!0);{e[2*i]=e[2*s],e[2*i+++1]=e[2*s+++1];let t=1,r=e[2*s],a=e[2*s+++1];for(let n=2;n<l;n++){const n=e[2*s],o=e[2*s+++1];0===r*o-n*a&&r*n+a*o>0?(r+=n,a+=o):(e[2*i]=r,e[2*i+++1]=a,t++,r=n,a=o)}e[2*i]=r,e[2*i+++1]=a,t++,d.push(t)}a=!1,n=!0,r+=l}return d.length?(this._cache.area=Math.abs(_),new h(d,e,o)):null}_parseGeometry(e){const t=1,r=2,s=3,i=e.getLength(),a=e.pos()+i,n=[],o=[];for(;e.pos()<a&&e.next();)switch(e.tag()){case r:{const t=e.getUInt32(),r=e.pos()+t;for(;e.pos()<r;)o.push(e.getUInt32());break}case s:{const t=e.getUInt32(),r=e.pos()+t;for(;e.pos()<r;)n.push(e.getSInt32()),n.push(e.getSInt32()),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();break}case t:default:e.skip()}let u=0;for(const h of o)n[2*u]+=this._tx,n[2*u+1]+=this._ty,u+=h;return this._isPolygons?this._preprocessPolygon(n,o):new h(o,n)}}export{m as FeatureSetReaderPBF};
