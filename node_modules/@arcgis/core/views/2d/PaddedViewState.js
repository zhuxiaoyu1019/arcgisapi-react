/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Accessor.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import"../../core/Logger.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{s as i,a as r,c as p}from"../../chunks/vec2.js";import{a}from"../../chunks/vec2f64.js";import{addPadding as d}from"./viewpointUtils.js";import n from"./ViewState.js";let c=class extends e{constructor(){super(...arguments),this.left=0,this.top=0,this.right=0,this.bottom=0}};t([o()],c.prototype,"left",void 0),t([o()],c.prototype,"top",void 0),t([o()],c.prototype,"right",void 0),t([o()],c.prototype,"bottom",void 0),c=t([s("esri.views.2d.PaddedViewState.Padding")],c);let h=class extends n{constructor(...t){super(...t),this.paddedViewState=new n,this._updateContent=(()=>{const t=a();return()=>{const e=this._get("size"),o=this._get("padding");if(!e||!o)return;const s=this.paddedViewState;i(t,o.left+o.right,o.top+o.bottom),r(t,e,t),p(s.size,t);const a=s.viewpoint;a&&(this.viewpoint=a)}})(),this.watch(["size","padding"],this._updateContent,!0),this.padding=new c,this.size=[0,0]}set padding(t){this._set("padding",t||new c)}set viewpoint(t){if(t){const e=t.clone();this.paddedViewState.viewpoint=t,d(e,t,this._get("size"),this._get("padding"));const o=this._viewpoint2D,s=e.targetGeometry;o.center[0]=s.x,o.center[1]=s.y,o.rotation=e.rotation,o.scale=e.scale,o.spatialReference=s.spatialReference,this._update()}}};t([o()],h.prototype,"paddedViewState",void 0),t([o({type:c})],h.prototype,"padding",null),t([o()],h.prototype,"viewpoint",null),h=t([s("esri.views.2d.PaddedViewState")],h);var m=h;export default m;
