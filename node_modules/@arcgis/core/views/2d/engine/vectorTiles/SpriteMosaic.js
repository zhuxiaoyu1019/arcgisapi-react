/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{SymbolHelper as t}from"../../../../symbols/cim/CIMSymbolHelper.js";import"../../../webgl/BufferObject.js";import"../../../webgl/FramebufferObject.js";import"../../../../core/has.js";import"../../../webgl/enums.js";import"../../../webgl/RenderingContext.js";import"../../../../chunks/builtins.js";import i from"../../../webgl/Texture.js";import"../../../webgl/VertexArrayObject.js";import e from"./RectangleBinPack.js";import s from"../webgl/Rect.js";const h="dasharray-";class r{constructor(t,i,s=0){this._size=[],this._mosaicsData=[],this._textures=[],this._dirties=[],this._maxItemSize=0,this._currentPage=0,this._pageWidth=0,this._pageHeight=0,this._mosaicRects={},this.pixelRatio=1,(t<=0||i<=0)&&console.error("Sprites mosaic defaultWidth and defaultHeight must be greater than zero!"),this._pageWidth=t,this._pageHeight=i,s>0&&(this._maxItemSize=s),this._binPack=new e(t-4,i-4)}dispose(){this._binPack=null,this._mosaicRects={};for(const t of this._textures)t&&t.dispose();this._textures.length=0}getWidth(t){return t>=this._size.length?-1:this._size[t][0]}getHeight(t){return t>=this._size.length?-1:this._size[t][1]}getPageSize(t){return t>=this._size.length?null:this._size[t]}setSpriteSource(t){if(this.dispose(),this.pixelRatio=t.devicePixelRatio,0===this._mosaicsData.length){this._binPack=new e(this._pageWidth-4,this._pageHeight-4);const t=Math.floor(this._pageWidth),i=Math.floor(this._pageHeight),s=new Uint32Array(t*i);this._mosaicsData[0]=s,this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0)}this._sprites=t}getSpriteItem(t,i=!1){let e,s,r=this._mosaicRects[t];if(r)return r;if(!this._sprites||"loaded"!==this._sprites.loadStatus)return null;if(t&&t.startsWith(h)?([e,s]=this._rasterizeDash(t),i=!0):e=this._sprites.getSpriteInfo(t),!e||!e.width||!e.height||e.width<0||e.height<0)return null;const a=e.width,o=e.height,[n,_,g]=this._allocateImage(a,o);return n.width<=0?null:(this._copy(n,e,_,g,i,s),r={rect:n,width:a,height:o,sdf:e.sdf,simplePattern:!1,pixelRatio:e.pixelRatio,page:_},this._mosaicRects[t]=r,r)}getSpriteItems(t){const i={};for(const e of t)i[e.name]=this.getSpriteItem(e.name,e.repeat);return i}getMosaicItemPosition(t,i){const e=this.getSpriteItem(t,i),s=e&&e.rect;if(!s)return null;s.width=e.width,s.height=e.height;const h=e.width,r=e.height,a=2;return{tl:[s.x+a,s.y+a],br:[s.x+a+h,s.y+a+r],page:e.page}}bind(t,e,s=0,h=0){this._textures[s]||(this._textures[s]=new i(t,{pixelFormat:6408,dataType:5121,wrapMode:33071,width:this._size[s][0],height:this._size[s][1]},new Uint8Array(this._mosaicsData[s].buffer)));const r=this._textures[s];r.setSamplingMode(e),this._dirties[s]&&r.setData(new Uint8Array(this._mosaicsData[s].buffer)),t.bindTexture(r,h),this._dirties[s]=!1}static _copyBits(t,i,e,s,h,r,a,o,n,_,g){let p=s*i+e,c=o*r+a;if(g){c-=r;for(let a=-1;a<=_;a++,p=((a+_)%_+s)*i+e,c+=r)for(let i=-1;i<=n;i++)h[c+i]=t[p+(i+n)%n]}else for(let l=0;l<_;l++){for(let i=0;i<n;i++)h[c+i]=t[p+i];p+=i,c+=r}}_copy(t,i,e,s,h,a){if(!this._sprites||"loaded"!==this._sprites.loadStatus||e>=this._mosaicsData.length)return;const o=new Uint32Array(a?a.buffer:this._sprites.image.buffer),n=this._mosaicsData[e];n&&o||console.error("Source or target images are uninitialized!");const _=2,g=a?i.width:this._sprites.width;r._copyBits(o,g,i.x,i.y,n,s[0],t.x+_,t.y+_,i.width,i.height,h),this._dirties[e]=!0}_allocateImage(t,i){t+=2,i+=2;const h=Math.max(t,i);if(this._maxItemSize&&this._maxItemSize<h){const e=new s(0,0,t,i);return this._mosaicsData.push(new Uint32Array(t*i)),this._dirties.push(!0),this._size.push([t,i]),this._textures.push(void 0),[e,this._mosaicsData.length-1,[t,i]]}let r=t%4?4-t%4:4,a=i%4?4-i%4:4;1===r&&(r=5),1===a&&(a=5);const o=this._binPack.allocate(t+r,i+a);return o.width<=0?(this._dirties[this._currentPage]||(this._mosaicsData[this._currentPage]=null),this._currentPage=this._mosaicsData.length,this._mosaicsData.push(new Uint32Array(this._pageWidth*this._pageHeight)),this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0),this._binPack=new e(this._pageWidth-4,this._pageHeight-4),this._allocateImage(t,i)):[o,this._currentPage,[this._pageWidth,this._pageHeight]]}_rasterizeDash(i){const e=/\[(.*?)\]/,s=i.match(e);if(!s)return null;const h=s[1].split(",").map(Number),r=i.slice(i.lastIndexOf("-")+1),[a,o,n]=t.rasterizeDash(h,r);return[{x:0,y:0,width:o,height:n,sdf:!0,pixelRatio:1},new Uint8Array(a.buffer)]}}export default r;
