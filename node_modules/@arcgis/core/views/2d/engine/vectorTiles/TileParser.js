/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../core/pbf.js";import{isAborted as t}from"../../../../core/promiseUtils.js";import r from"./Feature.js";import{TriangleIndexBuffer as s}from"./IndexMemoryBuffer.js";import i from"./SourceLayerData.js";import{FillVertexBuffer as o,OutlineVertexBuffer as c,LineVertexBuffer as n,CircleVertexBuffer as l,SymbolVertexBuffer as a}from"./VertexMemoryBuffer.js";import u from"./buckets/CircleBucket.js";import f from"./buckets/FillBucket.js";import p from"./buckets/LineBucket.js";import h from"./buckets/SymbolBucket.js";import{TileClipper as m,SimpleBuilder as _}from"../webgl/TileClipper.js";import{TileStatus as y}from"../../tiling/enums.js";const k=8,d=14,T=5;class w{constructor(t,r,s,i,o){if(this._pbfTiles={},this._tileClippers={},this._client=s,this._tile=r,o){this._styleLayerUIDs=new Set;for(const e of o)this._styleLayerUIDs.add(e)}this._styleRepository=i,this._layers=this._styleRepository.layers;const[c,n,l]=r.tileKey.split("/").map(parseFloat);this._level=c;const a=k+Math.max((this._level-d)*T,0);for(const u of Object.keys(t)){const r=t[u];this._pbfTiles[u]=new e(new Uint8Array(r.protobuff),new DataView(r.protobuff));if(r.refKey){const[e]=r.refKey.split("/").map(parseFloat),t=c-e;if(t>0){const e=(1<<t)-1,r=n&e,s=l&e;this._tileClippers[u]=new m(t,r,s,8,a)}}this._tileClippers[u]||(this._tileClippers[u]=new _)}}_canParseStyleLayer(e){return!this._styleLayerUIDs||this._styleLayerUIDs.has(e)}async parse(e){const t=this._initialize(e),{returnedBuckets:r}=t;this._processLayers(t),this._linkReferences(t),this._filterFeatures(t);const s=new Set,i={};for(const c of r)c.getResources(c.tileClipper,s,i);if(this._tile.status===y.INVALID)return Promise.resolve([]);const o=this._fetchResources(s,i,e);return Promise.all(o).then((()=>this._processFeatures(t.returnedBuckets)))}_initialize(e){return{signal:e&&e.signal,sourceNameToTileData:this._parseTileData(this._pbfTiles),layers:this._layers,zoom:this._level,sourceNameToTileClipper:this._tileClippers,sourceNameToUniqueSourceLayerBuckets:{},sourceNameToUniqueSourceLayers:{},returnedBuckets:[],layerIdToBucket:{},referencerUIDToReferencedId:new Map}}_processLayers(e){const{sourceNameToTileData:t,layers:r,zoom:s,sourceNameToTileClipper:i,sourceNameToUniqueSourceLayerBuckets:o,sourceNameToUniqueSourceLayers:c,returnedBuckets:n,layerIdToBucket:l,referencerUIDToReferencedId:a}=e;for(let u=r.length-1;u>=0;u--){const e=r[u];if(!this._canParseStyleLayer(e.uid)||e.minzoom&&s<Math.floor(e.minzoom)||e.maxzoom&&s>=e.maxzoom||0===e.type)continue;if(!t[e.source]||!i[e.source])continue;const f=t[e.source],p=i[e.source],h=e.sourceLayer,m=f[h];if(m){let t=c[e.source];if(t||(t=c[e.source]=new Set),t.add(e.sourceLayer),e.refLayerId)a.set(e.uid,e.refLayerId);else{const t=this._createBucket(e);if(t){t.layerUIDs=[e.uid],t.layerExtent=m.extent,t.tileClipper=p;let r=o[e.source];r||(r=o[e.source]={});let s=r[h];s||(s=r[h]=[]),s.push(t),n.push(t),l[e.id.toLowerCase()]=t}}}}}_linkReferences(e){const{layerIdToBucket:t,referencerUIDToReferencedId:r}=e;r.forEach(((e,r)=>{e=e.toLowerCase(),t[e]&&t[e].layerUIDs.push(r)}))}_filterFeatures(e){const{signal:s,sourceNameToTileData:i,sourceNameToUniqueSourceLayerBuckets:o,sourceNameToUniqueSourceLayers:c}=e,n=10*this._level,l=10*(this._level+1),a=[],u=[];for(const t of Object.keys(c)){c[t].forEach((e=>{a.push(e),u.push(t)}))}for(let f=0;f<a.length;f++){const e=u[f],c=a[f];if(!i[e]||!o[e])continue;const p=i[e][c],h=o[e][c];if(!h||0===h.length)continue;if(t(s))return;const m=p.getData();for(;m.nextTag(2);){const e=m.getMessage(),t=new r(e,p);e.release();const s=t.values;if(s){const e=s._minzoom;if(e&&e>=l)continue;const t=s._maxzoom;if(t&&t<=n)continue}for(const r of h)r.pushFeature(t)}}}_fetchResources(e,t,r){const s=[],i=this._tile.getWorkerTileHandler();let o,c;e.size>0&&(o=i.fetchSprites(e,this._client,r),s.push(o));for(const n in t){const e=t[n];e.size>0&&(c=i.fetchGlyphs(this._tile.tileKey,n,e,this._client,r),s.push(c))}return s}_processFeatures(e){const t=e.filter((e=>e.hasFeatures()||this._canParseStyleLayer(e.layer.uid)));for(const r of t)r.processFeatures(r.tileClipper);return t}_parseTileData(e){const t={};for(const r of Object.keys(e)){const s=e[r],o={};for(;s.next();)switch(s.tag()){case 3:{const e=s.getMessage(),t=new i(e);e.release(),o[t.name]=t;break}default:s.skip()}t[r]=o}return t}_createBucket(e){switch(e.type){case 0:return null;case 1:return this._createFillBucket(e);case 2:return this._createLineBucket(e);case 4:return this._createCircleBucket(e);case 3:return this._createSymbolBucket(e)}}_createFillBucket(e){return new f(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new o(e.fillMaterial.getStride()),new s,new c(e.outlineMaterial.getStride()),new s)}_createLineBucket(e){return new p(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new n(e.lineMaterial.getStride()),new s)}_createCircleBucket(e){return new u(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new l(e.circleMaterial.getStride()),new s)}_createSymbolBucket(e){const t=this._tile;return new h(e,this._level,new a(e.iconMaterial.getStride()),new s,new a(e.textMaterial.getStride()),new s,t.placementEngine,t.getWorkerTileHandler())}}export default w;
