/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../../../core/Logger.js";import{pt2px as t}from"../../../../../../core/screenUtils.js";import{premultiplyAlphaRGBAArray as i,premultiplyAlphaRGBA as r}from"../../color.js";import{MIN_MAX_ZOOM_PRECISION_FACTOR as s,SPRITE_PADDING as o}from"../../definitions.js";import{i1616to32 as l}from"../../number.js";import{getCapType as n,getJoinType as a}from"../../Utils.js";import{LineMaterialKey as m}from"../../materialKey/MaterialKey.js";import{getLimitCosine as c,getMinMaxZoom as h,DEFAULT_MIN_ZOOM as f,DEFAULT_MAX_ZOOM as d}from"./util.js";import p from"./WGLBaseLineTemplate.js";import u from"./WGLMeshTemplate.js";const L=e.getLogger("esri.views.2d.engine.webgl.WGLLineTemplate");class y extends(p(u)){constructor(e,t,i,r,o,n,a,h,f,d,p,u,L,y,_,j,S){super();const g=m.load(e);t&&(g.sdf=t.sdf,g.pattern=!0,g.textureBinding=t.textureBinding),this._capType=r,this._joinType=o,this._miterLimitCosine=c(n),this.tessellationProperties._fillColor=a,this.tessellationProperties._tl=h,this.tessellationProperties._br=f,this._hasPattern=d,this._isDashed=p,this._isColorLocked=u,this._zOrder=y,this._effects=_,this._minMaxZoom=l(Math.round(j*s),Math.round(S*s)),this._materialKey=g.data,this.tessellationProperties._bitset=u?1:0,this.tessellationProperties._halfWidth=.5*i,this.tessellationProperties._halfReferenceWidth=.5*L,this.tessellationProperties.offset=0,this._initializeTessellator(!1)}static fromCIMLine(e,i,s){const n=e.color,a=e.scaleFactor||1,m=e.isDashed;let c=e.cap;m&&1===c&&(c=2);const f=e.join,d=t(e.width)*a,p=t(e.referenceWidth),u=t(e.miterLimit),L=n&&r(n)||0,[_,j]=h(e.scaleInfo,s);if(!i)return new y(e.materialKey,i,d,c,f,u,L,0,0,!1,m,e.colorLocked,p,e.zOrder,e.effects,_,j);const{rect:S,width:g,height:w}=i,P=S.x+o,x=S.y+o,K=P+g,b=x+w,M=l(P,x),T=l(K,b);return new y(e.materialKey,i,d,c,f,u,L,M,T,!0,m,e.colorLocked,p,e.zOrder,e.effects,_,j)}static fromSimpleLine(e,r){const{color:s}=e,m="esriSLSSolid"!==e.style&&"esriSLSNull"!==e.style,c=n(e.cap||"round"),h=a(e.join||"round");let p=s&&"esriSLSNull"!==e.style&&i(s)||0;"esriSLSNull"===e.style&&(p=0);const u=t(e.width),L=e.miterLimit;if(!r)return new y(e.materialKey,r,u,c,h,L,p,0,0,!1,m,!1,u,0,null,f,d);const{rect:_,width:j,height:S}=r,g=_.x+o,w=_.y+o,P=g+j,x=w+S,K=l(g,w),b=l(P,x);return new y(e.materialKey,r,u,c,h,L,p,K,b,!0,m,!1,u,0,null,f,d)}static fromPictureLineSymbol(e,t,i,r){return L.error("PictureLineSymbol support does not exist!"),null}}export default y;
