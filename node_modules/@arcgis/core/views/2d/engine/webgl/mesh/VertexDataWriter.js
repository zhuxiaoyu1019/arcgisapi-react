/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{DISPLAY_RECORD_INT_PER_ELEMENT as t}from"../definitions.js";import{getMeshSizeHint as e}from"./heuristics.js";import s from"../util/Writer.js";class r{constructor(t,r,i){this._start={index:0,vertex:0};const h=e(t,r,i),c=r/4;this.geometryType=t,this._records=new s(Int32Array,h.recordBytes),this._indices=new s(Uint32Array,h.indexBytes),this._vertices=new s(Uint32Array,h.vertexBytes),this._metrics=new s(Float32Array,0),this._strideInt=c}serialize(t){const e=this._records.buffer(),s=this._indices.buffer(),r=this._vertices.buffer(),i=this._metrics.length?this._metrics.buffer():null,h=4*this._strideInt;return t.push(e,s,r),{stride:h,records:e,indices:s,vertices:r,metrics:i}}get strideInt(){return this._strideInt}get recordCount(){return this._records.length/t}get vertexCount(){return this._vertices.length/this._strideInt}get indexCount(){return this._indices.length}get indexWriter(){return this._indices}get vertexWriter(){return this._vertices}get metricWriter(){return this._metrics}recordStart(){this._start.index=this._indices.length,this._start.vertex=this._vertices.length}recordEnd(t,e,s,r,i,h,c){this._records.push(t),this._records.push(e),this._records.push(s),this._records.push(r),this._records.push(i),this._records.push(h),this._records.push(c)}writeIndex(t){this._indices.push(t)}writeVertex(t){this._vertices.push(t)}writeVertexF32(t){this._vertices.writeF32(t)}copyLastFrom(t,e,s){const r=t._records.length-7,i=t._records.getValue(r),h=t._records.getValue(r+1),c=t._records.getValue(r+2),n=t._records.getValue(r+4),_=t._records.getValue(r+6),d=this._vertices.length,o=(t._start.vertex-this._vertices.length)/this._strideInt,u=this._indices.length,l=this.vertexCount;for(let g=t._start.index;g!==t._indices.length;g++){const e=t._indices.getValue(g);this._indices.push(e-o)}for(let g=t._start.vertex;g!==t._vertices.length;g++){const e=t._vertices.getValue(g);this._vertices.push(e)}for(let g=d;g<=this._vertices.length;g+=this._strideInt)this._vertices.i1616Add(g,e,s);this._records.push(i),this._records.push(h),this._records.push(c),this._records.push(u),this._records.push(n),this._records.push(l),this._records.push(_)}}export{r as VertexDataWriter};
