/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{log2 as t}from"../../../../../core/mathUtils.js";import{f as h,c as i}from"../../../../../chunks/vec2f32.js";class e{constructor(t,e,s,r){this.center=h(t,e),this.centerT=i(),this.halfWidth=s/2,this.halfHeight=r/2,this.width=s,this.height=r}get x(){return this.center[0]}get y(){return this.center[1]}get blX(){return this.center[0]+this.halfWidth}get blY(){return this.center[1]+this.halfHeight}get trX(){return this.center[0]-this.halfWidth}get trY(){return this.center[1]-this.halfHeight}get xmin(){return this.x-this.halfWidth}get xmax(){return this.x+this.halfWidth}get ymin(){return this.y-this.halfHeight}get ymax(){return this.y+this.halfHeight}set x(t){this.center[0]=t}set y(t){this.center[1]=t}clone(){return new e(this.x,this.y,this.width,this.height)}serialize(t){return t.writeF32(this.center[0]),t.writeF32(this.center[1]),t.push(this.width),t.push(this.height),t}findCollisionDelta(h,i=4){const e=Math.abs(h.centerT[0]-this.centerT[0]),s=Math.abs(h.centerT[1]-this.centerT[1]),r=(h.halfWidth+this.halfWidth+i)/e,n=(h.halfHeight+this.halfHeight+i)/s,a=Math.min(r,n);return t(a)}extend(t){const h=Math.min(this.xmin,t.xmin),i=Math.min(this.ymin,t.ymin),e=Math.max(this.xmax,t.xmax)-h,s=Math.max(this.ymax,t.ymax)-i,r=h+e/2,n=i+s/2;this.width=e,this.height=s,this.halfWidth=e/2,this.halfHeight=s/2,this.x=r,this.y=n}static deserialize(t){const h=t.readF32(),i=t.readF32(),s=t.readInt32(),r=t.readInt32();return new e(h,i,s,r)}}export default e;
