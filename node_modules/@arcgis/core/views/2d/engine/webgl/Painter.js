/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/maybe.js";import"../../../webgl/BufferObject.js";import t from"../../../webgl/FramebufferObject.js";import"../../../../core/has.js";import"../../../webgl/enums.js";import"../../../webgl/RenderingContext.js";import"../../../../chunks/builtins.js";import s from"../../../webgl/Renderbuffer.js";import"../../../webgl/Texture.js";import"../../../webgl/VertexArrayObject.js";import{brushes as r}from"../brushes.js";import i from"../vectorTiles/shaders/VTLMaterialManager.js";import{BitBlitRenderer as n}from"./BitBlitRenderer.js";import{WGLDrawPhase as o,WGLGeometryType as a}from"./enums.js";import h from"./MaterialManager.js";import f from"./TextureManager.js";import{AnimationEffect as l}from"./effects/AnimationEffect.js";import{BlendEffect as c}from"./effects/BlendEffect.js";import{FeatureEffect as b}from"./effects/FeatureEffect.js";import u from"./effects/HighlightEffect.js";import{HittestEffect as d}from"./effects/HittestEffect.js";import{EffectManager as g}from"./effects/post-processing/EffectManager.js";import _ from"./painter/RenderPass.js";class p{constructor(e,t){this.context=e,this._blitRenderer=new n,this._brushCache=new Map,this._vtlMaterialManager=new i,this._blendEffect=new c,this.effects={highlight:new u,hittest:new d,integrate:new l,insideEffect:new b("inside"),outsideEffect:new b("outside")},this.materialManager=new h(e),this.textureManager=new f(t),this._effectsManager=new g(t)}get vectorTilesMaterialManager(){return this._vtlMaterialManager}getRenderTarget(){return this._renderTarget}setRenderTarget(e){this._renderTarget=e}getFbos(e,r){if(e!==this._lastWidth||r!==this._lastHeight){if(this._lastWidth=e,this._lastHeight=r,this._fbos){for(const t in this._fbos)this._fbos[t].resize(e,r);return this._fbos}const i={target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071,width:e,height:r},n={colorTarget:0,depthStencilTarget:3},o=new s(this.context,{width:e,height:r,internalFormat:34041});this._stencilBuf=o,this._fbos={output:new t(this.context,n,i,o),blend:new t(this.context,n,i,o),effect0:new t(this.context,n,i,o)}}return this._fbos}getSharedStencilBuffer(){return this._stencilBuf}beforeRenderLayers(t,s=null){const{width:r,height:i}=t.getViewport();this._prevFBO=t.getBoundFramebufferObject();const n=this.getFbos(r,i);if(t.bindFramebuffer(n.output),t.setColorMask(!0,!0,!0,!0),t.setDepthWriteEnabled(!0),e(s)){const{r:e,g:r,b:i,a:n}=s.color;t.setClearColor(n*e/255,n*r/255,n*i/255,n)}else t.setClearColor(0,0,0,0);t.setClearDepth(1),t.clear(t.gl.COLOR_BUFFER_BIT|t.gl.DEPTH_BUFFER_BIT),t.setDepthWriteEnabled(!1)}beforeRenderLayer(e,t,s){const{context:r,blendMode:i,effects:n,requireFBO:o}=e;if(o||m(i,n,s))r.bindFramebuffer(this._fbos.blend),r.setColorMask(!0,!0,!0,!0),r.setClearColor(0,0,0,0),r.setDepthWriteEnabled(!0),r.setClearDepth(1),r.clear(r.gl.COLOR_BUFFER_BIT|r.gl.DEPTH_BUFFER_BIT),r.setDepthWriteEnabled(!1);else{const e=this._getOutputFBO();r.bindFramebuffer(e)}r.setDepthWriteEnabled(!1),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!0),r.setClearStencil(t),r.setStencilWriteMask(255),r.clear(r.gl.STENCIL_BUFFER_BIT)}compositeLayer(t,s){const{context:r,blendMode:i,effects:n,requireFBO:a}=t;if(a||m(i,n,s)){e(n)&&n.length>0&&t.drawPhase===o.MAP&&this._applyEffects(t,n);const a=this._getOutputFBO();r.bindFramebuffer(a),r.setStencilTestEnabled(!1),r.setStencilWriteMask(0),r.setBlendingEnabled(!0),r.setBlendFunctionSeparate(1,771,1,771),r.setColorMask(!0,!0,!0,!0);const h=e(i)?i:"normal";this._blendEffect.draw(t,this._fbos.blend.colorTexture,9728,h,s)}}renderLayers(e){if(e.bindFramebuffer(this._prevFBO),!this._fbos)return;const t=this._getOutputFBO();e.setStencilTestEnabled(!1),e.setStencilWriteMask(0),this.blitTexture(e,t.colorTexture,9728)}dispose(){if(this.materialManager.dispose(),this.textureManager.dispose(),this._blitRenderer&&(this._blitRenderer.dispose(),this._blitRenderer=null),this._brushCache&&(this._brushCache.forEach((e=>e.dispose())),this._brushCache.clear(),this._brushCache=null),this._fbos)for(const e in this._fbos)this._fbos[e]&&this._fbos[e].dispose();if(this.effects)for(const e in this.effects)this.effects[e]&&this.effects[e].dispose();this._vtlMaterialManager&&(this._vtlMaterialManager.dispose(),this._vtlMaterialManager=null),this._prevFBO=null}getGeometryBrush(e){const t={[a.FILL]:r.fill,[a.LINE]:r.line,[a.MARKER]:r.marker,[a.TEXT]:r.text}[e];let s=this._brushCache.get(t);return void 0===s&&(s=new t,this._brushCache.set(t,s)),this._brushCache.get(t)}renderObject(e,t,s,i){const n=r[s];if(!n)return null;let o=this._brushCache.get(n);void 0===o&&(o=new n,this._brushCache.set(n,o)),o.prepareState(e,t,i),o.draw(e,t,i)}renderObjects(e,t,s,i){const n=r[s];if(!n)return null;let o=this._brushCache.get(n);void 0===o&&(o=new n,this._brushCache.set(n,o)),o.drawMany(e,t,i)}registerRenderPass(e){const t=e.brushes.map((e=>(this._brushCache.has(e)||this._brushCache.set(e,new e),this._brushCache.get(e))));return new _(t,e)}setHighlightOptions(e){this.effects.highlight.setHighlightOptions(e)}blitTexture(e,t,s,r=1){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(1,771,1,771),e.setColorMask(!0,!0,!0,!0),this._blitRenderer.render(e,t,s,r)}getPostProcessingEffects(e){return this._effectsManager.getPostProcessingEffects(e)}_getOutputFBO(){return null!=this._renderTarget?this._renderTarget:this._fbos.output}_applyEffects(e,t){const{context:s}=e,r=this._effectsManager.getPostProcessingEffects(t);for(const{postProcessingEffect:i,effect:n}of r)s.bindFramebuffer(this._fbos.blend),i.draw(e,this._fbos.blend,n)}}function m(t,s,r){return 1!==r||e(t)&&"normal"!==t||e(s)&&s.length>0}export default p;
