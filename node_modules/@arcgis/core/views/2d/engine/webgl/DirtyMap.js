/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{createGeometryData as t}from"./Utils.js";function i(t,i,r){if(!t.allDirty)if(null!=t.from&&null!=t.count){const s=Math.min(t.from,i),l=Math.max(t.from+t.count,i+r)-s;t.from=s,t.count=l}else t.from=i,t.count=r}class r{constructor(){this._dirties=t((()=>({indices:{from:null,count:null,allDirty:!1}})),(()=>({vertices:{from:null,count:null,allDirty:!1}})))}hasDirty(){for(const t of this._dirties)if(null!==t.data.indices.count||t.data.indices.allDirty)return!0;return!1}markAllClean(){for(const t of this._dirties){t.data.indices.from=null,t.data.indices.count=null,t.data.indices.allDirty=!1;for(const i in t.buffers)t.buffers[i].data.vertices.from=null,t.buffers[i].data.vertices.count=null,t.buffers[i].data.vertices.allDirty=!1}}markAllDirty(){for(const t of this._dirties){t.data.indices.allDirty=!0;for(const i in t.buffers)t.buffers[i].data.vertices.allDirty=!0}}forEach(t){for(let i=0;i<this._dirties.length;++i){const r=this._dirties[i],s={};for(const t in r.buffers){const i=r.buffers[t].data.vertices;(i.allDirty||null!=i.from&&null!=i.count&&i.count>0)&&(s[t]=i)}const l=r.data.indices;let n;n=l.allDirty||null!=l.from&&null!=l.count&&l.count>0?{indices:l,vertices:s}:{indices:null,vertices:s},(n.indices||Object.keys(n).length>0)&&t(n,i)}}markDirtyIndices(t,r,s){i(this._dirties[t].data.indices,r,s)}markDirtyVertices(t,r,s,l){i(this._dirties[t].buffers[r].data.vertices,s,l)}}export default r;
