/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import o from"../../../../../../core/Logger.js";import"../../../../../webgl/BufferObject.js";import"../../../../../webgl/FramebufferObject.js";import"../../../../../../core/has.js";import"../../../../../webgl/enums.js";import"../../../../../webgl/RenderingContext.js";import"../../../../../../chunks/builtins.js";import i from"../../../../../webgl/Texture.js";import"../../../../../webgl/VertexArrayObject.js";import{TEXTURE_BINDING_HIGHLIGHT_1 as t}from"../../definitions.js";import{HIGHLIGHT_SIZING as e,SHADE_TEXTURE_SIZE as l,SIGMA as r}from"./parameters.js";const n=o.getLogger("esri.views.2d.engine.webgl.painter.highlight.HighlightGradient");function h(o,i){i.fillColor[0]=o.color.r/255,i.fillColor[1]=o.color.g/255,i.fillColor[2]=o.color.b/255,i.fillColor[3]=o.color.a,o.haloColor?(i.outlineColor[0]=o.haloColor.r/255,i.outlineColor[1]=o.haloColor.g/255,i.outlineColor[2]=o.haloColor.b/255,i.outlineColor[3]=o.haloColor.a):(i.outlineColor[0]=i.fillColor[0],i.outlineColor[1]=i.fillColor[1],i.outlineColor[2]=i.fillColor[2],i.outlineColor[3]=i.fillColor[3]),i.fillColor[3]*=o.fillOpacity,i.outlineColor[3]*=o.haloOpacity,i.fillColor[0]*=i.fillColor[3],i.fillColor[1]*=i.fillColor[3],i.fillColor[2]*=i.fillColor[3],i.outlineColor[0]*=i.outlineColor[3],i.outlineColor[1]*=i.outlineColor[3],i.outlineColor[2]*=i.outlineColor[3],i.outlineWidth=e.outlineWidth,i.outerHaloWidth=e.outerHaloWidth,i.innerHaloWidth=e.innerHaloWidth,i.outlinePosition=e.outlinePosition}const s=[0,0,0,0];class a{constructor(){this._convertedHighlightOptions={fillColor:[.2*.75,.6*.75,.675,.75],outlineColor:[.2*.9,.54,.81,.9],outlinePosition:e.outlinePosition,outlineWidth:e.outlineWidth,innerHaloWidth:e.innerHaloWidth,outerHaloWidth:e.outerHaloWidth},this.shadeTexChanged=!0,this.texelData=new Uint8Array(4*l),this.minMaxDistance=[0,0]}setHighlightOptions(o){const i=this._convertedHighlightOptions;h(o,i);const t=i.outlinePosition-i.outlineWidth/2-i.outerHaloWidth,e=i.outlinePosition-i.outlineWidth/2,a=i.outlinePosition+i.outlineWidth/2,u=i.outlinePosition+i.outlineWidth/2+i.innerHaloWidth,d=Math.sqrt(Math.PI/2)*r,g=Math.abs(t)>d?Math.round(10*(Math.abs(t)-d))/10:0,f=Math.abs(u)>d?Math.round(10*(Math.abs(u)-d))/10:0;let C;g&&!f?n.error("The outer rim of the highlight is "+g+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards positive values (inwards)."):!g&&f?n.error("The inner rim of the highlight is "+f+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards negative values (outwards)."):g&&f&&n.error("The highlight is "+Math.max(g,f)+"px away from the edge of the feature; consider reducing some width values.");const c=[void 0,void 0,void 0,void 0];function m(o,i,t){c[0]=(1-t)*o[0]+t*i[0],c[1]=(1-t)*o[1]+t*i[1],c[2]=(1-t)*o[2]+t*i[2],c[3]=(1-t)*o[3]+t*i[3]}const{texelData:p}=this;for(let r=0;r<l;++r)C=t+r/(l-1)*(u-t),C<t?(c[4*r+0]=0,c[4*r+1]=0,c[4*r+2]=0,c[4*r+3]=0):C<e?m(s,i.outlineColor,(C-t)/(e-t)):C<a?[c[0],c[1],c[2],c[3]]=i.outlineColor:C<u?m(i.outlineColor,i.fillColor,(C-a)/(u-a)):[c[4*r+0],c[4*r+1],c[4*r+2],c[4*r+3]]=i.fillColor,p[4*r+0]=255*c[0],p[4*r+1]=255*c[1],p[4*r+2]=255*c[2],p[4*r+3]=255*c[3];this.minMaxDistance[0]=t,this.minMaxDistance[1]=u,this.shadeTexChanged=!0}applyHighlightOptions(o,e){this.shadeTex||(this.shadeTex=new i(o,{target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,width:l,height:1,samplingMode:9729})),this.shadeTexChanged&&(this.shadeTex.updateData(0,0,0,l,1,this.texelData),this.shadeTexChanged=!1),o.bindTexture(this.shadeTex,t),e.setUniform2fv("u_minMaxDistance",this.minMaxDistance)}destroy(){this.shadeTex&&(this.shadeTex.dispose(),this.shadeTex=null)}}export default a;
