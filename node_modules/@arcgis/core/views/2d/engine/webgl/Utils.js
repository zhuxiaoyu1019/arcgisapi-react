/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../core/Error.js";import t from"../../../../core/Logger.js";import{isPowerOfTwo as r}from"../../../../core/mathUtils.js";import{pt2px as n}from"../../../../core/screenUtils.js";import{copyAndPremultiply as o}from"./color.js";import{WGLGeometryType as s,VVType as i}from"./enums.js";import{TextProperties as a}from"./SymbolProperties.js";import c from"../../../webgl/Texture.js";const u=t.getLogger("esri.views.2d.engine.webgl.Utils"),f="geometry",l="per_instance",d="per_instance_vv",m=[{name:f,strideInBytes:36,divisor:0}],p=[{name:f,strideInBytes:36,divisor:0}],h=[{name:f,strideInBytes:12,divisor:0}],w=[{name:f,strideInBytes:40,divisor:0}],v=[{name:f,strideInBytes:36,divisor:0}],y=[{name:f,strideInBytes:36,divisor:0}];function g(e){const t={};for(const r of e)t[r.name]=r.strideInBytes;return t}const A=g(m),L=g(p),I=g(h),E=g(w),b=g(v),M=g(y);function T(e,t){switch(e){case s.MARKER:return A;case s.FILL:return t?I:L;case s.LINE:return E;case s.TEXT:return b;case s.LABEL:return M}}const x=[f],U=[f],B=[f],F=[f],z=[f];function j(e){switch(e){case s.MARKER:return x;case s.FILL:return U;case s.LINE:return B;case s.TEXT:return F;case s.LABEL:return z}}function C(e){switch(e%4){case 0:case 2:return 4;case 1:case 3:return 1}}function R(e,t){switch(t%4){case 0:case 2:return new Uint32Array(Math.floor(e*t/4));case 1:case 3:return new Uint8Array(e*t)}}function O(e,t){switch(t%4){case 0:case 2:return new Uint32Array(e);case 1:case 3:return new Uint8Array(e)}}function $(e){return a.pool.acquire(e.color?o(e.color):[255,255,255,255],e.haloColor?o(e.haloColor):[255,255,255,255],n(e.haloSize),n(e.font.size),e.angle*Math.PI/180,e.xoffset/e.font.size,e.yoffset/e.font.size,"left"===e.horizontalAlignment?0:"right"===e.horizontalAlignment?1:.5,"top"===e.verticalAlignment?0:"bottom"===e.verticalAlignment?1:.5)}function N(e){return null!=e}function K(e){return"number"==typeof e}function P(t){switch(t){case"butt":return 0;case"round":return 1;case"square":return 2;default:return u.error(new e("mapview-invalid-type",`Cap type ${t} is not a valid option. Defaulting to round`)),1}}function S(t){switch(t){case"miter":return 2;case"bevel":return 0;case"round":return 1;default:return u.error(new e("mapview-invalid-type",`Join type ${t} is not a valid option. Defaulting to round`)),1}}function X(e){switch(e){case"opacity":return i.OPACITY;case"color":return i.COLOR;case"rotation":return i.ROTATION;case"size":return i.SIZE;default:return u.error(`Cannot interpret unknown vv: ${e}`),null}}function Z(e){const{transform:t,hasZ:r,hasM:n}=e;return{transform:t,hasZ:r,hasM:n}}function _(e,t,r,n,o,s,i){for(const c in s){const t=s[c].stride,n=C(t),i=s[c].data,a=r[c].data,u=t*o.vertexCount/n,f=t*e/n,l=t*o.vertexFrom/n;for(let e=0;e<u;++e)a[e+f]=i[e+l]}const a=o.indexCount;for(let c=0;c<a;++c)n[c+t]=i[c+o.indexFrom]-o.vertexFrom+e}const q={[f]:35044};function D(e,t){const r=[];for(let n=0;n<5;++n){const o=j(n),s={};for(const e of o)s[e]={data:t(n,e)};r.push({data:e(n),buffers:s})}return r}function k(e,t){let n,o;return r(t.width)&&r(t.height)?(n=!0,o=9987):(n=!1,o=9729),new c(e,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,hasMipmap:n,samplingMode:o,wrapMode:33071,flipped:!0},t)}function J(e){return{vertexFrom:void 0,vertexTo:void 0,geometry:e}}function Y(e){switch(e){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5126:case 5124:case 5125:return 4}}function G(t){switch(t){case 5121:return 1;case 32819:return 2;case 5126:return 4;default:return void u.error(new e("webgl-utils",`Unable to handle type ${t}`))}}function H(t){switch(t){case 5121:return Uint8Array;case 32819:return Uint16Array;case 5126:return Float32Array;default:return void u.error(new e("webgl-utils",`Unable to handle type ${t}`))}}function Q(e){const t={};for(const r in e){const n=e[r];let o=0;t[r]=n.map((e=>{const t={...e,normalized:e.normalized||!1,divisor:e.divisor||0,offset:o,stride:0};return o+=e.count*Y(e.type),t})),t[r].forEach((e=>e.stride=o))}return t}const V=e=>{const t=new Map;for(const r in e)for(const n of e[r])t.set(n.name,n.location);return t},W=e=>{const t={};for(const r in e){const n=e[r];t[r]=n.length?n[0].stride:0}return t},ee=new Map,te=(e,t)=>{if(!ee.has(e)){const r=Q(t),n={strides:W(r),bufferLayouts:r,attributes:V(t)};ee.set(e,n)}return ee.get(e)};function re(e){e(s.FILL),e(s.LINE),e(s.MARKER),e(s.TEXT),e(s.LABEL)}export{L as C_FILL_STRIDE_SPEC,I as C_FILL_STRIDE_SPEC_DD,p as C_FILL_VERTEX_DEF,h as C_FILL_VERTEX_DEF_DD,A as C_ICON_STRIDE_SPEC,m as C_ICON_VERTEX_DEF,M as C_LABEL_STRIDE_SPEC,y as C_LABEL_VERTEX_DEF,E as C_LINE_STRIDE_SPEC,w as C_LINE_VERTEX_DEF,b as C_TEXT_STRIDE_SPEC,v as C_TEXT_VERTEX_DEF,f as C_VBO_GEOMETRY,q as C_VBO_INFO,l as C_VBO_PERINSTANCE,d as C_VBO_PERINSTANCE_VV,R as allocateTypedArrayBuffer,O as allocateTypedArrayBufferwithData,_ as copyMeshData,D as createGeometryData,te as createProgramDescriptor,k as createTextureFromTexelData,re as forEachGeometryType,J as geometryToMappedGeometry,Y as getBytes,P as getCapType,S as getJoinType,j as getNamedBuffers,H as getPixelArrayCtor,G as getPixelBytes,T as getStrides,$ as getTextProperties,Z as getTransformParams,X as getVVType,N as isDefined,K as isNumber,C as strideToPackingFactor};
