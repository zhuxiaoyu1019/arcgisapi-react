/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Accessor.js";import s from"../../core/Logger.js";import{isNone as r,isSome as i}from"../../core/maybe.js";import a from"../../core/PerformanceSampler.js";import n from"../../core/PooledArray.js";import{isAborted as o,createAbortError as u,when as h}from"../../core/promiseUtils.js";import{Milliseconds as _}from"../../core/time.js";import{init as d}from"../../core/watchUtils.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as E}from"../../core/accessorSupport/decorators/subclass.js";import c from"../../layers/support/PromiseQueue.js";import T from"./debugFlags.js";const m=s.getLogger("esri.views.support.Scheduler");function g(e){return new U.Scheduler({nowFunc:e})}var p;!function(e){e.RESOURCE_CONTROLLER="schedule",e.SLIDE="slide",e.STREAM_DATA_LOADER="stream loader",e.ELEVATION_QUERY="elevation query",e.TERRAIN_SURFACE="terrain",e.SURFACE_GEOMETRY_UPDATES="surface geometry updates",e.GRAPHICS_CORE="Graphics3D",e.I3S_CONTROLLER="I3S",e.POINT_CLOUD_LAYER="point cloud",e.FEATURE_TILE_FETCHER="feature fetcher",e.STAGE="stage",e.GRAPHICS_DECONFLICTOR="graphics deconflictor",e.FILTER_VISIBILITY="Graphics3D filter visibility",e.SCALE_VISIBILITY="Graphics3D scale visibility",e.FRUSTUM_VISIBILITY="Graphics3D frustum visibility",e.POINT_OF_INTEREST_FREQUENT="POI frequent",e.POINT_OF_INTEREST_INFREQUENT="POI infrequent",e.LABELER="labeler",e.FEATURE_QUERY_ENGINE="feature query",e.FEATURE_TILE_TREE="feature tile tree",e.FEATURE_TILE_TREE_ACTIVE="fast feature tile tree",e.ELEVATION_ALIGNMENT="elevation alignment",e.TEXT_TEXTURE_ATLAS="text texture atlas",e.TEXTURE_UNLOAD="texture unload",e.OVERLAY_MANAGER="overlay manager",e.LINE_OF_SIGHT_TOOL="line of sight tool",e.LINE_OF_SIGHT_TOOL_INTERACTIVE="interactive line of sight tool",e.ELEVATION_PROFILE="elevation profile",e.SNAPPING="snapping",e.SHADOW_ACCUMULATOR="shadow accumulator",e[e.TEST_PRIO=1]="TEST_PRIO"}(p||(p={}));const I=0,R=new Map([[p.RESOURCE_CONTROLLER,I],[p.SLIDE,I],[p.STREAM_DATA_LOADER,I],[p.ELEVATION_QUERY,I],[p.TERRAIN_SURFACE,1],[p.SURFACE_GEOMETRY_UPDATES,1],[p.GRAPHICS_CORE,2],[p.I3S_CONTROLLER,2],[p.POINT_CLOUD_LAYER,2],[p.FEATURE_TILE_FETCHER,2],[p.STAGE,4],[p.GRAPHICS_DECONFLICTOR,4],[p.FILTER_VISIBILITY,4],[p.SCALE_VISIBILITY,4],[p.FRUSTUM_VISIBILITY,4],[p.POINT_OF_INTEREST_FREQUENT,6],[p.POINT_OF_INTEREST_INFREQUENT,30],[p.LABELER,8],[p.FEATURE_QUERY_ENGINE,8],[p.FEATURE_TILE_TREE,16],[p.FEATURE_TILE_TREE_ACTIVE,I],[p.ELEVATION_ALIGNMENT,12],[p.TEXT_TEXTURE_ATLAS,12],[p.TEXTURE_UNLOAD,12],[p.OVERLAY_MANAGER,12],[p.LINE_OF_SIGHT_TOOL,16],[p.LINE_OF_SIGHT_TOOL_INTERACTIVE,I],[p.SNAPPING,I],[p.SHADOW_ACCUMULATOR,30]]);function f(e){return R.has(e)?R.get(e):"number"==typeof e?e:1}const A=_(6.5),S=_(1),b=_(30),L=_(1e3/30),k=_(100),O=.9;var U,P;!function(s){let o=class extends t{constructor(e){super(e),this.updating=!0,this.performanceInfo={total:new a("total"),tasks:new Map},this._frameTaskTimes=new Map,this._budget=null,this._state=1,this._tasks=new n,this._runQueue=new n,this._load=0,this._idleStateCallbacks=new n,this._idleUpdatesStartFired=!1,this._maxReschedule=C,this._forceTask=!1,this._debug=!1,this._debugHandle=d(T,"SCHEDULER_LOG_SLOW_TASKS",(e=>this._debug=e)),this._budget=new h(e.nowFunc);for(const r of Object.keys(p))this.performanceInfo.tasks.set(p[r],new a(p[r]));let t;const s=this;this._test={get state(){return r(t)?s._state:t},set state(e){t=e},FRAME_SAFETY_BUDGET:A,INTERACTING_BUDGET:L,IDLE_BUDGET:k,get budget(){return s._budget.budget},usedBudget:0,updateTask:e=>this._updateTask(e),getState:e=>this._getState(e),getRuntime:e=>this._getRuntime(e),resetRuntimes:()=>this._resetRuntimes(),getRunning:()=>this._getRunning()}}destroy(){this._debugHandle&&this._debugHandle.remove()}registerTask(e,t){const s=f(e),r=new u(this,e,t,s);return this._tasks.push(r),this.performanceInfo.tasks.has(e)||this.performanceInfo.tasks.set(e,new a(e)),r}registerIdleStateCallbacks(e,t){const s={idleBegin:e,idleEnd:t};this._idleStateCallbacks.push(s),2===this.state&&this._idleUpdatesStartFired&&s.idleBegin();const r=this;return{remove:()=>this._removeIdleStateCallbacks(s),set idleBegin(e){r._idleUpdatesStartFired&&(s.idleEnd(),2===r._state&&e()),s.idleBegin=e},set idleEnd(e){s.idleEnd=e}}}get now(){return this.nowFunc()}get load(){return this._load}set state(e){this._state!==e&&(this._state=e,2!==this.state&&this._idleUpdatesStartFired&&(this._idleUpdatesStartFired=!1,this._idleStateCallbacks.forAll((e=>e.idleEnd()))))}get state(){return r(this._test.state)?this._state:this._test.state}updateBudget(e){this._test.usedBudget=0;let t=A,s=e.frameDuration,r=S;switch(this.state){case 2:t=_(0),s=_(Math.max(k,e.frameDuration)),r=b;break;case 1:s=_(Math.max(L,e.frameDuration))}return s=_(s-e.elapsedFrameTime-t),2!==this.state&&s<S&&!this._forceTask?(this._forceTask=!0,!1):(s=_(Math.max(s,r)),this._budget.reset(s,this.state),this._maxReschedule=C,this._updateLoad(),this._schedule())}frame(){switch(this._forceTask=!1,this.state){case 2:this._idleUpdatesStartFired||(this._idleUpdatesStartFired=!0,this._idleStateCallbacks.forAll((e=>e.idleBegin()))),this._runIdle();break;case 1:this._runInteracting();break;default:this._runAnimating()}this._test.usedBudget=this._budget.elapsed}stopFrame(){this._budget.reset(_(0),this._state),this._budget.madeProgress()}_removeIdleStateCallbacks(e){this._idleUpdatesStartFired&&e.idleEnd(),this._idleStateCallbacks.removeUnordered(e)}removeTask(e){this._tasks.removeUnordered(e),this._runQueue.removeUnordered(e)}_updateTask(e){this._tasks.forAll((t=>{t.name===e&&t.setPriority(e)}))}_getState(e){if(this._runQueue.some((t=>t.name===e)))return P.SCHEDULED;let t=P.IDLE;return this._tasks.forAll((s=>{s.name===e&&s.needsUpdate&&(s.schedulePriority<=1?t=P.READY:t!==P.READY&&(t=P.WAITING))})),t}_getRuntime(e){let t=0;return this._tasks.forAll((s=>{s.name===e&&(t+=s.runtime)})),t}_resetRuntimes(){this._tasks.forAll((e=>e.runtime=0))}_getRunning(){const e=new Map;if(this._tasks.forAll((t=>{t.needsUpdate&&e.set(t.name,(e.get(t.name)||0)+1)})),0===e.size)return null;let t="";return e.forEach(((e,s)=>{t+=e>1?` ${e}x ${s}`:` ${s}`})),t}_runIdle(){this._run()}_runInteracting(){this._run()}_runAnimating(){this._run()}_updateLoad(){const e=this._tasks.reduce(((e,t)=>t.needsUpdate?++e:e),0);this._load=this._load*O+e*(1-O)}_schedule(){if(this._maxReschedule<=0)return!1;for(this._runQueue.filterInPlace((e=>!!e.needsUpdate||(e.schedulePriority=e.basePriority,!1))),this._tasks.forAll((e=>{e.basePriority===I&&e.needsUpdate&&!this._runQueue.some((t=>t===e))&&this._runQueue.unshift(e)}));0===this._runQueue.length;){let e=!1,t=0;if(this._tasks.forAll((s=>{if(s.needsUpdate&&0!==s.schedulePriority&&s.basePriority!==I)switch(e=!0,t=Math.max(t,s.basePriority),s.schedulePriority){case 1:s.schedulePriority=0,this._runQueue.push(s);break;default:--s.schedulePriority}})),!e)return this.updating=!1,!1;this._maxReschedule===C&&(this._maxReschedule=t),--this._maxReschedule}return this.updating=!0,!0}_run(){const e=this._budget.now();this._startFrameTaskTimes();do{for(;this._runQueue.length>0;){const s=this._budget.now(),r=this._runQueue.pop();this._budget.resetProgress();try{r.task.runTask(this._budget)}catch(t){m.error(`Exception in task "${r.name}"`,t)}r.schedulePriority=r.basePriority;const i=this._budget.now()-s;if(r.runtime+=i,this._frameTaskTimes.set(r.priority,this._frameTaskTimes.get(r.priority)+i),this._debug&&this._budget.elapsed>2*this._budget.budget&&console.log("Task",r.name,"used",this._budget.elapsed,"of max",this._budget.budget,"ms"),this._budget.remaining<=0)return void this._recordFrameTaskTimes(this._budget.now()-e)}}while(this._schedule());this._recordFrameTaskTimes(this._budget.now()-e)}_startFrameTaskTimes(){for(const e of Object.keys(p))this._frameTaskTimes.set(p[e],0)}_recordFrameTaskTimes(e){this._frameTaskTimes.forEach(((e,t)=>this.performanceInfo.tasks.get(t).record(e))),this.performanceInfo.total.record(e)}get test(){return this._test}};e([l()],o.prototype,"updating",void 0),e([l()],o.prototype,"nowFunc",void 0),o=e([E("esri.views.support.Scheduler")],o),s.Scheduler=o;let u=class extends t{constructor(e,t,s,r){super({}),this._scheduler=e,this.name=t,this._basePriority=r,this.runtime=0,this._queue=new c,this.updating=!1,this.schedulePriority=this._basePriority,this.task=i(s)?s:{running:!1,runTask:e=>this.processQueue(e)}}normalizeCtorArgs(){return{}}remove(){this.processQueue(N),this._scheduler.removeTask(this),this.schedule=y.schedule,this.reschedule=y.reschedule}get basePriority(){return this._basePriority}setPriority(e){this.name=e;const t=f(e);this._basePriority!==I&&0===this.schedulePriority||(this.schedulePriority=t),this._basePriority=t}get priority(){return this.name}set priority(e){this.setPriority(e)}get needsUpdate(){return this.updating||this.task.running}schedule(e,t,s){return this.updating=!0,this._queue.push(e,t,s)}reschedule(e,t,s){return this.updating=!0,this._queue.unshift(e,t,s)}processQueue(e){for(;!e.done&&this._queue.process();)e.madeProgress();this.updating=this._queue.length>0}};e([l()],u.prototype,"updating",void 0),u=e([E("esri.views.support.SchedulerTask")],u);class h{constructor(e){this.now=e,this._begin=0,this._budget=0,this._state=2,this._didWork=!1,this._enabled=!0}run(e){return!this.done&&(!0===e()&&(this._didWork=!0),!0)}get done(){return this._didWork&&this.elapsed>=this._budget&&this._enabled}get budget(){return this._budget}madeProgress(){this._didWork=!0}get state(){return this._state}get enabled(){return this._enabled}set enabled(e){this._enabled=e}reset(e,t){this._begin=this.now(),this._budget=e,this._state=t,this._didWork=!1}get remaining(){return Math.max(this._budget-this.elapsed,0)}get elapsed(){return this.now()-this._begin}resetProgress(){this._didWork=!1}get hasProgressed(){return this._didWork}}s.Budget=h}(U||(U={})),function(e){e.SCHEDULED="s",e.READY="r",e.WAITING="w",e.IDLE="i"}(P||(P={}));const N=(()=>{const e=new U.Budget((()=>performance.now()));return e.enabled=!1,e})();class F{remove(){}processQueue(){}schedule(e,t,s){try{if(o(t)){const e=u();return s?Promise.resolve(s(e)):Promise.reject(e)}return h(e())}catch(r){return Promise.reject(r)}}reschedule(e,t,s){return this.schedule(e,t,s)}}const y=new F,C=Number.MAX_SAFE_INTEGER;export{y as ImmediateTask,p as TaskPriority,P as TaskState,f as getTaskPriority,g as newScheduler,N as noBudget,R as taskPriorities};
