/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as i}from"../../../chunks/tslib.es6.js";import"../../../symbols.js";import t from"../../../core/Evented.js";import e from"../../../core/Handles.js";import{clone as r}from"../../../core/lang.js";import{destroyMaybe as s,isSome as o,isNone as a}from"../../../core/maybe.js";import{watch as h,whenOnce as c}from"../../../core/watchUtils.js";import{property as n}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/has.js";import"../../../core/Logger.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import p from"../../../layers/GraphicsLayer.js";import{cloneMove as d}from"./drawUtils.js";import{addUniqueLayer as v}from"./layerUtils.js";import{GraphicClickEvent as m,GraphicDoubleClickEvent as _,GraphicPointerDownEvent as y,GraphicPointerUpEvent as u,GraphicPointerOutEvent as g,GraphicMoveStartEvent as f,GraphicMoveEvent as G,GraphicMoveStopEvent as w,GraphicPointerOverEvent as b}from"./input/GraphicMoverEvents.js";import{ViewEventPriorities as k}from"../../input/InputManager.js";import{GraphicManipulator as O}from"../../interactive/GraphicManipulator.js";import{createScreenPointFromEvent as x}from"../../support/screenUtils.js";import M from"../../../symbols/SimpleMarkerSymbol.js";import j from"../../../symbols/SimpleLineSymbol.js";import E from"../../../symbols/SimpleFillSymbol.js";let H=class extends t.EventedAccessor{constructor(i){super(i),this._activeGraphic=null,this._indicators=[],this._dragEvent=null,this._handles=new e,this._hoverGraphic=null,this._initialDragGeometry=null,this._viewHandles=new e,this._manipulators=[],this.type="graphic-mover",this.callbacks={onGraphicClick(){},onGraphicDoubleClick(){},onGraphicMoveStart(){},onGraphicMove(){},onGraphicMoveStop(){},onGraphicPointerOver(){},onGraphicPointerOut(){},onGraphicPointerDown(){},onGraphicPointerUp(){}},this.enableMoveAllGraphics=!1,this.graphics=[],this.indicatorsEnabled=!0,this.layer=new p({listMode:"hide",internal:!0,title:"GraphicMover highlight layer"}),this.view=null}initialize(){v(this.view,this.layer),this.refresh(),this._handles.add([h(this,["graphics","graphics.length"],(()=>this.refresh())),c(this,"view.ready",(()=>{this._viewHandles.add([this.view.on("immediate-click",(i=>this._clickHandler(i)),k.TOOL),this.view.on("double-click",(i=>this._doubleClickHandler(i)),k.TOOL),this.view.on("pointer-down",(i=>this._pointerDownHandler(i)),k.TOOL),this.view.on("pointer-move",(i=>this._pointerMoveHandler(i)),k.TOOL),this.view.on("pointer-up",(i=>this._pointerUpHandler(i)),k.TOOL),this.view.on("drag",(i=>this._dragHandler(i)),k.TOOL),this.view.on("key-down",(i=>this._keyDownHandler(i)),k.TOOL)])}))])}destroy(){var i;this._removeIndicators(),null==(i=this.view.map)||i.remove(this.layer),this.layer.destroy(),this.reset(),this._manipulators.forEach((i=>i.destroy())),this._manipulators=null,this._handles=s(this._handles),this._viewHandles=s(this._viewHandles)}get state(){const i=!!this.get("view.ready"),t=!!this.get("graphics.length"),e=this._activeGraphic;return i&&t?e?"moving":"active":i?"ready":"disabled"}refresh(){this._setUpIndicators(),this._setUpManipulators()}reset(){this._activeGraphic=null,this._hoverGraphic=null,this._dragEvent=null}updateGeometry(i,t){const e=this.graphics[i];e&&(e.set("geometry",t),this._setUpIndicators())}_clickHandler(i){const t=this._findTargetGraphic(x(i));if(t){const e=new m(t,this.graphics.indexOf(t),i.x,i.y,i);this.emit("graphic-click",e),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(e)}}_doubleClickHandler(i){const t=this._findTargetGraphic(x(i));if(t){const e=new _(t,this.graphics.indexOf(t),i.x,i.y,i);this.emit("graphic-double-click",e),this.callbacks.onGraphicDoubleClick&&this.callbacks.onGraphicDoubleClick(e)}}_pointerDownHandler(i){const t=this._findTargetGraphic(x(i));if(t){this._activeGraphic=t;const{x:e,y:r}=i,s=new y(t,this.graphics.indexOf(t),e,r,i);this.emit("graphic-pointer-down",s),this.callbacks.onGraphicPointerDown&&this.callbacks.onGraphicPointerDown(s)}else this._activeGraphic=null}_pointerUpHandler(i){if(this._activeGraphic){const{x:t,y:e}=i,r=this.graphics.indexOf(this._activeGraphic),s=new u(this._activeGraphic,r,t,e,i);this.emit("graphic-pointer-up",s),this.callbacks.onGraphicPointerUp&&this.callbacks.onGraphicPointerUp(s)}}_pointerMoveHandler(i){if(this._dragEvent)return;const t=this._findTargetGraphic(x(i));if(t){const{x:e,y:r}=i;if(this._hoverGraphic){if(this._hoverGraphic===t)return;const s=this.graphics.indexOf(this._hoverGraphic),o=new g(this.graphics[s],s,e,r,i);this._hoverGraphic=null,this.emit("graphic-pointer-out",o),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(o)}const s=this.graphics.indexOf(t),o=new b(t,s,e,r,i);return this._hoverGraphic=t,this.emit("graphic-pointer-over",o),void(this.callbacks.onGraphicPointerOver&&this.callbacks.onGraphicPointerOver(o))}if(this._hoverGraphic){const{x:t,y:e}=i,r=this.graphics.indexOf(this._hoverGraphic),s=new g(this.graphics[r],r,t,e,i);this._hoverGraphic=null,this.emit("graphic-pointer-out",s),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(s)}}_dragHandler(i){if("start"!==i.action&&!this._dragEvent||!this._activeGraphic||!this._activeGraphic.geometry)return;"start"===i.action&&this._removeIndicators(),i.stopPropagation();const{action:t,x:e,y:s}=i,o=this.graphics.indexOf(this._activeGraphic),a=this._activeGraphic.geometry,h=this._dragEvent?e-this._dragEvent.x:0,c=this._dragEvent?s-this._dragEvent.y:0,n=e-i.origin.x,l=s-i.origin.y,p=d(a,h,c,this.view);if(this._activeGraphic.geometry=p,this.enableMoveAllGraphics&&this.graphics.forEach((i=>{i!==this._activeGraphic&&(i.geometry=d(i.geometry,h,c,this.view))})),this._dragEvent=i,"start"===t){this._initialDragGeometry=r(a);const t=new f(this._activeGraphic,this.graphics,o,e,s,h,c,n,l,i);this.emit("graphic-move-start",t),this.callbacks.onGraphicMoveStart&&this.callbacks.onGraphicMoveStart(t),t.defaultPrevented&&this._activeGraphic.set("geometry",a)}else if("update"===t){const t=new G(this._activeGraphic,this.graphics,o,e,s,h,c,n,l,i);this.emit("graphic-move",t),this.callbacks.onGraphicMove&&this.callbacks.onGraphicMove(t),t.defaultPrevented&&(this._activeGraphic.geometry=a)}else{const t=new w(this._activeGraphic,this.graphics,o,e,s,h,c,n,l,i);this._dragEvent=null,this._activeGraphic=null,this._setUpIndicators(),this.emit("graphic-move-stop",t),this.callbacks.onGraphicMoveStop&&this.callbacks.onGraphicMoveStop(t),t.defaultPrevented&&(this.graphics[o].set("geometry",this._initialDragGeometry),this._setUpIndicators()),this._initialDragGeometry=null}}_keyDownHandler(i){"a"!==i.key&&"d"!==i.key&&"n"!==i.key||"moving"!==this.state||i.stopPropagation()}_findTargetGraphic(i){let t=null,e=Number.MAX_VALUE;return this._manipulators.forEach((r=>{const s=r.intersectionDistance(i);o(s)&&s<e&&(e=s,t=r.graphic)})),t}_setUpManipulators(){const{graphics:i,view:t}=this;this._manipulators.forEach((i=>i.destroy())),this._manipulators=null!=i&&i.length?i.map((i=>new O({graphic:i,view:t}))):[]}_setUpIndicators(){var i;this._removeIndicators(),this.indicatorsEnabled&&(this._indicators=(null==(i=this.graphics)?void 0:i.map((i=>{const t=i.clone();return t.symbol=this._getSymbolForIndicator(i),t})))||[],this.layer.addMany(this._indicators))}_removeIndicators(){this._indicators.length&&(this.layer.removeMany(this._indicators),this._indicators.forEach((i=>i.destroy())),this._indicators=[])}_getSymbolForIndicator(i){const t=12;if(a(i.symbol))return null;switch(i.symbol.type){case"cim":return new M({style:"circle",size:t,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}});case"picture-marker":{const{xoffset:t,yoffset:e,height:r,width:s}=i.symbol,o=r===s?s:Math.max(r,s);return new M({xoffset:t,yoffset:e,size:o,style:"square",color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}})}case"simple-marker":{const{xoffset:t,yoffset:e,size:r,style:s}=i.symbol;return new M({xoffset:t,yoffset:e,style:"circle"===s?"circle":"square",size:r+2,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}})}case"simple-fill":return new E({color:[0,0,0,0],outline:{style:"dash",color:[255,127,0,1],width:1}});case"simple-line":return new j({color:[255,127,0,1],style:"dash",width:1});case"text":{const{xoffset:e,yoffset:r}=i.symbol;return new M({xoffset:e,yoffset:r,size:t,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}})}default:return null}}};i([n()],H.prototype,"_activeGraphic",void 0),i([n({readOnly:!0})],H.prototype,"type",void 0),i([n()],H.prototype,"callbacks",void 0),i([n()],H.prototype,"enableMoveAllGraphics",void 0),i([n()],H.prototype,"graphics",void 0),i([n()],H.prototype,"indicatorsEnabled",void 0),i([n()],H.prototype,"layer",void 0),i([n({readOnly:!0})],H.prototype,"state",null),i([n()],H.prototype,"view",void 0),H=i([l("esri.views.draw.support.GraphicMover")],H);var P=H;export default P;
