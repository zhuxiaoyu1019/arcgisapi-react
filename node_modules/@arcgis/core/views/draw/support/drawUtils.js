/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{create as t}from"../../../geometry/support/aaBoundingRect.js";import{getRingsOrPathsBounds as n}from"../../../geometry/support/boundsUtils.js";import{geometryToCoordinates as e}from"../../../geometry/support/coordsUtils.js";function o(t,n,o,r){if(null==r||t.hasZ||(r=void 0),"point"===t.type)return t.x+=n,t.y+=o,t.hasZ&&null!=r&&(t.z+=r),t;if("multipoint"===t.type){const e=t.points;for(let t=0;t<e.length;t++)e[t]=m(e[t],n,o,r);return t}if("extent"===t.type)return t.xmin+=n,t.xmax+=n,t.ymin+=o,t.ymax+=o,null!=r&&(t.zmin+=r,t.zmax+=r),t;const i=e(t),s="polyline"===t.type?t.paths:t.rings;for(let e=0;e<i.length;e++){const t=i[e];for(let e=0;e<t.length;e++)t[e]=m(t[e],n,o,r)}return"paths"in t?t.paths=s:t.rings=s,t}function r(t,n,r,i,s){const a=t.clone(),m=i.resolution;if("point"===a.type){if(s)o(a,n*m,-r*m);else{const t=i.state.transform,e=i.state.inverseTransform,o=t[0]*a.x+t[2]*a.y+t[4],s=t[1]*a.x+t[3]*a.y+t[5];a.x=e[0]*(o+n)+e[2]*(s+r)+e[4],a.y=e[1]*(o+n)+e[3]*(s+r)+e[5]}return a}if("multipoint"===a.type){if(s)o(a,n*m,-r*m);else{const t=a.points,e=i.state.transform,o=i.state.inverseTransform;for(let i=0;i<t.length;i++){const s=t[i],a=e[0]*s[0]+e[2]*s[1]+e[4],m=e[1]*s[0]+e[3]*s[1]+e[5],x=o[0]*(a+n)+o[2]*(m+r)+o[4],p=o[1]*(a+n)+o[3]*(m+r)+o[5];t[i]=l(s,x,p,void 0)}}return a}if("extent"===a.type){if(s)o(a,n*m,-r*m);else{const t=i.state.transform,e=i.state.inverseTransform,o=t[0]*a.xmin+t[2]*a.ymin+t[4],s=t[1]*a.xmin+t[3]*a.ymin+t[5],m=t[0]*a.xmax+t[2]*a.ymax+t[4],l=t[1]*a.xmax+t[3]*a.ymax+t[5];a.xmin=e[0]*(o+n)+e[2]*(s+r)+e[4],a.ymin=e[1]*(o+n)+e[3]*(s+r)+e[5],a.xmax=e[0]*(m+n)+e[2]*(l+r)+e[4],a.ymax=e[1]*(m+n)+e[3]*(l+r)+e[5]}return a}if(s)o(a,n*m,-r*m);else{const t=e(a),o="polyline"===a.type?a.paths:a.rings,s=i.state.transform,m=i.state.inverseTransform;for(let e=0;e<t.length;e++){const o=t[e];for(let t=0;t<o.length;t++){const e=o[t],i=s[0]*e[0]+s[2]*e[1]+s[4],a=s[1]*e[0]+s[3]*e[1]+s[5],x=m[0]*(i+n)+m[2]*(a+r)+m[4],p=m[1]*(i+n)+m[3]*(a+r)+m[5];o[t]=l(e,x,p,void 0)}}"paths"in a?a.paths=o:a.rings=o}return a}function i(o,r,i,s){if("point"===o.type){const{x:t,y:n}=o,e=s?s[0]:t,a=s?s[1]:n,m=o.clone(),l=(t-e)*r+e,x=(n-a)*i+a;return m.x=l,m.y=x,m}if("multipoint"===o.type){const a=e(o),m=t(),[x,p,f,y]=n(m,[a]),u=s?s[0]:(x+f)/2,c=s?s[1]:(y+p)/2,h=o.clone(),g=h.points;for(let t=0;t<g.length;t++){const n=g[t],[e,o]=n,s=(e-u)*r+u,a=(o-c)*i+c;g[t]=l(n,s,a,void 0)}return h}if("extent"===o.type){const{xmin:t,xmax:n,ymin:e,ymax:a}=o,m=s?s[0]:(t+n)/2,l=s?s[1]:(a+e)/2,x=o.clone();if(x.xmin=(t-m)*r+m,x.ymax=(a-l)*i+l,x.xmax=(n-m)*r+m,x.ymin=(e-l)*i+l,x.xmin>x.xmax){const t=x.xmin,n=x.xmax;x.xmin=n,x.xmax=t}if(x.ymin>x.ymax){const t=x.ymin,n=x.ymax;x.ymin=n,x.ymax=t}return x}const a=e(o),m=t(),[x,p,f,y]=n(m,a),u=s?s[0]:(x+f)/2,c=s?s[1]:(y+p)/2,h=o.clone(),g="polyline"===h.type?h.paths:h.rings;for(let t=0;t<a.length;t++){const n=a[t];for(let e=0;e<n.length;e++){const o=n[e],[s,a]=o,m=(s-u)*r+u,x=(a-c)*i+c;g[t][e]=l(o,m,x,void 0)}}return"paths"in h?h.paths=g:h.rings=g,h}function s(t,n,e,o,r,i){const s=Math.sqrt((e-t)*(e-t)+(o-n)*(o-n));return Math.sqrt((r-t)*(r-t)+(i-n)*(i-n))/s}function a(t,n,e,o,r,i){const s=180*Math.atan2(n-o,t-e)/Math.PI;return 180*Math.atan2(n-i,t-r)/Math.PI-s}function m(t,n,e,o){return l(t,t[0]+n,t[1]+e,null!=t[2]&&null!=o?t[2]+o:void 0)}function l(t,n,e,o){const r=[n,e];return t.length>2&&r.push(null!=o?o:t[2]),t.length>3&&r.push(t[3]),r}export{r as cloneMove,a as getRotationAngle,s as getScaleRatio,o as move,i as scale};
