/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import t from"../../core/Handles.js";import{isSome as i,abortMaybe as s,isNone as r}from"../../core/maybe.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import"../../core/Logger.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{DrawTool as a}from"../3d/interactive/editingTools/draw/DrawTool.js";import h from"./DrawAction.js";import{VertexAddEvent as d,CursorUpdateEvent as p,DrawCompleteEvent as _}from"./input/DrawEvents.js";import{createViewAlignedCoordinateSystem as l}from"./support/surfaceCoordinateSystems.js";import{ViewEventPriorities as c}from"../input/InputManager.js";import{SKETCH_KEYS as m}from"../interactive/keybindings.js";import{EditGeometry as g,Component as v}from"../interactive/editGeometry/EditGeometry.js";import{EditGeometryHelper as w}from"../interactive/editGeometry/EditGeometryHelper.js";import{createScreenPointFromEvent as u}from"../support/screenUtils.js";import T from"../../geometry/Point.js";const y=["freehand","click"];let P=class extends h{constructor(e){super(e),this._isDragging=!1,this._panEnabled=!1,this._viewHandles=new t,this._activePointerId=null,this._addVertexOnPointerUp=!1,this.viewAlignedCoordinateSystem=null,this.mode="freehand"}initialize(){"2d"===this.view.type?this._addViewHandles():this._addDrawTool(this.view)}destroy(){"2d"===this.view.type?(this._removeViewHandles(),this._viewHandles.destroy()):this._removeDrawTool(),this.emit("destroy")}complete(){"2d"===this.view.type?this._completeDrawing():this._drawTool.completeCreateOperation()}getGeometryZValue(){return this.vertices.length>0&&this.vertices[0].length>2?this.vertices[0][2]:this._get("defaultZ")}_addViewHandles(){this._removeViewHandles(),"click"===this.mode?this._viewHandles.add(this._getClickModeViewHandles()):this._viewHandles.add(this._getDragModeViewHandles())}_getDragModeViewHandles(){return[this.view.on("immediate-click",(e=>{if(e.stopPropagation(),e.mapPoint&&!this._panEnabled){const t=this.getCoordsFromScreenPoint(u(e));i(t)&&(this._vertexAddHandler(e),this._drawCompleteHandler(e))}}),c.TOOL),this.view.on("pointer-down",(e=>{this._shouldHandlePointerEvent(e)&&(this._snappingTask=s(this._snappingTask),this._panEnabled||(this._resetGeometry(),this._addVertexOnPointerUp=!0,this._cursorScreenPoint=u(e),this._activePointerId=e.pointerId,this._vertexAddHandler(e),this._isDragging=!1,"touch"===e.pointerType&&this._updateCursor(e.native)))}),c.TOOL),this.view.on("pointer-move",(e=>{this._snappingTask=s(this._snappingTask),r(this._activePointerId)&&"touch"!==e.pointerType&&(this._cursorScreenPoint=u(e),this._updateCursor(e.native))}),c.TOOL),this.view.on("pointer-drag",(e=>{this._shouldHandlePointerEvent(e)&&(this._snappingTask=s(this._snappingTask),this._isDragging=!0,this._cursorScreenPoint=u(e),this._updateCursor(e.native))}),c.TOOL),this.view.on("pointer-up",(e=>{this._shouldHandlePointerEvent(e)&&this._addVertexOnPointerUp&&(this._snappingTask=s(this._snappingTask),this._activePointerId=null,this._isDragging&&this._vertexAddHandler(e),2===this._committedVertices.length&&this._drawCompleteHandler(e),this._isDragging=!1)}),c.TOOL),this.view.on("key-down",(e=>{e.key===m.complete&&this._cursorScreenPoint?(this._snappingTask=s(this._snappingTask),this._vertexAddHandler(e),this._drawCompleteHandler(e)):e.key===m.pan&&(this._panEnabled=!0)}),c.TOOL),this.view.on("key-up",(e=>{e.key===m.pan&&(this._panEnabled=!1)}),c.TOOL),this.view.on("drag",(e=>{i(this._activePointerId)&&e.stopPropagation()}),c.TOOL),this.view.on("drag",["Shift"],(e=>{e.stopPropagation()}),c.TOOL)]}_getClickModeViewHandles(){return[this.view.on("pointer-down",(e=>{this._snappingTask=s(this._snappingTask),this._cursorScreenPoint=u(e),this._activePointerId=e.pointerId,this._isDragging=!1,"touch"===e.pointerType&&this._updateCursor(e.native)}),c.TOOL),this.view.on("pointer-move",(e=>{this._snappingTask=s(this._snappingTask),this._cursorScreenPoint=u(e),r(this._activePointerId)&&"touch"!==e.pointerType&&this._updateCursor(e.native)}),c.TOOL),this.view.on("pointer-drag",(e=>{this._shouldHandlePointerEvent(e)&&(this._snappingTask=s(this._snappingTask),this._isDragging=!0)}),c.TOOL),this.view.on("pointer-up",(e=>{this._shouldHandlePointerEvent(e)&&(this._snappingTask=s(this._snappingTask),this._activePointerId=null,e.stopPropagation(),this._isDragging||this._vertexAddHandler(e),2!==this.vertices.length||this._isDragging||this._drawCompleteHandler(e),this._isDragging=!1)}),c.TOOL),this.view.on("key-down",(e=>{e.key===m.vertexAdd&&this._cursorScreenPoint&&(this._vertexAddHandler(e),2===this.vertices.length&&this._drawCompleteHandler(e)),e.key===m.complete&&this._cursorScreenPoint&&2===this.vertices.length&&(this._vertexAddHandler(e),this._drawCompleteHandler(e))}),c.TOOL)]}_removeViewHandles(){this._viewHandles.removeAll()}_addDrawTool(e){this._drawTool=new a({view:e,elevationInfo:this.elevationInfo,hasZ:this.hasZ,geometryType:"segment",mode:this.mode}),this.view.toolViewManager.tools.push(this._drawTool),this.view.activeTool=this._drawTool,this._drawTool.on("vertex-add",(e=>{1===e.vertices.length&&this.emit("vertex-add",new d(this.view,null,e.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))})),this._drawTool.on("cursor-update",(e=>{1===e.vertices.length&&this.emit("cursor-update",new p(this.view,null,e.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))})),this._drawTool.on("complete",(e=>{this.emit("draw-complete",new _(null,this._drawTool.getVertexCoords())),this._removeDrawTool()}))}_removeDrawTool(){i(this._drawTool)&&(this.view.tools.remove(this._drawTool),this._drawTool.destroy(),this._drawTool=null)}_addVertex(e,t){const i=this._coordinateHelper.fromArray(e);if(this._isDuplicateOfLastVertex(i))return;this._lastVertexUnsnapped=this._stagedVertexUnsnapped,this._popCursorVertex(),this._editGeometry.appendVertex(i),1===this._committedVertices.length&&(this.viewAlignedCoordinateSystem=l(this.view,this._committedVertices[0]));const s=this._committedVertices.length-1,r=new d(this.view,t,s,this.vertices);this.emit("vertex-add",r)}_updateCursor(e){if(this._popCursorVertex(),!this._cursorScreenPoint)return;const t=this.getCoordsAndPointFromScreenPoint(this._cursorScreenPoint);if(i(t)){this._pushCursorVertex(t.vertex);const s=()=>new p(this.view,e,this._activeComponent.vertices.length,this.vertices,i(this._stagedVertex)?new T(this._stagedVertex):null);this.emit("cursor-update",s()),i(this._snappingTask)&&this._snappingTask.promise.then((e=>{e.valid&&this.emit("cursor-update",s())}),(()=>{}))}}_completeDrawing(e){if(this._activePointerId=null,this._popCursorVertex(),this._cursorScreenPoint=null,this._isDragging=!1,this._snappingTask=s(this._snappingTask),i(this._snappingManager)&&this._snappingManager.doneSnapping(),this.vertices.length<1)return;const t=new _(e,this.vertices);this.emit("draw-complete",t),t.defaultPrevented||this._removeViewHandles()}_resetGeometry(){this._editGeometry.destroy(),this._editGeometry=new w(new g(this._coordinateHelper),"polygon"),this._activeComponent=new v(this._editGeometry.editGeometry),this._editGeometry.editGeometry.components.push(this._activeComponent)}_shouldHandlePointerEvent(e){return k(e)&&(r(this._activePointerId)||this._activePointerId===e.pointerId)}};function k(e){return"mouse"!==e.pointerType||0===e.button}e([o({type:y})],P.prototype,"mode",void 0),P=e([n("esri/views/2d/engine/markup/SegmentDrawAction")],P);export{P as SegmentDrawAction};
