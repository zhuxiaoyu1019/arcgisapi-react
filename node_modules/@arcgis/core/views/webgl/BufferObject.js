/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../core/Logger.js";import{isUint16Array as t,isUint32Array as i}from"../../core/typedArrayUtil.js";import{checkWebGLError as s}from"./checkWebGLError.js";import{ResourceType as r}from"./enums.js";const n=e.getLogger("esri.views.webgl.BufferObject");class h{constructor(e,t,i,n,h){this._context=e,this.bufferType=t,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(r.Buffer,this),this._glName=this._context.gl.createBuffer(),s(this._context.gl),n&&this.setData(n,h)}static createIndex(e,t,i,s){return new h(e,34963,t,i,s)}static createVertex(e,t,i){return new h(e,34962,t,i)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteSize(){return 34962===this.bufferType?this._size:5125===this._indexType?4*this._size:2*this._size}dispose(){var e;if(null!=(e=this._context)&&e.gl){if(this._glName){this._context.gl.deleteBuffer(this._glName),this._glName=null}this._context.instanceCounter.decrement(r.Buffer,this),this._context=null}else this._glName&&n.warn("Leaked WebGL buffer object")}setData(e,r){if(!e)return;if("number"==typeof e){if(e<0&&n.error("Buffer size cannot be negative!"),34963===this.bufferType&&r)switch(this._indexType=r,this._size=e,r){case 5123:e*=2;break;case 5125:e*=4}}else{let s=e.byteLength;t(e)&&(s/=2,this._indexType=5123),i(e)&&(s/=4,this._indexType=5125),this._size=s}const h=this._context.getBoundVAO();this._context.bindVAO(null),this._context.bindBuffer(this);const o=this._context.gl;o.bufferData(this.bufferType,e,this.usage),s(o),this._context.bindVAO(h)}setSubData(e,r=0,h=0,o=e.byteLength){if(!e)return;(r<0||r>=this._size)&&n.error("offset is out of range!");let f=r,u=h,c=o,a=e.byteLength;t(e)&&(a/=2,f*=2,u*=2,c*=2),i(e)&&(a/=4,f*=4,u*=4,c*=4),void 0===o&&(o=a-1),h>=o&&n.error("end must be bigger than start!"),r+h-o>this._size&&n.error("An attempt to write beyond the end of the buffer!");const _=this._context.getBoundVAO();this._context.bindVAO(null),this._context.bindBuffer(this);const g=this._context.gl,l=ArrayBuffer.isView(e)?e.buffer:e,b=0===u&&c===e.byteLength?l:l.slice(u,c);g.bufferSubData(this.bufferType,f,b),s(g),this._context.bindVAO(_)}}export default h;
