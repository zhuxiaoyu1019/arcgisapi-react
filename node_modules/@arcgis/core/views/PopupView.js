/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import{flatten as r}from"../core/arrayUtils.js";import{isSome as s}from"../core/maybe.js";import{eachAlwaysValues as i}from"../core/promiseUtils.js";import"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import"../core/Logger.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";const a=a=>{let t=class extends a{async fetchPopupFeatures(e,s){await this.when();const{location:p,queryArea:a,layerViewsAndGraphics:t,clientOnlyGraphics:o}=await this._prepareFetchPopupFeatures(e,s),c=Promise.resolve(o),n=this._queryLayerPopupFeatures({queryArea:a,layerViewsAndGraphics:t,options:s}),l=n.map((e=>e.promise));return{location:p,clientOnlyGraphics:o,allGraphicsPromise:i([c,...l]).then(r),promisesPerLayerView:n}}_queryLayerPopupFeatures({queryArea:e,layerViewsAndGraphics:r,options:i}){return r.map((({layerView:r,graphics:p})=>{const a={clientGraphics:p,event:s(i)?i.event:null,signal:s(i)?i.signal:null,defaultPopupTemplateEnabled:!!s(i)&&!!i.defaultPopupTemplateEnabled},t=r.fetchPopupFeatures(e,a);return{layerView:r,promise:t}}))}_isValidPopupGraphic(e,r){return e&&!!e.getEffectivePopupTemplate(s(r)&&r.defaultPopupTemplateEnabled)}async _prepareFetchPopupFeatures(e,r){const{clientGraphics:s,queryArea:i,location:p}=await this._popupHitTestGraphics(e,r),a=this._getFetchPopupLayerViews(),{layerViewsAndGraphics:t,clientOnlyGraphics:o}=this._graphicsPerFetchPopupLayerView(s,a);return{clientOnlyGraphics:o,layerViewsAndGraphics:t,queryArea:i,location:p}}async _popupHitTestGraphics(e,r){const{results:s,mapPoint:i}=await this.popupHitTest(e),p=s.filter((e=>this._isValidPopupGraphic(e.graphic,r))),a=p.length?p[0].mapPoint:null;return{clientGraphics:p.map((e=>e.graphic)),queryArea:i,location:i||a}}_getFetchPopupLayerViews(){const e=[];return this.allLayerViews.forEach((r=>{this._isValidPopupLayerView(r)&&e.push(r)})),s(this.graphicsView)&&this._isValidPopupLayerView(this.graphicsView)&&e.push(this.graphicsView),e.reverse()}_isValidPopupLayerView(e){return s(e)&&(!("layer"in e)||!e.suspended)&&"fetchPopupFeatures"in e}_graphicsPerFetchPopupLayerView(e,r){const s=[],i=new Map,p=r.map((e=>{const r=[];return"layer"in e?i.set(e.layer,r):i.set(e.graphics,r),{layerView:e,graphics:r}}));for(const a of e){const e=i.get(a.layer)||i.get(a.sourceLayer)||null;e?e.push(a):s.push(a)}return{layerViewsAndGraphics:p,clientOnlyGraphics:s}}};return t=e([p("esri.views.PopupView")],t),t};export{a as PopupView};
