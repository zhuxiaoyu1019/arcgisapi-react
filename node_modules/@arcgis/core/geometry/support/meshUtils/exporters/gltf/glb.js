/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import t from"../../../../../core/has.js";class e{constructor(t,r){if(!t)throw new Error("GLB requires a JSON gltf chunk");this.length=e.HEADER_SIZE,this.length+=e.CHUNK_HEADER_SIZE;const i=this.textToArrayBuffer(t);if(this.length+=this.alignTo(i.byteLength,4),r&&(this.length+=e.CHUNK_HEADER_SIZE,this.length+=r.byteLength,r.byteLength%4))throw new Error("Expected BIN chunk length to be divisible by 4 at this point");this.buffer=new ArrayBuffer(this.length),this.outView=new DataView(this.buffer),this.writeHeader();const n=this.writeChunk(i,12,1313821514,32);r&&this.writeChunk(r,n,5130562)}writeHeader(){this.outView.setUint32(0,e.MAGIC,!0),this.outView.setUint32(4,e.VERSION,!0),this.outView.setUint32(8,this.length,!0)}writeChunk(t,e,r,i=0){const n=this.alignTo(t.byteLength,4);for(this.outView.setUint32(e,n,!0),this.outView.setUint32(e+=4,r,!0),this.writeArrayBuffer(this.outView.buffer,t,e+=4,0,t.byteLength),e+=t.byteLength;e%4;)i&&this.outView.setUint8(e,i),e++;return e}writeArrayBuffer(t,e,r,i,n){new Uint8Array(t,r,n).set(new Uint8Array(e,i,n),0)}textToArrayBuffer(e){if(t("esri-text-encoder"))return(new TextEncoder).encode(e).buffer;const r=new Uint8Array(e.length);for(let t=0;t<r.length;++t)r[t]=e.charCodeAt(t);return r.buffer}alignTo(t,e){return e*Math.ceil(t/e)}}e.HEADER_SIZE=12,e.CHUNK_HEADER_SIZE=8,e.MAGIC=1179937895,e.VERSION=2;export{e as GLB};
