/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import"../../../../../core/has.js";import e from"../../../../../core/Error.js";import{isSome as t,isNone as n}from"../../../../../core/maybe.js";function r(e){const n=a(e);return t(n)?n.toDataURL():""}async function o(t){const r=a(t);if(n(r))throw new e("imageToArrayBuffer","Unsupported image type");const o=async t=>{if(!t)throw new e("imageToArrayBuffer","Unable to convert image to PNG");const n=new FileReader,r=new Promise((e=>{n.addEventListener("loadend",(()=>{e(n.result)}))}));return n.readAsArrayBuffer(t),r};if(r.toBlob)return new Promise(((e,t)=>{r.toBlob((n=>{o(n).then(e,t)}),"image/png")}));if("msToBlob"in r)return o(r.msToBlob());throw new e("imageToArrayBuffer","Could not convert canvas to blob")}function a(e){if(e instanceof HTMLCanvasElement)return e;if(e instanceof HTMLVideoElement)return null;const t=document.createElement("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");return e instanceof HTMLImageElement?n.drawImage(e,0,0,e.width,e.height):e instanceof ImageData&&n.putImageData(e,e.width,e.height),t}function i(e){const t=[],n=new Uint8Array(e);for(let r=0;r<n.length;r++)t.push(String.fromCharCode(n[r]));return"data:application/octet-stream;base64,"+btoa(t.join(""))}function s(e){if(e.byteLength<8)return!1;const t=new Uint8Array(e);return 137===t[0]&&80===t[1]&&78===t[2]&&71===t[3]&&13===t[4]&&10===t[5]&&26===t[6]&&10===t[7]}export{i as encodeBase64DataUri,o as imageToArrayBuffer,r as imageToDataURI,s as isArrayBufferPNG};
