/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Accessor.js";import o from"../../core/Handles.js";import{handlesGroup as s}from"../../core/handleUtils.js";import{isSome as r,isNone as i,applySome as a,unwrapOr as l,abortMaybe as n}from"../../core/maybe.js";import{memoize as p}from"../../core/memoize.js";import{createTask as h,throwIfAborted as d,throwIfAbortError as m,ignoreAbortErrors as c}from"../../core/promiseUtils.js";import{throttle as f}from"../../core/throttle.js";import{property as u}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import"../../core/Logger.js";import{subclass as _}from"../../core/accessorSupport/decorators/subclass.js";import{reactionInit as P}from"../../core/accessorSupport/trackingUtils.js";import{hasGraphicFeatureExpressionInfo as v,getGraphicEffectiveElevationInfo as g}from"../../support/elevationInfoUtils.js";import{DEFAULT_DEM_RESOLUTION as M,DENSIFICATION_MAX_SAMPLES as y,MAX_TOTAL_SAMPLES as w,UPDATE_THROTTLE_MILLIS as j}from"./support/constants.js";import{isPolyline as b,isValidInputPath as T}from"./support/geometryUtils.js";import{generateProfiles as U}from"./support/profileUtils.js";const z="line-change";let I=class extends t{constructor(e){super(e),this._handles=new o,this._updateTask=null,this._paramsPerProfile=new Map,this._getUpdateParametersMemoized=p(((e,t,o)=>({stationary:e,visibleProfiles:t,generationParameters:o}))),this._getGenerationParametersMemoized=p(((e,t,o,s,r,a)=>b(t)&&T(t)&&!i(s)?{view:e,geometry:t,elevationInfo:o,options:a,queue:s,cache:r}:null)),this._getElevationInfoMemoized=p(((e,t)=>({mode:e,offset:t}))),this._getOptionsMemoized=p(((e,t,o)=>({geodesicDistanceThreshold:e,samplingDistance:t,densificationMaxSamples:Math.round(y/o),maxTotalSamples:w}))),this._updateThrottled=f((e=>c(this._update(e))),j)}initialize(){const e=this.viewModel;this._handles.add([P((()=>e.profiles.toArray()),(e=>{this._abortUpdate(),this._paramsPerProfile.clear(),this._handles.remove(z),this._handles.add(e.map((e=>s([e.attach(this.viewModel),e.on("change",(()=>{this._invalidateProfile(e)}))]))),z)})),this._updateThrottled,P((()=>this._updateParameters),this._updateThrottled)])}destroy(){this._handles.destroy(),this._paramsPerProfile.clear()}get _updateParameters(){const{viewModel:e}=this,t=e.view;return this._getUpdateParametersMemoized(!r(t)||t.stationary,this.viewModel.visibleProfiles,this._generationParameters)}get _generationParameters(){const{view:e,input:t,queue:o,tileCache:s}=this.viewModel;return i(e)?null:this._getGenerationParametersMemoized(e,a(t,(e=>e.geometry)),this._elevationInfo,o,s,this._options)}get _elevationInfo(){const e=a(this.viewModel.input,(e=>v(e)?null:g(e)));return r(e)?this._getElevationInfoMemoized(e.mode,e.offset):null}get _options(){const e=this.viewModel,t=e.visibleProfiles.length;let o=l(e.minDemResolution,M);return o=parseFloat(o.toFixed(2)),this._getOptionsMemoized(e.geodesicDistanceThreshold,o,t)}async _update({stationary:e,visibleProfiles:t,generationParameters:o}){this._abortUpdate(),e&&(i(o)?this._clearResults():this._updateTask=h((async e=>{this.viewModel.error=null;const s=t.filter((e=>!this._isProfileValid(e,o))),r=U({...o,providers:s},{signal:e});try{for await(const t of r){d(e),this._clearInvalidResults(o);for(let e=0;e<s.length;e++)s[e].result=t[e]}for(const e of s)this._paramsPerProfile.set(e,o)}catch(i){m(i),this._abortUpdate(),this.viewModel.error=i,s.forEach((e=>{e.result=null}))}})))}_abortUpdate(){this._updateTask=n(this._updateTask)}_isProfileValid(e,t){return this._paramsPerProfile.has(e)&&this._paramsPerProfile.get(e)===t}_invalidateProfile(e){this._paramsPerProfile.delete(e),this._updateThrottled(this._updateParameters)}_clearInvalidResults(e){for(const t of this.viewModel.profiles.items)this._isProfileValid(t,e)||(t.result=null,this._paramsPerProfile.delete(t))}_clearResults(){for(const e of this.viewModel.profiles.items)e.result=null,this._paramsPerProfile.delete(e)}};e([u({nonNullable:!0})],I.prototype,"viewModel",void 0),e([u()],I.prototype,"_updateParameters",null),e([u()],I.prototype,"_generationParameters",null),e([u()],I.prototype,"_elevationInfo",null),e([u()],I.prototype,"_options",null),I=e([_("esri.widgets.ElevationProfile.ElevationProfileController")],I);export{I as ElevationProfileController};
