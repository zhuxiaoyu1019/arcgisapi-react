/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{lerp as e}from"../../../core/mathUtils.js";import{isNone as t,unwrapOr as n,isSome as r}from"../../../core/maybe.js";import{throwIfAborted as s}from"../../../core/promiseUtils.js";import{getMetersPerUnitForSR as o}from"../../../core/unitUtils.js";import{d as a,m as i}from"../../../chunks/vec2.js";import{e as c}from"../../../chunks/vec3.js";import u from"../../../geometry/Polyline.js";import{initializeProjection as f,project as l}from"../../../geometry/projection.js";import h from"../../../geometry/SpatialReference.js";import{geodesicLengths as p,inverseGeodeticSolver as m,directGeodeticSolver as d,isSupported as g}from"../../../geometry/support/geodesicUtils.js";import{ProfileGenerationError as w}from"./ProfileGenerationError.js";async function y(e,t,n,r,a,i,c){let u,m,d;const g=e.spatialReference,y=g.isGeographic||g.isWebMercator,v=await import("../../../geometry/geometryEngineAsync.js");s(c);let P=0;y||(P=await v.planarLength(e,"meters"),s(c));const Z=1/o(r);if(y||P>=a.geodesicDistanceThreshold){await f([{source:g,dest:r},{source:g,dest:h.WGS84}],c);const s=L(e);u=p([s],"meters")[0];const o=R(u,a);if(q(e,u,o)>i)throw new w("too-complex");const y=j(s,t,n);({densifiedPath:m,distances:d}=z(y,o,Z)),m=l(m,r)}else{await f([{source:g,dest:r}],c),u=P;const o=R(u,a);if(q(e,u,o)>i)throw new w("too-complex");const h=j(e,t,n);({densifiedPath:m,distances:d}=b(h,o,Z)),s(c),m=l(m,r)}return{densifiedPath:m,pathLength:u*Z,distances:d}}function R(e,t){const n=e/t.densificationMaxSamples;return Math.max(t.samplingDistance,n)}function j(e,r,s){if(t(r))return Z(e);const o=e.spatialReference,a=r.mode,i=n(r.offset,0);let c=null;switch(s.type){case"2d":c=v(e,a,i);break;case"3d":c=P(e,a,i,s)}return t(c)?Z(e):new u({hasZ:!0,hasM:!1,spatialReference:o,paths:A(e.paths,c)})}function v({hasZ:e},t,n){switch(t){case"absolute-height":return e?([e,t,r])=>[e,t,r+n]:([e,t])=>[e,t,n];default:return null}}function P({spatialReference:e,hasZ:t},r,s,{elevationProvider:o}){const a=(t,r,s,a)=>n(o.getElevation(t,r,s,e,a),0);switch(r){case"on-the-ground":return([e,t])=>[e,t,a(e,t,0,"ground")];case"absolute-height":return t?([e,t,n])=>[e,t,n+s]:([e,t])=>[e,t,s];case"relative-to-ground":return t?([e,t,n])=>[e,t,n+a(e,t,n,"ground")+s]:([e,t])=>[e,t,a(e,t,0,"ground")+s];case"relative-to-scene":return t?([e,t,n])=>[e,t,n+a(e,t,n,"scene")+s]:([e,t])=>[e,t,a(e,t,0,"scene")+s];default:return null}}function Z(e){return e.hasZ?new u({hasZ:!1,hasM:!1,spatialReference:e.spatialReference,paths:A(e.paths,(([e,t])=>[e,t]))}):e}function A(e,t){const n=e.length,r=new Array(n);for(let s=0;s<n;++s){const n=e[s],o=n.length,a=new Array(n.length);r[s]=a;for(let e=0;e<o;++e)a[e]=t(n[e])}return r}function M(e){return x(e)&&e.paths.length>0&&e.paths.every((e=>e.length>=2))}function x(e){return r(e)&&"polyline"===e.type}function S(e,t,n,r,s){const{spatialReference:a,hasZ:i}=e,c={from:null,to:null,distance:0,azimuth:0,reverseAzimuth:0,spatialReference:a,metersPerSR:o(a)},f=new Array(e.paths.length),l=new Array(e.paths.length);let h=0;for(let o=0;o<e.paths.length;++o){const a=e.paths[o],i=new Array,u=new Array;let p=0;for(let e=1;e<a.length;++e){const o=a[e-1],f=a[e],l=r(c,o,f);let m;for(m=p;m<l.distance;m+=t)i.push(s(l,m)),u.push((h+m)*n);p=m-l.distance,h+=l.distance,i.push(f),u.push(h*n)}f[o]=i,l[o]=u}return{densifiedPath:new u({spatialReference:a,hasZ:i,paths:f}),distances:l}}function b(e,t,n){const{hasZ:r}=e;return S(e,t,n,U,r?D:W)}function z(e,t,n){const{hasZ:r}=e;return S(e,t,n,G,r?E:k)}function G(e,t,n){return e.distance=0,m(e,t,n,e.spatialReference),e.from=t,e.to=n,e}function U(e,t,n){return e.from=t,e.to=n,e.distance=a(n,t)*e.metersPerSR,e}function k({from:e,azimuth:t,spatialReference:n},r){return d([0,0],e,t,r,n)}function E({from:t,to:n,azimuth:r,distance:s,spatialReference:o},a){const i=a/s,c=[0,0,e(t[2],n[2],i)];return d(c,t,r,a,o),c}function W({from:e,to:t,distance:n},r){return i([0,0],e,t,r/n)}function D({from:e,to:t,distance:n},r){return c([0,0,0],e,t,r/n)}function L(e){return g(e.spatialReference)?e:l(e,h.WGS84)}function T(e){return e.paths.reduce(((e,t)=>e+t.length),0)}function q(e,t,n){return T(e)+Math.floor(t/n)+Math.max(0,e.paths.reduce((e=>1+e),0)-1)}export{T as countPoints,y as densifyPath,x as isPolyline,M as isValidInputPath,j as toAbsoluteHeightElevation};
