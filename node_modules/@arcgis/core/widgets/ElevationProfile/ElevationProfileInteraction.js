/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../Graphic.js";import i from"../../core/Accessor.js";import s from"../../core/Handles.js";import{makeHandle as o}from"../../core/handleUtils.js";import{isSome as a,destroyMaybe as n,applySome as r,unwrapOr as h,isNone as p,abortMaybe as c}from"../../core/maybe.js";import{ignoreAbortErrors as l,createTask as d,throwIfAborted as _}from"../../core/promiseUtils.js";import{property as u}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import"../../core/Logger.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import{reactionInit as g,when as y}from"../../core/accessorSupport/trackingUtils.js";import v from"../../layers/GraphicsLayer.js";import S from"../../symbols/CIMSymbol.js";import f from"../../symbols/SimpleLineSymbol.js";import{isDOMContainer as b}from"../../views/DOMContainer.js";import{isPolyline as k}from"./support/geometryUtils.js";import I from"../Sketch/SketchViewModel.js";var P;function w(t){return"2d"===t?new S({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[5,4],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:1.5,color:[0,0,0,255]},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:1.5,color:[255,255,255,255]}]}}}):new f({color:[0,0,0,0]})}!function(t){t.Ready="ready",t.Creating="creating",t.Reshaping="reshaping",t.ReshapingDisabled="rehsaping-disabled",t.Selecting="selecting",t.Selected="selected"}(P||(P={}));let R=class extends i{constructor(t){super(t),this.state=P.Ready,this._handles=new s,this._pendingStartOptions=null,this._previousInputInfo=null,this._shouldRemoveLastPoint=!1,this._sketchedGraphics=new WeakSet,this._creationToolPromise=null,this._updateToolPromise=null,this._updateDisabled=!1}initialize(){this._handles.add(g((()=>this.tool.viewModel.view),(t=>{a(t)?this._initialize(t):this._destroy()})),"view")}destroy(){this._destroy(),this._handles=n(this._handles)}get canStopCreating(){const t=r(this.tool.viewModel.input,(t=>t.geometry)),e=this._shouldRemoveLastPoint?3:2;return k(t)&&t.paths.length>0&&t.paths[0].length>=e}get _input(){return this.tool.viewModel.input}set _input(t){this.tool.viewModel.input=t}get _visibleAndEditable(){return this.tool.visible&&this.tool.editable}get _view(){return this.tool.viewModel.view}get test(){return{sketchVM:this._sketchVM,toolPromise:Promise.all([h(this._creationToolPromise,Promise.resolve()),h(this._updateToolPromise,Promise.resolve())])}}start(t={mode:"sketch"}){if(!this.tool.editable)return;const e=this._view;if(!p(e)&&e.ready)switch(this._pendingStartOptions=null,this._stopInteraction(),p(this._previousInputInfo)&&this._storePreviousInput(this._input),this._setSketchedGraphic(null),t.mode){case"sketch":this._set("state",P.Creating),this._startCreationInteraction();break;case"select":this._set("state",P.Selecting),this._startSelectionInteraction()}else this._pendingStartOptions=t}stop(){this._pendingStartOptions=null,this._stopInteractionAndUpdate(),this._clearPreviousInput()}cancel(){this._pendingStartOptions=null,this._stopInteractionAndUpdate(),this._restorePreviousInput()}clear(){this._stopInteractionAndUpdate(),this._set("state",P.Ready),this._clearPreviousInput(),this._input=null,this._pendingStartOptions=null}isSketchedGraphic(t){return a(t)&&this._sketchedGraphics.has(t)}_initialize(t){this._destroy();const e={mode:"3d"===t.type?"relative-to-ground":"on-the-ground",offset:null};this._graphicsLayer=new v({listMode:"hide",internal:!0,elevationInfo:e});const i=w(t.type);this._sketchVM=new I({layer:this._graphicsLayer,view:t,defaultCreateOptions:{mode:"click",hasZ:!1},updateOnGraphicClick:!1,defaultUpdateOptions:{reshapeOptions:{shapeOperation:"none"},enableRotation:!1,enableScaling:!1,enableMoveAllGraphics:!1,enableZ:!1,multipleSelectionEnabled:!1,toggleToolOnClick:!1,tool:"reshape"},polylineSymbol:i,updatePolylineSymbol:i,activeLineSymbol:i}),this._handles.add([y((()=>t.ready),(()=>r(this._pendingStartOptions,(t=>this.start(t))))),g((()=>[this._input,this._visibleAndEditable]),(()=>this._update())),g((()=>({map:t.map,graphicsLayer:this._graphicsLayer})),(({map:t,graphicsLayer:e})=>{a(t)&&a(e)&&t.add(e),this._update()}))],"main")}_destroy(){this._handles.remove("main"),this._sketchVM=n(this._sketchVM),this._creationToolPromise=null,this._updateToolPromise=null;const t=r(this._view,(t=>t.map)),e=this._graphicsLayer;a(t)&&a(e)&&t.remove(e),this._graphicsLayer=n(this._graphicsLayer)}_startCreationInteraction(){this._stopInteractionAndUpdate();const t=this._view,i=this._sketchVM;if(p(t)||p(i))return;this._shouldRemoveLastPoint=!1;const s=i.on("create",(t=>{const e=t.graphic;switch(t.state){case"complete":this._shouldRemoveLastPoint=!1,this._setSketchedGraphic(e),this._stopInteractionAndUpdate(),this._clearPreviousInput();break;case"cancel":this.cancel();break;case"active":this._setSketchedGraphic(e),"cursor-update"===t.toolEventInfo.type&&(this._shouldRemoveLastPoint=!0);break;case"start":this._setSketchedGraphic(e)}})),a=()=>{s.remove(),i.cancel(),this._creationToolPromise=null;const t=this._input;!p(t)&&this.canStopCreating?this._shouldRemoveLastPoint&&this._setSketchedGraphic(new e({geometry:G(t.geometry)})):this._input=null};this._handles.remove("interaction"),this._handles.add(o(a),"interaction"),this._creationToolPromise=l(i.create("polyline"))}_startReshapeInteraction(){this._stopInteraction();const t=this._view,e=this._sketchVM;if(p(t)||p(e))return;const i=e.on("update",(t=>{const e=t.graphics[0];switch(t.state){case"complete":this._setSketchedGraphic(e),this._stopInteractionAndUpdate(),this._clearPreviousInput();break;case"active":case"start":this._setSketchedGraphic(e)}})),s=()=>{i.remove(),e.cancel(),this._updateToolPromise=null};this._handles.remove("interaction"),this._handles.add(o(s),"interaction"),r(this._input,(t=>{t.visible=!0,this._updateToolPromise=l(e.update(t,{tool:"reshape"}))}))}_startSelectionInteraction(){this._stopInteraction();const t=this._view;if(p(t))return;const e=t.cursor,i=o((()=>t.cursor=e));t.cursor="crosshair",t.popup.close();let s=null;const n=o((()=>c(s))),r=t.on("immediate-click",(e=>{e.preventDefault(),e.stopPropagation(),c(s),s=d((async i=>{const{results:s}=await t.hitTest(e);_(i);const o=s.map((t=>t.graphic)).find((t=>a(t.geometry)&&"polyline"===t.geometry.type));o&&(this._input=o,this._clearPreviousInput(),this._stopInteractionAndUpdate())}))})),h=t.on("key-down",(t=>{"Escape"===t.key&&this.cancel()}));this._handles.remove("interaction"),this._handles.add([r,h,n,i],"interaction"),t.ready&&b(t)&&t.focus()}_stopInteraction(){this._handles.remove("interaction")}_stopInteractionAndUpdate(){this._handles.has("interaction")&&(this._updateDisabled=!0,this._stopInteraction(),this._updateDisabled=!1,this._triggerUpdate())}_triggerUpdate(){this._set("state",P.Ready),this._update()}_update(){if(this._updateDisabled)return;const t=this.state;if(t!==P.Selecting){if(this._visibleAndEditable){if(t===P.Creating||t===P.Reshaping&&this.isSketchedGraphic(this._input))return}else this.cancel();this._set("state",this._getNextState()),this._updateVisuals()}else this.stop()}_getNextState(){return p(this._input)?P.Ready:this.isSketchedGraphic(this._input)?this.state===P.Creating?P.Creating:this._visibleAndEditable?P.Reshaping:P.ReshapingDisabled:P.Selected}_updateVisuals(){switch(this.state){case P.Creating:break;case P.Reshaping:this._startReshapeInteraction();break;case P.ReshapingDisabled:{this._stopInteractionAndUpdate();const t=this._input;a(t)&&this.isSketchedGraphic(t)&&(t.visible=!1);break}case P.Ready:case P.Selected:this._stopInteractionAndUpdate();break;case P.Selecting:}this._updateSketchedGraphic()}_storePreviousInput(t){this._previousInputInfo={graphic:t}}_restorePreviousInput(){const t=this._previousInputInfo;p(t)||(this._clearPreviousInput(),this._input=t.graphic,this._triggerUpdate())}_clearPreviousInput(){this._previousInputInfo=null}_updateSketchedGraphic(){const t=this._graphicsLayer;if(p(t))return;const e=t.graphics,i=this._input;if(p(i)||!this.isSketchedGraphic(i))return void e.removeAll();if(-1===e.indexOf(i))e.removeAll(),e.add(i);else if(1!==e.length){const t=e.filter((t=>t!==i));e.removeMany(t)}}_setSketchedGraphic(t){a(t)&&this._sketchedGraphics.add(t),this._input=t,this._updateSketchedGraphic()}};function G(t){if(k(t)){const e=t.clone();return e.paths=[e.paths[0].slice(0,-1)],e}return t}t([u({nonNullable:!0})],R.prototype,"state",void 0),t([u({nonNullable:!0})],R.prototype,"tool",void 0),t([u()],R.prototype,"canStopCreating",null),t([u()],R.prototype,"_graphicsLayer",void 0),t([u()],R.prototype,"_sketchVM",void 0),t([u()],R.prototype,"_input",null),t([u()],R.prototype,"_visibleAndEditable",null),t([u()],R.prototype,"_view",null),t([u()],R.prototype,"_shouldRemoveLastPoint",void 0),R=t([m("esri.widgets.ElevationProfile.ElevationProfileInteraction")],R);export{R as ElevationProfileInteraction,P as State};
