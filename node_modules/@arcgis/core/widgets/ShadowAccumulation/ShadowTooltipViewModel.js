/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Accessor.js";import o from"../../core/Handles.js";import{makeHandle as i}from"../../core/handleUtils.js";import{abortMaybe as s,isSome as a,destroyMaybe as r}from"../../core/maybe.js";import{createTask as n}from"../../core/promiseUtils.js";import{createScreenPoint as d}from"../../core/screenUtils.js";import{throttle as c}from"../../core/throttle.js";import{property as h}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import"../../core/Logger.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import{reactionInit as l}from"../../core/accessorSupport/trackingUtils.js";var u;!function(t){t.PointerMove="pointer-move",t.Main="main"}(u||(u={}));const p=300;let T=class extends e{constructor(t){super(t),this._handles=new o,this._screenPoint=null,this._accumulatedShadowTime=null,this._shadowTimeTask=null,this._updateAccumulatedShadowTime=(t,e)=>{this._shadowTimeTask=s(this._shadowTimeTask),this._shadowTimeTask=n((async o=>{const{results:i,ground:s}=await t.hitTest(e);if(0===i.length&&!s.mapPoint)return void(this._accumulatedShadowTime=null);const a=await this.getDuration(e,o);this._accumulatedShadowTime=a}))},this._throttledUpdateAccumulatedShadowTime=c(this._updateAccumulatedShadowTime,p)}initialize(){this._handles.add(l((()=>({enabled:this.enabled,view:this.view})),(({enabled:t,view:e})=>{t&&a(e)?this._startTracking(e):this._stopTracking()})))}destroy(){this._handles=r(this._handles)}get screenPoint(){return this.enabled?this._screenPoint:null}get accumulatedShadowTime(){return this.enabled?this._accumulatedShadowTime:null}get testData(){return{setThrottleDelay:t=>{this._throttledUpdateAccumulatedShadowTime.remove(),this._throttledUpdateAccumulatedShadowTime=c(this._updateAccumulatedShadowTime,t)}}}_startTracking(t){const e=this._handles;if(e.has(u.Main))return;const o=()=>{e.has(u.PointerMove)||e.add(t.on("pointer-move",(e=>{const o=d(e.x,e.y);this._screenPoint=o,this._throttledUpdateAccumulatedShadowTime(t,o)})),u.PointerMove)},a=()=>{e.remove(u.PointerMove),this._screenPoint=null,this._accumulatedShadowTime=null};e.add([this._throttledUpdateAccumulatedShadowTime,t.on("pointer-enter",o),t.on("pointer-leave",a),t.on("pointer-down",a),t.on("pointer-drag",a),t.on("pointer-up",o),t.on("click",(e=>{const o=d(e.x,e.y);this._screenPoint=o,this._updateAccumulatedShadowTime(t,o)})),i((()=>{this._shadowTimeTask=s(this._shadowTimeTask)}))],u.Main),o()}_stopTracking(){this._handles.remove(u.Main)}};t([h()],T.prototype,"getDuration",void 0),t([h()],T.prototype,"view",void 0),t([h()],T.prototype,"enabled",void 0),t([h()],T.prototype,"screenPoint",null),t([h()],T.prototype,"accumulatedShadowTime",null),t([h()],T.prototype,"_screenPoint",void 0),t([h()],T.prototype,"_accumulatedShadowTime",void 0),t([h()],T.prototype,"_shadowTimeTask",void 0),T=t([m("esri.widgets.ShadowAccumulation.ShadowTooltipViewModel")],T);export{T as ShadowTooltipViewModel};
