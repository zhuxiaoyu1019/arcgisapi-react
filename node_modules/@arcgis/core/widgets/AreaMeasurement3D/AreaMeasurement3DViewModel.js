/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Handles.js";import s from"../../core/Logger.js";import{measurementAreaUnits as i}from"../../core/unitUtils.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import{defaultUnitPropertyMetadata as n}from"../../properties/defaultUnit.js";import l from"../../views/3d/interactive/measurementTools/areaMeasurement3D/AreaMeasurement3DTool.js";import{InteractiveToolViewModel as a}from"../support/InteractiveToolViewModel.js";const u=s.getLogger("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel");let p=class extends a{constructor(t){super(t),this.supportedViewType="3d",this._handles=new e,this._userUnitOptions=null,this._userUnit=null,this.tool=null}initialize(){this.tool&&(this.tool.unit=this.unit)}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}get state(){return this.isDisabled?"disabled":this.tool?this.tool.state:"ready"}get measurement(){if(!this.tool||this.isDisabled)return null;if("pending"===this.tool.toolState||"destroyed"===this.tool.toolState)return null;const t=this.tool.measurementView;if("pending"===t.state||"destroyed"===t.state)return null;const e=t.analysisView,s=e.viewData,i=s.mode,r=s.measurementData,o=s.validMeasurement,n=0===("euclidean"===i?r.intersectingSegments:r.geodesicIntersectingSegments).size,l=n?o?"available":"unavailable":"invalid";return{mode:i,area:{text:n&&o?e.areaLabel:null,state:l},perimeterLength:{text:n&&o?e.perimeterLengthLabel:null,state:l}}}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null,this.tool&&(this.tool.unit=this._userUnit),this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}start(){return this.createTool()}clear(){this.removeTool()}createToolParams(){return{toolConstructor:l,constructorArguments:()=>({unit:this.unit})}}logUnsupportedError(){u.error("AreaMeasurement3D widget is not implemented for MapView")}logError(...t){u.error(...t)}_findSelectableUnit(t,e){const s=this.unitOptions;return-1!==s.indexOf(t)?t:e?this._findSelectableUnit(e):s[0]}_filteredOrAllUnits(t){if(!t)return i.slice();const e=t.filter((t=>-1!==i.indexOf(t)));return 0===e.length?i.slice():e}};t([r({readOnly:!0})],p.prototype,"state",null),t([r({readOnly:!0})],p.prototype,"measurement",null),t([r({constructOnly:!0})],p.prototype,"tool",void 0),t([r(n)],p.prototype,"defaultUnit",void 0),t([r()],p.prototype,"unitOptions",null),t([r()],p.prototype,"unit",null),p=t([o("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],p);var d=p;export default d;
