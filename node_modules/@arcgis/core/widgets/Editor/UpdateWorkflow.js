/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{makeHandle as t}from"../../core/handleUtils.js";import{isSome as i}from"../../core/maybe.js";import{createAbortController as a,onAbort as s,createAbortError as o,throwIfAborted as r,isAborted as d}from"../../core/promiseUtils.js";import{watch as n}from"../../core/watchUtils.js";import"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import"../../core/Logger.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{highlightsSupported as c}from"../../views/support/layerViewUtils.js";import{Edits as u}from"./Edits.js";import m from"./UpdateWorkflowData.js";import h from"./Workflow.js";import{createWorkflowSteps as f,fetchCandidates as w,fetchFullFeature as g,findLayerInfo as p,getVisualVariableAttributes as v,setUpGeometryUpdate as y}from"./workflowUtils.js";var b;const M="candidate-highlight";let V=b=class extends h{constructor(e){super(e),this.type="update"}static create(e,t,i){const a=new b({data:new m({edits:new u,viewModel:e}),onCommit:async e=>{const t=e.edits.feature,a=t.sourceLayer,s=t.clone();if(!e.edits.attributesModified){const{objectIdField:e}=a;s.attributes={[e]:t.getAttribute(e)}}e.edits.geometryModified||(s.geometry=null),await i(a,{updateFeatures:[s]})}});return a._set("steps",this._createWorkflowSteps(a,t)),a}highlight(e){const{data:{viewModel:{view:t}}}=this,i=e&&t.allLayerViews.items.find((({layer:t})=>t===e.layer));c(i)&&this.handles.add(i.highlight(e),M)}unhighlight(){this.handles.remove(M)}static _createWorkflowSteps(e,l="awaiting-feature-to-update"){const{data:c,handles:u}=e;return f(["awaiting-feature-to-update","awaiting-update-feature-candidate","editing-existing-feature","adding-attachment","editing-attachment"],l,{"awaiting-feature-to-update":()=>({id:"awaiting-feature-to-update",async setUp(){const{spinnerViewModel:e,view:t}=c.viewModel;let i=null;u.add({remove(){i&&(i.abort(),i=null)}},this.id),c.edits.feature=null;const d=t.on("immediate-click",(d=>{e.location=d.mapPoint,e.visible=!0,i&&i.abort();const{editableItems:n}=c.viewModel;i=a(),new Promise(((e,a)=>{s(i.signal,(()=>a(o()))),e(w(n,t,d,i.signal))})).then((e=>{if(r(i),c.candidates=e.reduce(((e,t)=>t.error?e:[...e,...t.value]),[]),c.viewModel.spinnerViewModel.visible=1===c.candidates.length,0!==c.candidates.length)if(1===c.candidates.length){const e=c.candidates[0];c.edits.feature=e,c.viewModel.activeWorkflow.go("editing-existing-feature").catch((()=>{})).then((()=>c.viewModel.spinnerViewModel.visible=!1))}else c.viewModel.activeWorkflow.next()}))}));u.add(d,this.id)},async tearDown(){u.remove(this.id)}}),"awaiting-update-feature-candidate":()=>({id:"awaiting-update-feature-candidate",async setUp(){const{edits:t}=c;t.feature=null,u.add(n(t,"feature",(t=>{e.unhighlight(),e.highlight(t)})),this.id)},async tearDown(){e.unhighlight(),u.remove(this.id)}}),"editing-existing-feature":()=>({id:"editing-existing-feature",async setUp(){const s=c.edits.feature,o=c.viewModel;c.editableItem=o.editableItems.find((e=>e.layer===s.layer));const r=a();u.add({remove:()=>r.abort()},this.id);const n=o.view.whenLayerView(s.layer),l=g(s,o.view,r.signal),m=await n,h=await l;if(d(r))return;c.edits.updateGeometry(h.geometry),c.edits.updateAttributes(h.attributes),c.edits.trackChanges();const f=h.sourceLayer,w=p(o.layerInfos,f),b=w&&w.fieldConfig;o.attachmentsViewModel.set({graphic:h,mode:"view"}),o.featureFormViewModel.set({feature:h,fieldConfig:b});const M="createInteractiveEditSession"in m?m.createInteractiveEditSession(s):null,V=[o.featureFormViewModel.on("value-change",(e=>{c.edits.updateAttributes(o.featureFormViewModel.getValues()),h.attributes=c.edits.feature.attributes,M&&M.setAttribute(e.fieldName,e.value)})),o.attachmentsViewModel.watch("mode",(e=>{"add"===e&&c.viewModel.activeWorkflow.go("adding-attachment"),"edit"===e&&c.viewModel.activeWorkflow.go("editing-attachment")}))];M&&(V.push(t((()=>M.rollback()))),u.add(t((()=>M.commit())),e._handleKeys.afterCommit));const{supportsGeometryUpdate:j}=f.capabilities.editing;if(j){o.sketchViewModel.allowDeleteKey=!1;const t=v(h),{interactive:a,visual:s}=await y(h,t,o.sketchViewModel,o.view,(({geometry:e,attributes:a})=>{if(i(t.rotation)){const{field:e}=t.rotation;o.featureFormViewModel.setValue(e,a[e])}if(i(t.size)){const{field:e}=t.size;o.featureFormViewModel.setValue(e,a[e])}c.edits.updateAttributes(a),c.edits.updateGeometry(e)}));V.push(a,s),u.add(a,e._handleKeys.beforeCommit),u.add(s,e._handleKeys.afterCommit)}else e.highlight(h);u.add(V,this.id),o.spinnerViewModel.visible=!1},async tearDown(){e.unhighlight(),u.remove(this.id)}}),"adding-attachment":()=>({id:"adding-attachment",parent:"editing-existing-feature",async setUp(){},async tearDown(){}}),"editing-attachment":()=>({id:"editing-attachment",parent:"editing-existing-feature",async setUp(){},async tearDown(){}})})}};V=b=e([l("esri.widgets.Editor.UpdateWorkflow")],V);var j=V;export default j;
