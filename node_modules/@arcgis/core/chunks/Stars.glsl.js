/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{AlignPixel as e}from"../views/3d/webgl-engine/core/shaderLibrary/hud/AlignPixel.glsl.js";import{glsl as o}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as a}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";function i(){const i=new a;return i.attributes.add("position","vec3"),i.attributes.add("color","vec4"),i.attributes.add("size","float"),i.varyings.add("vcolor","vec4"),i.varyings.add("vsize","float"),i.vertex.uniforms.add("transform","mat4").add("viewport","vec4").add("pixelRatio","float"),i.include(e),i.vertex.code.add(o`void main(void) {
vec4 posProj = transform * vec4(position, 0);
gl_Position = alignToPixelCenter(posProj, viewport.zw);
vcolor = color / 1.2;
vsize = size * 5.0 * pixelRatio;
gl_PointSize = vsize;
}`),i.fragment.code.add(o`void main() {
float cap = 0.7;
float scale = 1.0 / cap;
float helper = clamp(length(abs(gl_PointCoord - vec2(0.5))), 0.0, cap);
float alpha = clamp((cap - helper) * scale, 0.0, 1.0);
float intensity = alpha * alpha * alpha;
if (vsize < 3.0) {
intensity *= 0.5;
}
gl_FragColor = vec4(vcolor.xyz, intensity);
}`),i}var r=Object.freeze({__proto__:null,build:i});export{r as S,i as b};
