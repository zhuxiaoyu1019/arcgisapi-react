/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{ScreenSizeScaling as e}from"../views/3d/webgl-engine/core/shaderLibrary/ScreenSizeScaling.glsl.js";import{Slice as r}from"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js";import{Transform as o}from"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js";import{ReadLinearDepth as i}from"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js";import{multipassTerrainTest as a}from"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{symbolAlphaCutoff as d}from"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js";import{ColorConversion as l}from"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js";import{glsl as n}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as s}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";function t(t){const c=new s;return c.include(o,{linearDepth:!1}),c.include(e,{}),c.include(r,t),c.fragment.include(l),c.vertex.uniforms.add("proj","mat4").add("view","mat4"),c.fragment.uniforms.add("color","vec4"),c.attributes.add("position","vec3"),c.varyings.add("vWorldPosition","vec3"),t.multipassTerrainEnabled&&c.varyings.add("depth","float"),t.screenSizeEnabled&&c.attributes.add("offset","vec3"),t.shadingEnabled&&(c.vertex.uniforms.add("viewNormal","mat4"),c.fragment.uniforms.add("shadedColor","vec4").add("shadingDirection","vec3"),c.attributes.add("normal","vec3"),c.varyings.add("vViewNormal","vec3")),c.vertex.code.add(n`
    void main(void) {
      vWorldPosition = ${t.screenSizeEnabled?"screenSizeScaling(offset, position)":"position"};
  `),t.shadingEnabled&&c.vertex.code.add(n`vec3 worldNormal = normal;
vViewNormal = (viewNormal * vec4(worldNormal, 1)).xyz;`),c.vertex.code.add(n`
    ${t.multipassTerrainEnabled?"depth = (view * vec4(vWorldPosition, 1.0)).z;":""}
    gl_Position = transformPosition(proj, view, vWorldPosition);
  }
  `),t.multipassTerrainEnabled&&(c.fragment.include(i),c.include(a,t)),c.fragment.code.add(n`
    void main() {
      discardBySlice(vWorldPosition);
      ${t.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
    `),t.shadingEnabled?c.fragment.code.add(n`vec3 viewNormalNorm = normalize(vViewNormal);
float shadingFactor = 1.0 - clamp(-dot(viewNormalNorm, shadingDirection), 0.0, 1.0);
vec4 finalColor = mix(color, shadedColor, shadingFactor);`):c.fragment.code.add(n`vec4 finalColor = color;`),c.fragment.code.add(n`
      if (finalColor.a < ${n.float(d)}) {
        discard;
      }
      ${7===t.output?n`gl_FragColor = vec4(finalColor.a);`:""}

      ${0===t.output?n`gl_FragColor = highlightSlice(finalColor, vWorldPosition); ${t.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}`:""}
    }
    `),c}var c=Object.freeze({__proto__:null,build:t});export{c as S,t as b};
