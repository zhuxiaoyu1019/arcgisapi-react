/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import t from"../Error.js";import r from"../has.js";import{throwIfAborted as e,createAbortController as o}from"../promiseUtils.js";import n from"./Connection.js";export{default as Connection}from"./Connection.js";import i from"./RemoteClient.js";export{default as RemoteClient}from"./RemoteClient.js";import s from"./WorkerOwner.js";let a=r("esri-workers-debug")?1:r("host-browser")?navigator.hardwareConcurrency-1:0;a||(a=r("safari")&&r("mac")||r("trident")?7:2);let l=0;const c=[];function m(){g()}function f(t,r){return u(t,{client:r})}async function u(t,r){const e=new n;return await e.open(t,r),e}async function p(o,n={}){if("string"!=typeof o)throw new t("workers:undefined-module","modulePath is missing");let s=n.strategy||"distributed";if(r("host-webworker")&&!r("esri-workers")&&(s="local"),"local"===s){let t=await i.loadWorker(o);t||(t=await import(
/* @vite-ignore */
/* webpackIgnore: true */
o)),e(n.signal);const r=n.client||t;return u([i.connect(t)],{...n,client:r})}if(await g(),e(n.signal),"dedicated"===s){const t=l++%a;return u([await c[t].open(o,n)],n)}if(n.maxNumWorkers&&n.maxNumWorkers>0){const t=Math.min(n.maxNumWorkers,a);if(t<a){const r=new Array(t);for(let e=0;e<t;++e){const t=l++%a;r[e]=c[t].open(o,n)}return u(r,n)}}return u(c.map((t=>t.open(o,n))),n)}function w(){h&&(d.abort(),h=null);for(let t=0;t<c.length;t++)c[t]&&c[t].terminate();c.length=0}let d,h=null;async function g(){if(h)return h;d=o();const t=[];for(let r=0;r<a;r++){const e=s.create(r).then((t=>(c[r]=t,t)));t.push(e)}return h=Promise.all(t),h}export{m as initialize,p as open,f as openWithPorts,w as terminate};
