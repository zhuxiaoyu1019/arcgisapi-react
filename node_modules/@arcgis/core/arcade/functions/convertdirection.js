/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../Dictionary.js";import{d as t,g as r,k as n,t as s,a as i,b as a}from"../../chunks/languageUtils.js";const c=e=>(t,r,n)=>(n=n||14,+e(t,r).toFixed(n)),o=(e,t)=>e+t,u=(e,t)=>e-t,d=(e,t)=>e*t,l=(e,t)=>e/t,h=(e,t,r)=>c(o)(e,t,r),m=(e,t,r)=>c(u)(e,t,r),_=(e,t,r)=>c(d)(e,t,r),f=(e,t,r)=>c(l)(e,t,r),g=360,w=400,E=2*Math.PI,D=3600,A=3240,p=60,S=60,R=180*D/Math.PI,T=g*p*S,M=90*D,v=180*D,F=270*D,I=String.fromCharCode(7501),U="Â°";function x(e){if(!1===r(e))throw new Error("Invalid Parameter");return e}function O(e,t){const r=10**t;return Math.round(e*r)/r}function G(e,t){return e%t}function N(e){const t=parseFloat(e.toString().replace(Math.trunc(e).toString(),"0"))*Math.sign(e);if(e<0){return{fraction:t,integer:Math.ceil(e)}}return{fraction:t,integer:Math.floor(e)}}function b(e,t){switch(e){case 0:return"SHORT"===t?"N":"North";case 1:return"SHORT"===t?"E":"East";case 2:return"SHORT"===t?"S":"South";case 3:return"SHORT"===t?"W":"West"}}function H(e,t,r){for(;e.length<r;)e=t+e;return e}function C(e,t){return e-Math.floor(e/t)*t}function y(e){switch(e){case 6:case 1:return g;case 4:return E;case 5:return w;case 2:return T;case 7:return p;case 8:return S;default:throw new Error("Unnexpected evaluations")}}function k(e){switch(e.toUpperCase().trim()){case"NORTH":case"NORTHAZIMUTH":case"NORTH AZIMUTH":return 1;case"POLAR":return 2;case"QUADRANT":return 3;case"SOUTH":case"SOUTHAZIMUTH":case"SOUTH AZIMUTH":return 4}throw new Error("Unsupported direction type")}function P(e){switch(e.toUpperCase().trim()){case"D":case"DD":case"DECIMALDEGREE":case"DECIMAL DEGREE":case"DEGREE":case"DECIMALDEGREES":case"DECIMAL DEGREES":case"DEGREES":return 1;case"DMS":case"DEGREESMINUTESSECONDS":case"DEGREES MINUTES SECONDS":return 3;case"R":case"RAD":case"RADS":case"RADIAN":case"RADIANS":return 4;case"G":case"GON":case"GONS":case"GRAD":case"GRADS":case"GRADIAN":case"GRADIANS":return 5}throw new Error("Unsupported units")}class L{constructor(e,t,r){this.m_degrees=e,this.m_minutes=t,this.m_seconds=r}get_field(e){switch(e){case 1:case 6:return this.m_degrees;case 7:return this.m_minutes;case 2:case 8:return this.m_seconds;default:throw new Error("Unnexpected evaluation")}}static seconds_to_DMS(e){const t=N(e).fraction;let r=N(e).integer;const n=Math.floor(r/D);r-=n*D;const s=Math.floor(r/S);return r-=s*S,new L(n,s,r+t)}static number_to_dms(e){const t=N(e).fraction,r=N(e).integer,n=_(N(100*t).fraction,100),s=N(100*t).integer;return new L(r,s,n)}format(e,t){let r=O(this.m_seconds,t),n=this.m_minutes,s=this.m_degrees;if(2===e||8===e)S<=r&&(r-=S,++n),p<=n&&(n=0,++s),g<=s&&(s=0);else if(7===e)r=0,n=30<=this.m_seconds?this.m_minutes+1:this.m_minutes,s=this.m_degrees,p<=n&&(n=0,++s),g<=s&&(s=0);else if(1===e||6===e){const e=f(this.m_seconds,D),t=f(this.m_minutes,p);s=Math.round(this.m_degrees+t+e),n=0,r=0}return new L(s,n,r)}static DMS_to_seconds(e,t,r){return e*D+t*S+r}}class z{constructor(e,t,r){this.meridian=e,this.angle=t,this.direction=r}fetch_azimuth(e){return 0===e?this.meridian:this.direction}}class q{constructor(e){this.m_angle=e}static createFromAngleAndDirection(e,t){return new q(new Z(q.convertDirectionFormat(e.extract_angular_units(2),t,1)))}getAngle(e){const t=this.m_angle.extract_angular_units(2);switch(e){case 1:case 4:case 2:return new Z(q.convertDirectionFormat(t,1,e));case 3:{const e=q.seconds_north_azimuth_to_quadrant(t);return new Z(e.angle)}}}getMeridian(e){const t=this.m_angle.extract_angular_units(2);switch(e){case 1:return 0;case 4:return 2;case 2:return 1;case 3:return q.seconds_north_azimuth_to_quadrant(t).meridian}}getDirection(e){const t=this.m_angle.extract_angular_units(2);switch(e){case 1:return 1;case 4:return 3;case 2:return 0;case 3:return q.seconds_north_azimuth_to_quadrant(t).direction}}static seconds_north_azimuth_to_quadrant(e){const t=e<=M||e>=F?0:2,r=0===t?Math.min(T-e,e):Math.abs(e-v);return new z(t,r,e>v?3:1)}static createFromAngleMeridianAndDirection(e,t,r){return new q(new Z(q.secondsQuadrantToNorthAzimuth(e.extract_angular_units(2),t,r)))}static secondsQuadrantToNorthAzimuth(e,t,r){return 0===t?1===r?e:T-e:1===r?v-e:v+e}static convertDirectionFormat(e,t,r){let n=0;switch(t){case 1:n=e;break;case 2:n=M-e;break;case 3:throw new Error("Unnexpected evaluation");case 4:n=e+v}let s=0;switch(r){case 1:s=n;break;case 2:s=M-n;break;case 3:throw new Error("Unnexpected evaluation");case 4:s=n-v}return s=G(s,T),s<0?T+s:s}}function W(e,t,r){let n=null;switch(t){case 1:n=_(e,D);break;case 2:n=e;break;case 5:n=_(e,A);break;case 4:n=_(e,R);break;default:throw new Error("Unnexpected evaluation")}switch(r){case 1:return f(n,D);case 2:return n;case 5:return f(n,A);case 4:return n/R;default:throw new Error("Unnexpected evaluation")}}class Z{constructor(e){this.m_seconds=e}static createFromAngleAndUnits(e,t){return new Z(W(e,t,2))}extract_angular_units(e){return W(this.m_seconds,2,B(e))}static createFromDegreesMinutesSeconds(e,t,r){return new Z(h(h(_(e,D),_(t,S)),r))}}function B(e){switch(e){case 1:case 6:case 3:return 1;case 5:return 5;case 7:return 7;case 4:return 4;case 2:case 8:return 2}}class Q{constructor(e,t,r,n){this.m_view=e,this.m_angle=t,this.m_merdian=r,this.m_direction=n,this.m_dms=null,this.m_formatted_dms=null}static createFromStringAndBearing(e,t,r){return new Q(e,t.getAngle(r),t.getMeridian(r),t.getDirection(r))}fetch_angle(){return this.m_angle}fetch_meridian(){return this.m_merdian}fetch_direction(){return this.m_direction}fetch_m_view(){return this.m_view}fetch_dms(){return null===this.m_dms&&this.calculate_dms(),this.m_dms}fetch_formatted_dms(){return null===this.m_formatted_dms&&this.calculate_dms(),this.m_formatted_dms}calculate_dms(){let e=null,t=6,r=0;for(let n=0;n<this.m_view.length;n++){const s=this.m_view[n];switch(s){case"m":e=se(this.m_view,n,s),t=6===t?7:t,n=e.newpos;continue;case"s":e=se(this.m_view,n,s),t=8,r=r<e.rounding?e.rounding:r,n=e.newpos;continue;default:continue}}this.m_dms=L.seconds_to_DMS(this.m_angle.extract_angular_units(2)),this.m_formatted_dms=L.seconds_to_DMS(this.m_angle.extract_angular_units(2)).format(t,r)}}function j(e,t,r,n,s){let i=null;switch(t){case 1:case 4:case 5:return i=C(O(e.extract_angular_units(t),n),y(t)),H(i.toFixed(n),"0",r+n+(n>0?1:0));case 6:case 7:return i=C(s.fetch_formatted_dms().get_field(t),y(t)),H(i.toFixed(n),"0",r+n+(n>0?1:0));case 8:return i=C(O(s.fetch_dms().get_field(t),n),y(t)),H(i.toFixed(n),"0",r+n+(n>0?1:0));default:throw new Error("Unnexepected evaluation")}}function X(e,t,r){if(3===r)throw new Error("Conversion error");if(3===t){const t=L.number_to_dms(e);return q.createFromAngleAndDirection(Z.createFromDegreesMinutesSeconds(t.m_degrees,t.m_minutes,t.m_seconds),r)}return q.createFromAngleAndDirection(Z.createFromAngleAndUnits(e,B(t)),r)}function V(e){switch(s(e)){case 1:return{first:0,second:1};case 2:return{first:2,second:1};case 3:return{first:2,second:3};case 4:return{first:0,second:3}}return null}function J(e){switch(e.toUpperCase().trim()){case"N":case"NORTH":return 0;case"E":case"EAST":return 1;case"S":case"SOUTH":return 2;case"W":case"WEST":return 3}return null}function K(e){const t=parseFloat(e);if(n(t)){if(isNaN(t))throw new Error("Invalid conversion");return t}throw new Error("Invalid conversion")}function Y(e,r,n){const s=3===n;let i=null,a=null,c=0,o=0,u=0;if(s){if(e.length<2)throw new Error("Conversion Error");u=1;const r=V(t(e[e.length-1]));if(r?(i=r.first,a=r.second):(c=1,i=J(t(e[0])),a=J(t(e[e.length-1]))),null===i||null===a)throw new Error("Invalid Conversion")}switch(r){case 1:case 4:case 5:if(0===e.length)throw new Error("Invalid Conversion");return s?q.createFromAngleMeridianAndDirection(Z.createFromAngleAndUnits(K(e[c]),B(r)),i,a):q.createFromAngleAndDirection(Z.createFromAngleAndUnits(K(e[c]),B(r)),n);case 3:if(o=e.length-u-c,3===o){const t=Z.createFromDegreesMinutesSeconds(K(e[c]),K(e[c+1]),K(e[c+2]));return s?q.createFromAngleMeridianAndDirection(t,i,a):q.createFromAngleAndDirection(t,n)}if(1===o){const t=K(e[c]),r=L.number_to_dms(t),o=Z.createFromDegreesMinutesSeconds(r.m_degrees,r.m_minutes,r.m_seconds);return s?q.createFromAngleMeridianAndDirection(o,i,a):q.createFromAngleAndDirection(o,n)}}throw new Error("Conversion Error")}function $(e){const t=[" ","-","/","'",'"',"\\","^",U,I,"\t","\r","\n","*"];let r="";for(let n=0;n<e.length;n++){const s=e.charAt(n);-1!==t.indexOf(s)?r+="RRSPLITRRSPLITRR":r+=s}return r.split("RRSPLITRRSPLITRR").filter((e=>""!==e))}function ee(e,t,c){if(n(e))return X(s(e),t,c);if(r(e))return Y($(e),t,c);if(i(e))return Y(e,t,c);if(a(e))return Y(e.toArray(),t,c);throw new Error("Conversion Error")}function te(e,t,r){const n=B(r);if(n&&3!==r){return e.getAngle(t).extract_angular_units(n)}throw new Error("Conversion Error")}function re(e,t,r){const n=e.getAngle(t);if(3===t&&3===r){const r=L.seconds_to_DMS(n.extract_angular_units(2));return[b(e.getMeridian(t),"SHORT"),r.m_degrees,r.m_minutes,r.m_seconds,b(e.getDirection(t),"SHORT")]}if(3===r){const e=L.seconds_to_DMS(n.extract_angular_units(2));return[e.m_degrees,e.m_minutes,e.m_seconds]}return 3===t?[b(e.getMeridian(t),"SHORT"),n.extract_angular_units(r),b(e.getDirection(t),"SHORT")]:[n.extract_angular_units(r)]}function ne(e,t){let r="";switch(e){case 1:r=3===t?"DD.DD"+U:"DDD.DD"+U;break;case 3:r=3===t?"dd"+U+" mm' ss\"":"ddd"+U+" mm' ss.ss\"";break;case 4:r="R.RR";break;case 5:r="GGG.GG"+I;break;default:throw new Error("Conversion error")}return 3===t&&(r="p "+r+" b"),r}function se(e,t,r){const n={padding:0,rounding:0,newpos:t};let s=!1;for(;t<e.length;){const i=e[t];if(i===r)s?n.rounding++:n.padding++,t++;else{if("."!==i)break;s=!0,t++}}return n.newpos=t-1,n}function ie(e,t,r){const n={escaped:"",newpos:t};for(t++;t<e.length;){const r=e[t];if(t++,"]"===r)break;n.escaped+=r}return n.newpos=t-1,n}function ae(e,t,r){let n="",s=null,i=null;const a=Q.createFromStringAndBearing(t,e,r),c={D:1,d:6,m:7,s:8,R:4,G:5};for(let o=0;o<t.length;o++){const u=t[o];switch(u){case"[":s=ie(t,o),n+=s.escaped,o=s.newpos;continue;case"D":case"d":case"m":case"s":case"R":case"G":s=se(t,o,u),i=e.getAngle(r),n+=j(i,c[u],s.padding,s.rounding,a),o=s.newpos;continue;case"P":case"p":n+=b(a.fetch_meridian(),"p"===u?"SHORT":"LONG");continue;case"B":case"b":n+=b(a.fetch_direction(),"b"===u?"SHORT":"LONG");continue;default:n+=u}}return n}function ce(r,n,s){if(!(n instanceof e))throw new Error("Invalid Parameter");if(!1===n.hasField("directionType"))throw new Error("Invalid Parameter - Missing directionType");if(!1===n.hasField("angleType"))throw new Error("Invalid Parameter - Missing directionType");const i=k(x(n.field("directiontype"))),a=ee(r,P(x(n.field("angletype"))),i);if(!(s instanceof e))throw new Error("Invalid Parameter");if(!1===s.hasField("directionType"))throw new Error("Invalid Parameter - Missing directionType");if(!1===s.hasField("outputType"))throw new Error("Invalid Parameter - Missing directionType");const c=k(x(s.field("directiontype"))),o=s.hasField("angleType")?P(x(s.field("angletype"))):null,u=x(s.field("outputType")).toUpperCase().trim();if(!c||!u)throw new Error("Conversion error");if(!(o||"TEXT"===u&&s.hasField("format")))throw new Error("Invalid unit");switch(u){case"VALUE":return 3===c||3===o?re(a,c,o):te(a,c,o);case"TEXT":{let e="";return s.hasField("format")&&(e=t(s.field("format"))),null!==e&&""!==e||(e=ne(o,c)),ae(a,e,c)}default:throw new Error("Invalid Parameter")}}export{ce as convertDirection,h as preciseAdd,f as preciseDivide,m as preciseMinus,_ as preciseMultiply};
