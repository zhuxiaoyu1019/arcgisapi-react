/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import t from"./ImmutableArray.js";import{i as s,k as i,g as e,s as r,t as o,u as n,d as a,o as u,w as l,a as f}from"../chunks/languageUtils.js";import c from"../geometry/Geometry.js";function b(t,r=!1){let c=null;if(null===t);else if(i(t))c=o(t);else if(s(t))c=n(t);else if(e(t))c=a(t);else if(u(t))c=l(t);else if(f(t)){c=[];for(const s of t)c.push(b(s,r))}else{if(0===Object.keys(t).length)return null;const s=new h;s.immutable=!1;for(const i of Object.keys(t)){const e=t[i];void 0!==e&&s.setField(i,b(e,r))}s.immutable=r,c=s}return c}class h{constructor(t){this.declaredClass="esri.arcade.Dictionary",this.attributes=null,this.plain=!1,this.immutable=!0,this.attributes=t instanceof h?t.attributes:null==t?{}:t}field(t){const s=t.toLowerCase(),i=this.attributes[t];if(void 0!==i)return i;for(const e in this.attributes)if(e.toLowerCase()===s)return this.attributes[e];throw new Error("Field not Found : "+t)}setField(t,s){if(this.immutable)throw new Error("Dictionary is Immutable");const i=t.toLowerCase();if(void 0===this.attributes[t]){for(const t in this.attributes)if(t.toLowerCase()===i)return void(this.attributes[t]=s);this.attributes[t]=s}else this.attributes[t]=s}hasField(t){const s=t.toLowerCase();if(void 0!==this.attributes[t])return!0;for(const i in this.attributes)if(i.toLowerCase()===s)return!0;return!1}keys(){let t=[];for(const s in this.attributes)t.push(s);return t=t.sort(),t}castToText(){let o="";for(const n in this.attributes){""!==o&&(o+=",");const a=this.attributes[n];null==a?o+=JSON.stringify(n)+":null":s(a)||i(a)||e(a)?o+=JSON.stringify(n)+":"+JSON.stringify(a):a instanceof c||a instanceof t||a instanceof Array?o+=JSON.stringify(n)+":"+r(a):a instanceof Date?o+=JSON.stringify(n)+":"+JSON.stringify(a):null!==a&&"object"==typeof a&&void 0!==a.castToText&&(o+=JSON.stringify(n)+":"+a.castToText())}return"{"+o+"}"}static convertObjectToArcadeDictionary(t,s=!0){const i=new h;i.immutable=!1;for(const e in t){const s=t[e];void 0!==s&&i.setField(e.toString(),b(s))}return i.immutable=s,i}}export default h;
