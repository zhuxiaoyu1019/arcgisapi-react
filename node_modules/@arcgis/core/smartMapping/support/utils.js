/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{loadArcade as e}from"../../support/arcadeOnDemand.js";import{getWellKnownBasemapId as t}from"../../support/basemapUtils.js";const n={light:["streets","gray","topo","terrain","national-geographic","oceans","osm","gray-vector","streets-vector","topo-vector","streets-relief-vector","streets-navigation-vector"],dark:["satellite","hybrid","dark-gray","dark-gray-vector","streets-night-vector"]},r="percent-of-total",o="field",i={years:365,months:30,days:1,hours:1/24,minutes:1/1440,seconds:1/86400,milliseconds:1/864e5},s=["integer","small-integer"];let a=null;async function l(t){const n=t.field,r=t.normalizationField,o=t.valueExpression;let i=[];if(o){if(!a){const{arcadeUtils:t}=await e();a=t}i=a.extractFieldNames(o)}return n&&i.push(n),r&&i.push(r),i}function u(e){let t=e.normalizationType;return t||(e.normalizationField?t=o:null!=e.normalizationTotal&&(t=r)),t}function c(e){return String(e).padStart(2,"0")}function f(e,t,n){let r;if("date"===t||"number"===t){"number"===t&&(e=new Date(e));r=`TIMESTAMP'${n?e.getFullYear():e.getUTCFullYear()}-${c((n?e.getMonth():e.getUTCMonth())+1)}-${c(n?e.getDate():e.getUTCDate())} ${c(n?e.getHours():e.getUTCHours())}:${c(n?e.getMinutes():e.getUTCMinutes())}:${c(n?e.getSeconds():e.getUTCSeconds())}'`}else r=e;return r}function g(e,t,n,r){const{hasQueryEngine:o}=e;let s=`(${f(n,d(e,n),o)} - ${f(t,d(e,t),o)})`;o&&(s=`(${s} * ${i.milliseconds})`);let a=i[r],l="/";a<1&&(a=1/a,l="*");return{sqlExpression:1===a?s:`(${s} ${l} ${a})`,sqlWhere:null}}function d(e,t){if(t instanceof Date)return"date";if("number"==typeof t)return"number";if("string"==typeof t){const n=e.getField(t);if("<now>"===t.toLowerCase())return;if(n&&"date"===n.type)return"field"}}function p(e,t=n){for(const n in t)if(t[n].indexOf(e)>-1)return n}function m(e,n,r=!0){let o=null;return e&&("string"==typeof e?n.includes(e)&&(o=e):o=t(e)),r?o||"gray":o}function y(e,t){const n=t&&e.getField(t);return n&&s.indexOf(n.type)>-1}function $(e){return`cast(${e} as float)`}export{$ as castIntegerFieldToFloat,n as defaultBasemapGroups,p as getBasemapGroup,m as getBasemapId,g as getDateDiffSQL,d as getDateType,l as getFieldsList,u as getNormalizationType,y as isIntegerField,i as unitValueInDays};
