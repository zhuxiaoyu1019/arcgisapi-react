/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import t from"../../core/Error.js";import{isSome as a}from"../../core/maybe.js";import{numericTypes as r}from"../../layers/support/fieldUtils.js";import{verifyBasicFieldValidity as s,verifyFieldType as i}from"./support/utils.js";import{getFieldsList as e}from"../support/utils.js";import{createLayerAdapter as o,getLayerTypeLabels as l}from"../support/adapters/support/layerUtils.js";const p=r;async function n(r){if(!(r&&r.layer&&r.view))throw new t("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");const n=[0,2,1,5],{layer:m,...u}=r,f=o(m,n),c={layerAdapter:f,...u};if(c.blurRadius=null==c.blurRadius?10:c.blurRadius,!f)throw new t("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+l(n).join(", "));const d=a(c.signal)?{signal:c.signal}:null;await f.load(d);const y=c.field,w=y?f.getField(y):null,h=await e({field:y}),j=s(f,h,"heatmap-statistics:invalid-parameters");if(j)throw j;if(w){const t=i(f,w,"heatmap-statistics:invalid-parameters",p);if(t)throw t}return c}async function m(t){const{layerAdapter:a,...r}=await n(t);return a.heatmapStatistics(r)}export default m;
