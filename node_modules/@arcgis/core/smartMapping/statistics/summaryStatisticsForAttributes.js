/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{isSome as s}from"../../core/maybe.js";import{verifyBasicFieldValidity as r}from"./support/utils.js";import{getFieldsList as t}from"../support/utils.js";import{createLayerAdapter as i,getLayerTypeLabels as n}from"../support/adapters/support/layerUtils.js";async function a(a){if(!(a&&a.layer&&a.attributes))throw new e("summary-statistics-for-attributes:missing-parameters","'layer' and 'attributes' parameters are required");if(a.attributes.some((e=>!!e.valueExpression))&&!a.view)throw new e("summary-statistics-for-attributes:missing-parameters","View is required when 'valueExpression' is specified in attributes");const u=[0,2,1,5],{layer:o,...l}=a,p=i(o,u),m={layerAdapter:p,...l};if(m.includeZeros=null==m.includeZeros||m.includeZeros,m.includeNegatives=null==m.includeNegatives||m.includeNegatives,!p)throw new e("summary-statistics-for-attributes:invalid-parameters","'layer' must be one of these types: "+n(u).join(", "));const f=m.view,c=s(m.signal)?{signal:m.signal}:null;await Promise.all([f&&f.when(),p.load(c)]);const d=[];for(const e of m.attributes){const s=await t({field:e.field,valueExpression:e.valueExpression});Array.prototype.push.apply(d,s)}const $=r(p,d,"summary-statistics-for-attributes:invalid-parameters");if($)throw $;return m}function u(e,s,r){const t=[],i=[],n=[],a=[],u=[];e.forEach(((e,s)=>{const o=e.field?"field":"expression",l=e.field||e.valueExpression;e.field?(u.push(l),i.push(`var ${o}${s} = Number($feature["${l}"]);`)):(t.push(`function getValueForExpr${s}() {\n  ${l} \n}`),i.push(`var ${o}${s} = Number(getValueForExpr${s}());`)),r||n.push(`${o}${s} = IIf(${o}${s} < 0, 0, ${o}${s});`),a.push(`${o}${s}`)}));let o="return sum;";const l=t.length?null:u.reduce(((e,s)=>`${e} + ${s}`));let p=null;s||r?s?r||(o="return IIf(sum >= 0, sum, null);",l&&(p=`(( ${l} ) >= 0)`)):(o="return IIf(sum != 0, sum, null);",l&&(p=`(( ${l} ) <> 0)`)):(o="return IIf(sum > 0, sum, null);",l&&(p=`(( ${l} ) > 0)`));return{valueExpression:[t.length?t.join("\n"):"",i.join("\n"),n.join("\n"),`var sum = ${a.join(" + ")};`,o].filter(Boolean).join("\n\n"),sqlExpression:l,sqlWhere:p}}async function o(e){const{layerAdapter:s,...r}=await a(e),t=u(r.attributes,r.includeZeros,r.includeNegatives);return s.summaryStatistics({valueExpression:t.valueExpression,sqlExpression:t.sqlExpression,sqlWhere:t.sqlWhere,view:r.view,signal:r.signal})}export default o;
