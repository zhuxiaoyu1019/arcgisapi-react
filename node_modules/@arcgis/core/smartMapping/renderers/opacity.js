/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{isSome as i}from"../../core/maybe.js";import a from"../../renderers/support/AuthoringInfo.js";import s from"../../renderers/support/AuthoringInfoVisualVariable.js";import r from"../../renderers/visualVariables/OpacityVariable.js";import{verifyBasicFieldValidity as l,createStopValues as o,getDefaultDataRange as t}from"./support/utils.js";import n from"../statistics/summaryStatistics.js";import{getFieldsList as p}from"../support/utils.js";import{createLayerAdapter as u,getLayerTypeLabels as m}from"../support/adapters/support/layerUtils.js";const d="date";async function f(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new e("opacity-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.view)throw new e("opacity-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");const s={...a},r=[0,2,1,3,5],o=u(s.layer,r);if(s.layer=o,!o)throw new e("opacity-visual-variable:invalid-parameters","'layer' must be one of these types: "+m(r).join(", "));const t=i(s.signal)?{signal:s.signal}:null;await o.load(t);const n=await p({field:s.field,normalizationField:s.normalizationField,valueExpression:s.valueExpression}),d=l(o,n,"opacity-visual-variable:invalid-parameters");if(d)throw d;return s}function v(e,i){const l=i.layer,n=i.field,p=n&&!("function"==typeof n)?l.getField(n):null,u=p&&p.type===d,m=o(e),f=t(e,u,!0),v=f||[m[0],m[4]],c=new r({field:n,valueExpression:i.valueExpression,valueExpressionTitle:i.valueExpressionTitle,normalizationField:i.normalizationField,stops:[{value:v[0],opacity:.3},{value:v[1],opacity:1}],legendOptions:i.legendOptions}),y=new s({type:"opacity",minSliderValue:null!=i.minValue?i.minValue:e.min,maxSliderValue:null!=i.maxValue?i.maxValue:e.max}),x=new a({visualVariables:[y]});return Promise.resolve({visualVariable:c,statistics:e,defaultValuesUsed:!!f,authoringInfo:x})}async function c(e){const i=await f(e);let a=null;return a=i.statistics?i.statistics:await n({layer:i.layer,field:i.field,valueExpression:i.valueExpression,sqlExpression:i.sqlExpression,sqlWhere:i.sqlWhere,normalizationType:i.normalizationField?"field":void 0,normalizationField:i.normalizationField,minValue:i.minValue,maxValue:i.maxValue,view:i.view,signal:i.signal}),v(a,i)}export{c as createVisualVariable};
