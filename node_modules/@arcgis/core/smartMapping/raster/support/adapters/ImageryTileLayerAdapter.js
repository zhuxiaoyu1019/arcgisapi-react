/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import r from"../../../../core/Error.js";import{property as e}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import a from"../../../../geometry/Extent.js";import{estimateStatisticsHistograms as o}from"../../../../layers/support/rasterFunctions/pixelUtils.js";import i from"./RasterLayerAdapter.js";let m=class extends i{generateRasterInfo(t){return Promise.resolve(this.rasterInfo)}async estimateStatisticsHistograms(t){if(null!==this._statsCache)return this._statsCache;const{raster:e}=this.layer,{extent:s,width:a,height:i}=this.getSamplePixelBlockDescriptor(e.rasterInfo),{pixelBlock:m}=await e.fetchPixels(s,a,i,t);if(null==m)throw new r("raster-layer-adapter","Unable to estimate histograms");return this._statsCache=o(m),this._statsCache}supportsMultidirectionalHillshade(){return!0}load(t){return this.addResolvingPromise(this.layer.load(t).then((()=>this.rasterInfo=this.layer.raster.rasterInfo))),Promise.resolve(this)}getSamplePixelBlockDescriptor(t,r=1e3){const{pyramidScalingFactor:e,maximumPyramidLevel:s}=t.storageInfo;let{extent:o,width:i,height:m,pixelSize:l}=t,n=Math.ceil(Math.log(Math.max(i,m)/r)/Math.log(e))-1,h=0,p=0;if(n<=s){const t=e**n;i=Math.floor(i/t),m=Math.floor(m/t)}else n=0,i=Math.min(i,r),m=Math.min(m,r),h=Math.max(Math.floor(i/2-500),0),p=Math.max(Math.floor(m/2-500),0),o=new a({xmin:o.xmin+h*l.x,xmax:Math.min(o.xmax,o.xmin+h*l.x*r),ymin:o.ymin+p*l.y,ymax:Math.min(o.ymax,o.ymin+p*l.y*r)});return{extent:o,width:i,height:m,origin:{x:h,y:p}}}};t([e()],m.prototype,"layer",void 0),m=t([s("esri.smartMapping.support.adapters.ImageryTileLayerAdapter")],m);var l=m;export default l;
