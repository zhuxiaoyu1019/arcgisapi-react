/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../core/Error.js";import{getSupportedRendererTypes as r,createDefaultRenderer as a,getDefaultBandCombination as t}from"../../../renderers/support/rasterRendererHelper.js";import s from"./adapters/ImageryLayerAdapter.js";import n from"./adapters/ImageryTileLayerAdapter.js";const l={imagery:{adapter:s,label:"ImageryLayer"},"imagery-tile":{adapter:n,label:"ImageryTileLayer"},wcs:{adapter:n,label:"WCSLayer"}},o={"raster-stretch":"raster-stretch","unique-value":"raster-unique-value","raster-rgb":"raster-rgb","class-breaks":"raster-class-breaks","raster-colormap":"raster-colormap","raster-shaded-relief":"raster-shaded-relief","vector-field":"raster-vector-field"},i=Object.keys(l).map((e=>l[e].label));function p(e){var r;if("raster-layer-adapter"===e.type)return e;const a=null==(r=l[e.type])?void 0:r.adapter;return null==a?null:new a({layer:e})}async function d(e){const t=p((e=await y(e)).layer),s=await t.generateRasterInfo(e),n=r(s).map((e=>o[e])),l=a(s),{bandCount:i}=s;return i>1&&n.push("raster-rgb"),{supportedTypes:n,defaultRenderer:l}}async function u(e){const r=p((e=await y(e)).layer),a=await r.generateRasterInfo(e);return t(a)}async function y(r){const{layer:a}=r;if(!a)throw new e("raster-renderer-creator:missing-parameters","'layer' parameter is required");const t=p(a);if(null==t)throw new e("raster-renderer-creator:invalid-parameters","'layer' must be one of these types: "+i.join(", "));return await t.load(),await t.updateRasterInfo({renderingRule:r.renderingRule,signal:r.signal}),{...r,layer:t}}export{p as createRasterLayerAdapter,u as getDefaultBandCombination,d as getSupportedRendererInfo,y as processRasterRendererParameters};
