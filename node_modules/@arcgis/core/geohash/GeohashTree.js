/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import t from"../core/CircularArray.js";import{isSome as s,mapOr as e}from"../core/maybe.js";import{decodeGeohashXY as i}from"./geohashUtils.js";import{FeatureSetReaderJSON as o}from"../views/2d/layers/features/support/FeatureSetReaderJSON.js";class n{constructor(s=[],e=8096){this._nodes=0,this._root=new a(0,0,0),this._statisticFields=s,this._pool=e?new t(8096):null}_acquire(t,e,i){this._nodes++;let o=null;return s(this._pool)&&(o=this._pool.dequeue()),s(o)?o.realloc(t,e,i):new a(t,e,i)}_release(t){this._nodes--,s(this._pool)&&this._pool.enqueue(t)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return e(this._pool,0,(t=>t.size))}get depth(){let t=0;return this._forEachNode((s=>t=Math.max(t,s.depth))),t}dropLevels(t){this._forEachNode((s=>{if(s.depth>=t)for(let t=0;t<s.children.length;t++){const e=s.children[t];s.children[t]=null,e&&this._release(e)}}))}clear(){this.dropLevels(0)}insert(t,s,e=0){const i=o.fromOptimizedFeatures([t],"esriGeometryPoint").getCursor();i.next();const n=i.readGeometry();if(!n)return;const[a,l]=n.coords,r=t.geohashX,h=t.geohashY;this.insertCursor(i,t.displayId,a,l,r,h,s,e)}insertCursor(t,s,e,i,o,n,a,l=0){let r=this._root,h=0,c=0,d=0;for(;null!==r;){if(r.depth>=l&&(r.count+=1,r.xTotal+=e,r.yTotal+=i,r.xGeohashTotal+=o,r.yGeohashTotal+=n,r.displayId=s,this._updateStatisticsCursor(t,r,1)),h>=a)return void r.add(s);const u=Math.ceil((h+1)/2),f=Math.floor((h+1)/2),x=1-h%2,m=30-(3*u+2*f),p=30-(2*u+3*f),y=(o&7*x+3*(1-x)<<m)>>m,g=(n&3*x+7*(1-x)<<p)>>p,_=y+g*(8*x+4*(1-x));c=c<<3*x+2*(1-x)|y,d=d<<2*x+3*(1-x)|g,null==r.children[_]&&(r.children[_]=this._acquire(c,d,h+1)),h+=1,r=r.children[_]}}remove(t,s){const e=o.fromOptimizedFeatures([t],"esriGeometryPoint").getCursor();e.next();const i=e.readGeometry();if(!i)return;const[n,a]=i.coords,l=t.geohashX,r=t.geohashY;this.removeCursor(e,n,a,l,r,s)}removeCursor(t,s,e,i,o,n){let a=this._root,l=0;for(;null!==a;){if(a.count-=1,a.xTotal-=s,a.yTotal-=e,a.xGeohashTotal-=i,a.yGeohashTotal-=o,this._updateStatisticsCursor(t,a,-1),l>=n)return void a.remove(t.getDisplayId());const r=Math.ceil((l+1)/2),h=Math.floor((l+1)/2),c=1-l%2,d=30-(3*r+2*h),u=30-(2*r+3*h),f=((i&7*c+3*(1-c)<<d)>>d)+((o&3*c+7*(1-c)<<u)>>u)*(8*c+4*(1-c)),x=a.children[f];1===x.count&&(this._release(x),a.children[f]=null),l+=1,a=x}}find(t,s,e){return this._root.find(t,s,e,0,0,0)}findSingleOccupancyNode(t,s,e,i,o){let n=this._root;for(;null!==n;){const a=n.depth,l=n.xNode,r=n.yNode,h=1-a%2,c=n.xGeohashTotal/n.count,d=n.yGeohashTotal/n.count;if(1===n.count&&t<c&&c<=e&&s<d&&d<=i)return n;if(a>=o){n=n.next;continue}const u=Math.ceil((a+1)/2),f=Math.floor((a+1)/2),x=30-(3*u+2*f),m=30-(2*u+3*f),p=~((1<<x)-1),y=~((1<<m)-1),g=(t&p)>>x,_=(s&y)>>m,N=(e&p)>>x,T=(i&y)>>m,M=l<<3*h+2*(1-h),C=r<<2*h+3*(1-h),S=M+8*h+4*(1-h),b=C+4*h+8*(1-h),v=Math.max(M,g),G=Math.max(C,_),k=Math.min(S,N),F=Math.min(b,T);let I=null,z=null;for(let t=G;t<=F;t++)for(let s=v;s<=k;s++){const e=s-M+(t-C)*(8*h+4*(1-h)),i=n.children[e];i&&(I||(I=i,I.next=n.next),z&&(z.next=i),z=i,i.next=n.next)}n=I||n.next}return null}getRegionDisplayIds(t,s,e,i,o){let n=this._root;const a=[];for(;null!==n;){const l=n.depth,r=n.xNode,h=n.yNode;if(l>=o){const o=n.xGeohashTotal/n.count,l=n.yGeohashTotal/n.count;t<=o&&o<=e&&s<=l&&l<=i&&n.displayIds.forEach((t=>a.push(t))),n=n.next;continue}const c=Math.ceil((l+1)/2),d=Math.floor((l+1)/2),u=1-l%2,f=30-(3*c+2*d),x=30-(2*c+3*d),m=~((1<<f)-1),p=~((1<<x)-1),y=(t&m)>>f,g=(s&p)>>x,_=(e&m)>>f,N=(i&p)>>x,T=r<<3*u+2*(1-u),M=h<<2*u+3*(1-u),C=T+8*u+4*(1-u),S=M+4*u+8*(1-u),b=Math.max(T,y),v=Math.max(M,g),G=Math.min(C,_),k=Math.min(S,N);let F=null,I=null;for(let t=v;t<=k;t++)for(let s=b;s<=G;s++){const e=s-T+(t-M)*(8*u+4*(1-u)),i=n.children[e];i&&(F||(F=i,F.next=n.next),I&&(I.next=i),I=i,i.next=n.next)}n=F||n.next}return a}getRegionStatistics(t,s,e,i,o){let n=this._root,a=0,l=0,r=0;const h={};let c=0;for(;null!==n;){const d=n.depth,u=n.xNode,f=n.yNode;if(d>=o){const o=n.xGeohashTotal/n.count,d=n.yGeohashTotal/n.count;t<o&&o<=e&&s<d&&d<=i&&(a+=n.count,l+=n.xTotal,r+=n.yTotal,1===n.count&&(c=n.displayId),this._aggregateStatistics(h,n.statistics)),n=n.next;continue}const x=Math.ceil((d+1)/2),m=Math.floor((d+1)/2),p=1-d%2,y=30-(3*x+2*m),g=30-(2*x+3*m),_=~((1<<y)-1),N=~((1<<g)-1),T=(t&_)>>y,M=(s&N)>>g,C=(e&_)>>y,S=(i&N)>>g,b=u<<3*p+2*(1-p),v=f<<2*p+3*(1-p),G=b+8*p+4*(1-p),k=v+4*p+8*(1-p),F=Math.max(b,T),I=Math.max(v,M),z=Math.min(G,C),w=Math.min(k,S);let A=null,j=null;for(let o=I;o<=w;o++)for(let d=F;d<=z;d++){const u=d-b+(o-v)*(8*p+4*(1-p)),f=n.children[u];if(f){if(o!==I&&o!==w&&d!==F&&d!==z){const o=f.xGeohashTotal/f.count,n=f.yGeohashTotal/f.count;t<o&&o<=e&&s<n&&n<=i&&(a+=f.count,l+=f.xTotal,r+=f.yTotal,1===f.count&&(c=f.displayId),this._aggregateStatistics(h,f.statistics));continue}A||(A=f,A.next=n.next),j&&(j.next=f),j=f,f.next=n.next}}n=A||n.next}return{count:a,attributes:this._normalizeStatistics(h,a),xTotal:l,yTotal:r,referenceId:c}}_forEachNode(t){let s=this._root;for(;null!==s;){const e=this._linkChildren(s)||s.next;t(s),s=e}}_linkChildren(t){let s=null,e=null;for(let i=0;i<=t.children.length;i++){const o=t.children[i];o&&(s||(s=o,s.next=t.next),e&&(e.next=o),e=o,o.next=t.next)}return s}_updateStatisticsCursor(t,s,e){for(const i of this._statisticFields){const o=i.name,n=i.inField?t.readAttribute(i.inField):t.getComputedNumericAtIndex(i.inFieldIndex);switch(i.statisticType){case"norm":{s.statistics[o]||(s.statistics[o]={});const a=i.inNormalizationField,l=t.readAttribute(a),r=s.statistics[o].onStatisticField||0,h=s.statistics[o].onStatisticNormalizationField||0;null==n||isNaN(n)||null==l||0===l||isNaN(l)||(s.statistics[o].onStatisticField=r+e*n,s.statistics[o].onStatisticNormalizationField=h+e*l);break}case"sum":case"avg":{s.statistics[o]||(s.statistics[o]={value:0,nanCount:0});const t=s.statistics[o].value,i=s.statistics[o].nanCount;null==n||isNaN(n)?s.statistics[o].nanCount=i+e:s.statistics[o].value=t+e*n;break}case"avg_angle":{s.statistics[o]||(s.statistics[o]={x:0,y:0,nanCount:0});const t=s.statistics[o].x,i=s.statistics[o].y,a=s.statistics[o].nanCount,l=Math.PI/180;null==n||isNaN(n)?s.statistics[o].nanCount=a+e:(s.statistics[o].x=t+e*Math.cos(n*l),s.statistics[o].y=i+e*Math.sin(n*l));break}case"mode":{s.statistics[o]||(s.statistics[o]={});const t=s.statistics[o][n]||0;s.statistics[o][n]=t+e;break}}}}_aggregateStatistics(t,s){for(const e of this._statisticFields){const i=e.name;switch(e.statisticType){case"sum":case"avg":case"avg_angle":case"mode":case"norm":t[i]||(t[i]={});for(const e in s[i]){const o=t[i][e]||0;t[i][e]=o+s[i][e]}}}}_normalizeStatistics(t,s){const e={};for(const i of this._statisticFields){const o=i.name;switch(i.statisticType){case"norm":{const i=t[o];if(s&&null==i.onStatisticNormalizationField)break;if(s&&i.onStatisticNormalizationField){e[o]=i.onStatisticField/i.onStatisticNormalizationField;break}e[o]=0;break}case"sum":{if(!s)break;const{value:i,nanCount:n}=t[o];if(!(s-n))break;e[o]=i;break}case"avg":{if(!s)break;const{value:i,nanCount:n}=t[o];if(!(s-n))break;e[o]=i/(s-n);break}case"avg_angle":{if(!s)break;const{x:i,y:n,nanCount:a}=t[o];if(!(s-a))break;const l=i/(s-a),r=n/(s-a),h=180/Math.PI,c=Math.atan2(r,l)*h;e[o]=c;break}case"mode":{const s=t[o];let i=0,n=null;for(const t in s){const e=s[t];e>i&&(i=e,n=t)}e[o]="null"===n?null:n;break}}}return e}}class a{constructor(t,s,e){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this.children=new Array(32);for(let i=0;i<this.children.length;i++)this.children[i]=null;this.xNode=t,this.yNode=s,this.depth=e}realloc(t,s,e){for(let i=0;i<this.children.length;i++)this.children[i]=null;return this.xNode=t,this.yNode=s,this.depth=e,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}add(t){this.displayIds.add(t)}remove(t){this.displayIds.delete(t)}getLngLatBounds(){const t=this.depth,s=Math.ceil(t/2),e=Math.floor(t/2),o=30-(3*s+2*e),n=30-(2*s+3*e),a=this.xNode<<o,l=this.yNode<<n;return i({geohashX:a,geohashY:l},this.depth)}find(t,s,e,i,o,n){if(i>=e)return this;const a=1-i%2,l=3*a+2*(1-a),r=2*a+3*(1-a),h=30-o-l,c=30-n-r,d=((t&7*a+3*(1-a)<<h)>>h)+((s&3*a+7*(1-a)<<c)>>c)*(8*a+4*(1-a)),u=this.children[d];return null==u?null:u.find(t,s,e,i+1,o+l,n+r)}}export{n as GeohashTree};
