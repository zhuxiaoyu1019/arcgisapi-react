/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import e from"../Color.js";import{clone as r}from"../core/lang.js";import{property as o}from"../core/accessorSupport/decorators/property.js";import"../core/accessorSupport/ensureType.js";import"../core/has.js";import"../core/Logger.js";import{enumeration as s}from"../core/accessorSupport/decorators/enumeration.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import{collectField as p}from"../layers/support/fieldUtils.js";import n from"./Renderer.js";import l from"./support/HeatmapColorStop.js";var a;let m=a=class extends n{constructor(t){super(t),this.blurRadius=10,this.colorStops=[new l({ratio:0,color:new e("rgba(255, 140, 0, 0)")}),new l({ratio:.75,color:new e("rgba(255, 140, 0, 1)")}),new l({ratio:.9,color:new e("rgba(255, 0,   0, 1)")})],this.field=null,this.fieldOffset=0,this.maxPixelIntensity=100,this.minPixelIntensity=0,this.type="heatmap"}async collectRequiredFields(t,e){const r=this.field;r&&"string"==typeof r&&p(t,e,r)}getAttributeHash(){return null}getMeshHash(){return`${JSON.stringify(this.colorStops)}.${this.blurRadius}.${this.field}`}clone(){return new a({blurRadius:this.blurRadius,colorStops:r(this.colorStops),field:this.field,maxPixelIntensity:this.maxPixelIntensity,minPixelIntensity:this.minPixelIntensity})}};t([o({type:Number,json:{write:!0}})],m.prototype,"blurRadius",void 0),t([o({type:[l],json:{write:!0}})],m.prototype,"colorStops",void 0),t([o({type:String,json:{write:!0}})],m.prototype,"field",void 0),t([o({type:Number,json:{write:{overridePolicy:(t,e,r)=>({enabled:null==r})}}})],m.prototype,"fieldOffset",void 0),t([o({type:Number,json:{write:!0}})],m.prototype,"maxPixelIntensity",void 0),t([o({type:Number,json:{write:!0}})],m.prototype,"minPixelIntensity",void 0),t([s({heatmap:"heatmap"})],m.prototype,"type",void 0),m=a=t([i("esri.renderers.HeatmapRenderer")],m);var c=m;export default c;
