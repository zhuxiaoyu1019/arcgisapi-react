/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as o}from"../chunks/tslib.es6.js";import{JSONSupport as r}from"../core/JSONSupport.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import"../core/Logger.js";import{enumeration as e}from"../core/accessorSupport/decorators/enumeration.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import p from"./support/ColormapInfo.js";import{convertColorRampToColormap as a}from"./support/colorRampUtils.js";var c;let l=c=class extends r{constructor(o){super(o),this.colormapInfos=null,this.type="raster-colormap"}static createFromColormap(o,r){if(!o)return null;const t=5===o[0].length,e=[...o].sort((o=>o[0][0]-o[1][0])).map((o=>{var e;return p.fromJSON({value:o[0],color:t?o.slice(1,5):o.slice(1,4).concat([255]),label:r?null!=(e=r[o[0]])?e:"":o[0]})}));return new c({colormapInfos:e})}static createFromColorramp(o){const r=a(o,256);return c.createFromColormap(r)}clone(){return new c({colormapInfos:this.colormapInfos.map((o=>o.toJSON()))})}extractColormap(){return this.colormapInfos.map((o=>[o.value,o.color.r,o.color.g,o.color.b,o.color.a>1?o.color.a:255*o.color.a&255])).sort(((o,r)=>o[0]-r[0]))}};o([t({type:[p],json:{write:!0}})],l.prototype,"colormapInfos",void 0),o([e({rasterColormap:"raster-colormap"})],l.prototype,"type",void 0),l=c=o([s("esri.renderers.RasterColormapRenderer")],l);var m=l;export default m;
