/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{toHSV as t}from"../../core/colorUtils.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import s from"../../core/Logger.js";import{unwrap as o,isSome as i}from"../../core/maybe.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import l from"../../layers/support/RasterInfo.js";import{extractBands as u,stretch as c,colorize as h,remapColor as p,lookupPixels as m,createStretchLUT as f,createColormapLUT as d,createHistogramEqualizationLUT as g,estimateStatisticsHistograms as S}from"../../layers/support/rasterFunctions/pixelUtils.js";import{hillshade as b,tintHillshade as x,calculateHillshadeParams as y}from"../../layers/support/rasterFunctions/surfaceUtils.js";import{convertColorRampToColormap as k}from"./colorRampUtils.js";const C=s.getLogger("esri.renderers.support.RasterSymbolizer");function O(e,t){const{attributeTable:r,bandCount:s}=e;if(!i(r)||s>1)return!1;if(t){if(null==r.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())))return!1}return!0}function v(e){return"elevation"===e.dataType}function L(e){const{bandCount:t,colormap:r}=e;return i(r)&&r.length&&1===t}const R={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};let _=class extends r{constructor(e){super(e)}bind(){const{rendererJSON:e}=this;if(!e)return!1;let t;switch(this.lookup={rendererJSON:{}},e.type){case"uniqueValue":t=this._updateUVRenderer(e);break;case"rasterColormap":t=this._updateColormapRenderer(e);break;case"rasterStretch":t=this._updateStretchRenderer(e);break;case"classBreaks":t=this._updateClassBreaksRenderer(e);break;case"rasterShadedRelief":t=this._updateShadedReliefRenderer(e)}return t}symbolize(e){let t=e&&e.pixelBlock;if(!this.isValidPixelBlock(t))return t;if(e.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(t,e.simpleStretchParams);try{let r;switch(t.pixels.length>3&&(t=u(t,[0,1,2])),this.rendererJSON.type){case"uniqueValue":case"rasterColormap":r=this._symbolize_colormap(t);break;case"classBreaks":r=this._symbolize_classBreaks(t);break;case"rasterStretch":r=this._symbolize_stretch(t,e.bandIds);break;case"rasterShadedRelief":{const{extent:s}=e,o=s.spatialReference.isGeographic,i={x:(s.xmax-s.xmin)/t.width,y:(s.ymax-s.ymin)/t.height};r=this._symbolize_shadedRelief(t,{isGCS:o,resolution:i});break}}return r}catch(r){return C.error("symbolize",r.message),t}}simpleStretch(e,t){if(!this.isValidPixelBlock(e))return e;try{return e.pixels.length>3&&(e=u(e,[0,1,2])),c(e,t)}catch(r){return C.error("symbolize",r.message),e}}generateWebGLParameters(e){if(["uniqueValue","rasterColormap","classBreaks"].indexOf(this.rendererJSON.type)>-1){var t;const{indexedColormap:e,offset:r}=(null==(t=this.lookup)?void 0:t.colormapLut)||{};return{colormap:e,colormapOffset:r,type:"lut"}}const{pixelBlock:r,isGCS:s,resolution:o,bandIds:i}=e,{rendererJSON:a}=this;return"rasterStretch"===a.type?this.generateStretchWebGLParams(r,a,i):"rasterShadedRelief"===a.type?this.generateShadedReliefWebGLParams(a,s,o):null}_isLUTChanged(e){if(!this.lookup||!this.lookup.rendererJSON)return!0;if("colorRamp"in this.rendererJSON){const t=this.rendererJSON.colorRamp;return e?JSON.stringify(t)!==JSON.stringify(this.lookup.rendererJSON.colorRamp):(this.rendererJSON,this.lookup.rendererJSON,JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON))}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)}_symbolize_colormap(e){if(this._isLUTChanged()){if(!this.bind())return e}return h(e,this.lookup.colormapLut)}_symbolize_classBreaks(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1;let s;if(this._isLUTChanged()){if(!this.bind())return e}return s=r?h(e,this.lookup.colormapLut):p(e,this.lookup.remapLut),s}_symbolize_stretch(e,t){const{pixelType:r,bandCount:s}=this.rasterInfo,o=this.rendererJSON,i=["u8","u16","s8","s16"].indexOf(r)>-1;let a,n;const{dra:l}=o,u=o.useGamma?o.gamma:null;if("histogramEqualization"===o.stretchType){const r=l?null:this.lookup.histogramLut,s=this.getStretchCutoff(o,e,t,!r),i=c(e,{...s,gamma:u});n=m(i,{lut:l?s.histogramLut:r,offset:0})}else if(i){var p;if(l){const s=this.getStretchCutoff(o,e,t);a=f({pixelType:r,...s,gamma:u})}else if(this._isLUTChanged()){if(!this.bind())return e;a=this.lookup?this.lookup.stretchLut:null}else a=this.lookup?this.lookup.stretchLut:null;if(!a)return e;s>1&&(null==t?void 0:t.length)===e.pixels.length&&(null==(p=a)?void 0:p.lut.length)===s&&(a={lut:t.map((e=>a.lut[e])),offset:a.offset}),n=m(e,a)}else{const r=this.getStretchCutoff(o,e,t);n=c(e,{...r,gamma:u})}if(o.colorRamp){if(this._isLUTChanged(!0)){if(!this.bind())return e}n=h(n,this.lookup.colormapLut)}return n}_symbolize_shadedRelief(e,t){var r,s;const i=this.rendererJSON,a={...i,...t},n=b(e,a);if(!i.colorRamp)return n;let l;if(this._isLUTChanged(!0)){if(!this.bind())return n;l=this.lookup?this.lookup.hsvMap:null}else l=this.lookup?this.lookup.hsvMap:null;if(!l)return n;const u=null!=(r=null==(s=o(this.rasterInfo.statistics))?void 0:s[0])?r:{min:0,max:8e3};return x(n,e,l,u),n}_updateUVRenderer(e){const{bandCount:t,attributeTable:r,pixelType:s}=this.rasterInfo,o=e.field1;if(!o)return!1;const i=1===t&&["u8","s8"].includes(s);if(!O(this.rasterInfo,o)&&!i)return!1;const a=[];if(r){const t=r.fields.filter((e=>"value"===e.name.toLowerCase()))[0];if(!t)return!1;r.features.forEach((r=>{var s;const i=e.uniqueValueInfos.filter((e=>String(e.value)===String(r.attributes[o])))[0],n=null==i||null==(s=i.symbol)?void 0:s.color;n&&a.push([r.attributes[t.name]].concat(n))}))}else{if("value"!==o.toLowerCase())return!1;e.uniqueValueInfos.forEach((e=>{var t;const r=null==e||null==(t=e.symbol)?void 0:t.color;r&&a.push([parseInt(""+e.value,10)].concat(r))}))}if(0===a.length)return!1;const n=d({colormap:a});return this.lookup={rendererJSON:e,colormapLut:n},this.canRenderInWebGL=!0,!0}_updateColormapRenderer(e){if(!L(this.rasterInfo))return!1;const t=e.colormapInfos.map((e=>[e.value].concat(e.color))).sort(((e,t)=>e[0]-t[0]));if(!t||0===t.length)return!1;const r=d({colormap:t});return this.lookup={rendererJSON:e,colormapLut:r},this.canRenderInWebGL=!0,!0}_updateShadedReliefRenderer(e){if(!v(this.rasterInfo))return!1;if(e.colorRamp){const r=k(e.colorRamp,256,!0),s=d({colormap:r}),o=[],i=s.indexedColormap;for(let e=0;e<i.length;e+=4){const r=t({r:i[e],g:i[e+1],b:i[e+2]});o.push([r.h/60,r.s/100,255*r.v/100])}this.lookup={rendererJSON:e,colormapLut:s,hsvMap:o}}else this.lookup=null;return this.canRenderInWebGL=!0,!0}_updateClassBreaksRenderer(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1,s=e.classBreakInfos;if(null==s||!s.length)return!1;const o=s.sort(((e,t)=>e.classMaxValue-t.classMaxValue)),i=o[o.length-1];let a=e.minValue;if(!r){const t=[];for(let e=0;e<o.length;e++){var n;t.push({value:null!=(n=o[e].classMinValue)?n:a,mappedColor:o[e].symbol.color}),a=o[e].classMaxValue}return t.push({value:i.classMaxValue,mappedColor:i.symbol.color}),this.lookup={rendererJSON:e,remapLut:t},this.canRenderInWebGL=!1,!0}const l=[];a=Math.floor(e.minValue);for(let c=0;c<o.length;c++){const e=o[c];for(let t=a;t<e.classMaxValue;t++)l.push([t].concat(e.symbol.color));a=Math.ceil(e.classMaxValue)}i.classMaxValue===a&&l.push([i.classMaxValue].concat(i.symbol.color));const u=d({colormap:l,fillUnspecified:!1});return this.lookup={rendererJSON:e,colormapLut:u},this.canRenderInWebGL=!0,!0}_isHistogramRequired(e){return"percentClip"===e||"histogramEqualization"===e}_isValidRasterStatistics(e){return i(e)&&e.length>0&&null!=e[0].min&&null!=e[0].max}_updateStretchRenderer(e){var t;let{stretchType:r,dra:s}=e;if(!("none"===r||null!=(t=e.statistics)&&t.length||this._isValidRasterStatistics(this.rasterInfo.statistics)||s))return!1;const i=o(e.histograms||this.rasterInfo.histograms);!this._isHistogramRequired(e.stretchType)||null!=i&&i.length||s||(r="minMax");const{gamma:a,useGamma:n,colorRamp:l}=e,u=this.rasterInfo.pixelType,c=!s&&["u8","u16","s8","s16"].indexOf(u)>-1;if("histogramEqualization"===r){const t=i.map((e=>g(e)));this.lookup={rendererJSON:e,histogramLut:t}}else if(c){const t=this.getStretchCutoff(e),r=f({pixelType:u,...t,gamma:n?a:null});this.lookup={rendererJSON:e,stretchLut:r}}if(l){const t=k(l,256,!0);this.lookup||(this.lookup={rendererJSON:e}),this.lookup.colormapLut=d({colormap:t}),this.lookup.rendererJSON=e}return this.canRenderInWebGL=!0,!0}getStretchCutoff(e,t,r,s){var i,a,n;let l,u,c=e.stretchType;var h;if(e.dra)if("minMax"===c&&t.statistics)l=t.statistics.map((e=>[e.minValue,e.maxValue,0,0]));else{const e=S(t);l=e.statistics,u=e.histograms}else l=(null==(h=e.statistics)?void 0:h.length)>0?e.statistics:o(this.rasterInfo.statistics),u=e.histograms||o(this.rasterInfo.histograms);!this._isHistogramRequired(c)||null!=(i=u)&&i.length||(c="minMax");const p=(null==(a=l)?void 0:a.length)||(null==(n=u)?void 0:n.length)||this.rasterInfo.bandCount,m=[],f=[];let d,b,x,y,k,C,O,v,L,_,N,J;switch(l&&!Array.isArray(l[0])&&(l=l.map((e=>[e.min,e.max,e.avg,e.stddev]))),c){case"none":{const e=R[this.rasterInfo.pixelType]||R.f32;for(v=0;v<p;v++)m[v]=e[0],f[v]=e[1]}break;case"minMax":for(v=0;v<p;v++)m[v]=l[v][0],f[v]=l[v][1];break;case"standardDeviation":for(v=0;v<p;v++)m[v]=l[v][2]-e.numberOfStandardDeviations*l[v][3],f[v]=l[v][2]+e.numberOfStandardDeviations*l[v][3],m[v]<l[v][0]&&(m[v]=l[v][0]),f[v]>l[v][1]&&(f[v]=l[v][1]);break;case"histogramEqualization":for(v=0;v<p;v++)m[v]=u[v].min,f[v]=u[v].max;break;case"percentClip":for(v=0;v<u.length;v++){for(d=u[v],k=new Uint32Array(d.size),y=d.counts,x=0,b=(d.max-d.min)/d.size,O=-.5===d.min&&1===b?.5:0,L=0;L<d.size;L++)x+=y[L],k[L]=x;for(C=e.minPercent*x/100,L=0;L<d.size;L++)if(k[L]>C){m[v]=d.min+b*(L+O);break}for(C=(1-e.maxPercent/100)*x,L=d.size-2;L>=0;L--)if(k[L]<C){f[v]=d.min+b*(L+2-O);break}}break;default:for(v=0;v<p;v++)m[v]=l[v][0],f[v]=l[v][1]}"histogramEqualization"===c?(N=u[0].size||256,_=0,s&&(J=u.map((e=>g(e))))):(N=e.max||255,_=e.min||0);const I={minCutOff:m,maxCutOff:f,outMax:N,outMin:_,histogramLut:J};return this.getSelectedBandCutoffs(I,r)}getSelectedBandCutoffs(e,t){if(null==t||0===t.length)return e;const r=Math.max.apply(null,t),{minCutOff:s,maxCutOff:o,outMin:i,outMax:a,histogramLut:n}=e;return s.length===t.length||s.length<=r?e:{minCutOff:t.map((e=>s[e])),maxCutOff:t.map((e=>o[e])),histogramLut:n?t.map((e=>n[e])):null,outMin:i,outMax:a}}generateStretchWebGLParams(e,t,r){var s;let o=null,i=null;const a=this.lookup&&this.lookup.colormapLut;t.colorRamp&&a&&(o=a.indexedColormap,i=a.offset),"histogramEqualization"===t.stretchType&&(t={...t,stretchType:"minMax"});const{gamma:n}=t,l=!!(t.useGamma&&n&&n.some((e=>1!==e))),{minCutOff:u,maxCutOff:c,outMin:h,outMax:p}=this.getStretchCutoff(t,e,r),m=null==(s=e)?void 0:s.getPlaneCount();2===m&&((e=e.clone()).statistics=[e.statistics[0]],e.pixels=[e.pixels[0]]);const f=Math.min(3,(null==r?void 0:r.length)||m||this.rasterInfo.bandCount),d=new Float32Array(f),g=o||l?1:255;let S;for(S=0;S<f;S++)d[S]=(p-h)/(c[S]-u[S])/g;const b=new Float32Array(f);if(l)for(S=0;S<f;S++)n[S]>1?n[S]>2?b[S]=6.5+(n[S]-2)**2.5:b[S]=6.5+100*(2-n[S])**4:b[S]=1;return{bandCount:f,outMin:h/g,outMax:p/g,minCutOff:u,maxCutOff:c,factor:d,useGamma:l,gamma:l?n:[1,1,1],gammaCorrection:l?b:[1,1,1],colormap:o,colormapOffset:i,type:"stretch"}}generateShadedReliefWebGLParams(e,t,r){var s,i,a;let n=null,l=null;const u=this.lookup&&this.lookup.colormapLut;e.colorRamp&&u&&(n=u.indexedColormap,l=u.offset);const c={...e,isGCS:t,resolution:r},h=y(c),p=null==(s=o(this.rasterInfo.statistics))?void 0:s[0];return{...h,minValue:null!=(i=null==p?void 0:p.min)?i:0,maxValue:null!=(a=null==p?void 0:p.max)?a:8e3,hillshadeType:"traditional"===e.hillshadeType?0:1,type:"hillshade",colormap:n,colormapOffset:l}}isValidPixelBlock(e){return!!(e&&e.pixels&&e.pixels.length>0&&0!==e.validPixelCount)}};e([a({json:{write:!0}})],_.prototype,"rendererJSON",void 0),e([a({type:l,json:{write:!0}})],_.prototype,"rasterInfo",void 0),e([a({json:{write:!0}})],_.prototype,"lookup",void 0),e([a()],_.prototype,"canRenderInWebGL",void 0),_=e([n("esri.renderers.support.RasterSymbolizer")],_);var N=_;export default N;
