/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import t from"../../Graphic.js";import{unwrap as r}from"../../core/maybe.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import"../../core/Logger.js";import{reader as s}from"../../core/accessorSupport/decorators/reader.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import p from"./FeatureSet.js";import n from"../../geometry/SpatialReference.js";import i from"../../geometry/Point.js";import m from"../../geometry/Polyline.js";import l from"../../geometry/Extent.js";let u=class extends p{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,o){(e||[]).forEach((e=>{this._decompressFeatureGeometry(e,o.summary.envelope.spatialReference)}));const s=n.fromJSON(o.spatialReference);return e.map((e=>{const o=t.fromJSON(e),a=e.geometry&&e.geometry.spatialReference;return o.geometry&&!a&&(r(o.geometry).spatialReference=s),o.strings=e.strings,o.events=(e.events||[]).map((r=>{const o=new t({geometry:new i({x:r.point.x,y:r.point.y,z:r.point.z,hasZ:void 0!==r.point.z,spatialReference:e.geometry&&e.geometry.spatialReference}),attributes:{ETA:r.ETA,arriveTimeUTC:r.arriveTimeUTC}});return o.strings=r.strings,o})),o}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>r(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressFeatureGeometry(e,t){e.geometry=this._decompressGeometry(e.compressedGeometry,t)}_decompressGeometry(e,t){let r=0,o=0,s=0,a=0;const p=[];let n,i,m,l,u,c,y,g,h=0,f=0,d=0;if(u=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),u||(u=[]),0===parseInt(u[h],32)){h=2;const e=parseInt(u[h],32);h++,c=parseInt(u[h],32),h++,1&e&&(f=u.indexOf("|")+1,y=parseInt(u[f],32),f++),2&e&&(d=u.indexOf("|",f)+1,g=parseInt(u[d],32),d++)}else c=parseInt(u[h],32),h++;for(;h<u.length&&"|"!==u[h];){n=parseInt(u[h],32)+r,h++,r=n,i=parseInt(u[h],32)+o,h++,o=i;const e=[n/c,i/c];f&&(l=parseInt(u[f],32)+s,f++,s=l,e.push(l/y)),d&&(m=parseInt(u[d],32)+a,d++,a=m,e.push(m/g)),p.push(e)}return{paths:[p],hasZ:f>0,hasM:d>0,spatialReference:t}}_mergePolylinesToSinglePath(e,t){let r=[];(e||[]).forEach((e=>{e.paths.forEach((e=>{r=r.concat(e)}))}));const o=[];let s=[0,0];return r.forEach((e=>{e[0]===s[0]&&e[1]===s[1]||(o.push(e),s=e)})),new m({paths:[o]},t)}};e([o({type:l,json:{read:{source:"summary.envelope"}}})],u.prototype,"extent",void 0),e([o()],u.prototype,"features",void 0),e([s("features")],u.prototype,"readFeatures",null),e([o()],u.prototype,"geometryType",void 0),e([o({readOnly:!0})],u.prototype,"mergedGeometry",null),e([o()],u.prototype,"routeId",void 0),e([o()],u.prototype,"routeName",void 0),e([o({value:null,readOnly:!0})],u.prototype,"strings",null),e([o({json:{read:{source:"summary.totalDriveTime"}}})],u.prototype,"totalDriveTime",void 0),e([o({json:{read:{source:"summary.totalLength"}}})],u.prototype,"totalLength",void 0),e([o({json:{read:{source:"summary.totalTime"}}})],u.prototype,"totalTime",void 0),u=e([a("esri.rest.support.DirectionsFeatureSet")],u);var c=u;export default c;
