/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import r from"../request.js";import{createQueryParamsHelper as e}from"../core/queryUtils.js";import{normalizeCentralMeridian as t}from"../geometry/support/normalizeUtils.js";import{collectGeometries as i,isInputGeometryZAware as a,fetchServiceDescription as s,dropZValuesOffInputGeometry as o}from"./networkService.js";import{parseUrl as n}from"./utils.js";import u from"./support/ServiceAreaSolveResult.js";const l=e({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,defaultBreaks:!0,facilities:!0,outSpatialReference:{name:"outSR",getter:r=>r.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},travelMode:!0});async function c(e,c,f){const p=[],m=[],B={},y={},h=n(e);return c.facilities&&c.facilities.features&&i(c.facilities.features,m,"facilities.features",B),c.pointBarriers&&c.pointBarriers.features&&i(c.pointBarriers.features,m,"pointBarriers.features",B),c.polylineBarriers&&c.polylineBarriers.features&&i(c.polylineBarriers.features,m,"polylineBarriers.features",B),c.polygonBarriers&&c.polygonBarriers.features&&i(c.polygonBarriers.features,m,"polygonBarriers.features",B),t(m).then((r=>{for(const e in B){const t=B[e];p.push(e),y[e]=r.slice(t[0],t[1])}return a(y,p)?s(h.path).catch((()=>({dontCheck:!0}))):Promise.resolve({dontCheck:!0})})).then((e=>{("dontCheck"in e?e.dontCheck:e.hasZ)||o(y,p);for(const r in y)y[r].forEach(((e,t)=>{c.get(r)[t].geometry=e}));let t={query:{...h.query,f:"json",...l.toQueryParams(c)}};return f&&(t={...f,...t}),r(`${h.path}/solveServiceArea`,t)})).then((r=>u.fromJSON(r.data)))}export{c as solve};
