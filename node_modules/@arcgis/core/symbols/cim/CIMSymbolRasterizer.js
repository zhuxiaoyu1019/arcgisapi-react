/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../request.js";import{throwIfAborted as t}from"../../core/promiseUtils.js";import{pt2px as r}from"../../core/screenUtils.js";import{numericHash as a}from"../../core/string.js";import{getJsonType as i,isPolygon as s,isPolyline as o}from"../../geometry/support/jsonUtils.js";import{analyzeCIMSymbol as n,analyzeCIMResource as c}from"./cimAnalyzer.js";import l from"./Rasterizer.js";import{TextRasterizer as m}from"./TextRasterizer.js";import{createLabelOverrideFunction as h,evaluateValueOrFunction as f,colorToArray as g}from"./utils.js";import{scaleCIMMarker as y}from"../support/cimSymbolUtils.js";import u from"../support/Symbol3DAnchorPosition2D.js";var p;!function(e){e.Legend="legend",e.Preview="preview"}(p||(p={}));const d=(e,t,a)=>{if(e&&e.targetSize){let i;if(a){const t=Math.max(a.frame.xmax-a.frame.xmin,a.frame.ymax-a.frame.ymin);i=e.targetSize/r(t)}else i=e.targetSize/t.referenceSize;return i}return e&&e.scaleFactor?e.scaleFactor:1},M={fill:{legend:{frame:{xmax:15,xmin:0,ymax:15,ymin:0},geometry:{rings:[[[0,15],[15,7.5],[15,0],[0,0],[0,15]]]},canvasPaths:{rings:[[[0,15],[0,0],[15,7.5],[15,15],[0,15]]]}},preview:{frame:{xmax:100,xmin:0,ymax:100,ymin:0},geometry:{rings:[[[0,100],[100,100],[100,0],[0,0],[0,100]]]},canvasPaths:{rings:[[[0,100],[0,0],[100,0],[100,100],[0,100]]]}}},stroke:{legend:{frame:{xmax:24,xmin:0,ymax:-2,ymin:2},geometry:{paths:[[[0,0],[12,0],[24,0]]]},canvasPaths:{paths:[[[0,2],[12,2],[24,2]]]}},preview:{frame:{xmax:100,xmin:0,ymax:-2,ymin:2},geometry:{paths:[[[0,0],[50,0],[100,0]]]},canvasPaths:{paths:[[[0,2],[50,2],[100,2]]]}}}};class C{constructor(e,t){this._spatialReference=e,this._avoidSDF=t,this._resourceCache=new Map,this._rasterizer=new l,this._textRasterizer=new m,this._pictureMarkerCache=new Map}async rasterizeCIMSymbolAsync(e,t,r,a,s,o,n,c){a=a||(t?null!=t.centroid?"esriGeometryPolygon":i(t.geometry):null)||z(e);const l=await this.analyzeCIMSymbol(e,t?I(t.attributes):null,r,a,c);return this.rasterizeCIMSymbol(l,t,a,s,o,n)}async analyzeCIMSymbol(e,r,a,i,s){const o=[],c=r?{geometryType:i,spatialReference:this._spatialReference,fields:r}:null;let l;await n(e.data,c,o,this._avoidSDF),t(s);for(const t of o)"CIMPictureMarker"!==t.cim.type&&"CIMPictureFill"!==t.cim.type&&"CIMPictureStroke"!==t.cim.type||(l||(l=[]),l.push(this.fetchPictureMarkerResource(t,s))),a&&"text"===t.type&&"string"==typeof t.text&&t.text.indexOf("[")>-1&&(t.text=h(a,t.text,t.cim.textCase));return l&&await Promise.all(l),o}async fetchPictureMarkerResource(t,r){const a=t.materialHash;if(!this._pictureMarkerCache.get(a)){const i=(await e(t.cim.url,{responseType:"image",signal:r&&r.signal})).data;this._pictureMarkerCache.set(a,i)}}rasterizeCIMSymbol(e,t,r,a,i,s){const o=[];for(const n of e){a&&"function"==typeof a.scaleFactor&&(a.scaleFactor=a.scaleFactor(t,i,s));const e=this._getRasterizedResource(n,t,r,a,i,s);if(!e)continue;let c=0,l=e.anchorX||0,m=e.anchorY||0,h=!1,g=0,y=0;if("esriGeometryPoint"===r){const e=d(a,n,null);if(g=f(n.offsetX,t,i,s)*e||0,y=f(n.offsetY,t,i,s)*e||0,"marker"===n.type)c=f(n.rotation,t,i,s)||0,h=!!n.rotateClockwise&&n.rotateClockwise;else if("text"===n.type){if(c=f(n.angle,t,i,s)||0,void 0!==n.horizontalAlignment)switch(n.horizontalAlignment){case"left":l=-.5;break;case"right":l=.5;break;default:l=0}if(void 0!==n.verticalAlignment)switch(n.verticalAlignment){case"top":m=.5;break;case"bottom":m=-.5;break;case"baseline":m=-.25;break;default:m=0}}}null!=e&&o.push({angle:c,rotateClockWise:h,anchorX:l,anchorY:m,offsetX:g,offsetY:y,rasterizedResource:e})}return this.getSymbolImage(o)}getSymbolImage(e){const t=document.createElement("canvas"),a=t.getContext("2d");let i=0,s=0,o=0,n=0;const c=[];for(let f=0;f<e.length;f++){const t=e[f],l=t.rasterizedResource;if(!l)continue;const m=l.size,h=t.offsetX,g=t.offsetY,y=t.anchorX,u=t.anchorY,p=t.rotateClockWise||!1;let d=t.angle,M=r(h)-m[0]*(.5+y),C=r(g)-m[1]*(.5+u),I=M+m[0],z=C+m[1];if(d){p&&(d=-d);const e=Math.sin(d*Math.PI/180),t=Math.cos(d*Math.PI/180),r=M*t-C*e,a=M*e+C*t,i=M*t-z*e,s=M*e+z*t,o=I*t-z*e,n=I*e+z*t,c=I*t-C*e,l=I*e+C*t;M=Math.min(r,i,o,c),C=Math.min(a,s,n,l),I=Math.max(r,i,o,c),z=Math.max(a,s,n,l)}i=M<i?M:i,s=C<s?C:s,o=I>o?I:o,n=z>n?z:n;const P=a.createImageData(l.size[0],l.size[1]);P.data.set(new Uint8ClampedArray(l.image.buffer));const x={offsetX:h,offsetY:g,rotateClockwise:p,angle:d,rasterizedImage:P,anchorX:y,anchorY:u};c.push(x)}t.width=o-i,t.height=n-s;const l=-i,m=n;for(let f=0;f<c.length;f++){const e=c[f],t=this._imageDataToCanvas(e.rasterizedImage),i=e.rasterizedImage.width,s=e.rasterizedImage.height,o=l-i*(.5+e.anchorX),n=m-s*(.5-e.anchorY);if(e.angle){const i=(360-e.angle)*Math.PI/180;a.save(),a.translate(r(e.offsetX),-r(e.offsetY)),a.translate(l,m),a.rotate(i),a.translate(-l,-m),a.drawImage(t,o,n),a.restore()}else a.drawImage(t,o+r(e.offsetX),n-r(e.offsetY))}const h=new u({x:l/t.width-.5,y:m/t.height-.5});return{imageData:0!==t.width&&0!==t.height?a.getImageData(0,0,t.width,t.height):a.createImageData(1,1),anchorPosition:h}}_imageDataToCanvas(e){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const t=this._imageDataCanvas,r=t.getContext("2d");return t.width=e.width,t.height=e.height,r.putImageData(e,0,0),t}_imageTo32Array(e,t,r){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const a=this._imageDataCanvas,i=a.getContext("2d");return a.width=t,a.height=r,i.drawImage(e,0,0,t,r),new Uint32Array(i.getImageData(0,0,t,r).data.buffer)}_getRasterizedResource(e,t,r,i,s,o){let n,c,l,m;if("esriGeometryPolyline"===r||"esriGeometryPolygon"===r){const m=i&&i.style?i.style:p.Legend,h="esriGeometryPolyline"===r?M.stroke[m]:M.fill[m];if("line"===e.type){if("CIMSolidStroke"!==e.cim.type){if("CIMPictureStroke"===e.cim.type){const r=f(e.width,t,s,o),{image:a,width:i,height:n}=this._getPictureResource(e,r);return this._rasterizePictureResource(e,a,i,n,h,r)}return null}({analyzedCIM:n,hash:l}=P(e,t,s,o)),c=this._embedCIMLayerInVectorMarker(n,h)}else if("marker"===e.type){if("CIMPictureMarker"===e.cim.type)return null;if("CIMVectorMarker"!==e.cim.type)return null;e.cim.offsetX=f(e.offsetX,t,s,o),e.cim.offsetY=f(e.offsetY,t,s,o),e.cim.rotation=f(e.rotation,t,s,o),e.cim.markerPlacement=e.markerPlacement,({analyzedCIM:n}=P(e,t,s,o)),l=a(JSON.stringify(n)).toString(),c=this._embedCIMLayerInVectorMarker(n,h)}else{if("text"===e.type)return null;if("fill"===e.type){if("CIMHatchFill"===e.cim.type||"CIMVectorMarker"===e.cim.type||"CIMPictureMarker"===e.cim.type||"CIMPictureFill"===e.cim.type){const r=e.cim.size||e.cim.height;let a,i,c;if("CIMPictureMarker"===e.cim.type||"CIMPictureFill"===e.cim.type)({image:a,width:i,height:c}=this._getPictureResource(e,r));else{({analyzedCIM:n,hash:l}=P(e,t,s,o));const r=this._rasterizer.rasterizeJSONResource(n,1,this._avoidSDF);a=r.image,i=r.size[0],c=r.size[1]}return this._rasterizePictureResource(e,a,i,c,h,null)}if("CIMSolidFill"!==e.cim.type)return null;({analyzedCIM:n,hash:l}=P(e,t,s,o)),c=this._embedCIMLayerInVectorMarker(n,h)}}}else{if("text"===e.type)return m=this._rasterizeTextResource(e,t,i,s,o),m;({analyzedCIM:n,hash:l}=P(e,t,s,o));const r=d(i,e,null);if("CIMPictureMarker"===e.cim.type){const a=f(e.size,t,s,o)*r,{image:i,width:n,height:c}=this._getPictureResource(e,a);return m={image:i,size:[n,c],sdf:!1,simplePattern:!1,anchorX:e.anchorPoint?e.anchorPoint.x:0,anchorY:e.anchorPoint?e.anchorPoint.y:0},m}y(n,r,{preserveOutlineWidth:!1}),c=n}l+=r,i&&(l+=JSON.stringify(i));const h=this._resourceCache;return h.has(l)?h.get(l):(m=this._rasterizer.rasterizeJSONResource(c,window.devicePixelRatio||1,this._avoidSDF),h.set(l,m),m)}_rasterizeTextResource(e,t,r,a,i){const s=d(r,e,null),o=f(e.text,t,a,i);if(!o||0===o.length)return null;const n=f(e.fontName,t,a,i),c=f(e.style,t,a,i),l=f(e.weight,t,a,i),m=f(e.decoration,t,a,i),h=f(e.size,t,a,i)*s,y=f(e.horizontalAlignment,t,a,i),u=f(e.verticalAlignment,t,a,i),p=g(f(e.color,t,a,i)),M=g(f(e.outlineColor,t,a,i)),C={color:p,size:h,horizontalAlignment:y,verticalAlignment:u,font:{family:n,style:c,weight:l,decoration:m},halo:{size:f(e.outlineSize,t,a,i)||0,color:M,style:c},pixelRatio:1,premultiplyColors:!this._avoidSDF};return this._textRasterizer.rasterizeText(o,C)}_rasterizePictureResource(e,t,a,i,n,c){const l=document.createElement("canvas"),m=l.getContext("2d");l.height=r(Math.max(Math.abs(n.frame.ymax-n.frame.ymin),c)),l.width=r(Math.abs(n.frame.xmax-n.frame.xmin));const h=m.createImageData(a,i);h.data.set(new Uint8ClampedArray(t.buffer));const f=this._imageDataToCanvas(h),g=m.createPattern(f,"repeat"),y=Math.cos((-e.cim.rotation||0)*Math.PI/180),u=Math.sin((-e.cim.rotation||0)*Math.PI/180);g.setTransform({m11:y,m12:u,m21:-u,m22:y,m41:r(e.cim.offsetX)||0,m42:r(e.cim.offsetY)||0});const p=n.canvasPaths;let d,M,C;s(p)?(d=p.rings,m.fillStyle=g,M=m.fill,C=["evenodd"]):o(p)&&(d=p.paths,m.strokeStyle=g,m.lineWidth=c,M=m.stroke,d[0][0][1]=l.height/2,d[0][1][1]=l.height/2),m.beginPath();for(const s of d){const e=s?s.length:0;if(e>1){let t=s[0];m.moveTo(r(t[0]),r(t[1]));for(let a=1;a<e;++a)t=s[a],m.lineTo(r(t[0]),r(t[1]));m.closePath()}}M.apply(m,C);const I=m.getImageData(0,0,l.width,l.height),z=new Uint8Array(I.data);return{size:[l.width,l.height],image:new Uint32Array(z.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}_getPictureResource(e,t){const a=this._pictureMarkerCache.get(e.materialHash);if(!a)return null;const i=a.height/a.width,s=t?i>1?r(t):r(t)/i:a.width,o=t?i>1?r(t)*i:r(t):a.height;return{image:this._imageTo32Array(a,s,o),width:s,height:o}}_embedCIMLayerInVectorMarker(e,t){const r=s(t.geometry)?"CIMPolygonSymbol":"CIMLineSymbol";return{type:"CIMVectorMarker",frame:t.frame,markerGraphics:[{type:"CIMMarkerGraphic",geometry:t.geometry,symbol:{type:r,symbolLayers:[e]}}]}}}function I(e){return(e?Object.keys(e):[]).map((t=>({name:t,alias:t,type:"string"==typeof e[t]?"esriFieldTypeString":"esriFieldTypeDouble"})))}function z(e){if(!(e&&e.data&&e.data.symbol))return null;switch(e.data.symbol.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}function P(e,t,r,a){let i,s;if("function"==typeof e.materialHash){i=(0,e.materialHash)(t,r,a),s=c(e.cim,e.materialOverrides)}else i=e.materialHash,s=e.cim;return{analyzedCIM:s,hash:i}}export{C as CIMSymbolRasterizer,p as GeometryStyle};
