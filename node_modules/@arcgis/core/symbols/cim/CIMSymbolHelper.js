/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../Color.js";import t from"../../core/Logger.js";import{nextPowerOfTwo as r}from"../../core/mathUtils.js";import{Placement as o}from"./CIMPlacements.js";import{EnvDrawHelper as s,Transformation as a,CanvasDrawHelper as i}from"./CIMSymbolDrawHelper.js";import{packFloatRGBA as n}from"./packingUtils.js";const c=Math.PI,l=c/2,m=4,y=t.getLogger("esri.symbols.cim.CIMSymbolHelper");function f(e,t){switch(t.type){case"CIMSymbolReference":{const r={type:"point",x:0,y:0};e.drawSymbol(t.symbol,r);break}case"CIMPointSymbol":{const r={type:"point",x:0,y:0};e.drawSymbol(t,r);break}case"CIMTextSymbol":break;case"CIMVectorMarker":{const r=new o;e.drawMarker(t,r);break}}return e.envelope()}class h{static getEnvelope(e){const t=new s;if(Array.isArray(e)){let r;for(const o of e)r?r.union(f(t,o)):r=f(t,o);return r}return f(t,e)}static getTextureAnchor(e){const t=this.getEnvelope(e);if(!t||t.width<=0||t.height<=0)return[0,0,0];const r=96/72,o=(t.x+.5*t.width)*r,s=-(t.y+.5*t.height)*r,a=t.width*r+2,i=t.height*r+2;return[o/a,s/i,i]}static rasterize(e,t,r,s=!0){const n=r||this.getEnvelope(t);if(!n||n.width<=0||n.height<=0)return[null,0,0,0,0];const c=96/72,l=(n.x+.5*n.width)*c,m=(n.y+.5*n.height)*c;e.width=n.width*c,e.height=n.height*c,r||(e.width+=2,e.height+=2);const y=e.getContext("2d"),f=a.createScale(c,-c);f.translate(.5*e.width-l,.5*e.height+m);const h=new i(y,f);switch(t.type){case"CIMPointSymbol":{const e={type:"point",x:0,y:0};h.drawSymbol(t,e);break}case"CIMVectorMarker":{const e=new o;h.drawMarker(t,e);break}}const p=y.getImageData(0,0,e.width,e.height),S=new Uint8Array(p.data);if(s){let e;for(let t=0;t<S.length;t+=4)e=S[t+3]/255,S[t]=S[t]*e,S[t+1]=S[t+1]*e,S[t+2]=S[t+2]*e}return[S,e.width,e.height,-l/e.width,-m/e.height]}static fromSimpleMarker(e){const t=100,r=50;let o,s;const a=e.style;if("circle"===a||"esriSMSCircle"===a){const e=.25;let t=Math.acos(1-e/r),a=Math.ceil(c/t/4);0===a&&(a=1),t=l/a,a*=4;const i=[];i.push([r,0]);for(let o=1;o<a;o++)i.push([r*Math.cos(o*t),-r*Math.sin(o*t)]);i.push([r,0]),o={rings:[i]},s={xmin:-r,ymin:-r,xmax:r,ymax:r}}else if("cross"===a||"esriSMSCross"===a){const e=0;o={rings:[[[e,r],[e,e],[r,e],[r,-e],[e,-e],[e,-r],[-e,-r],[-e,-e],[-r,-e],[-r,e],[-e,e],[-e,r],[e,r]]]},s={xmin:-r,ymin:-r,xmax:r,ymax:r}}else if("diamond"===a||"esriSMSDiamond"===a)o={rings:[[[-r,0],[0,r],[r,0],[0,-r],[-r,0]]]},s={xmin:-r,ymin:-r,xmax:r,ymax:r};else if("square"===a||"esriSMSSquare"===a)o={rings:[[[-r,-r],[-r,r],[r,r],[r,-r],[-r,-r]]]},s={xmin:-r,ymin:-r,xmax:r,ymax:r};else if("x"===a||"esriSMSX"===a){const e=0;o={rings:[[[0,e],[r-e,r],[r,r-e],[e,0],[r,e-r],[r-e,-r],[0,-e],[e-r,-r],[-r,e-r],[-e,0],[-r,r-e],[e-r,r],[0,e]]]},s={xmin:-r,ymin:-r,xmax:r,ymax:r}}else if("triangle"===a||"esriSMSTriangle"===a){const e=t*.5773502691896257,r=-e,a=2/3*t,i=a-t;o={rings:[[[r,i],[0,a],[e,i],[r,i]]]},s={xmin:r,ymin:i,xmax:e,ymax:a}}else"arrow"!==a&&"esriSMSArrow"!==a||(o={rings:[[[-50,50],[50,0],[-50,-50],[-33,-20],[-33,20],[-50,50]]]},s={xmin:-r,ymin:-r,xmax:r,ymax:r});let i;if(o&&s){const t=[{type:"CIMSolidFill",enable:!0,color:e.color}];e.outline&&t.push({type:"CIMSolidStroke",enable:!0,width:e.outline.width,color:e.outline.color});const r={type:"CIMPolygonSymbol",symbolLayers:t};i={type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,rotation:e.angle,size:e.size,offsetX:e.xoffset,offsetY:e.yoffset,frame:s,markerGraphics:[{type:"CIMMarkerGraphic",geometry:o,symbol:r}]}]}}return i}static fromCIMHatchFill(e){const t=void 0!==e.separation?e.separation:m,r=t/2;let o=this._getLineSymbolPeriod(e.lineSymbol)||m;for(;o<4;)o*=2;const s=o/2;return{type:"CIMVectorMarker",frame:{xmin:-s,xmax:s,ymin:-r,ymax:r},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{paths:[[[-s,0],[s,0]]]},symbol:e.lineSymbol}],size:t}}static _getLineSymbolPeriod(e){if(e){const t=this._getEffectsRepeat(e.effects);if(t)return t;if(e.symbolLayers)for(const r of e.symbolLayers){const e=this._getEffectsRepeat(r.effects);if(e)return e;if(r){const e=this._getPlacementRepeat(r.markerPlacement);if(e)return e}}}return 0}static _getEffectsRepeat(e){if(e)for(const t of e)if(t)switch(t.type){case"CIMGeometricEffectDashes":{const e=t.dashTemplate;if(e&&e.length){let t=0;for(const r of e)t+=r;return 1&e.length&&(t*=2),t}break}case"CIMGeometricEffectWave":return t.period;default:y.error(`unsupported geometric effect type ${t.type}`)}return 0}static _getPlacementRepeat(e){if(e)switch(e.type){case"CIMMarkerPlacementAlongLineSameSize":case"CIMMarkerPlacementAlongLineRandomSize":case"CIMMarkerPlacementAlongLineVariableSize":{const t=e.placementTemplate;if(t&&t.length){let e=0;for(const r of t)e+=r;return 1&t.length&&(e*=2),e}break}}return 0}static fromCIMInsidePolygon(e){const t=e.markerPlacement,r={type:e.type,...e};let o,s,a,i;if(r.markerPlacement=null,r.anchorPoint=null,!0===t.shiftOddRows){s=t.stepX/2,a=t.stepY,i=2*t.stepY;o=[{x:-s,y:0},{x:s,y:0},{x:0,y:a},{x:0,y:-a}].map((e=>({type:"CIMMarkerGraphic",geometry:e,symbol:{type:"CIMPointSymbol",symbolLayers:[r]}})))}else s=t.stepX/2,a=t.stepY/2,i=t.stepY,o=[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:{type:"CIMPointSymbol",symbolLayers:[r]}}];return{type:"CIMVectorMarker",frame:{xmin:-s,xmax:s,ymin:-a,ymax:a},markerGraphics:o,size:i}}static getFillColor(e){if(!e)return null;switch(e.type){case"CIMPolygonSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=h.getFillColor(t);if(null!=e)return e}break;case"CIMTextSymbol":return h.getFillColor(e.symbol);case"CIMSolidFill":return e.color}}static getStrokeColor(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=h.getStrokeColor(t);if(void 0!==e)return e}break;case"CIMTextSymbol":return h.getStrokeColor(e.symbol);case"CIMSolidStroke":return e.color}}static getStrokeWidth(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=h.getStrokeWidth(t);if(void 0!==e)return e}break;case"CIMTextSymbol":return h.getStrokeWidth(e.symbol);case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return e.width}}static getSize(e){if(e)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":{let t=0;if(e.symbolLayers)for(const r of e.symbolLayers){const e=h.getSize(r);e>t&&(t=e)}return t}case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":return e.width;case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":return e.size}}static getMarkerScaleRatio(e){if(e)switch(e.type){case"CIMVectorMarker":if(!1!==e.scaleSymbolsProportionally&&e.frame){const t=e.frame.ymax-e.frame.ymin;return e.size/t}}return 1}}class p{static rasterizeSimpleFill(e,t,o){"solid"!==t&&"none"!==t&&"esriSFSSolid"!==t&&"esriSFSNull"!==t||console.error("Unexpected: style does not require rasterization");const s=r(Math.ceil(o)),a=this._isHorizontalOrVertical(t)?8*s:16*s,i=2*s;e.width=a,e.height=a;const n=e.getContext("2d");n.strokeStyle="#FFFFFF",n.lineWidth=s,n.beginPath(),"vertical"!==t&&"cross"!==t&&"esriSFSCross"!==t&&"esriSFSVertical"!==t||(n.moveTo(a/2,-i),n.lineTo(a/2,a+i)),"horizontal"!==t&&"cross"!==t&&"esriSFSCross"!==t&&"esriSFSHorizontal"!==t||(n.moveTo(-i,a/2),n.lineTo(a+i,a/2)),"forward-diagonal"!==t&&"diagonal-cross"!==t&&"esriSFSDiagonalCross"!==t&&"esriSFSForwardDiagonal"!==t||(n.moveTo(-i,-i),n.lineTo(a+i,a+i),n.moveTo(a-i,-i),n.lineTo(a+i,i),n.moveTo(-i,a-i),n.lineTo(i,a+i)),"backward-diagonal"!==t&&"diagonal-cross"!==t&&"esriSFSBackwardDiagonal"!==t&&"esriSFSDiagonalCross"!==t||(n.moveTo(a+i,-i),n.lineTo(-i,a+i),n.moveTo(i,-i),n.lineTo(-i,i),n.moveTo(a+i,a-i),n.lineTo(a-i,a+i)),n.stroke();const c=n.getImageData(0,0,e.width,e.height),l=new Uint8Array(c.data);let m;for(let r=0;r<l.length;r+=4)m=l[r+3]/255,l[r]=l[r]*m,l[r+1]=l[r+1]*m,l[r+2]=l[r+2]*m;return[l,e.width,e.height]}static rasterizeSimpleLine(e,t){let r;switch(t){case"butt":r="Butt";break;case"square":r="Square";break;default:r="Round"}const o="Butt"===r;let s;switch(e){case"dash":case"esriSLSDash":s=o?[4,3]:[3,4];break;case"dash-dot":case"esriSLSDashDot":s=o?[4,3,1,3]:[3,4,0,4];break;case"dot":case"esriSLSDot":s=o?[1,3]:[0,4];break;case"long-dash":case"esriSLSLongDash":s=o?[8,3]:[7,4];break;case"long-dash-dot":case"esriSLSLongDashDot":s=o?[8,3,1,3]:[7,4,0,4];break;case"long-dash-dot-dot":case"esriSLSDashDotDot":s=o?[8,3,1,3,1,3]:[7,4,0,4,0,4];break;case"short-dash":case"esriSLSShortDash":s=o?[4,1]:[3,2];break;case"short-dash-dot":case"esriSLSShortDashDot":s=o?[4,1,1,1]:[3,2,0,2];break;case"short-dash-dot-dot":case"esriSLSShortDashDotDot":s=o?[4,1,1,1,1,1]:[3,2,0,2,0,2];break;case"short-dot":case"esriSLSShortDot":s=o?[1,1]:[0,2];break;case"solid":case"esriSLSSolid":case"none":y.error("Unexpected: style does not require rasterization"),s=[0,0];break;default:y.error(`Tried to rasterize SLS, but found an unexpected style: ${e}!`),s=[0,0]}return this.rasterizeDash(s,r)}static rasterizeDash(e,t){const r="Butt"===t,o="Square"===t,s=!r&&!o;e.length%2==1&&(e=[...e,...e]);const a=15.5,i=2*a;let c=0;for(const n of e)c+=n;const l=Math.round(c*a),m=new Float32Array(l*i),y=.5*a;let f=0,h=0,p=.5,S=!0;for(const n of e){for(f=h,h+=n*a;p<=h;){let e=.5;for(;e<i;){const t=(e-.5)*l+p-.5,i=s?(e-a)*(e-a):Math.abs(e-a);m[t]=S?r?Math.max(Math.max(f+y-p,i),Math.max(p-h+y,i)):i:s?Math.min((p-f)*(p-f)+i,(p-h)*(p-h)+i):o?Math.min(Math.max(p-f,i),Math.max(h-p,i)):Math.min(Math.max(p-f+y,i),Math.max(h+y-p,i)),e++}p++}S=!S}const d=m.length,M=new Uint8Array(4*d);for(let b=0;b<d;++b){const e=(s?Math.sqrt(m[b]):m[b])/a;n(e,M,4*b)}return[M,l,i]}static _isHorizontalOrVertical(e){return"vertical"===e||"horizontal"===e||"cross"===e||"esriSFSCross"===e||"esriSFSVertical"===e||"esriSFSHorizontal"===e}}class S{static findApplicableOverrides(e,t,r){if(t){if(e.primitiveName){let o=!1;for(const t of r)if(t.primitiveName===e.primitiveName){o=!0;break}if(!o)for(const s of t)s.primitiveName===e.primitiveName&&r.push(s)}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const o of e.effects)S.findApplicableOverrides(o,t,r);if(e.symbolLayers)for(const o of e.symbolLayers)S.findApplicableOverrides(o,t,r);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":case"CIMSolidFill":case"CIMPictureFill":case"CIMHatchFill":case"CIMGradientFill":case"CIMVectorMarker":case"CIMCharacterMarker":case"CIMPictureMarker":if(e.effects)for(const o of e.effects)S.findApplicableOverrides(o,t,r);if(e.markerPlacement&&S.findApplicableOverrides(e.markerPlacement,t,r),"CIMVectorMarker"===e.type){if(e.markerGraphics)for(const o of e.markerGraphics)S.findApplicableOverrides(o,t,r),S.findApplicableOverrides(o.symbol,t,r)}else"CIMCharacterMarker"===e.type?S.findApplicableOverrides(e.symbol,t,r):"CIMHatchFill"===e.type&&S.findApplicableOverrides(e.lineSymbol,t,r)}}}static applyOverrides(e,t,r,o){if(!t)return;const s=e=>e?e.charAt(0).toLowerCase()+e.substr(1):e;if(e.primitiveName)for(const a of t)if(a.primitiveName===e.primitiveName){const t=s(a.propertyName);if(o&&o.push({cim:e,nocapPropertyName:t,value:e[t]}),a.expression&&(a.value=S.toValue(a.propertyName,a.expression)),r){let t=!1;for(const o of r)o.primitiveName===e.primitiveName&&(t=!0);t||r.push(a)}e[t]=a.value}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const s of e.effects)S.applyOverrides(s,t,r,o);if(e.symbolLayers)for(const s of e.symbolLayers)S.applyOverrides(s,t,r,o);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMSolidFill":case"CIMVectorMarker":if(e.effects)for(const s of e.effects)S.applyOverrides(s,t,r,o);if("CIMVectorMarker"===e.type&&e.markerGraphics)for(const s of e.markerGraphics)S.applyOverrides(s,t,r,o),S.applyOverrides(s.symbol,t,r,o)}}static restoreOverrides(e){for(const t of e)t.cim[t.nocapPropertyName]=t.value}static buildOverrideKey(e){let t="";for(const r of e)void 0!==r.value&&(t+=`${r.primitiveName}${r.propertyName}${JSON.stringify(r.value)}`);return t}static toValue(t,r){if("DashTemplate"===t)return r.split(" ").map((e=>Number(e)));if("Color"===t){const t=new e(r).toRgba();return t[3]*=255,t}return r}}export{h as CIMSymbolHelper,S as OverrideHelper,p as SymbolHelper};
