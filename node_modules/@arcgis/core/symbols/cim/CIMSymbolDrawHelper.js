/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import t from"../../core/Logger.js";import{create as s}from"../../geometry/support/aaBoundingRect.js";import{getBoundsXY as e}from"../../geometry/support/boundsUtils.js";import{isPolygon as i,isPolyline as r,isExtent as a}from"../../geometry/support/jsonUtils.js";import{SimpleGeometryCursor as o}from"./CIMEffects.js";import{getEffectOperator as n,getPlacementOperator as h}from"./CIMOperators.js";import{Placement as l}from"./CIMPlacements.js";import c from"./Rect.js";const f=Math.PI/180,m=t.getLogger("esri.symbols.cim.CIMSymbolDrawHelper");class u{constructor(t){this._t=t}static createIdentity(){return new u([1,0,0,0,1,0])}clone(){const t=this._t;return new u(t.slice())}transform(t){const s=this._t;return[s[0]*t[0]+s[1]*t[1]+s[2],s[3]*t[0]+s[4]*t[1]+s[5]]}static createScale(t,s){return new u([t,0,0,0,s,0])}scale(t,s){const e=this._t;return e[0]*=t,e[1]*=t,e[2]*=t,e[3]*=s,e[4]*=s,e[5]*=s,this}scaleRatio(){return Math.sqrt(this._t[0]*this._t[0]+this._t[1]*this._t[1])}static createTranslate(t,s){return new u([0,0,t,0,0,s])}translate(t,s){const e=this._t;return e[2]+=t,e[5]+=s,this}static createRotate(t){const s=Math.cos(t),e=Math.sin(t);return new u([s,-e,0,e,s,0])}rotate(t){return this.multiply(u.createRotate(t))}multiply(t){const s=this._t,e=t._t,i=s[0]*e[0]+s[3]*e[1],r=s[1]*e[0]+s[4]*e[1],a=s[2]*e[0]+s[5]*e[1]+e[2],o=s[0]*e[3]+s[3]*e[4],n=s[1]*e[3]+s[4]*e[4],h=s[2]*e[3]+s[5]*e[4]+e[5];return s[0]=i,s[1]=r,s[2]=a,s[3]=o,s[4]=n,s[5]=h,this}}class p{constructor(t){this._transfos=[],this._sizeTransfos=[],this._transfos.push(t||u.createIdentity()),this._sizeTransfos.push(t?t.scaleRatio():1)}transformPt(t){return this._transfos[this._transfos.length-1].transform(t)}transformSize(t){return t*this._sizeTransfos[this._sizeTransfos.length-1]}back(){return this._transfos[this._transfos.length-1]}push(t,s){const e=s?t.scaleRatio():1;t.multiply(this.back()),this._transfos.push(t),this._sizeTransfos.push(this._sizeTransfos[this._sizeTransfos.length-1]*e)}pop(){this._transfos.splice(-1,1),this._sizeTransfos.splice(-1,1)}drawSymbol(t,s){if(t)switch(t.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":this.drawMultiLayerSymbol(t,s)}}drawMultiLayerSymbol(t,s){if(!t)return;const e=t.symbolLayers;if(!e)return;const i=t.effects;if(i){const t=this.executeEffects(i,s);if(t){let s=t.next();for(;s;)this.drawSymbolLayers(e,s),s=t.next()}}else this.drawSymbolLayers(e,s)}executeEffects(t,s){const e=1;let i=new o(s);for(const r of t){const t=n(r);t&&(i=t.execute(i,r,e))}return i}drawSymbolLayers(t,s){let e=t.length;for(;e--;){const i=t[e];if(!i||!1===i.enable)continue;const r=i.effects;if(r){const t=this.executeEffects(r,s);if(t){let s=t.next();for(;s;)this.drawSymbolLayer(i,s),s=t.next()}}else this.drawSymbolLayer(i,s)}}drawSymbolLayer(t,s){switch(t.type){case"CIMSolidFill":this.drawSolidFill(s,t.color);break;case"CIMHatchFill":this.drawHatchFill(t,s);break;case"CIMSolidStroke":this.drawSolidStroke(s,t.color,t.width,t.capStyle,t.joinStyle,t.miterLimit);break;case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":this.drawMarkerLayer(t,s)}}drawHatchFill(t,s){const e=1,i=this._buildHatchPolyline(t,s,e);i&&(this.pushClipPath(s),this.drawMultiLayerSymbol(t.lineSymbol,i),this.popClipPath())}drawMarkerLayer(t,s){const e=t.markerPlacement;if(e){const i=h(e);if(i){const r="CIMMarkerPlacementInsidePolygon"===e.type;r&&this.pushClipPath(s);const a=1,o=i.execute(s,e,a);if(o){let s=o.next();for(;s;)this.drawMarker(t,s),s=o.next()}r&&this.popClipPath()}}else{const e=new l;e.tx=s.x,e.ty=s.y,this.drawMarker(t,e)}}drawMarker(t,s){switch(t.type){case"CIMCharacterMarker":case"CIMPictureMarker":this.drawPictureMarker(t,s);break;case"CIMVectorMarker":this.drawVectorMarker(t,s)}}drawPictureMarker(t,s){if(!t)return;const e=t.size||10,i=u.createIdentity(),r=t.anchorPoint;if(r){let s=r.x,a=r.y;"Absolute"!==t.anchorPointUnits&&(s*=e,a*=e),i.translate(-s,-a)}t.rotation&&i.rotate(t.rotation*f),i.translate(t.offsetX||0,t.offsetY||0),i.translate(s.tx,s.ty),this.push(i,!1),this.drawImage(t.url,e,t.scaleX),this.pop()}drawVectorMarker(t,s){if(!t)return;const e=t.markerGraphics;if(!e)return;const i=t.size,r=t.frame,a=r?r.ymax-r.ymin:0,o=i&&a?i/a:1,n=u.createIdentity();r&&n.translate(.5*-(r.xmax+r.xmin),.5*-(r.ymax+r.ymin));const h=t.anchorPoint;if(h){let s=h.x,e=h.y;"Absolute"!==t.anchorPointUnits?r&&(s*=r.xmax-r.xmin,e*=r.ymax-r.ymin):(s/=o,e/=o),n.translate(-s,-e)}1!==o&&n.scale(o,o),t.rotation&&n.rotate(t.rotation*f),n.translate(t.offsetX||0,t.offsetY||0),n.translate(s.tx,s.ty),this.push(n,t.scaleSymbolsProportionally);for(const l of e)l&&l.symbol&&l.geometry||m.error("Invalid marker graphic",l),this.drawSymbol(l.symbol,l.geometry);this.pop()}_buildHatchPolyline(t,i,r){let a=(void 0!==t.separation?t.separation:4)*r,o=void 0!==t.rotation?t.rotation:0;if(0===a)return null;a<0&&(a=-a);let n=0;const h=.5*a;for(;n>h;)n-=a;for(;n<-h;)n+=a;const l=s();e(l,i),l[0]-=h,l[1]-=h,l[2]+=h,l[3]+=h;const c=[[l[0],l[1]],[l[0],l[3]],[l[2],l[3]],[l[2],l[1]]];for(;o>180;)o-=180;for(;o<0;)o+=180;const m=Math.cos(o*f),u=Math.sin(o*f),p=-a*u,_=a*m;let y,d,x,M;n=(void 0!==t.offsetX?t.offsetX*r:0)*u-(void 0!==t.offsetY?t.offsetY*r:0)*m,y=x=Number.MAX_VALUE,d=M=-Number.MAX_VALUE;for(const s of c){const t=s[0],e=s[1],i=m*t+u*e,r=-u*t+m*e;y=Math.min(y,i),x=Math.min(x,r),d=Math.max(d,i),M=Math.max(M,r)}x=Math.floor(x/a)*a;let b=m*y-u*x-p*n/a,P=u*y+m*x-_*n/a,w=m*d-u*x-p*n/a,g=u*d+m*x-_*n/a;const S=1+Math.round((M-x)/a),C=[];for(let s=0;s<S;s++)b+=p,P+=_,w+=p,g+=_,C.push([[b,P],[w,g]]);return{paths:C}}}class _ extends p{constructor(){super(),this.reset()}reset(){this._xmin=this._ymin=1/0,this._xmax=this._ymax=-1/0,this._clipCount=0}envelope(){return new c(this._xmin,this._ymin,this._xmax-this._xmin,this._ymax-this._ymin)}drawSolidFill(t){if(t&&!(this._clipCount>0))if(i(t))this._processPath(t.rings,0);else if(r(t))this._processPath(t.paths,0);else if(a(t)){const s=d(t);s&&this._processPath(s.rings,0)}}drawSolidStroke(t,s,e){if(!t||this._clipCount>0)return;const o=.5*this.transformSize(e);if(i(t))this._processPath(t.rings,o);else if(r(t))this._processPath(t.paths,o);else if(a(t)){const s=d(t);s&&this._processPath(s.rings,o)}}pushClipPath(t){this.drawSolidFill(t),++this._clipCount}popClipPath(){--this._clipCount}drawImage(t,s,e){const i=s/2;this._merge(this.transformPt([0,0]),i)}_processPath(t,s){if(t)for(const e of t){const t=e?e.length:0;if(t>1){this._merge(this.transformPt(e[0]),s);for(let i=1;i<t;++i)this._merge(this.transformPt(e[i]),s)}}}_merge(t,s){t[0]-s<this._xmin&&(this._xmin=t[0]-s),t[0]+s>this._xmax&&(this._xmax=t[0]+s),t[1]-s<this._ymin&&(this._ymin=t[1]-s),t[1]+s>this._ymax&&(this._ymax=t[1]+s)}}class y extends p{constructor(t,s){super(s),this._ctx=t}drawSolidFill(t,s){if(!t)return;if(i(t))this._buildPath(t.rings,!0);else if(r(t))this._buildPath(t.paths,!0);else{if(!a(t))return;this._buildPath(d(t).rings,!0)}const e=this._ctx;e.fillStyle="string"==typeof s?s:"rgba("+Math.round(s[0])+","+Math.round(s[1])+","+Math.round(s[2])+","+s[3]/255+")",e.fill("evenodd")}drawSolidStroke(t,s,e,o,n,h){if(!t||!s||0===e)return;if(i(t))this._buildPath(t.rings,!0);else if(r(t))this._buildPath(t.paths,!1);else{if(!a(t))return;this._buildPath(d(t).rings,!0)}const l=this._ctx;l.strokeStyle="string"==typeof s?s:"rgba("+Math.round(s[0])+","+Math.round(s[1])+","+Math.round(s[2])+","+s[3]/255+")",l.lineWidth=this.transformSize(e)+.5,this._setCapStyle(o),this._setJoinStyle(n),l.miterLimit=h,l.stroke()}pushClipPath(t){if(this._ctx.save(),i(t))this._buildPath(t.rings,!0);else if(r(t))this._buildPath(t.paths,!0);else{if(!a(t))return;this._buildPath(d(t).rings,!0)}this._ctx.clip("evenodd")}popClipPath(){this._ctx.restore()}drawImage(t,s,e){}_buildPath(t,s){const e=this._ctx;if(e.beginPath(),t)for(const i of t){const t=i?i.length:0;if(t>1){let r=this.transformPt(i[0]);e.moveTo(r[0],r[1]);for(let s=1;s<t;++s)r=this.transformPt(i[s]),e.lineTo(r[0],r[1]);s&&e.closePath()}}}_setCapStyle(t){switch(t){case"Butt":this._ctx.lineCap="butt";break;case"Round":this._ctx.lineCap="round";break;case"Square":this._ctx.lineCap="square"}}_setJoinStyle(t){switch(t){case"Bevel":this._ctx.lineJoin="bevel";break;case"Round":this._ctx.lineJoin="round";break;case"Miter":this._ctx.lineJoin="miter"}}}const d=t=>t?{spatialReference:t.spatialReference,rings:[[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]]}:null;export{p as CIMSymbolDrawHelper,f as C_DEG_TO_RAD,y as CanvasDrawHelper,_ as EnvDrawHelper,u as Transformation};
