/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{PathTransformationCursor as t,isClosedPath as e,getId as s}from"../CIMCursor.js";import{CurveHelper as i}from"../CurveHelper.js";class n{static local(){return null===n.instance&&(n.instance=new n),n.instance}execute(t,e,s){return new r(t,e,s)}}n.instance=null;const a=1e-15;class r extends t{constructor(t,e,s){super(t,!0,!0),this._curveHelper=new i,this._angleToLine=void 0===e.angleToLine||e.angleToLine,this._offset=void 0!==e.offset?e.offset*s:0,this._endPoints=void 0===e.placeOnEndPoints||e.placeOnEndPoints,this._controlPoints=void 0===e.placeOnControlPoints||e.placeOnControlPoints,this._regularVertices=void 0===e.placeOnRegularVertices||e.placeOnRegularVertices,this._tags=[],this._tagIterator=0}processPath(t){if(this.iteratePath||(this._preparePath(t),this.iteratePath=!0),this._tagIterator>=this._tags.length)return this._tags.length=0,this._tagIterator=0,this.iteratePath=!1,null;const e=this._tags[this._tagIterator];this._angleToLine&&this.internalPlacement.setRotate(e[2]);let s=e[0],i=e[1];if(0!==this._offset){const t=Math.cos(e[2]),n=Math.sin(e[2]);s-=this._offset*n,i+=this._offset*t}return this.internalPlacement.setTranslate(s,i),this._tagIterator++,this.internalPlacement}_preparePath(t){this._tags.length=0,this._tagIterator=0;const i=e(t),n=t.length-1;let a,r,o=0,l=0,_=0,c=0,g=0;for(;o<n;){o++,a=t[o-1],r=t[o];const e=s(a),u=s(r);(this._angleToLine||0!==this._offset)&&(c=this._curveHelper.getAngle(a,r,0)),1===o?i?(l=c,_=e):this._endPoints&&this._tags.push([a[0],a[1],c]):1===e?this._controlPoints&&this._tags.push([a[0],a[1],h(g,c)]):this._regularVertices&&this._tags.push([a[0],a[1],h(g,c)]),(this._angleToLine||0!==this._offset)&&(g=this._curveHelper.getAngle(a,r,1)),o===n&&(i?1===u||1===_?this._controlPoints&&this._tags.push([r[0],r[1],h(g,l)]):this._regularVertices&&this._tags.push([r[0],r[1],h(g,l)]):this._endPoints&&this._tags.push([r[0],r[1],g]))}this._tagIterator=0}}function h(t,e){const s=Math.PI;for(;Math.abs(e-t)>s+2*a;)e-t>s?e-=2*s:e+=2*s;return(t+e)/2}export{n as PlacementOnVertices};
