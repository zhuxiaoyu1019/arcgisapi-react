/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/_rollupPluginBabelHelpers.js";import"../../geometry.js";import t from"../../request.js";import r from"../../core/Error.js";import{find as n}from"../../core/interatorUtils.js";import{isNone as a,isSome as o}from"../../core/maybe.js";import{eachAlways as s}from"../../core/promiseUtils.js";import{isHTTPSProtocol as i,hasSameOrigin as u,toHTTPS as l}from"../../core/urlUtils.js";import{initializeProjection as p,project as c}from"../../geometry/projection.js";import{WGS84 as m,equals as y}from"../../geometry/support/spatialReferenceUtils.js";import{featureGeometryTypeKebabDictionary as f}from"../../geometry/support/typeUtils.js";import{getGeometryType as d}from"../graphics/sources/geojson/geojson.js";import{parseDate as g}from"./dateUtils.js";import{iterateXML as w,visitXML as b}from"./xmlUtils.js";import h from"../support/Field.js";import T from"../../geometry/SpatialReference.js";import F from"../../geometry/Extent.js";const S="xlink:href",x="2.0.0",v="__esri_wfs_id__",C="wfs-layer:getWFSLayerTypeInfo-error",E="wfs-layer:empty-service",P="wfs-layer:feature-type-not-found",N="wfs-layer:geojson-not-supported",j="wfs-layer:kvp-encoding-not-supported",R="wfs-layer:malformed-json",A="wfs-layer:unknown-geometry-type",k="wfs-layer:unknown-field-type",G="wfs-layer:unsupported-spatial-reference",U="wfs-layer:unsupported-wfs-version";async function D(e,r){const n=I((await t(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:x,...null==r?void 0:r.customParameters},signal:null==r?void 0:r.signal})).data);return M(e,n),n}function I(e){const t=te(e);ne(t),ae(t);const r=t.firstElementChild,n=new Map;return{operations:L(r),get featureTypes(){return Array.from($(r,n))},readFeatureTypes:()=>$(r,n)}}const O=new Set(["json","application/json","geojson","application/json; subtype=geojson"]);function L(e){let t=!1;const n={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};if(b(e,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{n.GetCapabilities.url=e.getAttribute(S)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{n.DescribeFeatureType.url=e.getAttribute(S)}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{n.GetFeature.url=e.getAttribute(S)}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:e=>{const t=e.textContent;O.has(t.toLowerCase())&&(n.GetFeature.outputFormat=t)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{t="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{n.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),!t)throw new r(j,"WFS service doesn't support key/value pair (KVP) encoding");if(a(n.GetFeature.outputFormat))throw new r(N,"WFS service doesn't support GeoJSON output format");return n}function M(e,t){i(e)&&(u(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=l(t.operations.DescribeFeatureType.url)),u(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=l(t.operations.GetFeature.url)))}function $(t,r){return w(t,{FeatureTypeList:{FeatureType:t=>{if(r.has(t))return r.get(t);const n={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",supportedSpatialReferences:[]},a=new Set([4326]),o=t=>{var r,n;const o=parseInt(null==(r=t.textContent.match(e(/([0-9]+$)/i,{wkid:1})))||null==(n=r.groups)?void 0:n.wkid,10);Number.isNaN(o)||a.add(o)};return b(t,{Name:e=>{const{name:t,prefix:r}=re(e.textContent);n.typeName=`${r}:${t}`,n.name=t,n.namespacePrefix=r,n.namespaceUri=e.lookupNamespaceURI(r)},Abstract:e=>{n.description=e.textContent},Title:e=>{n.title=e.textContent},WGS84BoundingBox:e=>{n.extent=V(e)},DefaultSRS:o,DefaultCRS:o,OtherSRS:o,OtherCRS:o}),n.title||(n.title=n.name),n.supportedSpatialReferences.push(...a),r.set(t,n),n}}})}function V(e){let t,r,n,a;for(const o of e.children)switch(o.localName){case"LowerCorner":[t,r]=o.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[n,a]=o.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:r,xmax:n,ymax:a,spatialReference:m}}function W(e,t,r){return n(e,(e=>r?e.name===t&&e.namespaceUri===r:e.typeName===t||e.name===t))}async function X(e,t,r,n={}){var a;const{featureType:o,extent:s}=await Y(e,t,r,n),{fields:i,geometryType:u,swapXY:l,objectIdField:p,geometryField:c}=await q(e,o.typeName,n);return{url:e.operations.GetCapabilities.url,name:o.name,namespaceUri:o.namespaceUri,fields:i,geometryField:c,geometryType:u,objectIdField:p,spatialReference:null!=(a=n.spatialReference)?a:T.WGS84,extent:s,swapXY:l,wfsCapabilities:e,customParameters:n.customParameters}}async function Y(e,t,n,o={}){const{spatialReference:s=T.WGS84}=o,i=e.readFeatureTypes(),u=t?W(i,t,n):i.next().value;if(a(u))throw t?new r(P,`The type '${t}' could not be found in the service`):new r(E,"The service is empty");let l=new F({...u.extent,spatialReference:s});if(!y(s,m))try{await p(m,s,void 0,o),l=c(l,m)}catch{throw new r(G,"Projection not supported")}return{extent:l,spatialReference:s,featureType:u}}async function q(e,t,n={}){const[o,i]=await s([H(e.operations.DescribeFeatureType.url,t,n),z(e,t,n)]);if(o.error||i.error)throw new r(C,`An error occurred while getting info about the feature type '${t}'`,{error:o.error||i.error});const{fields:u,errors:l}=o.value,p=o.value.geometryType||i.value.geometryType,c=i.value.swapXY;if(a(p))throw new r(A,`The geometry type could not be determined for type '${t}`,{typeName:t,geometryType:p,fields:u,errors:l});return{..._(u),geometryType:p,swapXY:c}}function _(e){var t;const r=e.find((e=>"geometry"===e.type));let n=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),n||(n=new h({name:v,type:"oid",alias:v}),e.unshift(n)),{geometryField:null!=(t=null==r?void 0:r.name)?t:null,objectIdField:n.name,fields:e}}async function z(e,r,n={}){var a;let o,s=!1;const[i,u]=await Promise.all([K(e.operations.GetFeature.url,r,e.operations.GetFeature.outputFormat,{...n,count:1}),t(e.operations.GetFeature.url,{responseType:"text",query:Z(r,void 0,{...n,count:1}),signal:null==n?void 0:n.signal})]),l="FeatureCollection"===i.type&&(null==(a=i.features[0])?void 0:a.geometry);if(l){let e;switch(o=f.fromJSON(d(l.type)),l.type){case"Point":e=l.coordinates;break;case"LineString":case"MultiPoint":e=l.coordinates[0];break;case"MultiLineString":case"Polygon":e=l.coordinates[0][0];break;case"MultiPolygon":e=l.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(u.data);if(t){const r=e[0].toFixed(3),n=e[1].toFixed(3),a=parseFloat(t[1]).toFixed(3);r===parseFloat(t[2]).toFixed(3)&&n===a&&(s=!0)}}return{geometryType:o,swapXY:s}}async function H(e,r,n){return J(r,(await t(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:x,TYPENAME:r,...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data)}function J(e,t){const{name:a}=re(e),s=te(t);ae(s);const i=n(w(s.firstElementChild,{element:e=>({name:e.getAttribute("name"),typeName:re(e.getAttribute("type")).name})}),(({name:e})=>e===a));if(o(i)){const e=n(w(s.firstElementChild,{complexType:e=>e}),(e=>e.getAttribute("name")===i.typeName));if(o(e))return B(e)}throw new r(P,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(s)})}const Q=new Set(["objectid","fid"]);function B(e){var t,n;const a=[],o=[];let s;const i=w(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const u of i){const i=u.getAttribute("name");if(!i)continue;let l,p;if(u.hasAttribute("type")?l=re(u.getAttribute("type")).name:b(u,{simpleType:{restriction:e=>(l=re(e.getAttribute("base")).name,{maxLength:e=>{p=+e.getAttribute("value")}})}}),!l)continue;const c="true"===u.getAttribute("nillable");let m=!1;switch(l.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":o.push(new h({name:i,alias:i,type:"integer",nullable:c}));break;case"float":case"double":case"decimal":o.push(new h({name:i,alias:i,type:"double",nullable:c}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":o.push(new h({name:i,alias:i,type:"string",nullable:c,length:null!=(t=p)?t:255}));break;case"datetime":case"date":o.push(new h({name:i,alias:i,type:"date",nullable:c,length:null!=(n=p)?n:36}));break;case"pointpropertytype":s="point",m=!0;break;case"multipointpropertytype":s="multipoint",m=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":s="polyline",m=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":s="polygon",m=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":m=!0,a.push(new r(A,`geometry type '${l}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:a.push(new r(k,`Unknown field type '${l}'`,{type:(new XMLSerializer).serializeToString(e)}))}m&&o.push(new h({name:i,alias:i,type:"geometry",nullable:c}))}for(const r of o)if("integer"===r.type&&!r.nullable&&Q.has(r.name.toLowerCase())){r.type="oid";break}return{geometryType:s,fields:o,errors:a}}async function K(e,n,a,o){let{data:s}=await t(e,{responseType:"text",query:Z(n,a,o),signal:null==o?void 0:o.signal});s=s.replace(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{var i;if(null!=o&&null!=(i=o.dateFields)&&i.length){const e=new Set(o.dateFields);return JSON.parse(s,((t,r)=>e.has(t)?g(r):r))}return JSON.parse(s)}catch(u){throw new r(R,"Error while parsing the response",{response:s,error:u})}}function Z(e,t,r){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:x,TYPENAMES:e,OUTPUTFORMAT:t,SRSNAME:"EPSG:4326",STARTINDEX:null==r?void 0:r.startIndex,COUNT:null==r?void 0:r.count,...null==r?void 0:r.customParameters}}async function ee(e,r,n){const a=te((await t(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:x,TYPENAMES:r,RESULTTYPE:"hits",...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data);ae(a);const o=Number.parseFloat(a.firstElementChild.getAttribute("numberMatched"));return Number.isNaN(o)?0:o}function te(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function re(e){const[t,r]=e.split(":");return{prefix:r?t:"",name:null!=r?r:t}}function ne(e){const t=e.firstElementChild.getAttribute("version");if(t&&t!==x)throw new r(U,`Unsupported WFS version ${t}. Supported version: ${x}`)}function ae(e){let t,n;if(b(e.firstElementChild,{Exception:e=>(t=e.getAttribute("exceptionCode"),{ExceptionText:e=>{n=e.textContent}})}),t)throw new r(`wfs-layer:${t}`,n)}export{v as WFS_OID_FIELD_NAME,H as describeFeatureType,W as findFeatureType,D as getCapabilities,K as getFeature,ee as getFeatureCount,Y as getFeatureTypeInfo,X as getWFSLayerInfo,J as parseDescribeFeatureTypeResponse,I as parseGetCapabilitiesResponse,_ as prepareWFSLayerFields};
