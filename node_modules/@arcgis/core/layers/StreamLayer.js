/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../geometry.js";import r from"../PopupTemplate.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/DictionaryRenderer.js";import"../renderers/DotDensityRenderer.js";import"../renderers/HeatmapRenderer.js";import"../renderers/Renderer.js";import t from"../renderers/SimpleRenderer.js";import o from"../renderers/UniqueValueRenderer.js";import{read as i,write as s}from"../renderers/support/jsonUtils.js";import{rendererTypes as n,webSceneRendererTypes as p}from"../renderers/support/types.js";import a from"../request.js";import{symbolTypesRenderer as l}from"../symbols.js";import d from"../core/Error.js";import m from"../core/global.js";import u from"../core/Logger.js";import{isSome as y}from"../core/maybe.js";import{MultiOriginJSONMixin as f}from"../core/MultiOriginJSONSupport.js";import{throwIfAbortError as c}from"../core/promiseUtils.js";import{property as h}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import{Integer as g}from"../core/accessorSupport/ensureType.js";import{reader as j}from"../core/accessorSupport/decorators/reader.js";import{subclass as S}from"../core/accessorSupport/decorators/subclass.js";import{writer as b}from"../core/accessorSupport/decorators/writer.js";import{createTypeReader as v}from"../core/accessorSupport/extensions/serializableProperty/reader.js";import{featureGeometryTypeKebabDictionary as w}from"../geometry/support/typeUtils.js";import I from"./Layer.js";import{ArcGISService as R}from"./mixins/ArcGISService.js";import{BlendLayer as x}from"./mixins/BlendLayer.js";import{OperationalLayer as T}from"./mixins/OperationalLayer.js";import{PortalLayer as F}from"./mixins/PortalLayer.js";import{RefreshableLayer as D}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as L}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as P}from"./mixins/TemporalLayer.js";import{labelsVisible as U,legendEnabled as E,maxScale as O,minScale as k,popupEnabled as _,screenSizePerspectiveEnabled as N,url as A}from"./support/commonProperties.js";import{read as J,writeTarget as W,webSceneFeatureReductionTypes as G}from"./support/featureReductionUtils.js";import{defineFieldProperties as q}from"./support/fieldProperties.js";import{fixRendererFields as V,fixTimeInfoFields as z}from"./support/fieldUtils.js";import C from"./support/LabelClass.js";import{reader as B}from"./support/labelingInfo.js";import M from"./support/PurgeOptions.js";import{loadStyleRenderer as Q}from"../renderers/support/styleUtils.js";import H from"../rest/support/Query.js";import{createPopupTemplate as K}from"../support/popupUtils.js";import X from"../symbols/support/ElevationInfo.js";import Y from"../geometry/SpatialReference.js";import Z from"../geometry/Extent.js";const $=u.getLogger("esri.layers.StreamLayer"),ee=q();let re=class extends(x(P(L(D(R(T(F(f(I))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new M,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=Y.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.webSocketUrl=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){if(!("WebSocket"in m))return this.addResolvingPromise(Promise.reject(new d("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const r=y(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(c).then((()=>this._fetchService(r)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}readFeatureReduction(e,r){return J(e,r)}writeWebSceneFeatureReduction(e,r,t,o){W(e,r,"layerDefinition.featureReduction",o)}set renderer(e){V(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,r,s){const n=(r=r.layerDefinition||r).drawingInfo&&r.drawingInfo.renderer||void 0;if(n){const e=i(n,r,s)||void 0;return e||$.error("Failed to create renderer",{rendererDefinition:r.drawingInfo.renderer,layer:this,context:s}),e}if(r.defaultSymbol)return r.types&&r.types.length?new o({defaultSymbol:te(r.defaultSymbol,r,s),field:r.typeIdField,uniqueValueInfos:r.types.map((e=>({id:e.id,symbol:te(e.symbol,e,s)})))}):new t({symbol:te(r.defaultSymbol,r,s)})}writeRenderer(e,r,t,o){s(e,r,t,o)}writeWebSceneRenderer(e,r,t,o){s(e,r,"layerDefinition.drawingInfo.renderer",o)}createPopupTemplate(e){return K(this,e)}createQuery(){const e=new H;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,r){if(!this.fields)return null;let t=null;return this.fields.some((r=>(r.name===e&&(t=r.domain),!!t))),t}getField(e){return this.fieldsIndex.get(e)}async _fetchService(e){var r;if(!!this.webSocketUrl){var t;if(null==(t=this.timeInfo)||!t.trackIdField)throw new d("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField)throw new d("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");if(!this.fields)throw new d("stream-layer:missing-metadata","The stream layer fields must be specified.");if(!this.geometryType)throw new d("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.url=this.webSocketUrl}else if(!this.sourceJSON){const{data:r}=await a(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=r}return this.sourceJSON={...null!=(r=this.sourceJSON)?r:{},objectIdField:"__esri_stream_id__"},this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl}),V(this.renderer,this.fieldsIndex),z(this.timeInfo,this.fieldsIndex),Q(this,{origin:"service"})}};e([h({type:String})],re.prototype,"copyright",void 0),e([h({readOnly:!0})],re.prototype,"defaultPopupTemplate",null),e([h({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],re.prototype,"definitionExpression",void 0),e([h({type:String})],re.prototype,"displayField",void 0),e([h({type:X})],re.prototype,"elevationInfo",void 0),e([j("featureReduction",["layerDefinition.featureReduction"])],re.prototype,"readFeatureReduction",null),e([b("web-scene","featureReduction",{"layerDefinition.featureReduction":{types:G}})],re.prototype,"writeWebSceneFeatureReduction",null),e([h(ee.fields)],re.prototype,"fields",void 0),e([h(ee.fieldsIndex)],re.prototype,"fieldsIndex",void 0),e([h({type:Z})],re.prototype,"geometryDefinition",void 0),e([h({type:w.apiValues,json:{read:{reader:w.read}}})],re.prototype,"geometryType",void 0),e([h(U)],re.prototype,"labelsVisible",void 0),e([h({type:[C],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:B},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],re.prototype,"labelingInfo",void 0),e([h(E)],re.prototype,"legendEnabled",void 0),e([h({type:["show","hide"]})],re.prototype,"listMode",void 0),e([h({type:g})],re.prototype,"maxReconnectionAttempts",void 0),e([h({type:g})],re.prototype,"maxReconnectionInterval",void 0),e([h(O)],re.prototype,"maxScale",void 0),e([h(k)],re.prototype,"minScale",void 0),e([h({type:String})],re.prototype,"objectIdField",void 0),e([h({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],re.prototype,"operationalLayerType",void 0),e([h(_)],re.prototype,"popupEnabled",void 0),e([h({type:r,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],re.prototype,"popupTemplate",void 0),e([h({type:M})],re.prototype,"purgeOptions",void 0),e([h({types:n,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],re.prototype,"renderer",null),e([j("service","renderer",["drawingInfo.renderer","defaultSymbol"]),j("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],re.prototype,"readRenderer",null),e([b("renderer")],re.prototype,"writeRenderer",null),e([b("web-scene","renderer",{"layerDefinition.drawingInfo.renderer":{types:p}})],re.prototype,"writeWebSceneRenderer",null),e([h(N)],re.prototype,"screenSizePerspectiveEnabled",void 0),e([h({type:Y,json:{origins:{service:{read:{source:"spatialReference"}}}}})],re.prototype,"spatialReference",void 0),e([h({json:{read:!1}})],re.prototype,"type",void 0),e([h(A)],re.prototype,"url",void 0),e([h({type:Number})],re.prototype,"updateInterval",void 0),e([h({type:String})],re.prototype,"webSocketUrl",void 0),re=e([S("esri.layers.StreamLayer")],re);const te=v({types:l});var oe=re;export default oe;
