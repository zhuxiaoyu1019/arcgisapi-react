/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import o from"../config.js";import r from"../request.js";import"../symbols.js";import{isSome as t}from"../core/maybe.js";import{MultiOriginJSONMixin as i}from"../core/MultiOriginJSONSupport.js";import{throwIfAbortError as s}from"../core/promiseUtils.js";import{getFilename as l}from"../core/urlUtils.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import"../core/Logger.js";import{reader as a}from"../core/accessorSupport/decorators/reader.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import n from"./Layer.js";import{BlendLayer as y}from"./mixins/BlendLayer.js";import{OperationalLayer as c}from"./mixins/OperationalLayer.js";import{PortalLayer as u}from"./mixins/PortalLayer.js";import{RefreshableLayer as S}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as d}from"./mixins/ScaleRangeLayer.js";import{id as f,legendEnabled as h,url as j}from"./support/commonProperties.js";import b from"../symbols/Symbol.js";import v from"../symbols/SimpleLineSymbol.js";import g from"../symbols/PictureMarkerSymbol.js";import R from"../symbols/SimpleMarkerSymbol.js";import x from"../symbols/SimpleFillSymbol.js";const C=["atom","xml"],L={base:b,key:"type",typeMap:{"simple-line":v},errorContext:"symbol"},k={base:b,key:"type",typeMap:{"picture-marker":g,"simple-marker":R},errorContext:"symbol"},F={base:b,key:"type",typeMap:{"simple-fill":x},errorContext:"symbol"};let M=class extends(y(S(c(u(d(i(n))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,o){return"string"==typeof e?{url:e,...o}:e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?l(this.url,C)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,o){return o.featureCollection.layers.forEach((e=>{const o=e.layerDefinition.drawingInfo.renderer.symbol;o&&"esriSFS"===o.type&&o.outline&&-1!==o.outline.style.indexOf("esriSFS")&&(o.outline.style="esriSLSSolid")})),o.featureCollection.layers}load(e){const o=t(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(s).then((()=>this._fetchService(o)))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await r(o.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};e([p()],M.prototype,"description",void 0),e([p({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],M.prototype,"title",null),e([p()],M.prototype,"featureCollections",void 0),e([a("service","featureCollections",["featureCollection.layers"])],M.prototype,"readFeatureCollections",null),e([p(f)],M.prototype,"id",void 0),e([p(h)],M.prototype,"legendEnabled",void 0),e([p({types:L,json:{write:!0}})],M.prototype,"lineSymbol",void 0),e([p({type:["show","hide"]})],M.prototype,"listMode",void 0),e([p({types:k,json:{write:!0}})],M.prototype,"pointSymbol",void 0),e([p({types:F,json:{write:!0}})],M.prototype,"polygonSymbol",void 0),e([p({type:["GeoRSS"]})],M.prototype,"operationalLayerType",void 0),e([p()],M.prototype,"outSpatialReference",void 0),e([p(j)],M.prototype,"url",void 0),e([p({readOnly:!0,json:{read:!1},value:"geo-rss"})],M.prototype,"type",void 0),M=e([m("esri.layers.GeoRSSLayer")],M);var O=M;export default O;
