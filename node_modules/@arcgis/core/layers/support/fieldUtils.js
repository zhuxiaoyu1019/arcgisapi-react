/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{isNone as n,isSome as i}from"../../core/maybe.js";import{getDeepValue as t,setDeepValue as r}from"../../core/object.js";import{validateDomainValue as l,getDomainRange as o,DomainValidationError as a}from"./domains.js";import{loadArcade as s}from"../../support/arcadeOnDemand.js";const u=["field","field2","field3","normalizationField","rotationInfo.field","proportionalSymbolInfo.field","proportionalSymbolInfo.normalizationField","colorInfo.field","colorInfo.normalizationField"],f=["field","normalizationField"];function c(e,n){if(null!=e&&null!=n)for(const i of Array.isArray(e)?e:[e])if(d(u,i,n),"visualVariables"in i&&i.visualVariables)for(const e of i.visualVariables)d(f,e,n)}function d(e,n,i){if(e)for(const l of e){const e=t(l,n),o=e&&"function"!=typeof e&&i.get(e);o&&r(l,o.name,n)}}function m(e,n){if(null!=e&&null!=n&&n.fields.length)if("startField"in e){const i=n.get(e.startField),t=n.get(e.endField);e.startField=i&&i.name||null,e.endField=t&&t.name||null}else{const i=n.get(e.startTimeField),t=n.get(e.endTimeField);e.startTimeField=i&&i.name||null,e.endTimeField=t&&t.name||null}}const y=new Set;function p(e,n){return e&&n?(y.clear(),g(y,e,n),Array.from(y).sort()):[]}function g(e,n,i){var t;if(i)if(null!=n&&null!=(t=n.fields)&&t.length)if(i.includes("*"))for(const{name:r}of n.fields)e.add(r);else for(const r of i)F(e,n,r);else{if(i.includes("*"))return e.clear(),void e.add("*");for(const n of i)e.add(n)}}function F(e,n,i){if("string"==typeof i)if(n){const t=n.get(i);t&&e.add(t.name)}else e.add(i)}function I(e,i){return n(i)||n(e)?[]:i.includes("*")?e.fields.map((e=>e.name)):i}function b(e,n,i=1){if(!n||!e)return[];if(n.includes("*"))return["*"];const t=p(e,n);return t.length/e.fields.length>=i?["*"]:t}async function T(e,n,i){if(!i)return;const{arcadeUtils:t}=await s(),r=t.extractFieldNames(i);for(const l of r)F(e,n,l)}async function x(n,i,t){if(t&&"1=1"!==t){const r=(await import("../../core/sql/WhereClause.js")).WhereClause.create(t,i);if(!r.isStandardized)throw new e("fieldUtils:collectFilterFields","Where clause is not standardized");g(n,i,r.fieldNames)}}function h({displayField:e,fields:n}){return e||(n&&n.length?w(n,"name-or-title")||w(n,"unique-identifier")||w(n,"type-or-category")||S(n):null)}function S(e){for(const n of e){if(!n||!n.name)continue;const e=n.name.toLowerCase();if(e.indexOf("name")>-1||e.indexOf("title")>-1)return n.name}return null}function w(e,n){for(const i of e)if(i&&i.valueType&&i.valueType===n)return i.name;return null}async function v(e){if(!e)return[];const n=new Set;return await A(n,e),Array.from(n).sort()}async function A(e,n){if(!n)return;const i=t("elevationInfo.featureExpressionInfo",n);return i?i.collectRequiredFields(e,n.fieldsIndex):void 0}async function N(e,n,i){i.outStatistic.onStatisticValueExpression?T(e,n,i.outStatistic.onStatisticValueExpression):e.add(i.outStatistic.onStatisticField)}async function E(e,n,i){n&&i&&"cluster"===i.type&&i.fields&&await Promise.all(i.fields.map((i=>N(e,n.fieldsIndex,i))))}async function V(e,n,t){n&&(n.timeInfo&&i(t)&&t.timeExtent&&g(e,n.fieldsIndex,[n.timeInfo.startField,n.timeInfo.endField]),n.floorInfo&&g(e,n.fieldsIndex,[n.floorInfo.floorField]),i(t)&&i(t.where)&&await x(e,n.fieldsIndex,t.where))}async function _(e){if(!e)return[];const n="timeInfo"in e&&e.timeInfo;return n?p(e.fieldsIndex,[e.trackIdField,n.startField,n.endField]):[]}function D(e){if(!e)return[];const n="editFieldsInfo"in e&&e.editFieldsInfo;return n?p(e.fieldsIndex,[n&&n.creatorField,n&&n.creationDateField,n&&n.editorField,n&&n.editDateField]):[]}function $(e){if(!e)return[];const n=e.geometryFieldsInfo;return n?p(e.fieldsIndex,[n.shapeAreaField,n.shapeLengthField]):[]}async function O(e){if(!e)return[];const n=new Set;return await L(n,e),Array.from(n).sort()}async function L(e,n){const{labelingInfo:i,fieldsIndex:t}=n;i&&i.length&&await Promise.all(i.map((n=>U(e,t,n))))}async function U(e,n,i){if(!i)return;const t=i.getLabelExpression(),r=i.where;if("arcade"===t.type)await T(e,n,t.expression);else{const i=t.expression.match(/{[^}]*}/g);i&&i.forEach((i=>{F(e,n,i.slice(1,-1))}))}await x(e,n,r)}function j(e){const n=e.defaultValue;return void 0!==n&&M(e,n)?n:e.nullable?null:void 0}function z(e){return"number"==typeof e&&!isNaN(e)&&isFinite(e)}function k(e){return null===e||z(e)}const P="isInteger"in Number?Number.isInteger:e=>"number"==typeof e&&isFinite(e)&&Math.floor(e)===e;function R(e){return null===e||P(e)}function C(e){return null!=e&&"string"==typeof e}function G(e){return null===e||C(e)}function q(){return!0}function M(e,n){let i;switch(e.type){case"date":case"integer":case"long":case"small-integer":case"esriFieldTypeDate":case"esriFieldTypeInteger":case"esriFieldTypeLong":case"esriFieldTypeSmallInteger":i=e.nullable?R:P;break;case"double":case"single":case"esriFieldTypeSingle":case"esriFieldTypeDouble":i=e.nullable?k:z;break;case"string":case"esriFieldTypeString":i=e.nullable?G:C;break;default:i=q}return 1===arguments.length?i:i(n)}const W=["integer","small-integer","single","double"],Y=new Set([...W,"esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble"]);function J(e){return null!=e&&Y.has(e.type)}function X(e){return null!=e&&("string"===e.type||"esriFieldTypeString"===e.type)}function B(e){return null!=e&&("date"===e.type||"esriFieldTypeDate"===e.type)}function H(e,n){return null===ee(e,n)}var K,Q;function Z(e){return null==e||"number"==typeof e&&isNaN(e)?null:e}function ee(e,n){return e.nullable&&null===n?null:J(e)&&!ne(e.type,Number(n))?K.OUT_OF_RANGE:M(e,n)?e.domain?l(e.domain,n):null:Q.INVALID_TYPE}function ne(e,n){const i="string"==typeof e?te(e):e;return!!i&&(i.isInteger?P(n)&&n>=i.min&&n<=i.max:n>=i.min&&n<=i.max)}function ie(e){const n=o(e.domain);return n||(J(e)?te(e.type):void 0)}function te(e){switch(e){case"esriFieldTypeSmallInteger":case"small-integer":return le;case"esriFieldTypeInteger":case"integer":return oe;case"esriFieldTypeSingle":case"single":return ae;case"esriFieldTypeDouble":case"double":return se}}function re(e){if(!z(e))return null;if(P(e)){if(e>=le.min&&e<=le.max)return"esriFieldTypeSmallInteger";if(e>=oe.min&&e<=oe.max)return"esriFieldTypeInteger"}return e>=ae.min&&e<=ae.max?"esriFieldTypeSingle":"esriFieldTypeDouble"}!function(e){e.OUT_OF_RANGE="numeric-range-validation-error::out-of-range"}(K||(K={})),function(e){e.INVALID_TYPE="type-validation-error::invalid-type"}(Q||(Q={}));const le={min:-32768,max:32767,isInteger:!0},oe={min:-2147483648,max:2147483647,isInteger:!0},ae={min:-34e37,max:12e37,isInteger:!1},se={min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isInteger:!1};function ue(e,n,i){switch(e){case a.INVALID_CODED_VALUE:return`Value ${i} is not in the coded domain - field: ${n.name}, domain: ${JSON.stringify(n.domain)}`;case a.VALUE_OUT_OF_RANGE:return`Value ${i} is out of the range of valid values - field: ${n.name}, domain: ${JSON.stringify(n.domain)}`;case Q.INVALID_TYPE:return`Value ${i} is not a valid value for the field type - field: ${n.name}, type: ${n.type}, nullable: ${n.nullable}`;case K.OUT_OF_RANGE:{const{min:e,max:t}=te(n.type);return`Value ${i} is out of range for the number type - field: ${n.name}, type: ${n.type}, value range is ${e} to ${t}`}}}function fe(e,n){return!ce(e,n,null)}function ce(e,n,t){if(!n||!n.attributes||!e){if(i(t))for(const n of e)t.add(n);return!0}const r=n.attributes;let l=!1;for(const o of e)if(!(o in r)){if(l=!0,!i(t))break;t.add(o)}return l}async function de(e,n){const i=new Set;for(const t of n)await T(i,e.fieldsIndex,t);return Array.from(i).sort()}export{K as NumericRangeValidationError,Q as TypeValidationError,T as collectArcadeFieldNames,A as collectElevationFields,E as collectFeatureReductionFields,F as collectField,g as collectFields,V as collectFilterFields,L as collectLabelingFields,se as doubleRange,fe as featureHasFields,p as fixFields,c as fixRendererFields,m as fixTimeInfoFields,h as getDisplayFieldName,v as getElevationFields,de as getExpressionFields,D as getFeatureEditFields,$ as getFeatureGeometryFields,j as getFieldDefaultValue,ie as getFieldRange,O as getLabelingFields,re as getNumericTypeForValue,_ as getTimeFields,oe as integerRange,B as isDateField,ne as isNumberInRange,J as isNumericField,X as isStringField,H as isValidFieldValue,M as isValueMatchingFieldType,W as numericTypes,b as packFields,ce as populateMissingFields,u as rendererFields,Z as sanitizeNullFieldValue,ae as singleRange,le as smallIntegerRange,I as unpackFieldNames,ee as validateFieldValue,ue as validationErrorToString,f as visualVariableFields};
