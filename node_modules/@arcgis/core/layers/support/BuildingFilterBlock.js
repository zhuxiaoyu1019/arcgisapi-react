/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{clone as o}from"../../core/lang.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/has.js";import"../../core/Logger.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import s from"./BuildingFilterMode.js";import p from"./BuildingFilterModeSolid.js";import l from"./BuildingFilterModeWireFrame.js";import n from"./BuildingFilterModeXRay.js";var a;const d={nonNullable:!0,types:{key:"type",base:s,typeMap:{solid:p,"wire-frame":l,"x-ray":n}},json:{read:r=>{switch(r&&r.type){case"solid":return p.fromJSON(r);case"wireFrame":return l.fromJSON(r);case"x-ray":return n.fromJSON(r);default:return}},write:{enabled:!0,isRequired:!0}}};let c=a=class extends e{constructor(){super(...arguments),this.filterExpression=null,this.filterMode=new p,this.title=""}clone(){return new a({filterExpression:this.filterExpression,filterMode:o(this.filterMode),title:this.title})}};r([t({type:String,json:{write:{enabled:!0,isRequired:!0}}})],c.prototype,"filterExpression",void 0),r([t(d)],c.prototype,"filterMode",void 0),r([t({type:String,json:{write:{enabled:!0,isRequired:!0}}})],c.prototype,"title",void 0),c=a=r([i("esri.layers.support.BuildingFilterBlock")],c);var m=c;export default m;
