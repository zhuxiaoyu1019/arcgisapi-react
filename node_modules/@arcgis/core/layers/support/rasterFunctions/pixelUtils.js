/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import t from"../PixelBlock.js";const e=function(t){return t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0};function n(n,i){if(null==i||!i.length||!e(n))return n;const l=n.pixels.length;return i&&i.some((t=>t>=l))||1===l&&1===i.length&&0===i[0]?n:l!==i.length||i.some(((t,e)=>t!==e))?new t({pixelType:n.pixelType,width:n.width,height:n.height,mask:n.mask,validPixelCount:n.validPixelCount,maskIsAlpha:n.maskIsAlpha,pixels:i.map((t=>n.pixels[t])),statistics:n.statistics&&i.map((t=>n.statistics[t]))}):n}function i(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),r=new Uint8Array(4*l),o=[];let s,a=0,h=0;const f=5===n[0].length;if(l>65536)return n.forEach((t=>{o[t[0]-i]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:o,offset:i,alphaSpecified:f};if(t.fillUnspecified)for(s=n[h],a=s[0]-i;a<l;a++)r[4*a]=s[1],r[4*a+1]=s[2],r[4*a+2]=s[3],r[4*a+3]=f?s[4]:255,a===s[0]-i&&(s=h===n.length-1?s:n[++h]);else for(a=0;a<n.length;a++)s=n[a],h=4*(s[0]-i),r[h]=s[1],r[h+1]=s[2],r[h+2]=s[3],r[h+3]=f?s[4]:255;return{indexedColormap:r,offset:i,alphaSpecified:f}}function l(t,n){if(!e(t))return t;if(!n&&(n.indexedColormap||n.indexed2DColormap))return t;const i=t.clone(),l=i.pixels;let r=i.mask;const o=i.width*i.height;if(1!==l.length)return t;const{indexedColormap:s,indexed2DColormap:a,offset:h,alphaSpecified:f}=n,u=s.length-1;let c=0;const x=l[0],m=new Uint8Array(x.length),p=new Uint8Array(x.length),d=new Uint8Array(x.length);let g,y=0;if(s)if(r)for(c=0;c<o;c++)r[c]&&(y=4*(x[c]-h),y<h||y>u?r[c]=0:(m[c]=s[y],p[c]=s[y+1],d[c]=s[y+2],r[c]=s[y+3]));else{for(r=new Uint8Array(o),c=0;c<o;c++)y=4*(x[c]-h),y<h||y>u?r[c]=0:(m[c]=s[y],p[c]=s[y+1],d[c]=s[y+2],r[c]=s[y+3]);i.mask=r}else if(r)for(c=0;c<o;c++)r[c]&&(g=a[x[c]],m[c]=g[0],p[c]=g[1],d[c]=g[2],r[c]=g[3]);else{for(r=new Uint8Array(o),c=0;c<o;c++)g=a[x[c]],m[c]=g[0],p[c]=g[1],d[c]=g[2],r[c]=g[3];i.mask=r}return i.pixels=[m,p,d],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=f,i}function r(t){if(!e(t))return null;t.statistics||t.updateStatistics();const{pixels:n,mask:i,pixelType:l,statistics:r}=t,o=t.width*t.height,s=n.length;let a,h,f,u,c;const x=[],m=[];let p,d,g,y,w,M,k,A,U,C;const T=256;for(u=0;u<s;u++){if(p=new Uint32Array(T),g=n[u],"u8"===l)if(a=-.5,h=255.5,i)for(c=0;c<o;c++)i[c]&&p[g[c]]++;else for(c=0;c<o;c++)p[g[c]]++;else{if(a=r[u].minValue,h=r[u].maxValue,f=(h-a)/T,d=new Uint32Array(T+1),i)for(c=0;c<o;c++)i[c]&&d[Math.floor((g[c]-a)/f)]++;else for(c=0;c<o;c++)d[Math.floor((g[c]-a)/f)]++;for(c=0;c<255;c++)p[c]=d[c];p[255]=d[255]+d[256]}for(x.push({min:a,max:h,size:T,counts:p}),y=0,w=0,A=0,c=0;c<T;c++)y+=p[c],w+=c*p[c];for(U=w/y,c=0;c<T;c++)A+=p[c]*(c-U)**2;C=Math.sqrt(A/(y-1)),f=(h-a)/T,M=(U+.5)*f+a,k=C*f,m.push({min:a,max:h,avg:M,stddev:k})}return{statistics:m,histograms:x}}function o(t){const e=[];for(let n=0;n<t.length;n++){const{min:i,max:l,size:r,counts:o}=t[n];let s=0,a=0;for(let t=0;t<r;t++)s+=o[t],a+=t*o[t];const h=a/s;let f=0;for(let t=0;t<r;t++)f+=o[t]*(t-h)**2;const u=(l-i)/r,c=(h+.5)*u+i,x=Math.sqrt(f/(s-1))*u;e.push({min:i,max:l,avg:c,stddev:x})}return e}function s(t){const{minCutOff:e,maxCutOff:n,gamma:i,pixelType:l}=t,r=t.outMin||0,o=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(l))return null;const s=e.length;let h,f,u=0;"s8"===l?u=-127:"s16"===l&&(u=-32767);let c=256;["u16","s16"].indexOf(l)>-1&&(c=65536);const x=[],m=[],p=o-r;for(h=0;h<s;h++)m[h]=n[h]-e[h],x[h]=p/(n[h]-e[h]);const d=i&&i.length>=s,g=[];if(d)for(h=0;h<s;h++)i[h]>1?i[h]>2?g[h]=6.5+(i[h]-2)**2.5:g[h]=6.5+100*(2-i[h])**4:g[h]=1;let y;const w=[];let M,k,A;if(d)for(h=0;h<s;h++){for(A=[],f=0;f<c;f++)M=f+u,y=(M-e[h])/m[h],k=1,i[h]>1&&(k-=(1/p)**(y*g[h])),M<n[h]&&M>e[h]?A[f]=Math.floor(k*p*y**(1/i[h]))+r:M>=n[h]?A[f]=o:A[f]=r;w[h]=A}else for(h=0;h<s;h++){for(A=[],f=0;f<c;f++)M=f+u,M<=e[h]?A[f]=r:M>=n[h]?A[f]=o:A[f]=Math.floor((M-e[h])/m[h]*p)+r;w[h]=A}if(null!=t.contrastOffset){const e=a(t.contrastOffset,t.brightnessOffset);for(h=0;h<s;h++)for(A=w[h],f=0;f<c;f++)A[f]=e[A[f]]}return{lut:w,offset:u}}function a(t,e){const n=Math.min(Math.max(t,-100),100),i=Math.min(Math.max(e,-100),100),l=255,r=128;let o,s;const a=new Uint8Array(256);for(o=0;o<256;o++)n>0&&n<100?s=(200*o-100*l+2*l*i)/(2*(100-n))+r:n<=0&&n>-100?s=(200*o-100*l+2*l*i)*(100+n)/2e4+r:100===n?(s=200*o-100*l+(l+1)*(100-n)+2*l*i,s=s>0?l:0):-100===n&&(s=r),a[o]=s>l?l:s<0?0:s;return a}function h(t,e=256){e=Math.min(e,256);const{size:n,counts:i}=t,l=new Uint8Array(n),r=i.reduce(((t,n)=>t+n/e),0);let o=0,s=0,a=0,h=r;for(let f=0;f<n;f++)if(a+=i[f],!(f<n-1&&a+i[f+1]<h)){for(;o<e-1&&h<a;)o++,h+=r;for(let t=s;t<=f;t++)l[t]=o;s=f+1}for(let f=s;f<n;f++)l[f]=e-1;return l}function f(t,n){if(!e(t))return null;const i=t.clone(),{pixels:l,mask:r}=i,{minCutOff:o,maxCutOff:s,gamma:a}=n,h=n.outMin||0,f=n.outMax||255,u=i.width*i.height,c=l.length;let x,m,p,d,g;const y=f-h,w=[],M=[];for(x=0;x<c;x++)M[x]=s[x]-o[x],w[x]=y/(s[x]-o[x]);const k=a&&a.length>=c,A=[];if(k)for(x=0;x<c;x++)a[x]>1?a[x]>2?A[x]=6.5+(a[x]-2)**2.5:A[x]=6.5+100*(2-a[x])**4:A[x]=1;if(k)if(null!=r){for(m=0;m<u;m++)if(r[m])for(x=0;x<c;x++)p=l[x][m],g=(p-o[x])/M[x],d=1,a[x]>1&&(d-=(1/y)**(g*A[x])),p<s[x]&&p>o[x]?l[x][m]=Math.floor(d*y*g**(1/a[x]))+h:p>=s[x]?l[x][m]=f:l[x][m]=h}else for(m=0;m<u;m++)for(x=0;x<c;x++)p=l[x][m],g=(p-o[x])/M[x],d=1,a[x]>1&&(d-=(1/y)**(g*A[x])),p<s[x]&&p>o[x]?l[x][m]=Math.floor(d*y*g**(1/a[x]))+h:p>=s[x]?l[x][m]=f:l[x][m]=h;else if(null!=r){for(m=0;m<u;m++)if(r[m])for(x=0;x<c;x++)p=l[x][m],p<s[x]&&p>o[x]?l[x][m]=Math.floor((p-o[x])/M[x]*y)+h:p>=s[x]?l[x][m]=f:l[x][m]=h}else for(m=0;m<u;m++)for(x=0;x<c;x++)p=l[x][m],p<s[x]&&p>o[x]?l[x][m]=Math.floor((p-o[x])/M[x]*y)+h:p>=s[x]?l[x][m]=f:l[x][m]=h;return i.pixelType="u8",i.updateStatistics(),i}function u(n,i){if(!e(n))return null;const{pixels:l,mask:r}=n,o=n.width*n.height,s=l.length;let a=i.lut;const{offset:h}=i;let f,u;a&&1===a[0].length&&(a=l.map((()=>a)));const c=[];let x,m,p;if(h)if(null==r)for(f=0;f<s;f++){for(x=l[f],m=a[f],p=new Uint8Array(o),u=0;u<o;u++)p[u]=m[x[u]-h];c.push(p)}else for(f=0;f<s;f++){for(x=l[f],m=a[f],p=new Uint8Array(o),u=0;u<o;u++)r[u]&&(p[u]=m[x[u]-h]);c.push(p)}else if(null==r)for(f=0;f<s;f++){for(x=l[f],m=a[f],p=new Uint8Array(o),u=0;u<o;u++)p[u]=m[x[u]];c.push(p)}else for(f=0;f<s;f++){for(x=l[f],m=a[f],p=new Uint8Array(o),u=0;u<o;u++)r[u]&&(p[u]=m[x[u]]);c.push(p)}const d=new t({width:n.width,height:n.height,pixels:c,mask:r,pixelType:"u8"});return d.updateStatistics(),d}function c(t,n){if(!e(t))return null;const i=t.clone(),{pixels:l}=i,r=i.width*i.height,o=n.length,s=Math.floor(o/2),a=n[Math.floor(s)],h=l[0];let f,u,c,x,m,p,d=!1;const g=new Uint8Array(r),y=new Uint8Array(r),w=new Uint8Array(r);let M=i.mask;const k=4===n[0].mappedColor.length;for(M||(M=new Uint8Array(r),M.fill(k?255:1),i.mask=M),m=0;m<r;m++)if(M[m]){for(f=h[m],d=!1,p=s,u=a,c=0,x=o-1;x-c>1;){if(f===u.value){d=!0;break}f>u.value?c=p:x=p,p=Math.floor((c+x)/2),u=n[Math.floor(p)]}d||(f===n[c].value?(u=n[c],d=!0):f===n[x].value?(u=n[x],d=!0):f<n[c].value?(d=!1,u=null):f>n[c].value&&(f<n[x].value?(u=n[c],d=!0):x===o-1?(d=!1,u=null):(u=n[x],d=!0))),d?(g[m]=u.mappedColor[0],y[m]=u.mappedColor[1],w[m]=u.mappedColor[2],M[m]=u.mappedColor[3]):g[m]=y[m]=w[m]=M[m]=0}return i.pixels=[g,y,w],i.mask=M,i.pixelType="u8",i.maskIsAlpha=k,i}function x(t,e,n,i,l,r,o,s){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:r<=i*e?0:r<i*e+e?r-i*e:e,xmax:l+o<=n*t?0:l+o<n*t+t?l+o-n*t:t,ymax:r+s<=i*e?0:r+s<i*e+e?r+s-i*e:e}}function m(t,e){if(!t||0===t.length)return null;const n=t.filter((t=>t.pixelBlock))[0];if(!n)return null;const i=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,r=.01*Math.min(i,l),o=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),s=Math.min.apply(null,o.map((t=>t.extent.xmin))),a=Math.min.apply(null,o.map((t=>t.extent.ymin))),h=Math.max.apply(null,o.map((t=>t.extent.xmax))),f=Math.max.apply(null,o.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-s)/i),y:Math.round((f-e.ymax)/l)},c={width:Math.round((h-s)/i),height:Math.round((f-a)/l)},x={width:Math.round((e.xmax-e.xmin)/i),height:Math.round((e.ymax-e.ymin)/l)};if(Math.round(c.width/n.pixelBlock.width)*Math.round(c.height/n.pixelBlock.height)!==o.length||u.x<0||u.y<0||c.width<x.width||c.height<x.height)return null;return{extent:e,pixelBlock:d(o.map((t=>t.pixelBlock)),c,u,x)}}function p(t,e,n,i,l,r){const{width:o,height:s}=n.block,{x:a,y:h}=n.offset,{width:f,height:u}=n.mosaic,c=x(o,s,i,l,a,h,f,u);let m=0,p=0;if(r){const t=r.hasGCSSShiftTransform?360:r.halfWorldWidth,e=o*r.resolutionX,n=r.startX+i*e,l=n+e;n<t&&l>t?p=r.rightPadding:n>=t&&(m=r.leftMargin-r.rightPadding,p=0)}if(c.xmax-=p,"number"!=typeof e)for(let x=c.ymin;x<c.ymax;x++){const n=(l*s+x-h)*f+(i*o-a)+m,r=x*o;for(let i=c.xmin;i<c.xmax;i++)t[n+i]=e[r+i]}else for(let x=c.ymin;x<c.ymax;x++){const n=(l*s+x-h)*f+(i*o-a)+m;for(let i=c.xmin;i<c.xmax;i++)t[n+i]=e}}function d(n,i,l,r,o){const s=n.filter((t=>e(t)))[0];if(null==s)return null;const a=r?r.width:i.width,h=r?r.height:i.height,f=s.width,u=s.height,c=i.width/f,x=i.height/u,m={offset:l||{x:0,y:0},mosaic:r||i,block:{width:f,height:u}},d=s.pixelType,g=t.getPixelArrayConstructor(d),y=s.pixels.length,w=[];let M,k;for(let t=0;t<y;t++){k=new g(a*h);for(let i=0;i<x;i++)for(let l=0;l<c;l++){const r=n[i*c+l];e(r)&&(M=r.pixels[t],p(k,M,m,l,i,o))}w.push(k)}let A;if(n.some((t=>null==t||t.mask&&t.mask.length>0))){A=new Uint8Array(a*h);for(let t=0;t<x;t++)for(let e=0;e<c;e++){const i=n[t*c+e],l=i?i.mask:null;p(A,l||(i?1:0),m,e,t,o)}}const U=new t({width:a,height:h,pixels:w,pixelType:d,mask:A});return U.updateStatistics(),U}function g(t,n,i){if(!e(t))return null;const{width:l,height:r}=t,o=n.x,s=n.y,a=i.width+o,h=i.height+s;if(o<0||s<0||a>l||h>r)return t;if(0===o&&0===s&&a===l&&h===r)return t;t.mask||(t.mask=new Uint8Array(l*r));const f=t.mask;for(let e=0;e<r;e++){const t=e*l;for(let n=0;n<l;n++)f[t+n]=e<s||e>=h||n<o||n>=a?0:1}return t.updateStatistics(),t}function y(t){if(!e(t))return null;const n=t.clone(),{width:i,height:l,pixels:r,mask:o}=t,s=r[0],a=n.pixels[0];for(let e=2;e<l-1;e++){const t=new Map;for(let l=e-2;l<e+2;l++)for(let e=0;e<4;e++){const n=l*i+e;k(t,s[n],o?o[n]:1)}a[e*i]=w(t),a[e*i+1]=a[e*i+2]=a[e*i];let n=3;for(;n<i-1;n++){let l=(e-2)*i+n+1;k(t,s[l],o?o[l]:1),l=(e-1)*i+n+1,k(t,s[l],o?o[l]:1),l=e*i+n+1,k(t,s[l],o?o[l]:1),l=(e+1)*i+n+1,k(t,s[l],o?o[l]:1),l=(e-2)*i+n-3,M(t,s[l],o?o[l]:1),l=(e-1)*i+n-3,M(t,s[l],o?o[l]:1),l=e*i+n-3,M(t,s[l],o?o[l]:1),l=(e+1)*i+n-3,M(t,s[l],o?o[l]:1),a[e*i+n]=w(t)}a[e*i+n+1]=a[e*i+n]}for(let e=0;e<i;e++)a[e]=a[i+e]=a[2*i+e],a[(l-1)*i+e]=a[(l-2)*i+e];return n.updateStatistics(),n}function w(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let r=l.next();for(;!r.done;)i=t.get(r.value),i>e&&(n=r.value,e=i),r=l.next();return n}function M(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function k(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function A(n,i,l){let{x:r,y:o}=i;const{width:s,height:a}=l;if(0===r&&0===o&&a===n.height&&s===n.width)return n;const{width:h,height:f}=n,u=Math.max(0,o),c=Math.max(0,r),x=Math.min(r+s,h),m=Math.min(o+a,f);if(x<0||m<0||!e(n))return null;r=Math.max(0,-r),o=Math.max(0,-o);const{pixels:p,mask:d}=n,g=s*a,y=p.length,w=[];for(let e=0;e<y;e++){const i=p[e],l=t.createEmptyBand(n.pixelType,g);for(let t=u;t<m;t++){const e=t*h;let n=(t+o-u)*s+r;for(let t=c;t<x;t++)l[n++]=i[e+t]}w.push(l)}const M=new Uint8Array(g);for(let t=u;t<m;t++){const e=t*h;let n=(t+o-u)*s+r;for(let t=c;t<x;t++)M[n++]=d?d[e+t]:1}const k=new t({width:l.width,height:l.height,pixelType:n.pixelType,pixels:w,mask:M});return k.updateStatistics(),k}function U(n,i=!0){if(!e(n))return null;const{pixels:l,width:r,height:o,mask:s,pixelType:a}=n,h=[],f=Math.round(r/2),u=Math.round(o/2),c=o-1,x=r-1;for(let e=0;e<l.length;e++){const n=l[e],s=t.createEmptyBand(a,f*u);let m=0;for(let t=0;t<o;t+=2)for(let e=0;e<r;e+=2){const l=n[t*r+e];if(i){const i=e===x?l:n[t*r+e+1],o=t===c?l:n[t*r+e+r],a=e===x?o:t===c?i:n[t*r+e+r+1];s[m++]=(l+i+o+a)/4}else s[m++]=l}h.push(s)}let m=null;if(s){m=new Uint8Array(f*u);let t=0;for(let e=0;e<o;e+=2)for(let n=0;n<r;n+=2){const l=s[e*r+n];if(i){const i=n===x?l:s[e*r+n+1],o=e===c?l:s[e*r+n+r],a=n===x?o:e===c?i:s[e*r+n+r+1];m[t++]=l*i*o*a?1:0}else m[t++]=l}}return new t({width:f,height:u,pixelType:a,pixels:h,mask:m})}function C(t,n,i){if(!e(t))return null;const{width:l,height:r}=n;let{width:o,height:s}=t;const a=new Map,h={x:0,y:0},f=null==i?1:1+i;let u=t;for(let e=0;e<f;e++){const t=Math.ceil(o/l),i=Math.ceil(s/r);for(let o=0;o<i;o++){h.y=o*r;for(let i=0;i<t;i++){h.x=i*l;const t=A(u,h,n);a.set(`${e}/${o}/${i}`,t)}}e<f-1&&(u=U(u)),o=Math.round(o/2),s=Math.round(s/2)}return a}function T(n,i,l,r,o="nearest"){if(!e(n))return null;"majority"===o&&(n=y(n));const{pixels:s,mask:a,pixelType:h}=n,f=n.width,u=n.height,c=t.getPixelArrayConstructor(h),x=s.length,{width:m,height:p}=i,d=r.cols,g=r.rows,w=Math.ceil(m/d),M=Math.ceil(p/g);let k,A,U,C,T,v,S,B=!1;for(let t=0;t<l.length;t+=3)-1===l[t]&&-1===l[t+1]&&-1===l[t+2]&&(B=!0);const O=new Float32Array(m*p),P=new Float32Array(m*p);let b,z,I=0;const j="majority"===o?0:.5;for(let t=0;t<M;t++)for(let e=0;e<w;e++){k=12*(t*w+e),A=l[k],U=l[k+1],C=l[k+2],T=l[k+3],v=l[k+4],S=l[k+5];for(let n=0;n<g;n++){I=(t*g+n)*m+e*d,z=(n+.5)/g;for(let t=0;t<n;t++)b=(t+.5)/d,O[I+t]=Math.round((A*b+U*z+C)*f-j),P[I+t]=Math.round((T*b+v*z+S)*u-j)}k+=6,A=l[k],U=l[k+1],C=l[k+2],T=l[k+3],v=l[k+4],S=l[k+5];for(let n=0;n<g;n++){I=(t*g+n)*m+e*d,z=(n+.5)/g;for(let t=n;t<d;t++)b=(t+.5)/d,O[I+t]=Math.round((A*b+U*z+C)*f-j),P[I+t]=Math.round((T*b+v*z+S)*u-j)}}const D=(t,e)=>{for(let n=0;n<p;n++){k=n*m;for(let n=0;n<m;n++)O[k]<0||P[k]<0?t[k]=0:t[k]=e[O[k]+P[k]*f],k++}},E=[];let $;for(let t=0;t<x;t++)$=new c(m*p),D($,s[t]),E.push($);const q=new t({width:m,height:p,pixelType:h,pixels:E});if(a)q.mask=new Uint8Array(m*p),D(q.mask,a);else if(B){q.mask=new Uint8Array(m*p);for(let t=0;t<m*p;t++)q.mask[t]=O[t]<0||P[t]<0?0:1}return q.updateStatistics(),q}export{T as approximateTransform,A as clip,l as colorize,i as createColormapLUT,a as createContrastBrightnessLUT,h as createHistogramEqualizationLUT,s as createStretchLUT,o as estimateStatisticsFromHistograms,r as estimateStatisticsHistograms,n as extractBands,x as getClipBounds,u as lookupPixels,d as mosaic,m as mosaicPixelData,c as remapColor,y as resampleByMajority,g as setValidBoundary,C as split,f as stretch};
