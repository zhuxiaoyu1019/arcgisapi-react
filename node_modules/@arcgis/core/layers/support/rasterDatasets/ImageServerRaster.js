/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import t from"../../../core/Error.js";import{isSome as i,unwrap as s}from"../../../core/maybe.js";import{urlToObject as a}from"../../../core/urlUtils.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import n from"../RasterInfo.js";import o from"../RasterStorageInfo.js";import{readServiceTileInfo as m}from"../serviceTileInfoProperty.js";import c from"../TileInfo.js";import{TilemapCache as h}from"../TilemapCache.js";import u from"./BaseRaster.js";import{setValidBoundary as f}from"../rasterFunctions/pixelUtils.js";import p from"../rasterTransforms/GCSShiftTransform.js";import d from"../../../rest/support/FeatureSet.js";import y from"../../../geometry/SpatialReference.js";import x from"../../../geometry/Extent.js";import g from"../../../geometry/Point.js";let v=class extends u{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const s=e&&e.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:s});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const l=r.data;if(this.sourceJSON=l,!l)throw new t("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!l.tileInfo)throw new t("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const n=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=l.cacheType,null==this.tileType&&(n.indexOf(l.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===l.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=l.name.slice(l.name.indexOf("/")+1);const u=await this._fetchRasterInfo({signal:s});if(!i(u))throw new t("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?m(l.tileInfo,l):c.fromJSON(l.tileInfo),{extent:t,pixelSize:i}=u,s=.5/u.width*i.x;let a,r;const n=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==l.maxScale&&("Raster"===this.tileType?(a=e.lods.filter((e=>e.resolution===i.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-l.maxScale)<s))[0],a||(a=e.lods.filter((e=>e.scale>l.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,u.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),u.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=n);const h=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==l.minScale&&"Elevation"===this.tileType&&(r=e.lods.filter((e=>Math.abs(e.scale-l.minScale)<s))[0],this._levelOffset=r.level-h.level),r||(r=h);const f=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-f)<s)))&&(i.x=i.y=a.resolution,u.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),u.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const p=a.level-r.level,[d,y]=e.size,x=[];e.lods.forEach((e=>{e.level>=r.level&&e.level<=a.level&&x.push({x:e.resolution,y:e.resolution})})),x.sort(((e,t)=>e.x-t.x));const g=this.computeBlockBoundary(t,d,y,e.origin,x,p),v=x.length>1?x.slice(1):null;u.storageInfo=new o({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:v,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:e,blockBoundary:g}),this._fixGCSShift(u),this._set("rasterInfo",u)}if(l.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:u.storageInfo.tileInfo,parsedUrl:a(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new h({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:a,extent:r}=this.rasterInfo,l=a.maximumPyramidLevel-e+this._levelOffset,n=`${this.url}/tile/${l}/${t}/${i}`,o=this._slices?{sliceId:s.sliceId||0}:null,{data:m}=await this.request(n,{query:o,responseType:"array-buffer",signal:s.signal});if(!m)return null;const c=await this.decodePixelBlock(m,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),h=a.blockBoundary[e];if("jpg"!==a.compression||i>h.minCol&&i<h.maxCol&&t>h.minRow&&t<h.maxRow)return c;const{origin:u,blockWidth:p,blockHeight:d}=a,{x:y,y:x}=this.getPyramidPixelSize(e),g=Math.round((r.xmin-u.x)/y)%p,v=Math.round((r.xmax-u.x)/y)%p,S=Math.round((u.y-r.ymax)/x)%d,w=Math.round((u.y-r.ymin)/x)%d,I=i===h.minCol?g:0,b=t===h.minRow?S:0,j=i===h.maxCol?v:p,T=t===h.maxRow?w:d;return f(c,{x:I,y:b},{width:j-I,height:T-b}),c}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];if(!i)return!0;return(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=await Promise.all([i,s]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,s(t.datumTransformation));if(null===i)return null;let a=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let l=r-a+this._levelOffset;const n=i.srcLocation;for(;l>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(l,i.row,i.col,t))break}catch{}if(l--,a++,i=this.identifyPixelLocation(n,a,s(t.datumTransformation)),null===i)return null}return-1===l||null==i?null:a}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=y.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new n({width:i,height:s,bandCount:3,extent:x.fromJSON(t.extent),spatialReference:a,pixelSize:new g({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:r,signal:l}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:r,f:"json"},signal:l}).then((e=>d.fromJSON(e.data))).catch((()=>null)),m=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:r,f:"json"},signal:l}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:r,f:"json"},signal:l}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),h=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:l}).then((e=>e.data)).catch((()=>{})),u=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:l}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([o,m,c,h,u,f]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new n({width:i,height:s,bandCount:t.bandCount,extent:x.fromJSON(t.extent),spatialReference:a,pixelSize:new g({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new p,e.extent=e.transform.forwardTransform(t))}};e([r({type:String,json:{write:!0}})],v.prototype,"datasetFormat",void 0),e([r()],v.prototype,"tileType",void 0),v=e([l("esri.layers.support.rasterDatasets.ImageServerRaster")],v);var S=v;export default S;
