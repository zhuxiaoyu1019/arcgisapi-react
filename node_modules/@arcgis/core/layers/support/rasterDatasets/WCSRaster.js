/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import t from"../../../core/Error.js";import{isSome as i,unwrap as s}from"../../../core/maybe.js";import{isAbortError as n}from"../../../core/promiseUtils.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import a from"../DimensionalDefinition.js";import{coordsReversedForWKID as l}from"../wmsUtils.js";import c from"./BaseRaster.js";import{parse as p}from"./multipartParser.js";import{parseCapabilities as d}from"./wcsCapabilitiesParser.js";import{standardizeInterpolations as h,parseCoverages as u}from"./wcsCoverageParser.js";import{clip as f}from"../rasterFunctions/pixelUtils.js";import g from"../../../geometry/Extent.js";const m=["nearest neighbor","bilinear","bicubic"],v=["nearest","linear","cubic"];let w=class extends c{constructor(){super(...arguments),this.datasetFormat="WCSServer"}async open(e){await this.init();const i=null==e?void 0:e.signal,s=await this._getCapabilities(i);if(this.capabilities=s,!this.version){var n;let e=null==(n=s.capabilitiesVersion)?void 0:n.slice(0,3);"2.0"===e||"1.1"===e||"1.0"===e?this.version=s.capabilitiesVersion:(e=s.supportedVersions.find((e=>"2.0.1"===e))||s.supportedVersions.find((e=>"2.0"===e.slice(0,3)))||s.supportedVersions.find((e=>"1.1"===e.slice(0,3)))||s.supportedVersions.find((e=>"1.0"===e.slice(0,3)))||"1.0.0",this.version=e)}null==this.coverageId&&(this.coverageId=s.coverages[0].id);const r=s.coverages.filter((e=>e.id===this.coverageId))[0];if(null==r)throw new t("wcsraster-open",`the coverageId ${this.coverageId} does not exist in capabilities`);const o=await this._describeCoverage(i);this.coverageInfo=o[0],"2.0"===this.version.slice(0,3)&&(this.coverageInfo.lonLatEnvelope=r.lonLatEnvelope,this.coverageInfo.supportedInterpolations=h(s.supportedInterpolations)),this.datasetName=this.coverageInfo.title;const{rasterInfo:a}=this.coverageInfo;if(this.createRemoteDatasetStorageInfo(a,512,512),this._set("rasterInfo",a),null==a.spatialReference)throw new t("wcsraster-open",`coverage without spatial referernce is not supported: ${this.coverageId}`);const{pixelType:l,bandCount:c}=await this._getPixelTypeAndBandCount(i);a.pixelType=l,1===a.bandCount&&c>1&&(a.bandCount=c),this.updateTileInfo()}async fetchRawTile(e,i,s,n={}){if(this.isBlockOutside(e,i,s))return null;const{nativePixelSize:r,spatialReference:o}=this.rasterInfo,a=2**e,l=r.x*a,c=r.y*a,{blockWidth:p,blockHeight:d}=this.getBlockWidthHeight(e),{origin:h}=this.rasterInfo.storageInfo.tileInfo,u=this.getTileExtent({x:l,y:c},i,s,h,o,[p,d]),g=this.rasterInfo.extent,m=u.xmax>g.xmax||u.ymin<g.ymin;let v=u,w=p,x=d;if(m&&(v=u.clone().intersection(g),w=Math.floor((v.xmax-v.xmin)/l),x=Math.floor((v.ymax-v.ymin)/c),v.xmax=v.xmin+l*w,v.ymin=v.ymax-c*x),w<=1||x<=1)return null;const y=await this._getCoverage(v,w,x,a,n);if(!y)return null;let I=await this.decodePixelBlock(y,{width:w,height:x,planes:null,pixelType:null});if(I&&(I.width!==w||I.height!==x))throw new t("wcsraster-fetch",`the reponse has unexpected dimension width: ${I.width}, height: {pixelBlock.height}`);return m&&(I=f(I,{x:0,y:0},{width:d,height:d})),I}async _getCapabilities(e){const i={service:"WCS",request:"GetCapabilities"};this.version&&(i.version=this.version,i.acceptVersions=this.version);try{const{data:t}=await this.request(this.url,{query:i,responseType:"xml",signal:e});return d(t)}catch(s){if(!n(s))throw new t("wcslayer:open","wcs capabilities is not valid or supported");throw s}}async _describeCoverage(e){const i={service:"WCS",request:"DescribeCoverage",version:this.version},s=this.version.slice(0,3);"1.0"===s?i.coverage=this.coverageId:"1.1"===s?i.identifiers=this.coverageId:"2.0"===s&&(i.coverageId=this.coverageId);try{const{data:t}=await this.request(this.url,{query:i,responseType:"xml",signal:e});return u(t,this.version)}catch(r){if(!n(r))throw new t("wcslayer:open","wcs coverage description is not valid or supported");throw r}}async _getPixelTypeAndBandCount(e){const{pixelSize:n,extent:r,multidimensionalInfo:o}=this.rasterInfo,l=r.center,c=new g({xmin:l.x-n.x,xmax:l.x+n.x,ymin:l.y-n.y,ymax:l.y+n.y,spatialReference:r.spatialReference});let p;if(i(o)){const e=o.variables[0];p=[],e.dimensions.forEach((t=>{p.push(new a({variableName:e.name,dimensionName:t.name,values:t.hasRegularIntervals?t.extent[0]:t.values[0],isSlice:!0}))}))}const d=await this._getCoverage(c,2,2,1,{multidimensionalDefinition:p,signal:s(e)});if(!d)throw new t("wcsraster-open","unable to determine pixel type");const h=await this.decodePixelBlock(d,{width:2,height:2,planes:null,pixelType:null});return{pixelType:h.pixelType,bandCount:h.getPlaneCount()}}async _getCoverage(e,i,s,n,r){const{coverageDescription:o}=this.coverageInfo,{version:a}=o,l="2.0"===o.version?this._getCoverage201Parameters(e,i,s,n,r,o):"1.1"===o.version?this._getCoverage110Parameters(e,i,s,r,o):this._getCoverage100Parameters(e,i,s,r),c="2.0"===o.version?await this.request(this._constructWCS201Url(l),{signal:r.signal,responseType:"array-buffer"}):await this.request(this.url,{query:l,signal:r.signal,responseType:"array-buffer"});if("1.0"===a)return c.data;const d=p(c);if(d.isMultipart&&d.data){const e=d.data.filter((e=>{var t;return(null==(t=e.contentType)?void 0:t.toLowerCase().includes("image"))&&null!=e.contentData}))[0];return null==e?void 0:e.contentData}if(this.ioConfig.allowAnyMediaType)return c.data;throw new t("wcsraster:getcoverage","response is not a valid coverage, multipart response is expected")}_getInterpolationIndex(e){return-1===this.coverageInfo.supportedInterpolations.indexOf(e)||"nearest"===e?0:"bilinear"===e?1:"cubic"===e?2:0}_getCoverage100Parameters(e,t,i,s){const n=`${e.xmin},${e.ymin},${e.xmax},${e.ymax}`,r=e.spatialReference.wkid,o=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().indexOf("tiff")>-1))||"GEOTIFF",{bandIds:a,interpolation:l}=s,c=this._getInterpolationIndex(l),p=a?a.map((e=>this.coverageInfo.bandNames[e])):null,d=m[c];return{service:"WCS",request:"GetCoverage",version:this.version,coverage:this.coverageId,format:o,crs:`EPSG:${r}`,bbox:n,width:t,height:i,interpolation:d,band:null==p?void 0:p.join(",")}}_getCoverage110Parameters(e,t,i,s,n){var r;const{multidimensionalDefinition:o,bandIds:a,interpolation:c}=s,p=e.spatialReference.wkid,d=`urn:ogc:def:crs:EPSG::${p}`,h=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().indexOf("tiff")>-1))||"image/tiff",u=this._getInterpolationIndex(c),f=v[u],g=null==c||0===(null==(r=this.coverageInfo.supportedInterpolations)?void 0:r.indexOf(c)),m=n.domain.spatialDomain,w=m.origin.x<=m.envelope.xmin&&m.origin.y<=m.envelope.ymin,x=e.width/t,y=e.height/i*(w?1:-1),I=w?[e.xmin,e.ymin]:[e.xmin,e.ymax],b=m.useEPSGAxis&&l(p),C=b?`${I[1]},${I[0]}`:`${I[0]},${I[1]}`,$=b?`${y},0,0,${x}`:`${x},0,0,${y}`,S=x/2,j=e.xmin+S,T=e.xmax-S,_=Math.abs(y)/2,O=e.ymin+_,P=e.ymax-_,L=b?`${O},${j},${P},${T},${d}`:`${j},${O},${T},${P},${d}`,E=n.range.filter((e=>e.axis.some((e=>e.identifier.toLowerCase().indexOf("band")>-1))))[0];let R,q=E&&f&&a?g?`${E.identifier}[${E.axis[0].identifier}[${a.join(",")}]]`:`${E.identifier}:${f}[${E.axis[0].identifier}[${a.join(",")}]]`:null;if(null!=o&&o.length)for(let l=0;l<o.length;l++){let e=o[l].values;const t=o[l].dimensionName.toLowerCase(),i=o[l].variableName.toLowerCase();if(e.length>0)if(e[0]instanceof Array&&(e=e[0]),"stdtime"===t)R=e.map((e=>this._convertToISOTime(e))).join(",");else{const s=n.range.filter((e=>e.identifier.toLowerCase()===i))[0];if(s){const i=s.axis.filter((e=>e.identifier.toLowerCase()===t))[0];i&&(q=g?s.identifier+"["+i.identifier+"["+e.join(",")+"]]":s.identifier+":"+f+"["+i.identifier+"["+e.join(",")+"]]")}}}return{service:"WCS",request:"GetCoverage",version:this.version,identifier:this.coverageId,format:h,crs:`EPSG:${p}`,boundingbox:L,gridCS:"urn:ogc:def:cs:OGC:0.0:Grid2dSquareCS",gridType:"urn:ogc:def:method:WCS:1.1:2dGridIn2dCrs",gridOrigin:C,gridOffsets:$,gridBaseCRS:d,timeSequence:R,rangeSubset:q}}_convertToISOTime(e,t=!1){return(t?new Date(24*(e-25569)*60*60*1e3):new Date(e)).toISOString()}_getCoverage201Parameters(e,t,i,s,n,r){const{multidimensionalDefinition:o,interpolation:a}=n,l=this._getInterpolationIndex(a);let c=null;const{supportedInterpolations:p}=this.capabilities;if(null!=p&&p.length)switch(l){case 0:c=p.find((e=>e.includes("nearest")));break;case 1:c=p.find((e=>e.includes("linear")));break;case 2:c=p.find((e=>e.includes("cubic")||e.includes("quadratic")))}const d=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().indexOf("tiff")>-1))||"image/tiff",{bandNames:h}=this.coverageInfo,{boundedBy:u,domainSet:f,rangeType:g}=r,m=u.isEastFirst?0:1,v=1-m,{axisLabels:w}=u,x=w[m],y=w[v],I=`http://www.opengis.net/def/crs/EPSG/0/${e.spatialReference.wkid}`,b=I,C=[];C.push(`${x}(${e.xmin},${e.xmax})`),C.push(`${y}(${e.ymin},${e.ymax})`);const $=[];if(w.length>2)for(let P=2;P<w.length;P++){const e=f.origin[P];if(w[P].toLowerCase().indexOf("time")>-1){let t=e.toString();u.uomLabels[P].toLowerCase().indexOf("ole")>-1&&($.push(w[P]),t=this._convertToISOTime(e,!0)),C.push(w[P]+",http://www.opengis.net("+t+")")}else C.push(w[P]+",http://www.opengis.net("+e+")")}let S=null;if(null!=o&&o.length){const e=[];g.forEach((t=>t.forEach((t=>e.push(t.name)))));const t=[];for(let i=0;i<o.length;i++){const s=w.find((e=>e===o[i].dimensionName)),n=e.find((e=>e===o[i].variableName));if(-1===t.indexOf(n)&&t.push(n),s){let e=o[i].values;if(e.length>0){Array.isArray(e[0])&&(e=e[0]);let t="";t=s.toLowerCase().indexOf("time")>-1?e.map((e=>this._convertToISOTime(e))).join(","):e.join(",");const i=C.findIndex((e=>0===e.indexOf(s+",http://www.opengis.net")));-1===i&&C.push(s+",http://www.opengis.net("+t+")"),-1!==i&&-1===C[i].indexOf("("+t+")")&&C.splice(i,1,s+",http://www.opengis.net("+t+")")}}}t.length&&(S=t.join(","))}else if(null!=h&&h.length){S=(n.bandIds?n.bandIds.map((e=>h[e])):h).join(",")}const j=C.join("&subset="),T=!(r.domainSet.axisLabels.join("")===r.boundedBy.axisLabels.join(""))&&!1!==this.ioConfig.allowScaleFactor,_=T?null:`${x}(${t}),${y}(${i})`,O=T?1/s:null;return{service:"WCS",request:"GetCoverage",version:this.version,coverageId:this.coverageId,rangesubset:S,interpolation:c,scaleSize:_,scaleFactor:O,subset:j,format:d,mediaType:this.ioConfig.allowAnyMediaType?null:"multipart/related",outputcrs:I,subsettingcrs:b}}_constructWCS201Url(e){const t={...this.ioConfig.customFetchParameters,...e},i=[];Object.keys(t).forEach((e=>{const s=t[e];null!=s&&("subset"===e?s.split("&subset=").forEach((e=>{e&&i.push(`subset=${encodeURIComponent(e)}`)})):i.push(`${e}=${encodeURIComponent(s)}`))}));return`${encodeURI(this.url)}?${i.join("&")}`}};e([r({type:String,json:{write:!0}})],w.prototype,"datasetFormat",void 0),e([r()],w.prototype,"tileType",void 0),e([r({type:String,json:{write:!0}})],w.prototype,"version",void 0),e([r({type:String,json:{write:!0}})],w.prototype,"coverageId",void 0),w=e([o("esri.layers.support.rasterDatasets.ImageServerRaster")],w);var x=w;export default x;
