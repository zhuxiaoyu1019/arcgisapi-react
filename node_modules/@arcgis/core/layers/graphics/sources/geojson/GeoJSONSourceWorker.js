/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../../../../request.js";import t from"../../../../core/Error.js";import{getJsonType as i}from"../../../../geometry/support/jsonUtils.js";import{WGS84 as s,equals as r}from"../../../../geometry/support/spatialReferenceUtils.js";import{convertFromGeometry as n,convertToGeometry as o,convertFromFeatures as a,convertToFeature as l,convertFromFeature as d}from"../../featureConversionUtils.js";import u from"../../data/FeatureStore.js";import{project as p,checkProjectionSupport as y}from"../../data/projectionSupport.js";import f from"../../data/QueryEngine.js";import{validateGeoJSON as m,inferLayerProperties as c,createOptimizedFeatures as h}from"./geojson.js";import{createDrawingInfo as g,createDefaultTemplate as I,createDefaultAttributesFunction as F}from"../support/clientSideDefaults.js";import{loadGeometryEngineForSimplify as b,mixAttributes as j,createFeatureEditSuccessResult as _,createFeatureEditErrorResult as E,simplify as T}from"../support/sourceUtils.js";import q from"../../../support/FieldsIndex.js";import{kebabDict as x}from"../../../support/fieldType.js";import{getFieldDefaultValue as w}from"../../../support/fieldUtils.js";const R={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class D{constructor(){this._queryEngine=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null}async load(i){const a=[];await this._checkProjection(i.spatialReference);let l=null;if(i.url){l=(await e(i.url,{responseType:"json"})).data,await m(l)}const d=c(l,{geometryType:i.geometryType}),y=i.fields||d.fields||[],b=null!=i.hasZ?i.hasZ:d.hasZ,j=d.geometryType,_=i.objectIdField||("number"===d.objectIdFieldType?d.objectIdFieldName:"OBJECTID")||"OBJECTID",E=i.spatialReference||s;let T=i.timeInfo;if(!j)throw new t("geojson-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if("string"===d.objectIdFieldType&&a.push({name:"geojson-layer:unsupported-id-type",message:"Feature ids are of type string and can't be honored."}),y===d.fields&&d.unknownFields.length>0&&a.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:d.unknownFields}}),_){let e=null;y.some((t=>t.name===_&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):y.unshift({alias:_,name:_,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const e of y){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new t("geojson-layer:invalid-field-name","field name is missing",{field:e});if(e.name===_&&(e.type="esriFieldTypeOID"),-1===x.jsonValues.indexOf(e.type))throw new t("geojson-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e})}const D={};this._requiredFields=[];for(const e of y)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const t=w(e);e.nullable||void 0!==t?D[e.name]=t:this._requiredFields.push(e)}if(this._fieldsIndex=new q(y),T){if(T.startTimeField){const e=this._fieldsIndex.get(T.startTimeField);e?(T.startTimeField=e.name,e.type="esriFieldTypeDate"):T.startTimeField=null}if(T.endTimeField){const e=this._fieldsIndex.get(T.endTimeField);e?(T.endTimeField=e.name,e.type="esriFieldTypeDate"):T.endTimeField=null}if(T.trackIdField){const e=this._fieldsIndex.get(T.trackIdField);e?T.trackIdField=e.name:(T.trackIdField=null,a.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:T}}))}T.startTimeField||T.endTimeField||(a.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:T}}),T=null)}const O={warnings:a,featureErrors:[],layerDefinition:{...R,drawingInfo:g(j),templates:I(D),extent:null,geometryType:j,objectIdField:_,fields:y,hasZ:!!b,timeInfo:T}};this._queryEngine=new f({fields:y,geometryType:j,hasM:!1,hasZ:b,objectIdField:_,spatialReference:E,timeInfo:T,featureStore:new u({geometryType:j,hasM:!1,hasZ:b}),cacheSpatialQueries:!0}),this._createDefaultAttributes=F(D,_),this._nextObjectId=d.maxObjectId+1;const S=h(l,{geometryType:j,hasZ:b,objectIdField:"number"===d.objectIdFieldType?_:null});if(!r(E,s))for(const e of S)e.geometry&&(e.geometry=n(p(o(e.geometry,j,b,!1),s,E)));return this._loadInitialFeatures(O,S),O}async applyEdits(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Promise.all([b(t,i),y(e.adds,t),y(e.updates,t)]),this._applyEdits(e)}queryFeatures(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_loadInitialFeatures(e,t){const{featureStore:i,objectIdField:s}=this._queryEngine,r=[];for(const n of t){const t=this._createDefaultAttributes(),i=j(this._fieldsIndex,t,n.attributes,this._requiredFields,!0,e.warnings);i?e.featureErrors.push(i):(this._assignObjectId(t,n.attributes,!0),n.attributes=t,n.objectId=t[s],r.push(n))}if(i.addMany(r),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:i}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}_applyEdits(e){const{adds:t,updates:i,deletes:s}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),i&&i.length&&this._applyUpdateEdits(r,i),s&&s.length){for(const e of s)r.deleteResults.push(_(e));this._queryEngine.featureStore.removeManyById(s)}return{fullExtent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:r,hasM:n,hasZ:o,objectIdField:l,spatialReference:d,featureStore:u}=this._queryEngine,y=[];for(const a of t){if(a.geometry&&r!==i(a.geometry)){s.push(E("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=j(this._fieldsIndex,t,a.attributes,this._requiredFields);if(n)s.push(n);else{if(this._assignObjectId(t,a.attributes),a.attributes=t,null!=a.uid){const t=a.attributes[l];e.uidToObjectId[a.uid]=t}a.geometry&&(a.geometry=p(T(a.geometry,d),a.geometry.spatialReference,d)),y.push(a),s.push(_(a.attributes[l]))}}u.addMany(a([],y,r,o,n,l))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:r,hasZ:n,objectIdField:o,spatialReference:a,featureStore:u}=this._queryEngine;for(const y of t){const{attributes:t,geometry:f}=y,m=t&&t[o];if(null==m){e.push(E(`Identifier field ${o} missing`));continue}if(!u.has(m)){e.push(E(`Feature with object id ${m} missing`));continue}const c=l(u.getFeature(m),s,n,r);if(f){if(s!==i(f)){e.push(E("Incorrect geometry type."));continue}c.geometry=p(T(f,a),f.spatialReference,a)}if(t){const i=j(this._fieldsIndex,c.attributes,t,this._requiredFields);if(i){e.push(i);continue}}u.add(d(c,s,n,r,o)),e.push(_(m))}}_assignObjectId(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++}async _checkProjection(e){try{await y(s,e)}catch{throw new t("geojson-layer","Projection not supported")}}}export default D;
