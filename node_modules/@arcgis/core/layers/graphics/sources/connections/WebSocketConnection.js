/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Error.js";import o from"../../../../core/Logger.js";import{isSome as r,isNone as s}from"../../../../core/maybe.js";import{after as n,createResolver as c}from"../../../../core/promiseUtils.js";import{property as i}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../../core/accessorSupport/decorators/subclass.js";import l from"./StreamConnection.js";import{getGeometryZScaler as d}from"../../../../rest/query/operations/zscale.js";const h=o.getLogger("esri.layers.graphics.sources.connections.WebSocketConnection");var p;!function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"}(p||(p={}));let u=class extends l{constructor(e){super(),this.errorString=null;const{geometryType:t,spatialReference:o,sourceSpatialReference:r}=e;this._config=e,this._featureZScaler=d(t,r,o),this._open()}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){r(this._websocket)&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(s(this._websocket))return"disconnected";switch(this._websocket.readyState){case p.CONNECTING:case p.OPEN:return"connected";case p.CLOSING:case p.CLOSED:return"disconnected"}}async _tryCreateWebSocket(e=this._config.source.path,o=1e3,r=0){try{if(this.destroyed)return;this._websocket=await this._createWebSocket(e),this.notifyChange("connectionStatus")}catch(s){const c=o/1e3;return this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts?(h.error(new t("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(h.error(new t("websocket-connection",`Failed to connect. Attempting to reconnect in ${c}s`,s)),await n(o),this._tryCreateWebSocket(e,Math.min(1.5*o,1e3*this._config.maxReconnectionInterval),r+1))}}_createWebSocket(e){const t=new WebSocket(e),o=new Promise(((e,o)=>{t.onopen=()=>e(t),t.onclose=e=>o(e)}));return o.then((()=>{if(this.destroyed)return t.onclose=()=>{},void t.close();t.onclose=e=>this._onClose(e),t.onerror=e=>this._onError(e),t.onmessage=e=>this._onMessage(e)})),o}async _handshake(e=1e4){const o=this._websocket;if(s(o))return;const r=c(),n=o.onmessage,{filter:i,outFields:a,spatialReference:l}=this._config;return r.timeout(e),o.onmessage=e=>{var s;let c=null;try{c=JSON.parse(e.data)}catch(d){}c&&"object"==typeof c||(h.error(new t("websocket-connection","Protocol violation. Handshake failed - malformed message",e.data)),r.reject(),this.destroy()),(null==(s=c.spatialReference)?void 0:s.wkid)!==(null==l?void 0:l.wkid)&&(h.error(new t("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${l.wkid}`,e.data)),r.reject(),this.destroy()),"json"!==c.format&&(h.error(new t("websocket-connection","Protocol violation. Handshake failed - format is not set",e.data)),r.reject(),this.destroy()),i&&c.filter!==i&&h.error(new t("websocket-connection","Tried to set filter, but server doesn't support it")),a&&c.outFields!==a&&h.error(new t("websocket-connection","Tried to set outFields, but server doesn't support it")),o.onmessage=n,r.resolve()},o.send(JSON.stringify({filter:i,outFields:a,format:"json",spatialReference:{wkid:l.wkid}})),r.promise}_onMessage(e){try{const o=JSON.parse(e.data);if("featureResult"!==o.type)throw new t("websocket-connection","Protocol violation - Expected to find message of type 'featureResult'",o);for(const e of o.features)this._featureZScaler&&this._featureZScaler(e.geometry),this.onFeature(e)}catch(o){return h.error(new t("websocket-connection","Failed to parse message",o)),void this.destroy()}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),h.error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),1e3!==e.code&&h.error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};e([i()],u.prototype,"connectionStatus",null),e([i()],u.prototype,"errorString",void 0),u=e([a("esri.layers.graphics.sources.connections.WebSocketConnection")],u);export{p as ReadyState,u as WebSocketConnection};
