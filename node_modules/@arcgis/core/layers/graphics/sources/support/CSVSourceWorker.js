/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import"../../../../geometry.js";import e from"../../../../request.js";import t from"../../../../core/Error.js";import i from"../../../../core/has.js";import{_parseInfo as n}from"../../../../core/number.js";import{urlToObject as r,getFilename as o}from"../../../../core/urlUtils.js";import{projectMany as l}from"../../../../geometry/projection.js";import{jsonAdapter as s}from"../../../../geometry/geometryAdapters/json.js";import{equals as a,isWebMercator as d,WGS84 as u}from"../../../../geometry/support/spatialReferenceUtils.js";import{lngLatToXY as c}from"../../../../geometry/support/webMercatorUtils.js";import m from"../../OptimizedFeature.js";import f from"../../OptimizedGeometry.js";import p from"../../data/FeatureStore.js";import{checkProjectionSupport as y}from"../../data/projectionSupport.js";import g from"../../data/QueryEngine.js";import{readRows as F,inferDelimiter as h,parseRows as I}from"../csv/csv.js";import{createDrawingInfo as N}from"./clientSideDefaults.js";import _ from"../../../support/FieldsIndex.js";import x from"../../../../geometry/SpatialReference.js";const b=N("esriGeometryPoint"),T=["esriFieldTypeSmallInteger","esriFieldTypeInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong"],j=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point-y"],w=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point-x"],E=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,D=["csv"],q=[0,0];class S{constructor(e,t){this.x=e,this.y=t}}const v=function(){const e=n(),t=new RegExp("^"+e.regexp+"$"),i=new RegExp("["+e.group+"\\s\\xa0]","g"),r=e.factor;return function(n){const o=t.exec(n);if(e.factor=r,!o)return NaN;let l=o[1];if(!o[1]){if(!o[2])return NaN;l=o[2],e.factor*=-1}return l=l.replace(i,"").replace(e.decimal,"."),+l*e.factor}}(),C="isInteger"in Number?Number.isInteger:e=>"number"==typeof e&&isFinite(e)&&Math.floor(e)===e;class O{constructor(){this._fieldsIndex=null,this._queryEngine=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=null,this._fieldsIndex=null}async load(e,t={}){const[i]=await Promise.all([this._fetch(e.url,t),this._checkProjection(t&&e.parsing&&e.parsing.spatialReference)]),n=this._parse(i,e);if(this._queryEngine=this._createQueryEngine(i,n),n.layerDefinition.extent=this._queryEngine.fullExtent,n.layerDefinition.timeInfo){const{start:e,end:t}=this._queryEngine.timeExtent;n.layerDefinition.timeInfo.timeExtent=[e,t]}return n}async applyEdits(){throw new t("csv-source:editing-not-supported","applyEdits() is not supported on CSVLayer")}queryFeatures(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}async _fetch(i,n){if(!i)throw new t("csv-source:invalid-source","url not defined");const o=r(i);return(await e(o.path,{query:o.query,responseType:"text",signal:n.signal})).data}_parse(e,i){const n=i.parsing||{},r={columnDelimiter:n.columnDelimiter,layerDefinition:null,locationInfo:{latitudeFieldName:n.latitudeField,longitudeFieldName:n.longitudeField}},l=F(e);let{value:s}=l.next();if(!s)throw new t("csv","CSV is empty",{csv:e});if(s=s.trim(),!n.columnDelimiter){const e=h(s);if(!e)throw new t("csv-source:invalid-delimiter","Unable to detect the delimiter from CSV");r.columnDelimiter=e}const a=s.split(r.columnDelimiter),d=r.layerDefinition={name:o(i.url,D)||"csv",drawingInfo:b,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:n.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:n.spatialReference||{wkid:102100}}};if(!n.latitudeField||!n.longitudeField){const e=this._inferLocationInfo(a);if(!n.longitudeField&&!e.longitudeFieldName||!n.latitudeField&&!e.latitudeFieldName)throw new t("csv","Unable to identify latitudeField and/or longitudeField from CSV");r.locationInfo={longitudeFieldName:n.longitudeField||e.longitudeFieldName,latitudeFieldName:n.latitudeField||e.latitudeFieldName}}const u=this._inferFields(l,r.columnDelimiter,a,r.locationInfo);if(n.fields&&n.fields.length){const e=new Map;for(const t of n.fields)e.set(t.name.toLowerCase(),t);for(const t of u){const i=e.get(t.name.toLowerCase());if(i){const e=t.name;Object.assign(t,i),t.name=e}}}d.fields=u;if(!d.fields.some((e=>"esriFieldTypeOID"===e.type&&(d.objectIdField=e.name,!0)))){const e={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};d.objectIdField=e.name,d.fields.unshift(e)}if(this._fieldsIndex=new _(d.fields),d.timeInfo){const e=d.timeInfo;if(e.startTimeField){const t=this._fieldsIndex.get(e.startTimeField);t?(e.startTimeField=t.name,t.type="esriFieldTypeDate"):e.startTimeField=null}if(e.endTimeField){const t=this._fieldsIndex.get(e.endTimeField);t?(e.endTimeField=t.name,t.type="esriFieldTypeDate"):e.endTimeField=null}if(e.trackIdField){const t=this._fieldsIndex.get(e.trackIdField);e.trackIdField=t?t.name:null}e.startTimeField||e.endTimeField||(d.timeInfo=null)}return r}_inferLocationInfo(e){let t=null,i=null;const n=t=>e.find((e=>e.toLowerCase()===t));return w.some((e=>(t=n(e),!!t))),j.some((e=>(i=n(e),!!i))),{longitudeFieldName:t,latitudeFieldName:i}}_inferFields(e,t,i,n){const r=[],o=I(e,i,t),l=[];e:for(;l.length<10;){const{value:e,done:t}=o.next();if(t)break e;l.push(e)}for(const s of i)if(s===n.longitudeFieldName||s===n.latitudeFieldName)r.push({name:s,type:"esriFieldTypeDouble",alias:s});else{const e=l.map((e=>e[s])),t=this._inferFieldType(e),i={name:s,type:null,alias:s};switch(t){case"integer":i.type="esriFieldTypeInteger";break;case"double":i.type="esriFieldTypeDouble";break;case"date":i.type="esriFieldTypeDate",i.length=36;break;default:i.type="esriFieldTypeString",i.length=255}r.push(i)}return r}_inferFieldType(e){if(!e.length)return"string";const t=/[^+-.,0-9]/;return e.map((e=>{let i=!1;if(""!==e){if(t.test(e))i=!0;else{let t=v(e);if(!isNaN(t))return/[.,]/.test(e)||!C(t)||t>214783647||t<-214783648?"double":"integer";if(-1===e.indexOf("E"))i=!0;else{if(t=Number(e),!isNaN(t))return"double";if(-1===e.indexOf(","))i=!0;else{if(e=e.replace(",","."),t=Number(e),!isNaN(t))return"double";i=!0}}}if(i){if(!/^[-]?\d*[.,]?\d*$/.test(e)){const t=new Date(e);return this._isValidDate(t,e)?"date":"string"}return"string"}return"string"}})).reduce(((e,t)=>void 0===e||e===t?t:"string"===e||"string"===t?"string":"double"===e||"double"===t?"double":void 0))}_isValidDate(e,t){if(!e||"[object Date]"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;let n=!0;if(i("chrome")&&/\d+\W*$/.test(t)){const e=t.match(/[a-zA-Z]{2,}/);if(e){let t=!1,i=0;for(;!t&&i<=e.length;)t=!E.test(e[i]),i++;n=!t}}return n}_createQueryEngine(e,t){const{latitudeFieldName:i,longitudeFieldName:n}=t.locationInfo,{objectIdField:r,fields:o,extent:u,timeInfo:y}=t.layerDefinition;let h=[];const N=[],_=new Set,b=new Set,j=[];for(const{name:l,type:s}of o)"esriFieldTypeDate"===s?_.add(l):T.indexOf(s)>-1&&b.add(l),l!==r&&j.push(l);let w=0;const E=F(e);E.next();const D=I(E,j,t.columnDelimiter);e:for(;;){const{value:e,done:t}=D.next();if(t)break e;const o=this._parseCoordinateValue(e[i]),l=this._parseCoordinateValue(e[n]);if(null!=l&&null!=o&&!isNaN(o)&&!isNaN(l)){e[i]=o,e[n]=l;for(const t in e)if(t!==i&&t!==n)if(_.has(t)){const i=new Date(e[t]);e[t]=this._isValidDate(i,e[t])?i.getTime():null}else if(b.has(t)){const i=v(e[t]);isNaN(i)?e[t]=null:e[t]=i}e[r]=w,w++,h.push(new S(l,o)),N.push(e)}}if(!a({wkid:4326},u.spatialReference))if(d(u.spatialReference))for(const l of h)[l.x,l.y]=c(l.x,l.y,q);else h=l(s,h,x.WGS84,u.spatialReference,null);const C=new p({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1}),O=new g({fields:t.layerDefinition.fields,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:y,objectIdField:r,spatialReference:u.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:C}),V=[];for(let l=0;l<h.length;l++){const{x:e,y:t}=h[l],i=N[l];i[r]=l+1,V.push(new m(new f([],[e,t]),i,null,i[r]))}return C.addMany(V),O}_parseCoordinateValue(e){if(null==e||""===e)return null;let t=v(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t}async _checkProjection(e){try{await y(u,e)}catch{throw new t("csv-layer","Projection not supported")}}}export default O;export{j as csvLatitudeFieldNames,w as csvLongitudeFieldNames};
