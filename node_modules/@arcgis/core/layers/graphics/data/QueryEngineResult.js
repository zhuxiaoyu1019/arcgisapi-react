/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{isSome as e,isNone as t}from"../../../core/maybe.js";import{toQuantizationTransform as s}from"../../../geometry/support/quantizationUtils.js";import{isValid as i,equals as r}from"../../../geometry/support/spatialReferenceUtils.js";import{convertFromGeometry as n}from"../featureConversionUtils.js";import a from"./AttributesBuilder.js";import{getWhereClause as o}from"./attributeSupport.js";import{project as u,projectMany as l}from"./projectionSupport.js";import{getTimeOperator as c}from"./timeSupport.js";import{cleanFromGeometryEngine as d,getGeometry as h,transformCentroid as m}from"./utils.js";import{isStringField as f}from"../../support/fieldUtils.js";import{isNullCountSupported as p,calculateStringStatistics as g,calculateStatistics as y,processStatsResult as I}from"../../../smartMapping/statistics/support/utils.js";import{loadArcade as b}from"../../../support/arcadeOnDemand.js";function x(e){return e.substr(24,12)+e.substr(19,4)+e.substr(16,2)+e.substr(14,2)+e.substr(11,2)+e.substr(9,2)+e.substr(6,2)+e.substr(4,2)+e.substr(2,2)+e.substr(0,2)}function F(e,t,s){return(s?e>t:e<t)?-1:(s?e<t:e>t)?1:0}function T(e,t,s){return s?t-e:e-t}function A(e,t,s,i){if(s&&"esriFieldTypeDate"===s.type){const s=new Date(e).getTime(),r=new Date(t).getTime();if(!isNaN(s)&&!isNaN(r))return T(s,r,i)}if("number"==typeof e&&"number"==typeof t)return T(e,t,i);if("string"==typeof e&&"string"==typeof t){const r=e.toUpperCase(),n=t.toUpperCase();return!s||"esriFieldTypeGUID"!==s.type&&"esriFieldTypeGlobalID"!==s.type?F(r,n,i):F(x(r),x(n),i)}return i?1:-1}class S{constructor(e,t,s){this.items=e,this.queryGeometry=t,this.definitionExpression=s.definitionExpression,this.geometryType=s.geometryType,this.hasM=s.hasM,this.hasZ=s.hasZ,this.objectIdField=s.objectIdField,this.spatialReference=s.spatialReference,this.fieldsIndex=s.fieldsIndex,this.timeInfo=s.timeInfo,this.featureAdapter=s.featureAdapter,this.aggregateAdapter=s.aggregateAdapter}get size(){return this.items.length}createQueryResponseForCount(e){const t=new a(e,this.featureAdapter,this.fieldsIndex);if(!e.outStatistics)return t.countDistinctValues(this.items);const{groupByFieldsForStatistics:s,having:i}=e;if(!!!(null==s?void 0:s.length))return 1;const r=new Map,n=new Map,o=new Set,u=e.outStatistics;for(const a of u){const{statisticType:e}=a,u="exceedslimit"!==e?a.onStatisticField:void 0;if(!n.has(u)){const e=[];for(const i of s){const s=this._getAttributeValues(t,i,r);e.push(s)}n.set(u,this._calculateUniqueValues(e))}const l=n.get(u);for(const s in l){const{data:e,items:r}=l[s],n=e.join(",");i&&!t.validateItems(r,i)||o.add(n)}}return o.size}createQueryResponse(e){let t;if(e.outStatistics){t=e.outStatistics.some((e=>"exceedslimit"===e.statisticType))?this._createExceedsLimitQueryResponse(e):this._createStatisticsQueryResponse(e)}else t=this._createFeatureQueryResponse(e);return e.returnQueryGeometry&&(i(e.outSR)&&!r(this.queryGeometry.spatialReference,e.outSR)?t.queryGeometry=d({spatialReference:e.outSR,...u(this.queryGeometry,this.queryGeometry.spatialReference,e.outSR)}):t.queryGeometry=d({spatialReference:e.outSR,...this.queryGeometry})),t}createSnappingResponse(e,t){const s=this.featureAdapter,i=_(this.hasZ,this.hasM),{x:r,y:n}=e.point,a="number"==typeof e.distance?e.distance:e.distance.x,o="number"==typeof e.distance?e.distance:e.distance.y,u={candidates:[]},l="esriGeometryPolygon"===this.geometryType,c=this.getPointCreator(e.point,this.spatialReference,t);for(const d of this.items){const t=s.getGeometry(d);if(!t)continue;const{coords:h,lengths:m}=t;if(1&e.types){let e=0;for(let t=0;t<m.length;t++){const l=m[t];for(let t=0;t<l;t++,e+=i){const m=h[e],f=h[e+1];if(t!==l-1){const t=h[e+i],l=h[e+i+1],{x:p,y:g}=V(r,n,m,f,t,l),y=(r-p)/a,I=(n-g)/o,b=y*y+I*I;b<=1&&u.candidates.push({type:"edge",objectId:s.getObjectId(d),distance:Math.sqrt(b),target:c(p,g),start:c(m,f),end:c(t,l)})}}}}if(2&e.types){const e=l?h.length-i:h.length;for(let t=0;t<e;t+=i){const e=h[t],i=h[t+1],l=(r-e)/a,m=(n-i)/o,f=l*l+m*m;f<=1&&u.candidates.push({type:"vertex",objectId:s.getObjectId(d),distance:Math.sqrt(f),target:c(e,i)})}}}return u.candidates.sort(((e,t)=>e.distance-t.distance)),u}getPointCreator(t,s,i){const n=e(i)&&!r(s,i)?e=>u(e,s,i):e=>e;return null!=t.z&&null!=t.m?(e,s)=>n({x:e,y:s,z:t.z,m:t.m}):null!=t.z?(e,s)=>n({x:e,y:s,z:t.z}):null!=t.m?(e,s)=>n({x:e,y:s,m:t.m}):(e,t)=>n({x:e,y:t})}executeAttributesQuery(e){const t=o(e.where,this.fieldsIndex);if(!t)return Promise.resolve(this);if(t.isStandardized){let s=0;const i=[];for(const e of this.items)t.testFeature(e,this.featureAdapter)&&(i[s++]=e);const r=new S(i,this.queryGeometry,this);return r.definitionExpression=e.where,Promise.resolve(r)}return Promise.reject(new TypeError("Where clause is not standardized"))}executeAggregateIdsQuery(e){if(!e.aggregateIds||!e.aggregateIds.length||t(this.aggregateAdapter))return Promise.resolve(this);const s=new Set;for(const t of e.aggregateIds){this.aggregateAdapter.getFeatureObjectIds(t).forEach((e=>s.add(e)))}const i=this.featureAdapter.getObjectId;return Promise.resolve(new S(this.items.filter((e=>s.has(i(e)))),this.queryGeometry,this))}executeObjectIdsQuery(e){if(!e.objectIds||!e.objectIds.length)return Promise.resolve(this);const t=new Set(e.objectIds),s=this.featureAdapter.getObjectId;return Promise.resolve(new S(this.items.filter((e=>t.has(s(e)))),this.queryGeometry,this))}executeTimeQuery(t){const s=c(this.timeInfo,t.timeExtent,this.featureAdapter);if(!e(s))return Promise.resolve(this);const i=this.items.filter(s);return Promise.resolve(new S(i,this.queryGeometry,this))}filterLatest(){const{trackIdField:e,startTimeField:t,endTimeField:s}=this.timeInfo,i=s||t,r=new Map,n=this.featureAdapter.getAttribute;for(const o of this.items){const t=n(o,e),s=n(o,i),a=r.get(t);(!a||s>n(a,i))&&r.set(t,o)}const a=Array.from(r.values());return Promise.resolve(new S(a,this.queryGeometry,this))}async project(e){if(!e||r(this.spatialReference,e))return this;const t=this.featureAdapter,s=(await l(this.items.map((e=>h(this.geometryType,this.hasZ,this.hasM,t.getGeometry(e)))),this.spatialReference,e)).map(((e,s)=>t.cloneWithGeometry(this.items[s],n(e,this.hasZ,this.hasM))));return new S(s,this.queryGeometry,{definitionExpression:this.definitionExpression,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,objectIdField:this.objectIdField,spatialReference:e,fieldsIndex:this.fieldsIndex,timeInfo:this.timeInfo,featureAdapter:this.featureAdapter})}async createSummaryStatisticsResponse(e,t){const{field:s,normalizationField:i,normalizationType:r,normalizationTotal:n,minValue:o,maxValue:u}=t,l=new a(e,this.featureAdapter,this.fieldsIndex),c=this.fieldsIndex.isDateField(s),d=t.valueExpression?await this._getAttributeExpressionValues(l,t.valueExpression,t.viewInfoParams):this._getAttributeNormalizedValues(l,{field:s,normalizationField:i,normalizationType:r,normalizationTotal:n}),h=p({normalizationType:r,normalizationField:i,minValue:o,maxValue:u}),m=f(this.fieldsIndex.get(s))?g({values:d,supportsNullCount:h}):y({values:d,minValue:o,maxValue:u,useSampleStdDev:!r,supportsNullCount:h});return I(m,c)}_sortFeatures(e,t,s){if(e.length>1&&t&&t.length)for(const i of t.reverse()){const t=i.split(" "),r=t[0],n=this.fieldsIndex.get(r),a=t[1]&&"desc"===t[1].toLowerCase();e.sort(((e,t)=>A(s(e,r,n),s(t,r,n),n,a)))}}_createFeatureQueryResponse(e){const t=this.items,{geometryType:i,hasM:r,hasZ:n,objectIdField:a,spatialReference:o}=this,{outFields:u,outSR:l,quantizationParameters:c,resultRecordCount:h,resultOffset:m,returnZ:f,returnM:p}=e,g=null!=h&&t.length>(m||0)+h,y=u&&(u.indexOf("*")>-1?[...this.fieldsIndex.fields]:u.map((e=>this.fieldsIndex.get(e))));return{exceededTransferLimit:g,features:this._createFeatures(e,t),fields:y,geometryType:i,hasM:r&&p,hasZ:n&&f,objectIdFieldName:a,spatialReference:d(l||o),transform:c&&s(c)||null}}_createFeatures(e,t){const i=new a(e,this.featureAdapter,this.fieldsIndex),{hasM:r,hasZ:n}=this,{orderByFields:o,quantizationParameters:u,returnGeometry:l,returnCentroid:c,maxAllowableOffset:d,resultOffset:f,resultRecordCount:p,returnZ:g=!1,returnM:y=!1}=e,I=n&&g,b=r&&y;let x=[],F=0;const T=[...t];if(this._sortFeatures(T,o,((e,t,s)=>i.getFieldValue(e,t,s))),l||c){const e=s(u);if(l&&!c)for(const t of T)x[F++]={attributes:i.getAttributes(t),geometry:h(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),d,e,I,b)};else if(!l&&c)for(const t of T)x[F++]={attributes:i.getAttributes(t),centroid:m(this,this.featureAdapter.getCentroid(t,this),e)};else for(const t of T)x[F++]={attributes:i.getAttributes(t),centroid:m(this,this.featureAdapter.getCentroid(t,this),e),geometry:h(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),d,e,I,b)}}else for(const s of T){const e=i.getAttributes(s);e&&(x[F++]={attributes:e})}const A=f||0;if(null!=p){const e=A+p;x=x.slice(A,Math.min(x.length,e))}return x}_createExceedsLimitQueryResponse(e){let t=!1,s=Number.POSITIVE_INFINITY,i=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY;for(const n of e.outStatistics)if("exceedslimit"===n.statisticType){s=null!=n.maxPointCount?n.maxPointCount:Number.POSITIVE_INFINITY,i=null!=n.maxRecordCount?n.maxRecordCount:Number.POSITIVE_INFINITY,r=null!=n.maxVertexCount?n.maxVertexCount:Number.POSITIVE_INFINITY;break}if("esriGeometryPoint"===this.geometryType)t=this.items.length>s;else if(this.items.length>i)t=!0;else{const e=this.hasZ?this.hasM?4:3:this.hasM?3:2,s=this.featureAdapter;t=this.items.reduce(((e,t)=>{const i=s.getGeometry(t);return e+(i&&i.coords.length||0)}),0)/e>r}return{fields:[{name:"exceedslimit",type:"esriFieldTypeInteger",alias:"exceedslimit",sqlType:"sqlTypeInteger",domain:null,defaultValue:null}],features:[{attributes:{exceedslimit:Number(t)}}]}}_createStatisticsQueryResponse(e){const t={attributes:{}},s=[],i=new Map,r=new Map,n=new Map,o=new Map,u=new a(e,this.featureAdapter,this.fieldsIndex),l=e.outStatistics,{groupByFieldsForStatistics:c,having:d,orderByFields:h}=e,m=c&&c.length,f=!!m,p=f&&c[0],g=f&&!this.fieldsIndex.get(p);for(const a of l){const{outStatisticFieldName:e,statisticType:l}=a,h=a,y="exceedslimit"!==l?a.onStatisticField:void 0,I="percentile_disc"===l||"percentile_cont"===l,b=f&&1===m&&(y===p||g)&&"count"===l;if(f){if(!n.has(y)){const e=[];for(const t of c){const s=this._getAttributeValues(u,t,i);e.push(s)}n.set(y,this._calculateUniqueValues(e,u.returnDistinctValues))}const t=n.get(y);for(const s in t){const{count:r,data:n,items:a,itemPositions:l}=t[s],m=n.join(",");if(!d||u.validateItems(a,d)){const t=o.get(m)||{attributes:{}};let s=null;if(b)s=r;else{const e=this._getAttributeValues(u,y,i),t=l.map((t=>e[t]));s=I&&"statisticParameters"in h?this._getPercentileValue(h,t):this._getStatisticValue(h,t)}t.attributes[e]=s,c.forEach(((e,s)=>t.attributes[this.fieldsIndex.get(e)?e:`EXPR_${s+1}`]=n[s])),o.set(m,t)}}}else{const s=this._getAttributeValues(u,y,i);t.attributes[e]=I&&"statisticParameters"in h?this._getPercentileValue(h,s):this._getStatisticValue(h,s,r)}s.push({name:e,alias:e,type:"esriFieldTypeDouble"})}const y=f?Array.from(o.values()):[t];return this._sortFeatures(y,h,((e,t)=>e.attributes[t])),{fields:s,features:y}}_getStatisticValue(e,t,s){const{onStatisticField:i,statisticType:r}=e;let n=null;n=null!=s&&s.has(i)?s.get(i):f(this.fieldsIndex.get(i))?g({values:t}):y({values:t,minValue:null,maxValue:null,useSampleStdDev:!0}),s&&s.set(i,n);return n["var"===r?"variance":r]}_getPercentileValue(e,t){const{onStatisticField:s,statisticParameters:i,statisticType:r}=e,{value:n,orderBy:a}=i,o="desc"===a,u=this.fieldsIndex.get(s),l=[...t].filter((e=>null!=e)).sort(((e,t)=>A(e,t,u,o)));return this._calculatePercentile(l,n,"percentile_disc"===r)}_getAttributeValues(e,t,s){if(s.has(t))return s.get(t);const i=this.fieldsIndex.get(t),r=this.items.map((s=>e.getFieldValue(s,t,i)));return s.set(t,r),r}_getAttributeNormalizedValues(e,t){return this.items.map((s=>e.getNormalizedValue(s,{field:t.field,fieldInfo:this.fieldsIndex.get(t.field),normalizationField:t.normalizationField,normalizationFieldInfo:this.fieldsIndex.get(t.normalizationField),normalizationType:t.normalizationType,normalizationTotal:t.normalizationTotal})))}async _getAttributeExpressionValues(e,t,s){const{arcadeUtils:i}=await b(),r=i.createFunction(t),n=s&&i.getViewInfo(s);return this.items.map((t=>e.getExpressionValue(t,{compiledFunc:r,viewInfo:n},i)))}_calculateUniqueValues(e,t){const s={},i=this.items,r=i.length;for(let n=0;n<r;n++){const r=i[n],a=[];for(const t of e)a.push(t[n]);const o=a.join(",");t?null==s[o]&&(s[o]={count:1,data:a,items:[r],itemPositions:[n]}):null==s[o]?s[o]={count:1,data:a,items:[r],itemPositions:[n]}:(s[o].count++,s[o].items.push(r),s[o].itemPositions.push(n))}return s}_calculatePercentile(e,t,s){if(0===e.length)return null;if(t<=0)return e[0];if(t>=1)return e[e.length-1];const i=(e.length-1)*t,r=Math.floor(i),n=r+1,a=i%1,o=e[r],u=e[n];return n>=e.length||s||"string"==typeof o||"string"==typeof u?o:o*(1-a)+u*a}}function V(e,t,s,i,r,n){const a=r-s,o=n-i,u=a*a+o*o,l=(e-s)*a+(t-i)*o,c=Math.min(1,Math.max(0,l/u));return{x:s+a*c,y:i+o*c}}function _(e,t){return e?t?4:3:t?3:2}export default S;
