/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{JSONMap as e}from"../../../core/jsonMap.js";import{isNone as t}from"../../../core/maybe.js";import{getUnitString as r}from"../../../core/unitUtils.js";import{getGeometryExtent as i}from"../../../geometry/support/extentUtils.js";import{fromJSON as o}from"../../../geometry/support/jsonUtils.js";import{normalizeCentralMeridian as n}from"../../../geometry/support/normalizeUtils.js";import{isGeographic as s,isWebMercator as a,WGS84 as l}from"../../../geometry/support/spatialReferenceUtils.js";import{getCentroidOptimizedGeometry as m}from"../centroid.js";import{quantizeOptimizedGeometry as c,convertToPoint as u,generalizeOptimizedGeometry as f,removeZMValues as p,convertToPolyline as y,convertToPolygon as g,convertToMultipoint as S}from"../featureConversionUtils.js";import R from"../OptimizedGeometry.js";import{checkProjectionSupport as d,project as h}from"./projectionSupport.js";const w=new e({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"}),j=Object.freeze({}),U=new R,M=new R,F=new R,G={esriGeometryPoint:u,esriGeometryPolyline:y,esriGeometryPolygon:g,esriGeometryMultipoint:S};function N(e,t,r,i=e.hasZ,o=e.hasM){const n=e.hasZ&&i,s=e.hasM&&o;if(r){const a=c(F,t,e.hasZ,e.hasM,"esriGeometryPoint",r,i,o);return u(a,n,s)}return u(t,n,s)}function O(e,t,r){return"esriGeometryPolygon"===e.geometryType&&t&&(t.centroid||t.geometry)?(t.centroid||(t.centroid=m(new R,t.geometry,e.hasZ,e.hasM)),N(e,t.centroid,r)):null}function _(e,t,r,i,o,n,s=t,a=r){const l=t&&s,m=r&&a,u=i?"coords"in i?i:i.geometry:null;if(!u)return null;if(o){let i=f(M,u,t,r,e,o,s,a);return n&&(i=c(F,i,l,m,e,n)),G[e](i,l,m)}if(n){const i=c(F,u,t,r,e,n,s,a);return G[e](i,l,m)}return p(U,u,t,r,s,a),G[e](U,l,m)}async function J(e,t,r){const{outFields:i,orderByFields:o,groupByFieldsForStatistics:n,outStatistics:s}=e;if(i)for(let a=0;a<i.length;a++)i[a]=i[a].trim();if(o)for(let a=0;a<o.length;a++)o[a]=o[a].trim();if(n)for(let a=0;a<n.length;a++)n[a]=n[a].trim();if(s)for(let a=0;a<s.length;a++)s[a].onStatisticField&&(s[a].onStatisticField=s[a].onStatisticField.trim());return e.geometry&&!e.outSR&&(e.outSR=e.geometry.spatialReference),v(e,t,r)}async function P(e,t,r){return v(e,t,r)}async function v(e,r,s){if(!e)return null;let{where:a}=e;if(e.where=a=a&&a.trim(),(!a||/^1 *= *1$/.test(a)||r&&r===a)&&(e.where=null),!e.geometry)return e;let l=await Z(e);if(e.distance=0,e.units=null,"esriSpatialRelEnvelopeIntersects"===e.spatialRel){const{spatialReference:t}=e.geometry;l=i(l),l.spatialReference=t}e.geometry=l,await d(l.spatialReference,s);const m=(await n(o(l)))[0];if(t(m))throw j;const c=m.toJSON(),u=await h(c,c.spatialReference,s);if(!u)throw j;return u.spatialReference=s,e.geometry=u,e}async function Z(e){const{geometry:t,distance:i,units:o}=e;if(null==i||"vertexAttributes"in t)return t;const n=t.spatialReference,m=o?w.fromJSON(o):r(n),c=n&&(s(n)||a(n))?t:await d(n,l).then((()=>h(t,l)));return(await b())(c.spatialReference,c,i,m)}async function b(){return(await import("../../../geometry/geometryEngineJSON.js")).geodesicBuffer}function x(e){return e&&z in e?JSON.parse(JSON.stringify(e,B)):e}const z="_geVersion",B=(e,t)=>e!==z?t:void 0;export{j as QUERY_ENGINE_EMPTY_RESULT,x as cleanFromGeometryEngine,O as getCentroid,_ as getGeometry,P as normalizeFilter,J as normalizeQuery,v as normalizeQueryLike,N as transformCentroid};
